{"version":3,"sources":["node_modules/browser-pack/_prelude.js","lib/assets/javascripts/cartodb/common/view_helpers/navigate_through_router.js","lib/assets/javascripts/cartodb/common/views/create_default_fallback_map.js","lib/assets/javascripts/cartodb/common/views/likes/view.js","lib/assets/javascripts/cartodb/common/views/mapcard_preview.js","lib/assets/javascripts/cartodb/common/views/pagination/model.js","lib/assets/javascripts/cartodb/common/views/pagination/view.js","lib/assets/javascripts/cartodb/common/views/scrollable_header.js","lib/assets/javascripts/cartodb/public_common/user_industries/dropdown_view.js","lib/assets/javascripts/cartodb/public_common/user_industries_view.js","lib/assets/javascripts/cartodb/public_common/user_settings/dropdown_view.js","lib/assets/javascripts/cartodb/public_common/user_settings_view.js","lib/assets/javascripts/cartodb/public_dashboard/entry.js","lib/assets/javascripts/cartodb/public_dashboard/fav_map_view.js","lib/assets/javascripts/cartodb/public_dashboard/user_info/breadcrumb_dropdown_view.js","lib/assets/javascripts/cartodb/public_dashboard/user_info_view.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","isLinuxMiddleOrRightClick","ev","which","isMacCmdKeyPressed","metaKey","isCtrlKeyPressed","ctrlKey","$","window","global","this","killEvent","url","target","closest","attr","open","router","options","navigate","trigger","cdb","_","opts","provider","type","baselayer","urlTemplate","map","createVis","el","version","title","scrollwheel","undefined","zoom","map_provider","center","layers","extend","core","View","tagName","events","click","initialize","template","templates","getTemplate","model","bind","render","$el","html","likes","get","size","show_count","show_label","class","_classNames","href","_hrefLocation","login_url","classNames","push","_animate","one","join","_toggleLike","toggleLiked","width","height","privacy","username","visId","mapsApiResource","className","authTokens","_TEMPLATES","regular","cdn","each","name","console","log","load","_startLoader","_loadFromVisId","_generateImageTemplate","replace","protocol","_isHTTPS","cdnConfig","config","tpl","_generateAuthTokensParams","_loadImage","location","indexOf","loadURL","$img","append","addClass","fadeIn","showError","_onError","_stopLoader","removeClass","_onSuccess","error","$error","self","img","Image","onerror","onload","src","err","Model","defaults","total_count","per_page","current_page","display_count","extras_display_count","url_to","pagesCount","Math","max","ceil","isCurrentPage","page","shouldBeVisible","urlTo","hasUrl","pagesToDisplay","rangeStart","_inLowRange","_inHighRange","_startOffset","_withExtraPages","range","_rangeEnd","pagesRelativeToCurrentPage","lastPage","extraCount","extraStartPages","extraEndPages","startPagesDiff","slice","endPagesDiff","unshift","union","_highBoundary","floor","min","navigateThroughRouter","click a","m","currentPage","delegateEvents","_paginate","apply","arguments","data","set","bindAll","_bindScroll","_onWindowScroll","toggleClass","scrollTop","anchorPoint","_unbindScroll","unbind","clean","elder","admin","DropdownMenu","template_base","god","hide","_handleClick","constructor","__super__","IndustriesDropdown","click .js-dropdown-target","_createDropdown","view","vertical_offset","horizontal_offset","horizontal_position","tick","on","user","userUrl","viewUrl","email","isOrgOwner","dashboardUrl","dashboard","publicProfileUrl","publicProfile","accountSettingsUrl","accountSettings","logoutUrl","logout","SettingsDropdown","datasetsUrl","datasets","mapsUrl","maps","avatarUrl","FavMapView","UserInfoView","PaginationModel","PaginationView","UserSettingsView","UserIndustriesView","MapCardPreview","LikeView","ScrollableHeader","init","namespace","base_url","document","body","authenticatedUser","AuthenticatedUser","User","attributes","userSettingsView","show","favMapView","favMapViewAttrs","userInfoView","paginationView","paginationModelAttrs","mapCardPreview","find","getMapsResourceName","likeModel","Like","newByVisData","likeable","vis_id","fetch","likeView","createDefaultFallbackMap","promise","_createVisMap","_createFallbackMap","done","remove","header","description","search","layer_selector","text","image","shareable","annotation","cartodb_logo","mobile_layout","slides_controller","legends","time_slider","loader","fullscreen","no_cdn","fallbackBaselayer","fn","BreadcrumbDropdown","click .js-breadcrumb-dropdown-target","_createBreadcrumbDropdown","dropdown","addView"],"mappings":"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","file":"public_dashboard.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\n/**\n * Check if Linux user used right/middle click at the time of the event\n *\n * @param ev {Event}\n * @returns {boolean}\n */\nfunction isLinuxMiddleOrRightClick(ev) {\n  return ev.which === 2 || ev.which === 3;\n}\n\n/**\n * Check if Mac user used CMD key at the time of the event Mac user used CMD key at the time of the event.\n *\n * @param ev {Event}\n * @returns {boolean}\n */\nfunction isMacCmdKeyPressed(ev) {\n  return ev.metaKey;\n}\n\nfunction isCtrlKeyPressed(ev) {\n  return ev.ctrlKey;\n}\n\n/**\n * Click handler for a cartodb.js view, to navigate event target's href URL through the view's router.navigate method.\n *\n * The default behavior is:\n * Unless cmd/ctrl keys are pressed it will cancel the default link behavior and instead navigate to the URL set in the\n * target's href attribute.\n *\n * Prerequisities:\n *  - view has a this.router instance.\n *\n * Example of how to use:\n *   - In a template:\n *     <a href=\"/some/uri\" id=\"#my-link\" ...\n *     <a href=\"/special/uri\" id=\"#my-special-link\" ...\n *\n *   - In the view file:\n *     var navigateThroughRouter = require('../../common/view_helpers/navigateThroughRouter');\n *     module.exports = new cdb.core.View.extend({\n *       events: {\n *         'click a#my-link': navigateThroughRouter\n *         'click a#my-special-link': this._myCustomRoute\n *       }\n *\n *       _myCustomRoute: function(ev) {\n *         // Here you can do you custom logic before/after the routing, e.g.:\n *         console.log('before changing route');\n *         navigateThroughRouter.apply(this, arguments);\n *         console.log('after changing route');\n *       }\n *\n * @param ev {Event}\n */\nmodule.exports = function(ev) {\n  // We always kill the default behaviour of the event, since container around view might have other click behavior.\n  // In case of a cmd/ctrl click by an user.\n  this.killEvent(ev);\n  var url = $(ev.target).closest('a').attr('href');\n\n  if (!url) {\n    return false;\n  }\n\n  if (!isLinuxMiddleOrRightClick(ev) && !isMacCmdKeyPressed(ev)) {\n    (this.router || this.options.router).navigate(url, { trigger: true });\n  } else if (isCtrlKeyPressed(ev) || isMacCmdKeyPressed(ev)) {\n    window.open(url, '_blank');\n  }\n};\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n/**\n * Creates a default fallback map, to be used when an user don't have any own map visualizations.\n *\n * @param opts {Object} config\n *   el: {String,HTMLElement} id to element where to render map (w/o '#' prefix) or a HTMLElement node\n *   baselayer: {Object} as an item defined in app_config.yml (basemaps key)\n * @returns {Object} a new created Leaflet map\n */\nmodule.exports = function(opts) {\n  var provider = 'leaflet';\n  var type = 'tiled';\n  if (!opts.baselayer.url) {\n    provider = 'googlemaps';\n    type = 'GMapsBase';\n  } else {\n    opts.baselayer.urlTemplate = opts.baselayer.url;\n  }\n  var map = cdb.createVis(opts.el, {\n    'version': '0.1.0',\n    'title': 'default',\n    'scrollwheel': opts.scrollwheel !== undefined ? opts.scrollwheel : false,\n    'zoom': 6,\n    map_provider: provider,\n    center: [40.7127837, -74.0059413], // NY\n    layers: [ _.extend({ type: type }, opts.baselayer) ]\n  });\n\n  return map;\n};\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * Responsible for likes (♥ 123) and its toggling behaviour.\n */\nmodule.exports = cdb.core.View.extend({\n  tagName: 'a',\n\n  events: {\n    'click': '_toggleLike'\n  },\n\n  initialize: function() {\n    this.template = cdb.templates.getTemplate('common/views/likes/template');\n    this.model.bind('change:likeable change:liked change:likes error', this.render, this);\n  },\n\n  render: function() {\n    this.$el.html(\n      this.template({\n        likes: this.model.get(\"likes\"),\n        size: this.model.get(\"size\"),\n        show_count: this.model.get(\"show_count\"),\n        show_label: this.model.get(\"show_label\")\n      })\n    )\n    .attr({\n      class: this._classNames(),\n      href: this._hrefLocation()\n    });\n\n    return this;\n  },\n\n  _hrefLocation: function() {\n    var href = \"#/like\";\n\n    if (!this.model.get('likeable')) {\n      href = window.login_url;\n    }\n\n    return href;\n  },\n\n  _classNames: function() {\n    var classNames = ['LikesIndicator'];\n\n    if (this.model.get('likeable')) {\n      classNames.push('is-likeable');\n    }\n\n    if (this.model.get('liked')) {\n      classNames.push('is-liked');\n    }\n\n    if (this._animate) {\n      classNames.push('is-animated');\n      this.$el.one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function() {\n        // unset animate and force re-render to avoid race conditions\n        this._animate = false;\n        this.render();\n      }.bind(this));\n    }\n\n    return classNames.join(' ');\n  },\n\n  _toggleLike: function(ev) {\n    if (this.model.get('likeable')) {\n      this.killEvent(ev);\n\n      this._animate = true;\n      this.model.toggleLiked();\n    }\n  }\n});\n","var $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n/**\n *  MapCard previews\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  options: {\n    width: 300,\n    height: 170,\n    privacy: 'PUBLIC',\n    username: '',\n    visId: '',\n    mapsApiResource: '',\n    className: '',\n    authTokens: []\n  },\n\n  _TEMPLATES: {\n    // Using <%= %> instead of <%- %> because if not / characters (for example) will be escaped\n    regular: '<%- protocol %>://<%= mapsApiResource %>/api/v1/map/static/named/<%- tpl %>/<%- width %>/<%- height %>.png<%= authTokens %>',\n    cdn: '<%- protocol %>://<%- cdn %>/<%- username %>/api/v1/map/static/named/<%- tpl %>/<%- width %>/<%- height %>.png<%= authTokens %>'\n  },\n\n  initialize: function() {\n    _.each(['visId', 'mapsApiResource', 'username'], function(name) {\n      if (!this.options[name]) {\n        console.log(name + ' is required for Static Map instantiation');\n      }\n    }, this);\n  },\n\n  load: function() {\n    this._startLoader();\n    this._loadFromVisId();\n\n    return this;\n  },\n\n  _generateImageTemplate: function() {\n    return 'tpl_' + this.options.visId.replace(/-/g, '_');\n  },\n\n  _loadFromVisId: function() {\n    var protocol = this._isHTTPS() ? 'https': 'http';\n    var cdnConfig = cdb.config.get('cdn_url');\n    var template = _.template(cdnConfig ? this._TEMPLATES['cdn'] : this._TEMPLATES['regular']);\n\n    var options = {\n      protocol: protocol,\n      username: this.options.username,\n      mapsApiResource: this.options.mapsApiResource,\n      tpl: this._generateImageTemplate(),\n      width: this.options.width,\n      height: this.options.height,\n      authTokens: this._generateAuthTokensParams()\n    };\n\n    if (cdnConfig) {\n      options = _.extend(options, { cdn: cdnConfig[protocol] });\n    }\n\n    var url = template(options);\n\n    this._loadImage({}, url);\n  },\n\n  _generateAuthTokensParams: function () {\n    var authTokens = this.options.authTokens;\n    if (authTokens && authTokens.length > 0) {\n      return '?' + _.map(authTokens, function (t) { return 'auth_token=' + t; }).join('&');\n    } else {\n      return '';\n    }\n  },\n\n  _isHTTPS: function() {\n    return location.protocol.indexOf(\"https\") === 0;\n  },\n\n  loadURL: function(url) {\n    var $img = $('<img class=\"MapCard-preview\" src=\"' + url + '\" />');\n    this.$el.append($img);\n\n    if (this.options.className) {\n      $img.addClass(this.options.className);\n    }\n\n    $img.fadeIn(250);\n  },\n\n  showError: function() {\n    this._onError();\n  },\n\n  _startLoader: function() {\n    this.$el.addClass(\"is-loading\");\n  },\n\n  _stopLoader: function() {\n    this.$el.removeClass(\"is-loading\");\n  },\n\n  _onSuccess: function(url) {\n    this._stopLoader();\n    this.loadURL(url);\n    this.trigger(\"loaded\", url);\n  },\n\n  _onError: function(error) {\n    this._stopLoader();\n    this.$el.addClass(\"has-error\");\n    var $error = $('<div class=\"MapCard-error\" />');\n    this.$el.append($error);\n    $error.fadeIn(250);\n    this.trigger(\"error\");\n  },\n\n  _loadImage: function(error, url) {\n    var self = this;\n    var img  = new Image();\n\n    img.onerror = function() {\n      self._onError(error);\n    };\n\n    img.onload = function() {\n      self._onSuccess(url);\n    };\n\n    try {\n      img.src = url;\n    } catch(err) {\n      this._onError(err);\n    }\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n/**\n * View model intended to be responsible for pagination logic, and to be used in conjunction with a Pagination view.\n */\nmodule.exports = cdb.core.Model.extend({\n  defaults: {\n    total_count:          0,\n    per_page:             10,\n    current_page:         1,\n    display_count:        5,\n    extras_display_count: 1,\n    url_to:               undefined\n  },\n\n  pagesCount: function() {\n    return Math.max(\n        Math.ceil(\n          this.get('total_count') / this.get('per_page')\n        ), 1);\n  },\n\n  isCurrentPage: function(page) {\n    return this.get('current_page') === page;\n  },\n\n  shouldBeVisible: function() {\n    var pagesCount = this.pagesCount();\n    return this.get('total_count') > 0 && pagesCount > 1 && this.get('current_page') <= pagesCount;\n  },\n\n  urlTo: function(page) {\n    if (this.hasUrl()) {\n      return this.get('url_to')(page);\n    }\n  },\n\n  hasUrl: function() {\n    return typeof this.get('url_to') === 'function';\n  },\n\n  /**\n   * Get the pages that are expected to be displayed.\n   * The current page will be in the middle of the returned sequence.\n   *\n   * @returns {number[]} a sequence of Numbers\n   */\n  pagesToDisplay: function() {\n    var rangeStart;\n\n    if (this._inLowRange()) {\n      rangeStart = 1;\n    } else if (this._inHighRange()) {\n      rangeStart = this.get('current_page') - this._startOffset();\n    } else {\n      // Somewhere between the low and high boundary\n      rangeStart = this.pagesCount() - this.get('display_count') + 1;\n    }\n    rangeStart = Math.max(rangeStart, 1);\n\n    return this._withExtraPages(\n      _.range(rangeStart, this._rangeEnd(rangeStart))\n    );\n  },\n\n  _withExtraPages: function(pagesRelativeToCurrentPage) {\n    var lastPage = this.pagesCount();\n    var extraCount = this.get('extras_display_count');\n    var extraStartPages = _.range(1, extraCount + 1);\n    var extraEndPages = _.range(lastPage - extraCount + 1, lastPage + 1);\n\n    var startPagesDiff = pagesRelativeToCurrentPage[0] - extraStartPages.slice(-1)[0];\n    if (startPagesDiff === 2) {\n      // There is only one missing page in the gap, so add it\n      extraStartPages.push(pagesRelativeToCurrentPage[0] - 1);\n    } else if (startPagesDiff > 2) {\n      // There are more hidden pages at low range, add padding at end\n      extraStartPages.push(-1);\n    }\n\n    var endPagesDiff = extraEndPages[0] - pagesRelativeToCurrentPage.slice(-1);\n    if (endPagesDiff === 2) {\n      // There is only one missing page in the gap, so add it\n      extraEndPages.unshift(extraEndPages[0] - 1);\n    } if (endPagesDiff > 2) {\n      // There are more hidden pages at high range, add padding at beginning\n      extraEndPages.unshift(-2);\n    }\n\n    return _.union(extraStartPages, pagesRelativeToCurrentPage, extraEndPages);\n  },\n\n  _inLowRange: function() {\n    return this.get('current_page') < this._startOffset();\n  },\n\n  _inHighRange: function() {\n    return this.get('current_page') < this._highBoundary();\n  },\n\n  _highBoundary: function() {\n    return this.pagesCount() - this._startOffset();\n  },\n\n  _startOffset: function() {\n    return Math.floor(this.get('display_count') / 2);\n  },\n\n  _rangeEnd: function(rangeStart) {\n    // If we are too close to the range end then cap to the pages count.\n    return Math.min(rangeStart + this.get('display_count'), this.pagesCount() + 1);\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar navigateThroughRouter = require('../../view_helpers/navigate_through_router');\n\n/**\n * Responsible for pagination.\n *\n * Expected to be created with a pagination model, see the model for available params, here we create w/ the minimum:\n *   new PaginationView({\n *     model: new PaginationModel({\n *       // Compulsory:\n *       urlTo:  function(page) { return '/?page='+ page },\n\n         // Optional, to router clicks on <a> tags through router.navigate by default\n *       router: new Router(...)\n *     })\n *   });\n */\nmodule.exports = cdb.core.View.extend({\n\n  className: 'Pagination CDB-Text CDB-Size-medium',\n\n  events: {\n    'click a': '_paginate'\n  },\n\n  initialize: function() {\n    this.template = cdb.templates.getTemplate('common/views/pagination/template');\n    this.router = this.options.router;\n\n    if (this.router && !this.model.hasUrl()) {\n      throw new Error('since router is set the model must have a url method set too');\n    }\n\n    this.model.bind('change', this.render, this);\n  },\n\n  render: function() {\n    if (this.model.shouldBeVisible()) {\n      this.$el.html(\n        this.template({\n          m: this.model,\n          pagesCount: this.model.pagesCount(),\n          currentPage: this.model.get('current_page')\n        })\n      );\n      this.$el.addClass(this.className);\n      this.delegateEvents();\n    } else {\n      this.$el.html('');\n    }\n\n    return this;\n  },\n\n  _paginate: function(ev) {\n    if (this.router) {\n      navigateThroughRouter.apply(this, arguments);\n    } else if (!this.model.hasUrl()) {\n      this.killEvent(ev);\n    }\n\n    var page = $(ev.target).data('page');\n    this.model.set('current_page', page);\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\nmodule.exports = cdb.core.View.extend({\n\n  initialize: function() {\n    _.bindAll(this, '_onWindowScroll');\n    this._bindScroll();\n  },\n\n  _onWindowScroll: function() {\n    this.$el.toggleClass('is-fixed', $(window).scrollTop() > this.options.anchorPoint);\n  },\n\n  _unbindScroll: function() {\n    $(window).unbind('scroll', this._onWindowScroll);\n  },\n\n  _bindScroll: function() {\n    this._unbindScroll();\n    $(window).bind('scroll', this._onWindowScroll);\n  },\n\n  clean: function() {\n    this._unbindScroll();\n    this.elder('clean');\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\n/**\n * The content of the dropdown menu opened by the industries link in the header, e.g.:\n *   CartoDB, Industries, Explore, Pricing\n *             ______/\\____\n *            |            |\n *            |    this    |\n *            |____________|\n */\nmodule.exports = cdb.admin.DropdownMenu.extend({\n  className: 'CDB-Text Dropdown Dropdown--public',\n\n  initialize: function() {\n    this.elder('initialize');\n    this.template_base = cdb.templates.getTemplate('public_common/user_industries/dropdown_template');\n\n    // Necessary to hide dialog on click outside popup, for example.\n    cdb.god.bind('closeDialogs', this.hide, this);\n  },\n\n  render: function() {\n    this.$el.html(this.template_base());\n\n    // TODO: taken from existing code, how should dropdowns really be added to the DOM?\n    $('body').append(this.el);\n\n    return this;\n  },\n\n  clean: function() {\n    // Until https://github.com/CartoDB/cartodb.js/issues/238 is resolved:\n    $(this.options.target).unbind('click', this._handleClick);\n    this.constructor.__super__.clean.apply(this);\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar IndustriesDropdown = require('./user_industries/dropdown_view');\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\n/**\n * View to render the user industries section in the header.\n * Expected to be created from existing DOM element.\n */\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-dropdown-target': '_createDropdown'\n  },\n\n  _createDropdown: function(ev) {\n    this.killEvent(ev);\n    cdb.god.trigger('closeDialogs');\n\n    var view = new IndustriesDropdown({\n      target: $(ev.target),\n      vertical_offset: -10,\n      horizontal_offset: $(ev.target).width()-100,\n      horizontal_position: 'left',\n      tick: 'center'\n    });\n    view.render();\n\n    view.on('onDropdownHidden', function() {\n      view.clean();\n    }, this);\n\n    view.open();\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\n/**\n * The content of the dropdown menu opened by the user avatar in the top-right of the header, e.g.:\n *   Explore, Learn, ♞\n *             ______/\\____\n *            |            |\n *            |    this    |\n *            |____________|\n */\nmodule.exports = cdb.admin.DropdownMenu.extend({\n  className: 'CDB-Text Dropdown',\n\n  initialize: function() {\n    this.elder('initialize');\n    this.template_base = cdb.templates.getTemplate('public_common/user_settings/dropdown_template');\n\n    // Necessary to hide dialog on click outside popup, for example.\n    cdb.god.bind('closeDialogs', this.hide, this);\n  },\n\n  render: function() {\n    var user = this.model;\n    var userUrl = user.viewUrl();\n\n    this.$el.html(this.template_base({\n      name: user.get('name') || user.get('username'),\n      email: user.get('email'),\n      isOrgOwner: user.isOrgOwner(),\n      dashboardUrl: userUrl.dashboard(),\n      publicProfileUrl: userUrl.publicProfile(),\n      accountSettingsUrl: userUrl.accountSettings(),\n      logoutUrl: userUrl.logout()\n    }));\n\n    // TODO: taken from existing code, how should dropdowns really be added to the DOM?\n    $('body').append(this.el);\n\n    return this;\n  },\n\n  clean: function() {\n    // Until https://github.com/CartoDB/cartodb.js/issues/238 is resolved:\n    $(this.options.target).unbind('click', this._handleClick);\n    this.constructor.__super__.clean.apply(this);\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar SettingsDropdown = require('./user_settings/dropdown_view');\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\n/**\n * View to render the user settings section in the header.\n * Expected to be created from existing DOM element.\n */\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-dropdown-target': '_createDropdown'\n  },\n\n  render: function() {\n    var dashboardUrl = this.model.viewUrl().dashboard();\n    var datasetsUrl = dashboardUrl.datasets();\n    var mapsUrl = dashboardUrl.maps();\n\n    this.$el.html(\n      cdb.templates.getTemplate('public_common/user_settings_template')({\n        avatarUrl: this.model.get('avatar_url'),\n        mapsUrl: mapsUrl,\n        datasetsUrl: datasetsUrl\n      })\n    );\n\n    return this;\n  },\n\n  _createDropdown: function(ev) {\n    this.killEvent(ev);\n    cdb.god.trigger('closeDialogs');\n\n    var view = new SettingsDropdown({\n      target: $(ev.target),\n      model: this.model, // user\n      horizontal_offset: 18\n    });\n    view.render();\n\n    view.on('onDropdownHidden', function() {\n      view.clean();\n    }, this);\n\n    view.open();\n  }\n\n});\n","var $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar FavMapView = require('./fav_map_view');\nvar UserInfoView = require('./user_info_view');\nvar PaginationModel = require('../common/views/pagination/model');\nvar PaginationView = require('../common/views/pagination/view');\nvar UserSettingsView = require('../public_common/user_settings_view');\nvar UserIndustriesView = require('../public_common/user_industries_view');\nvar MapCardPreview = require('../common/views/mapcard_preview');\nvar LikeView = require('../common/views/likes/view');\nvar ScrollableHeader = require('../common/views/scrollable_header');\n\n$(function() {\n  cdb.init(function() {\n    cdb.templates.namespace = 'cartodb/';\n    cdb.config.set(window.config);\n    cdb.config.set('url_prefix', window.base_url);\n\n    var scrollableHeader = new ScrollableHeader({\n      el: $('.js-Navmenu'),\n      anchorPoint: 350\n    });\n\n    var userIndustriesView = new UserIndustriesView({\n      el: $('.js-user-industries')\n    });\n\n    $(document.body).bind('click', function() {\n      cdb.god.trigger('closeDialogs');\n    });\n\n    var authenticatedUser = new cdb.open.AuthenticatedUser();\n    authenticatedUser.bind('change', function() {\n      if (authenticatedUser.get('username')) {\n        var user = new cdb.admin.User(authenticatedUser.attributes);\n        var userSettingsView = new UserSettingsView({\n          el: $('.js-user-settings'),\n          model: user\n        });\n        userSettingsView.render();\n\n        $('.js-login').hide();\n        $('.js-learn').show();\n      }\n    });\n\n    var favMapView = new FavMapView(window.favMapViewAttrs);\n    favMapView.render();\n\n    var userInfoView = new UserInfoView({\n      el: $('.js-user-info')\n    });\n    userInfoView.render();\n\n    var paginationView = new PaginationView({\n      el: '.js-content-footer',\n      model: new PaginationModel(window.paginationModelAttrs)\n    });\n    paginationView.render();\n\n    $('.MapCard').each(function() {\n      var visId = $(this).data('visId');\n      if (visId) {\n        var username = $(this).data('visOwnerName');\n        var mapCardPreview = new MapCardPreview({\n          el: $(this).find('.js-header'),\n          height: 220,\n          visId: $(this).data('visId'),\n          username: username,\n          mapsApiResource: cdb.config.getMapsResourceName(username)\n        });\n        mapCardPreview.load();\n      }\n    });\n\n    $('.js-likes').each(function() {\n      var likeModel = cdb.admin.Like.newByVisData({\n        url: !cdb.config.get('url_prefix') ? $(this).attr('href') : '' ,\n        likeable: false,\n        show_count: $(this).data('show-count') || false,\n        show_label: $(this).data('show-label') || false,\n        vis_id: $(this).data('vis-id'),\n        likes: $(this).data('likes-count')\n      });\n      authenticatedUser.bind('change', function() {\n        if (authenticatedUser.get('username')) {\n          likeModel.bind('loadModelCompleted', function() {\n            likeModel.set('likeable', true);\n          });\n          likeModel.fetch();\n        }\n      });\n      var likeView = new LikeView({\n        el: this,\n        model: likeModel\n      });\n      likeView.render();\n    });\n\n    authenticatedUser.fetch();\n  });\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar createDefaultFallbackMap = require('../common/views/create_default_fallback_map');\n\n/**\n * View to render the \"favourite\" map, either a user's map visualization, or a default fallback map.\n */\nmodule.exports = cdb.core.View.extend({\n\n  render: function() {\n    this.$el.removeClass('is-pre-loading').addClass('is-loading');\n\n    var promise;\n    if (this.options.createVis) {\n      promise = this._createVisMap(this.options.createVis);\n    } else {\n      promise = this._createFallbackMap();\n    }\n\n    var self = this;\n    promise.done(function() {\n      self.$el.removeClass('is-loading');\n      self.$('.js-spinner').remove();\n    });\n\n    return this;\n  },\n\n  _createVisMap: function(createVis) {\n    return cdb.createVis(this.el, createVis.url, _.defaults(createVis.opts, {\n      title:             false,\n      header:            false,\n      description:       false,\n      search:            false,\n      layer_selector:    false,\n      text:              false,\n      image:             false,\n      shareable:         false,\n      annotation:        false,\n      zoom:              false,\n      cartodb_logo:      false,\n      scrollwheel:       false,\n      mobile_layout:     true,\n      slides_controller: false,\n      legends:           false,\n      time_slider:       false,\n      loader:            false,\n      fullscreen:        false,\n      no_cdn:            false\n    }));\n  },\n\n  _createFallbackMap: function() {\n    createDefaultFallbackMap({\n      el: this.el,\n      baselayer: this.options.fallbackBaselayer\n    });\n\n    // Fake promise, to keep the render method consistent with how the vis map would have been handled (async)\n    return {\n      done: function(fn) {\n        fn();\n      }\n    };\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * The content of the dropdown menu opened by the link at the end of the breadcrumbs menu, e.g.\n *   username / Maps v\n *            ______/\\____\n *           |            |\n *           |    this    |\n *           |____________|\n */\nmodule.exports = cdb.admin.DropdownMenu.extend({\n  className: 'Dropdown',\n\n  initialize: function() {\n    this.elder('initialize');\n\n    // Necessary to hide dialog on click outside popup, for example.\n    cdb.god.bind('closeDialogs', this.hide, this);\n  },\n\n  render: function() {\n    this.$el.show();\n\n    return this;\n  },\n\n  clean: function() {\n    this.$el.hide();\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar BreadcrumbDropdown = require('./user_info/breadcrumb_dropdown_view');\n\n/**\n * View to render the user info section.\n * Expected to be created from existing DOM element.\n */\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-breadcrumb-dropdown-target': '_createBreadcrumbDropdown'\n  },\n\n  render: function() {\n    return this;\n  },\n\n  _createBreadcrumbDropdown: function(ev) {\n    this.killEvent(ev);\n    var dropdown = new BreadcrumbDropdown({\n      target: $('.js-breadcrumb-dropdown-target'),\n      el: $('.js-breadcrumb-dropdown-content'),\n      horizontal_offset: 3, // to match the dropdown indicator/arrow\n      horizontal_position: 'right',\n      tick: 'right'\n    });\n    this.addView(dropdown);\n    dropdown.on('onDropdownShown', function () {\n      cdb.god.trigger('closeDialogs');\n    }, this);\n    dropdown.open();\n  }\n});\n"]}
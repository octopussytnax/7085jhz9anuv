/*! v4.7.15 - 2017-05-30 */
function manage_choropleth_props(a,b){var c={"marker-width":b["marker-width"],"marker-fill-opacity":b["marker-opacity"],"marker-line-width":b["marker-line-width"],"marker-line-color":b["marker-line-color"],"marker-line-opacity":b["marker-line-opacity"],"marker-allow-overlap":b["marker-allow-overlap"],"line-color":b["line-color"],"line-opacity":b["line-opacity"],"line-width":b["line-width"],"polygon-opacity":"line"==a?0:b["polygon-opacity"],"text-name":b["text-name"],"text-halo-fill":b["text-halo-fill"],"text-halo-radius":b["text-halo-radius"],"text-face-name":b["text-face-name"],"text-size":b["text-size"],"text-dy":b["text-dy"],"text-allow-overlap":b["text-allow-overlap"],"text-placement":b["text-placement"],"text-placement-type":b["text-placement-type"],"text-label-position-tolerance":b["text-label-position-tolerance"],"text-fill":b["text-fill"]};return _.each(c,function(a,b){void 0===a&&delete c[b]}),c}function getProp(a,b){var c=[];for(var d in a){var e=a[d];d===b?c.push(e):"object"==typeof e&&(c=c.concat(getProp(e,b)))}return c}function manage_carto_properies(a){if(/none/i.test(a["text-name"])||!a["text-name"])for(var b in a)isTextProperty(b)&&delete a[b];return/none/i.test(a["polygon-comp-op"])&&delete a["polygon-comp-op"],/none/i.test(a["line-comp-op"])&&delete a["line-comp-op"],/none/i.test(a["marker-comp-op"])&&delete a["marker-comp-op"],"polygon-pattern-file"in a&&delete a["polygon-fill"],delete a.zoom,a=translate_carto_properties(a),_.pick(a,_cartocss_spec_props)}function isTextProperty(a){return/^text-/.test(a)}function generate_carto_properties(a){return _(a).map(function(a,b){return _.include(carto_quotables,b)&&(a="'"+a+"'"),_.include(carto_variables,b)&&(a="["+a+"]"),"  "+b+": "+a+";"})}function filter_props(a,b){var c={};for(var d in a){var e=a[d];b(d,e)&&(c[d]=e)}return c}function translate_carto_properties(a){return"marker-opacity"in a&&(a["marker-fill-opacity"]=a["marker-opacity"],delete a["marker-opacity"]),a}function simple_polygon_generator(a,b,c,d){b=manage_carto_properies(b);var e=filter_props(b,function(a,b){return isTextProperty(a)}),f=filter_props(b,function(a,b){return!isTextProperty(a)});generalLayerProps=generate_carto_properties(f),textLayerProps=generate_carto_properties(e);var g="#"+a.getUnqualifiedName()+"{\n"+generalLayerProps.join("\n")+"\n}",h="";_.size(textLayerProps)&&(h="\n\n#"+a.getUnqualifiedName()+"::labels {\n"+textLayerProps.join("\n")+"\n}\n"),d(g+h)}function intensity_generator(a,b,c,d){b=manage_carto_properies(b);var e={"marker-fill":b["marker-fill"],"marker-width":b["marker-width"],"marker-line-color":b["marker-line-color"],"marker-line-width":b["marker-line-width"],"marker-line-opacity":b["marker-line-opacity"],"marker-fill-opacity":b["marker-fill-opacity"],"marker-comp-op":"multiply","marker-type":"ellipse","marker-placement":"point","marker-allow-overlap":!0,"marker-clip":!1,"marker-multi-policy":"largest"},f=a.getUnqualifiedName(),g="\n#"+f+"{\n";_(e).each(function(a,b){g+="  "+b+": "+a+"; \n"}),g+="}",d(g)}function cluster_sql(a,b,c,d){for(var e=["A","B","C","D","E"],f="bucket"+e[0],g=f,h=[],i=1/(d+1),j=0;j<d;j++)h.push(1-i*j);for(var k="WITH meta AS (    SELECT greatest(!pixel_width!,!pixel_height!) as psz, ext, ST_XMin(ext) xmin, ST_YMin(ext) ymin FROM (SELECT !bbox! as ext) a  ),  filtered_table AS (    SELECT t.* FROM <%= table %> t, meta m WHERE t.the_geom_webmercator && m.ext  ), ",j=0;j<d;j++){if(f="bucket"+e[j],0==j&&(k+=g+"_snap AS (SELECT ST_SnapToGrid(f.the_geom_webmercator, 0, 0, m.psz * <%= size %>, m.psz * <%= size %>) the_geom_webmercator, count(*) as points_count, 1 as cartodb_id, array_agg(f.cartodb_id) AS id_list "),j>0&&(k+="\n"+f+"_snap AS (SELECT ST_SnapToGrid(f.the_geom_webmercator, 0, 0, m.psz * "+h[j]+" * <%= size %>, m.psz * "+h[j]+" * <%= size %>) the_geom_webmercator, count(*) as points_count, 1 as cartodb_id, array_agg(f.cartodb_id) AS id_list "),k+=" FROM filtered_table f, meta m ",0==j&&(k+=" GROUP BY ST_SnapToGrid(f.the_geom_webmercator, 0, 0, m.psz * <%= size %>, m.psz * <%= size %>), m.xmin, m.ymin), "),j>0){k+=" WHERE cartodb_id NOT IN (select unnest(id_list) FROM "+g+") ";for(var l=1;l<j;l++)bucket2="bucket"+e[l],k+=" AND cartodb_id NOT IN (select unnest(id_list) FROM "+bucket2+") ";k+=" GROUP BY ST_SnapToGrid(f.the_geom_webmercator, 0, 0, m.psz * "+h[j]+" * <%= size %>, m.psz * "+h[j]+" * <%= size %>), m.xmin, m.ymin), "}k+=f+"  AS (SELECT * FROM "+f+"_snap WHERE points_count > ",k+=j==d-1?" GREATEST(<%= size %> * 0.1, 2) ":" <%= size %> * "+h[j],k+=" ) ",j<d-1&&(k+=", ")}k+=" SELECT the_geom_webmercator, 1 points_count, cartodb_id, ARRAY[cartodb_id] as id_list, 'origin' as src, cartodb_id::text cdb_list FROM filtered_table WHERE ";for(var j=0;j<d;j++)f="bucket"+e[j],k+="\n"+(j>0?"AND ":"")+"cartodb_id NOT IN (select unnest(id_list) FROM "+f+") ";for(var j=0;j<d;j++)f="bucket"+e[j],k+=" UNION ALL SELECT *, '"+f+"' as src, array_to_string(id_list, ',') cdb_list FROM "+f;return _.template(k,{name:a.get("name"),size:48,table:"__wrapped"})}function cluster_generator(a,b,c,d){var e={"2 Buckets":2,"3 Buckets":3,"4 Buckets":4,"5 Buckets":5},f=["A","B","C","D","E"],g=e[b.method],h=a.getUnqualifiedName(),i=cluster_sql(a,b.zoom,b,g),j="#"+h+"{\n";j+="  marker-width: "+Math.round(b.radius_min/2)+";\n",j+="  marker-fill: "+b["marker-fill"]+";\n",j+="  marker-line-width: 1.5;\n",j+="  marker-fill-opacity: "+b["marker-opacity"]+";\n",j+="  marker-line-opacity: "+b["marker-line-opacity"]+";\n",j+="  marker-line-color: "+b["marker-line-color"]+";\n",j+="  marker-allow-overlap: true;\n";for(var k=b.radius_min,l=b.radius_max,m=[k],n=Math.round((l-k)/(g-1)),o=1;o<g-1;o++)m.push(k+n*o);m.push(l);for(var o=0;o<g;o++)j+="\n  [src = 'bucket"+f[g-o-1]+"'] {\n",j+="    marker-line-width: "+b["marker-line-width"]+";\n",j+="    marker-width: "+m[o]+";\n",j+="  } \n";j+="}\n\n",j+="#"+a.getUnqualifiedName()+"::labels { \n",j+="  text-size: 0; \n",j+="  text-fill: "+b["text-fill"]+"; \n",j+="  text-opacity: 0.8;\n",j+="  text-name: [points_count]; \n",j+="  text-face-name: '"+b["text-face-name"]+"'; \n",j+="  text-halo-fill: "+b["text-halo-fill"]+"; \n",j+="  text-halo-radius: 0; \n";for(var o=0;o<g;o++)j+="\n  [src = 'bucket"+f[g-o-1]+"'] {\n",j+="    text-size: "+(5*o+12)+";\n",j+="    text-halo-radius: "+b["text-halo-radius"]+";",j+="\n  }\n";j+="\n  text-allow-overlap: true;\n\n",j+="  [zoom>11]{ text-size: "+Math.round(.66*b.radius_min)+"; }\n",j+="  [points_count = 1]{ text-size: 0; }\n",j+="}\n",d(j,{},i)}function bubble_generator(a,b,c,d){var e={"marker-fill":b["marker-fill"],"marker-line-color":b["marker-line-color"],"marker-line-width":b["marker-line-width"],"marker-line-opacity":b["marker-line-opacity"],"marker-fill-opacity":b["marker-opacity"],"marker-comp-op":b["marker-comp-op"],"marker-placement":"point","marker-type":"ellipse","marker-allow-overlap":!0,"marker-clip":!1,"marker-multi-policy":"largest"},f=b.property,g=b.radius_min,h=b.radius_max,i=carto_functionMap[b.qfunction||DEFAULT_QFUNCTION];/none/i.test(b["marker-comp-op"])&&delete e["marker-comp-op"];for(var j=[],k=10,l=0;l<k;++l){var m=l/(k-1);j.push(g+m*(h-g))}simple_polygon_generator(a,e,c,function(b){var c=a.getUnqualifiedName();a.data()[i](k,f,function(a){for(var e=k-1;e>=0;--e)void 0!==a[e]&&null!=a[e]&&(b+="\n#"+c+" [ "+f+" <= "+a[e]+"] {\n",b+="   marker-width: "+j[e].toFixed(1)+";\n}");d(b,a)})})}function normalizeQuartiles(a){for(var b=2147483648,c=[],d=0;d<a.length;++d){var e=a[d];e>Math.abs(b)&&String(e).indexOf(".")===-1&&(e+=".01"),c.push(e)}return c}function choropleth_generator(a,b,c,d){var e=a.geomColumnTypes()&&a.geomColumnTypes()[0]||"polygon",f=manage_choropleth_props(e,b);b["polygon-comp-op"]&&!/none/i.test(b["polygon-comp-op"])&&(f["polygon-comp-op"]=b["polygon-comp-op"]),b["line-comp-op"]&&!/none/i.test(b["line-comp-op"])&&(f["line-comp-op"]=b["line-comp-op"]),b["marker-comp-op"]&&!/none/i.test(b["marker-comp-op"])&&(f["marker-comp-op"]=b["marker-comp-op"]);var g={"3 Buckets":3,"5 Buckets":5,"7 Buckets":7};if(b.color_ramp){var h=carto_functionMap[b.qfunction||DEFAULT_QFUNCTION],i=b.property,j=g[b.method],k=cdb.admin.color_ramps[b.color_ramp][j];k?"line"==e?f["line-color"]=k[0]:"polygon"==e?f["polygon-fill"]=k[0]:f["marker-fill"]=k[0]:cdb.log.error("no color ramp defined for "+j+" quartiles"),simple_polygon_generator(a,f,c,function(b){var c=a.getUnqualifiedName();a.data()[h](j,i,function(a){a=normalizeQuartiles(a);for(var f=j-1;f>=0;--f)void 0!==a[f]&&null!=a[f]&&(b+="\n#"+c+" [ "+i+" <= "+a[f]+"] {\n",b+="line"==e?"   line-color: "+k[f]+";\n}":"polygon"==e?"   polygon-fill: "+k[f]+";\n}":"   marker-fill: "+k[f]+";\n}");d(b,a)})})}}function density_sql(a,b,c){var d,e="cartodb_id";return d="Rectangles"===c.geometry_type?"WITH hgrid AS (SELECT CDB_RectangleGrid(ST_Expand(!bbox!, greatest(!pixel_width!,!pixel_height!) * <%= size %>), greatest(!pixel_width!,!pixel_height!) * <%= size %>, greatest(!pixel_width!,!pixel_height!) * <%= size %>) as cell) SELECT hgrid.cell as the_geom_webmercator, count(i.<%=prop%>) as points_count,count(i.<%=prop%>)/power( <%= size %> * CDB_XYZ_Resolution(<%= z %>), 2 )  as points_density, 1 as cartodb_id FROM hgrid, <%= table %> i where ST_Intersects(i.the_geom_webmercator, hgrid.cell) GROUP BY hgrid.cell":"WITH hgrid AS (SELECT CDB_HexagonGrid(ST_Expand(!bbox!, greatest(!pixel_width!,!pixel_height!) * <%= size %>), greatest(!pixel_width!,!pixel_height!) * <%= size %>) as cell) SELECT hgrid.cell as the_geom_webmercator, count(i.<%=prop%>) as points_count, count(i.<%=prop%>)/power( <%= size %> * CDB_XYZ_Resolution(<%= z %>), 2 ) as points_density, 1 as cartodb_id FROM hgrid, <%= table %> i where ST_Intersects(i.the_geom_webmercator, hgrid.cell) GROUP BY hgrid.cell",_.template(d,{prop:e,table:"__wrapped",size:c["polygon-size"],z:b})}function density_generator(a,b,c,d){var e={"line-color":b["line-color"],"line-opacity":b["line-opacity"],"line-width":b["line-width"],"polygon-opacity":b["polygon-opacity"],"polygon-comp-op":b["polygon-comp-op"]};/none/i.test(b["polygon-comp-op"])&&delete e["polygon-comp-op"];var f={"3 Buckets":3,"5 Buckets":5,"7 Buckets":7},g=b["polygon-size"],h=f[b.method],i=cdb.admin.color_ramps[b.color_ramp][h];i||cdb.log.error("no color ramp defined for "+h+" quartiles"),e["polygon-fill"]=i[i.length-1];var j=density_sql(a,b.zoom,b);simple_polygon_generator(a,e,c,function(c){var e=_.template("WITH clusters as ( SELECT  cartodb_id,   st_snaptogrid(the_geom_webmercator, <%= polygon_size %>*CDB_XYZ_Resolution(<%= z %>)) as center  FROM <%= table_name %>), points as ( SELECT  count(cartodb_id) as npoints,  count(cartodb_id)/power( <%= polygon_size %> * CDB_XYZ_Resolution(<%= z %>), 2 ) as density  FROM  clusters  group by  center ), stats as ( SELECT  npoints,  density,  ntile(<%= slots %>) over (order by density) as quartile  FROM points  )  SELECT  quartile,  max(npoints) as maxAmount,  max(density) as maxDensity   FROM stats  GROUP BY quartile ORDER BY quartile "),f=e({slots:h,table_name:a.get("name"),polygon_size:g,z:b.zoom});a.data()._sqlQuery(f,function(b){for(var e=b.rows,f=[],g=0;g<e.length;++g)f.push(e[g].maxdensity);f=normalizeQuartiles(f);var k=a.getUnqualifiedName();c+="\n#"+k+"{\n";for(var g=h-1;g>=0;--g)void 0!==f[g]&&(c+="  [points_density <= "+f[g]+"] { polygon-fill: "+i[g]+";  }\n");c+="\n}",d(c,f,j)})})}function columnExistsValidatorFor(a){return function(b){var c=b[a];return c.form.property.extra.length>0}}!function(){cdb.admin.SQL=function(){var a=this.options&&this.options.user_data?this.options.user_data.username:window.user_data?window.user_data.username:window.user_name,b=this.options&&this.options.user_data?this.options.user_data.api_key:window.user_data?window.user_data.api_key:window.api_key;return new cartodb.SQL({user:a,api_key:b,sql_api_template:cdb.config.getSqlApiBaseUrl()})},cdb.admin.Column=cdb.core.Model.extend({idAttribute:"name",url:function(a){var b=cdb.config.urlVersion("column",a),c=this.table||this.collection.table;c||cdb.log.error("column has no table assigned");var d="/api/"+b+"/tables/"+c.get("name")+"/columns/";return this.isNew()?d:d+this.id},initialize:function(){if(this.table=this.get("table"),!this.table)throw"you should specify a table model";this.unset("table",{silent:!0})},toJSON:function(){var a=_.clone(this.attributes);return a._name&&(a.name=a._name,delete a._name),a}}),cdb.admin.CartoDBTableMetadata=cdb.ui.common.TableProperties.extend({currentLoading:0,sqlApiClass:cartodb.SQL,_TEXTS:{columnDeleted:"Your column has been deleted",columnDeleting:"Deleting your column",columnAdded:"Your column has been added",columnAdding:"Adding new column"},hiddenColumns:["the_geom","the_geom_webmercator","cartodb_georef_status","created_at","updated_at","cartodb_id"],initialize:function(){_.bindAll(this,"notice"),this.readOnly=!1,this.bind("change:schema",this._prepareSchema,this),this._prepareSchema(),this.sqlView=null,this.synchronization=new cdb.admin.TableSynchronization,this.synchronization.linkToTable(this),this.synchronization.bind("change:id",function(){this.trigger("change:isSync",this,this.synchronization.isSync())},this),this.get("no_data_fetch")&&(this.no_data_fetch=!0,delete this.attributes.no_data_fetch),this.data(),this.bind("error",function(a,b){this.error("",b)},this),this._data.bind("error",function(a,b){this.notice("error loading rows, check your SQL query","error",5e3)},this),this._data.bind("reset",function(){var a=this._data;this.set({schema:a.schemaFromData(this.get("schema")),geometry_types:a.getGeometryTypes()})},this),this.retrigger("change",this._data,"data:changed"),this.retrigger("saved",this._data,"data:saved"),this.bind("change:table_visualization",function(){this.permission=new cdb.admin.Permission(this.get("table_visualization").permission),this.trigger("change:permission",this,this.permission)},this),this.permission=new cdb.admin.Permission(this.get("permission"))},url:function(a){var b=cdb.config.urlVersion("table",a),c="/api/"+b+"/tables";return this.isNew()?c:c+"/"+this.id},parse:function(a,b){return a.name&&(a.id=a.name),a.stats_geometry_types=a.geometry_types,delete a.geometry_types,delete a.schema,a},notice:function(a,b,c){this.trigger("notice",a,b,c)},setReadOnly:function(a){var b=!1;this.readOnly!==a&&(b=!0),this.readOnly=a,b&&this.trigger("change:readOnly",this,a)},isReadOnly:function(){return this.readOnly||this.data().isReadOnly()||this.synchronization.isSync()},isSync:function(){return this.synchronization.isSync()},getUnqualifiedName:function(){var a=this.get("name");if(!a)return null;var b=a.split(".");return 2==b.length?b[1]:a},getUnquotedName:function(){var a=this.get("name");return a&&a.replace(/"/g,"")},sortSchema:function(){this.set("schema",cdb.admin.CartoDBTableMetadata.sortSchema(this.get("schema")))},error:function(a,b){var c=b&&b.responseText&&JSON.parse(b.responseText).errors[0];this.trigger("notice",a+": "+c,"error")},_prepareSchema:function(){var a=this;this._columnType={},_(this.get("schema")).each(function(b){a._columnType[b[0]]=b[1]}),this.isInSQLView()||a.set("original_schema",a.get("schema"))},columnNames:function(a){return a=a||"schema",_(this.get(a)).pluck(0)},containsColumn:function(a){return _.contains(this.columnNames(),a)},columnNamesByType:function(a,b){b=b||"schema";var c=_(this.get(b)).filter(function(b){return b[1]==a});return _(c).pluck(0)},statsGeomColumnTypes:function(a){return this.geomColumnTypes(this.get("stats_geometry_types"))},geomColumnTypes:function(a){var b=a||this.get("geometry_types"),c=[];if(!_.isArray(b))return[];var d={st_multipolygon:"polygon",st_polygon:"polygon",st_multilinestring:"line",st_linestring:"line",st_multipoint:"point",st_point:"point"};for(var e in b){var f=b[e];if(f){var g=d[f.toLowerCase()];g&&c.push(g)}}return _.uniq(c)},addGeomColumnType:function(a,b){if(a){var c=_.clone(this.get("geometry_types"))||[];_.contains(c,a)||(c.push(a),this.set({geometry_types:c},b))}},nonReservedColumnNames:function(){var a=this;return _.filter(this.columnNames(),function(b){return!a.isReservedColumn(b)})},columnTypes:function(){return _.clone(this._columnType)},_getColumn:function(a){if(void 0!==this._columnType[a]){var b=new cdb.admin.Column({table:this,name:a,type:this._columnType[a]});return b}},getColumnType:function(a,b){b=b||"schema";var c=_(this.get(b)).filter(function(b){return b[0]==a});if(c.length>0)return c[0][1]},addColumn:function(a,b,c){var d=this,e=new cdb.admin.Column({table:this,_name:a,type:b||"string"});this.notice(d._TEXTS.columnAdding,"load",0),e.save(null,{success:function(b,e){d.notice(d._TEXTS.columnAdded,"info"),d.trigger("columnAdd",a),d.data().fetch(),c&&c.success&&c.success(b,e)},error:function(a,b){d.error("error adding column",b),c&&c.error&&c.error(a)},wait:!0})},deleteColumn:function(a,b){var c=this,d=this._getColumn(a);void 0!==d&&(this.notice(c._TEXTS.columnDeleting,"load",0),d.destroy({success:function(){c.trigger("columnDelete",a),c.notice(c._TEXTS.columnDeleted,"info"),c.data().fetch(),b&&b.success&&b.success()},error:function(a,d){c.error("error deleting column",d),b&&b.error&&b.error()},wait:!0}))},renameColumn:function(a,b,c){if(a!=b){var d=this,e=this._getColumn(a),f=e.get("name");e.set({new_name:b,old_name:e.get("name")}),this.notice("renaming column","load",0),e.save(null,{success:function(a,e){d.notice("Column has been renamed","info"),d.trigger("columnRename",b,f),d.data().fetch(),c&&c.success&&c.success(a,e)},error:function(a,b){cdb.log.error("can't rename column"),d.error("error renaming column",b),c&&c.error&&c.error(a,b)},wait:!0})}},isTypeChangeAllowed:function(a,b){var c={number:["date"],boolean:["date"],date:["boolean"]},d=this._getColumn(a);if(!d)return!0;var e=d.get("type"),f=c[e]||[];return f=f.concat([e]),!_.contains(f,b)},isTypeChangeDestructive:function(a,b){var c=this.getColumnType(a),d={string:{string:!1,number:!0,date:!0,boolean:!0},number:{string:!1,number:!1,date:!0,boolean:!0},date:{string:!1,number:!0,date:!1,boolean:!0},boolean:{string:!1,number:!1,date:!0,boolean:!1}};return d[c][b]},changeColumnType:function(a,b,c){var d=this._getColumn(a);return this.getColumnType(a)==b?void(c&&c.success&&c.success()):void this.saveNewColumnType(d,b,c)},saveNewColumnType:function(a,b,c){var d=this;a.set({type:b}),this.notice("Changing column type","load",0),a.save(null,{success:function(){d.notice("Column type has been changed","info"),d.trigger("typeChanged",b),d.data().fetch(),c&&c.success&&c.success()},error:function(a,e){d.trigger("typeChangeFailed",b,a),d.error("error changing column type",e),c&&c.error&&c.error(a,e)},wait:!0})},originalData:function(){return this._data},data:function(){return void 0===this._data&&(this._data=new cdb.admin.CartoDBTableData(null,{table:this}),this.bindData()),this.sqlView?this.sqlView:this._data},bindData:function(a){this._data&&!this._data.bindedReset&&(this.retrigger("reset",this._data,"dataLoaded"),this.retrigger("add",this._data,"dataAdded"),this._data.bindedReset=!0),this.sqlView&&!this.sqlView.bindedReset&&(this.retrigger("reset",this.sqlView,"dataLoaded"),this.retrigger("add",this.sqlView,"dataAdded"),this.sqlView.bindedReset=!0)},useSQLView:function(a,b){if(a||this.sqlView){b=b||{};var c=this;this.data();this.sqlView&&(this.sqlView.unbind(null,null,this),this.sqlView.unbind(null,null,this._data)),!a&&this.sqlView&&(this.sqlView.table=null),this.sqlView=a,this.bindData(),a?(a.bind("reset",function(){a.modify_rows||this.set({schema:a.schemaFromData(this.get("schema")),geometry_types:a.getGeometryTypes()})},this),a.bind("error",function(a,b){this.notice("error loading rows, check your SQL query","error",5e3)},this),a.bind("loading",function(){},this),a.bind("reset loaded",function(){a.modify_rows?(this.notice(a.affected_rows+" rows affected"),this.useSQLView(null)):this.notice(_t("loaded"))},this),this.dataModel=this.sqlView,a.table=this):(this.dataModel=this._data,c.set({schema:c.get("original_schema")}),c.data().fetch()),this.trigger("change:dataSource",this.dataModel,this)}},isInSQLView:function(){return!!this.sqlView},fetch:function(a){var b=this;silent=!!a&&a.silent,silent||this.notice("loading table","load",this,0,0);var c=this.elder("fetch",a);return $.when(c).done(function(){a&&a.success&&a.success.old_success&&a.success.old_success(),silent||b.notice("loaded")}).fail(function(){silent||b.notice("error loading the table")}),c},isReservedColumn:function(a){return cdb.admin.Row.isReservedColumn(a)},linkToInfowindow:function(a){this.bind("columnRename",function(b,c){a.containsField(c)&&(a.removeField(c),a.addField(b))},a),this.bind("columnDelete",function(b,c){a.removeField(b)},a),this.bind("change:schema",function(){function b(a){var b,c=0;for(i=0;i<a.length;i++)b=a.charCodeAt(i),c=b+(c<<6)+(c<<16)-c;return c}var c=this,d=_(this.columnNames()).filter(function(b){return!_.contains(a.SYSTEM_COLUMNS,b)});if(this.isInSQLView()){a.has("defaul_schema_fields")||a.saveFields("defaul_schema_fields");var e="schema_"+b(c.columnNames().sort().join("")),f="schema_"+b(_(c.previous("schema")).pluck(0).sort().join(""));a.has(f)||a.saveFields(f),a.has(e)&&a.restoreFields(null,e)}else a.restoreFields(null,"defaul_schema_fields");a.get("template")?a.mergeFields(d):a.removeMissingFields(d)},this)},embedURL:function(){return"/tables/"+this.get("name")+"/embed_map"},viewUrl:function(){return cdb.config.prefixUrl()+"/tables/"+this.getUnqualifiedName()},hasTheGeom:function(){var a=this.get("schema");for(var b in a)if("the_geom"===a[b][0])return!0;return!1},fetchGeoreferenceStatus:function(){var a=$.Deferred(),b=this.options&&this.options.user_data?this.options.user_data.username:window.user_data?window.user_data.username:window.user_name,c=this.options&&this.options.user_data?this.options.user_data.api_key:window.user_data?window.user_data.api_key:window.api_key;this.sqlApi=new this.sqlApiClass({user:b,version:"v1",api_key:c,sql_api_template:cdb.config.getSqlApiBaseUrl()});var d="SELECT the_geom FROM "+this.get("name")+" WHERE the_geom is not null";return this.sqlApi.execute(d).done(function(b){b.rows.length>0?a.resolve(!0):a.resolve(!1)}),a.promise()},isGeoreferenced:function(){var a=this.geomColumnTypes();return!!(a&&a.length>0)||!this.isInSQLView()&&this._data.any(function(a){return a.hasGeometry()})},geometryTypeChanged:function(){function a(a){return a=a.toLowerCase(),"st_multipolygon"===a?"st_polygon":"st_multilinestring"===a?"st_linestring":"st_multipoint"===a?"st_point":a}if(!("geometry_types"in this.changed))return!1;var b=this.get("geometry_types"),c=this.previousAttributes().geometry_types;if(!b||0===b.length||!c||0===c.length)return!0;var d=a(b[0]),e=a(c[0]);return d!==e},duplicate:function(a,b){b=b||{};var c={table_name:a};if(this.isInSQLView()){var d=this.data().getSQL();c.sql=d&&""!=d?d:"SELECT * FROM "+cdb.Utils.safeTableNameQuoting(this.get("name"))}else c.table_copy=this.get("name");var e=new cdb.admin.Import;e.save(c,{error:b.error,success:function(a,c){var d=new cdb.admin.Import({item_queue_id:c.item_queue_id});d.bind("importComplete",function(){d.unbind();var a=new cdb.admin.CartoDBTableMetadata({id:d.get("table_id")});a.fetch({success:function(){b.success(a)},error:b.error})}),d.bind("importError",function(){d.unbind(),b.error.apply(this,arguments)}),d.pollCheck()}})},dependentVisualizations:function(){return _.chain(this.get("dependent_visualizations")).union(this.get("non_dependent_visualizations")).compact().value()||[]}},{createFromQuery:function(a,b){return new cdb.admin.CartoDBTableMetadata({sql:b,name:a})},sortSchema:function(a){function b(a){return c[a]||c.__default__}var c={cartodb_id:1,the_geom:2,__default__:3,created_at:4,updated_at:5};return _.chain(a).clone().sort(function(a,c){var d=b(a[0]),e=b(c[0]);return d<e?-1:d>e?1:a[0]<c[0]?-1:1}).value()},alterTable:function(a){return a=a.trim(),a.search(/alter\s+[\w\."]+\s+/i)!==-1||a.search(/drop\s+[\w\.\"]+/i)!==-1||a.search(/^vacuum\s+[\w\.\"]+/i)!==-1||a.search(/^create\s+[\w\.\"]+/i)!==-1||a.search(/^reindex\s+[\w\.\"]+/i)!==-1||a.search(/^grant\s+[\w\.\"]+/i)!==-1||a.search(/^revoke\s+[\w\.\"]+/i)!==-1||a.search(/^cluster\s+[\w\.\"]+/i)!==-1||a.search(/^comment\s+on\s+[\w\.\"]+/i)!==-1||a.search(/^explain\s+[\w\.\"]+/i)!==-1},alterTableData:function(a){return this.alterTable(a)||a.search(/^refresh\s+materialized\s+view\s+[\w\.\"]+/i)!==-1||a.search(/^truncate\s+[\w\.\"]+/i)!==-1||a.search(/insert\s+into/i)!==-1||a.search(/update\s+[\w\.\-"]+\s+.*set/i)!==-1||a.search(/delete\s+from/i)!==-1}}),cdb.admin.Row=cdb.core.Model.extend({_CREATED_EVENT:"created",_CREATED_EVENT:"creating",sqlApiClass:cartodb.SQL,_GEOMETRY_TYPES:{point:"st_point",multipoint:"st_multipoint",linestring:"st_linestring",multilinestring:"st_multilinestring",polygon:"st_polygon",multipolygon:"st_multipolygon"},url:function(a){var b=cdb.config.urlVersion("record",a),c=this.table||this.collection.table;c||cdb.log.error("row has no table assigned");var d="/api/"+b+"/tables/"+c.get("name")+"/records/";return this.isNew()?d:d+this.id},fetch:function(a){a=a||{};var b=this,c=(a&&a.silent,this.options&&this.options.user_data?this.options.user_data.username:window.user_data?window.user_data.username:window.user_name),d=this.options&&this.options.user_data?this.options.user_data.api_key:window.user_data?window.user_data.api_key:window.api_key,e=this.table||this.collection.table,f=new this.sqlApiClass({user:c,version:"v2",api_key:d,sql_api_template:cdb.config.getSqlApiBaseUrl(),extra_params:["skipfields"]}),g=null,h=e.columnNames();h=a.no_geom?_.without(h,"the_geom","the_geom_webmercator"):_.without(h,"the_geom"),g="SELECT "+h.join(",")+" ",e.containsColumn("the_geom")&&!a.no_geom&&(g+=",ST_AsGeoJSON(the_geom, 8) as the_geom "),g+=" from ("+e.data().getSQL()+") _table_sql WHERE cartodb_id = "+this.get("cartodb_id"),a.no_geom?a.skipfields="the_geom,the_geom_webmercator":a.skipfields="the_geom_webmercator",f.execute(g,{},a).done(function(a){b.parse(a.rows[0])&&(b.set(a.rows[0]),b.trigger("sync"))})},toJSON:function(){var a=_.clone(this.attributes);return delete a.updated_at,delete a.created_at,delete a.the_geom_webmercator,this.isGeometryGeoJSON()||delete a.the_geom,a},isGeomLoaded:function(){var a=this.get("the_geom"),b=cdb.admin.WKT.types;return"GeoJSON"!==a&&a!==-1&&!_.contains(b,a)},hasGeometry:function(){var a=this.get("the_geom");return!(null==a||void 0==a||""==a)},isGeometryGeoJSON:function(){var a=this.get("the_geom");if(a&&"object"==typeof a)return!!a.coordinates;if("string"!=typeof a)return!1;if("GeoJSON"===a)return!0;try{var b=JSON.parse(a);return!!b.coordinates}catch(a){return!1}return!1},getFeatureType:function(){if(this.isGeomLoaded())try{var a=JSON.parse(this.get("the_geom"));return a.type.toLowerCase()}catch(a){cdb.log.info("Not possible to parse geometry type")}return null},getGeomType:function(){try{return this._GEOMETRY_TYPES[this.getFeatureType()]}catch(a){cdb.log.info("Not possible to parse geometry type")}}},{RESERVED_COLUMNS:"the_geom the_geom_webmercator cartodb_id created_at updated_at".split(" "),isReservedColumn:function(a){return _(cdb.admin.Row.RESERVED_COLUMNS).indexOf(a)!==-1}})}(),cdb.admin.CartoDBTableData=cdb.ui.common.TableData.extend({_ADDED_ROW_TEXT:"Row added correctly",_ADDING_ROW_TEXT:"Adding a new row",_GEOMETRY_UPDATED:"Table geometry updated",model:cdb.admin.Row,initialize:function(a,b){this.table=b?b.table:null,this.model.prototype.idAttribute="cartodb_id",this.initOptions(),this.filter=null,this._fetching=!1,this.pages=[],this.lastPage=!1,this.bind("newPage",this.newPage,this),this.bind("reset",function(){var a=Math.floor(this.size()/this.options.get("rows_per_page"));this.pages=[];for(var b=0;b<a;++b)this.pages.push(b)},this),this.table&&this.bind("add change:the_geom",function(a){var b=this.table.get("geometry_types");b&&b.length>0||a.get("the_geom")&&this.table.addGeomColumnType(a.getGeomType())},this),this.elder("initialize")},initOptions:function(){var a=this;this.options=new cdb.core.Model({rows_per_page:40,page:0,sort_order:"asc",order_by:"cartodb_id",filter_column:"",filter_value:""}),this.options.bind("change",function(){if(!a._fetching){a._fetching=!0,opt={};var b=this.options.previous("page");this.options.hasChanged("page")?(opt.add=!0,opt.changingPage=!0,b>this.options.get("page")&&(opt.at=0)):this.options.hasChanged("mode")&&this.options.set({page:0},{silent:!0}),opt.success=function(c,d){a.trigger("loaded"),d.rows&&0!==d.rows.length?opt.changingPage&&a.trigger("newPage",a.options.get("page"),0===opt.at?"up":"down"):a.options.set({page:b}),a.trigger("endLoadingRows",a.options.get("page"),0===opt.at?"up":"down"),a._fetching=!1},opt.error=function(){cdb.log.error("there was some problem fetching rows"),a.trigger("endLoadingRows"),a._fetching=!1},a.trigger("loadingRows",0===opt.at?"up":"down"),this.fetch(opt)}},this)},parse:function(a){return this.modify_rows=0===a.rows.length&&0===_.size(a.fields),this.affected_rows=a.affected_rows,this.lastPage=!1,a.rows.length<this.options.get("rows_per_page")&&(this.lastPage=!0),a.rows},_schemaFromQueryFields:function(a){var b={};for(k in a)b[k]=a[k].type;return b},_createUrlOptions:function(a){var b;if(a){var c={};for(var d in this.options.attributes)a(d)&&(c[d]=this.options.attributes[d]);b=_(c)}else b=_(this.options.attributes);var e=b.map(function(a,b){return b+"="+encodeURIComponent(a)}).join("&");return e+="&api_key="+cdb.config.get("api_key")},_geometryColumnSQL:function(a){return["CASE","WHEN GeometryType("+a+") = 'POINT' THEN","ST_AsGeoJSON("+a+",8)","WHEN ("+a+" IS NULL) THEN","NULL","ELSE","GeometryType("+a+")","END "+a].join(" ")},wrappedSQL:function(a,b,c){var d=this;b=b||["the_geom_webmercator"],a=_.clone(a);var e=_.chain(a).omit(b).map(function(a,b){return"geometry"===a?c?'st_astext("'+b+'") as '+b:d._geometryColumnSQL(b):'"'+b+'"'}).value();e=e.join(",");var f="desc"===this.options.get("sort_order")?"desc":"asc",g="select "+e+" from ("+this.getSQL()+") __wrapped",h=this.options.get("order_by");return h&&h.length>0&&(g+=" order by "+h+" "+f),g},url:function(){return this.sqlApiUrl()},sync:function(a,b,c){if(c||(c={}),c.data=this._createUrlOptions(function(a){return"sql"!==a}),cdb.admin.CartoDBTableMetadata.alterTableData(this.options.get("sql")||""))c.data+="&q="+encodeURIComponent(this.options.get("sql")),c.type="POST";else{var d="cartodb_id"in this.query_schema;c.data+="&q="+encodeURIComponent(this.wrappedSQL(this.query_schema,[],!d)),c.data.length>2048&&(c.type="POST")}return Backbone.sync.call(this,a,this,c)},sqlApiUrl:function(){return cdb.config.getSqlApiUrl()},setOptions:function(a){this.options.set(a)},refresh:function(){this.fetch()},isFetchingPage:function(){return this._fetching},loadPageAtTop:function(){if(!this._fetching){var a=this.pages[0];a>0&&this.options.set("page",a-1)}},loadPageAtBottom:function(){if(!this._fetching){var a=this.pages[this.pages.length-1];this.lastPage||this.options.set("page",a+1)}},newPage:function(a,b){this.pages.indexOf(a)<0&&this.pages.push(a),this.pages.sort(function(a,b){return Number(a)>Number(b)});var c=this.options.get("rows_per_page"),d=4*c;this.size()>d&&("up"==b?(this.pages.pop(),this.remove(this.models.slice(d,this.size()))):(this.pages.shift(),this.remove(this.models.slice(0,c))))},addRow:function(a){var b=this;this.table.notice(b._ADDING_ROW_TEXT,"load",0);var b=this;return a=a||{},_.extend(a,{wait:!0,success:function(){b.table.notice(b._ADDED_ROW_TEXT)},error:function(a,c){b.table.error(b._ADDING_ROW_TEXT,c)}}),this.create(null,a)},newRow:function(a){return r=new cdb.admin.Row(a),r.table=this.table,r.bind("saved",function a(){0==r.table.data().length&&(r.table.data().fetch(),r.unbind("saved",a,r.table))},r.table),r},getRow:function(a,b){b=b||{};var c=this.get(a);return c||(c=new cdb.admin.Row({cartodb_id:a})),b.no_add||this.table._data.add(c),c.table=this.table,c},getRowAt:function(a){var b=this.at(a);return b.table=this.table,b},deleteRow:function(a){},isReadOnly:function(){return!1},quartiles:function(a,b,c,d){var e=_.template("select quartile, max(<%= column %>) as maxamount from (select <%= column %>, ntile(<%= slots %>) over (order by <%= column %>) as quartile from (<%= sql %>) _table_sql where <%= column %> is not null) x group by quartile order by quartile");
this._sqlQuery(e({slots:a,sql:this.getSQL(),column:b}),function(a){c(_(a.rows).pluck("maxamount"))},d)},equalInterval:function(a,b,c,d){var e=_.template("       with params as (select min(a), max(a) from ( select <%= column %> as a from (<%= sql %>) _table_sql where <%= column %> is not null ) as foo )       select (max-min)/<%= slots %> as s, min, max from params");this._sqlQuery(e({slots:a,sql:this.getSQL(),column:b}),function(b){for(var d=b.rows[0].min,e=b.rows[0].max,f=b.rows[0].s,g=[],h=1,i=a;h<i;h++)g.push(f*h+d);g.push(e),c(g)},d)},_quantificationMethod:function(a,b,c,d,e,f){var g=_.template("select unnest(<%= functionName %>(array_agg(<%= simplify_fn %>((<%= column %>::numeric))), <%= slots %>)) as buckets from (<%= sql %>) _table_sql where <%= column %> is not null");this._sqlQuery(g({slots:b,sql:this.getSQL(),column:c,functionName:a,simplify_fn:"distinct"}),function(a){e(_(a.rows).pluck("buckets"))},f)},discreteHistogram:function(a,b,c,d){var e="SELECT DISTINCT(<%= column %>) AS bucket, count(*) AS value FROM (<%= sql %>) _table_sql GROUP BY <%= column %> ORDER BY value DESC LIMIT <%= nbuckets %> + 1",f=_.template(e,{column:b,nbuckets:a,sql:this.getSQL()});this._sqlQuery(f,function(b){var d=b.rows.length,e=!1;d>a&&(b.rows=b.rows.slice(0,a),e=!0),c({rows:b.rows,reached_limit:e})})},date_histogram:function(a,b,c,d){function e(a){return a.map(function(a){return parseFloat(a)})}b="EXTRACT(EPOCH FROM "+b+"::TIMESTAMP WITH TIME ZONE )";var f=_.template("with bounds as ( SELECT  current_timestamp as tz, min(<%= column %>) as lower,  max(<%= column %>) as upper,  (max(<%= column %>) - min(<%= column %>)) as span,  CASE WHEN ABS((max(<%= column %>) - min(<%= column %>))/<%= nbuckets %>) <= 0 THEN 1 ELSE GREATEST(1.0, pow(10,ceil(log((max(<%= column %>) - min(<%= column %>))/<%= nbuckets %>)))) END as bucket_size FROM  (<%= sql %>) _table_sql )  select array_agg(v) val, array_agg(bucket) buckets, tz, bounds.upper, bounds.lower, bounds.span, bounds.bucket_size from ( select  count(<%= column %>) as v,   round((<%= column %> - bounds.lower)/bounds.bucket_size) as bucket  from (<%= sql %>) _table_sql, bounds  where <%= column %> is not null group by bucket order by bucket ) a, bounds group by bounds.upper, bounds.lower, bounds.span, bounds.bucket_size, bounds.tz ");this._sqlQuery(f({nbuckets:a,sql:this.getSQL(),column:b}),function(a){if(!a.rows||0===a.rows.length)return void c(null,null);var a=a.rows[0];a.val=e(a.val),a.buckets=e(a.buckets);var b,d=[],f={},g=a.upper,h=a.lower,i=(a.span,a.tz),j=a.bucket_size;b=a.val[0];for(var k=0;k<a.buckets.length;++k){var l=a.buckets[k],m=d[l]=a.val[k];b=Math.max(b,m)}for(var n=0;n<d.length;++n)void 0===d[n]?d[n]=0:d[n]=d[n]/b;f.upper=parseFloat(g),f.lower=parseFloat(h),f.bucket_size=parseFloat(j),f.tz=i,c(d,f)},d)},histogram:function(a,b,c,d){function e(a){return a.map(function(a){return parseFloat(a)})}var f=_.template("with bounds as ( SELECT  min(<%= column %>) as lower,  max(<%= column %>) as upper,  (max(<%= column %>) - min(<%= column %>)) as span,  CASE WHEN ABS((max(<%= column %>) - min(<%= column %>))/<%= nbuckets %>) <= 0 THEN 1 ELSE GREATEST(1.0, pow(10,ceil(log((max(<%= column %>) - min(<%= column %>))/<%= nbuckets %>)))) END as bucket_size FROM  (<%= sql %>) _table_sql  )  select array_agg(v) val, array_agg(bucket) buckets, bounds.upper, bounds.lower, bounds.span, bounds.bucket_size from ( select  count(<%= column %>) as v,   round((<%= column %> - bounds.lower)/bounds.bucket_size) as bucket  from (<%= sql %>) _table_sql, bounds  where <%= column %> is not null group by bucket order by bucket ) a, bounds group by bounds.upper, bounds.lower, bounds.span, bounds.bucket_size ");this._sqlQuery(f({nbuckets:a,sql:this.getSQL(),column:b}),function(a){if(!a.rows||0===a.rows.length)return void c(null,null);var a=a.rows[0];a.val=e(a.val),a.buckets=e(a.buckets);var b,d=[],f={},g=a.upper,h=a.lower,i=(a.span,a.bucket_size);b=a.val[0];for(var j=0;j<a.buckets.length;++j){var k=a.buckets[j],l=d[k]=a.val[j];b=Math.max(b,l)}for(var m=0;m<d.length;++m)void 0===d[m]?d[m]=0:d[m]=d[m]/b;f.upper=parseFloat(g),f.lower=parseFloat(h),f.bucket_size=parseFloat(i),c(d,f)},d)},jenkBins:function(a,b,c,d){this._quantificationMethod("CDB_JenksBins",a,b,!0,c,d)},headTails:function(a,b,c,d){this._quantificationMethod("CDB_HeadsTailsBins",a,b,!1,c,d)},quantileBins:function(a,b,c,d){this._quantificationMethod("CDB_QuantileBins",a,b,!1,c,d)},categoriesForColumn:function(a,b,c,d){var e=_.template("      SELECT <%= column %>, count(<%= column %>) FROM (<%= sql %>) _table_sql GROUP BY <%= column %> ORDER BY count DESC LIMIT <%= max_values %> ");this._sqlQuery(e({sql:this.getSQL(),column:b,max_values:a+1}),function(a){c({type:a.fields[b].type||"string",categories:_(a.rows).pluck(b)})},d)},geometryBounds:function(a){var b=_.template("SELECT ST_XMin(ST_Extent(the_geom)) as minx,ST_YMin(ST_Extent(the_geom)) as miny, ST_XMax(ST_Extent(the_geom)) as maxx,ST_YMax(ST_Extent(the_geom)) as maxy from (<%= sql %>) _table_sql");this._sqlQuery(b({sql:this.getSQL()}),function(b){var c=b.rows[0],d=c.maxx,e=c.maxy,f=c.minx,g=c.miny,h=-85.0511,i=85.0511,j=-179,k=179,l=function(a,b,c){return a<b?b:a>c?c:a};d=l(d,j,k),f=l(f,j,k),e=l(e,h,i),g=l(g,h,i),a([[e,d],[g,f]])})},_sqlQuery:function(a,b,c,d){var e=encodeURIComponent(a);return $.ajax({type:d||"POST",data:"q="+e+"&api_key="+cdb.config.get("api_key"),url:this.url(),success:b,error:c})},getSQL:function(){return"select * from "+cdb.Utils.safeTableNameQuoting(this.table.get("id"))},fetch:function(a){var b=this;a=a||{},a&&a.add||(this.options.attributes.page=0,this.options._previousAttributes.page=0,this.pages=[]);var c=a.error;a.error=function(a,d){b.fetched=!0,b.trigger("error",a,d),c&&c(a,d)};var d=a.success;a.success=function(a,c){b.fetched=!0,d&&d.apply(b,arguments)},this._fetch(a)},_fetch:function(a){var b=1024,c=this;this.trigger("loading",a);var d=this.getSQL();return cdb.admin.CartoDBTableMetadata.alterTableData(d)?void cdb.ui.common.TableData.prototype.fetch.call(c,a):void this._sqlQuery(_.template("select * from (<%= sql %>) __wrapped limit 0")({sql:d}),function(b){c.query_schema=c._schemaFromQueryFields(b.fields),c.table.isInSQLView()||"the_geom"in c.query_schema&&delete c.query_schema.the_geom_webmercator,cdb.ui.common.TableData.prototype.fetch.call(c,a)},function(a){c.trigger("error",c,a)},d.length>b?"POST":"GET")},schemaFromData:function(a){return cdb.admin.CartoDBTableMetadata.sortSchema(_(this.query_schema).map(function(a,b){return[b,a]}))},geometryTypeFromGeoJSON:function(a){try{var b=JSON.parse(a);return b.type}catch(a){}},geometryTypeFromWKT:function(a){if(!a)return null;var b=cdb.admin.WKT.types;a=a.toUpperCase();for(var c=0;c<b.length;++c){var d=b[c];if(a.indexOf(d)!==-1)return d}},geometryTypeFromWKB:function(a){if(!a)return null;var b={"0001":"Point","0002":"LineString","0003":"Polygon","0004":"MultiPoint","0005":"MultiLineString","0006":"MultiPolygon"},c="0"===a[0]&&"0"===a[1],d=a.substring(2,6);return c||(d=d[2]+d[3]+d[0]+d[1]),b[d]},getGeometryTypes:function(){for(var a=null,b=this.size();b--&&(!a||!a.get("the_geom"));)a=this.at(b);if(!a)return[];var c=a.get("the_geom")||a.get("the_geom_webmercator"),d=this.geometryTypeFromWKB(c)||this.geometryTypeFromWKT(c);return d?["ST_"+d[0].toUpperCase()+d.substring(1).toLowerCase()]:[]}}),cdb.admin.SQLViewData=cdb.admin.CartoDBTableData.extend({UNDEFINED_TYPE_COLUMN:"undefined",initialize:function(a,b){this.model.prototype.idAttribute="cartodb_id",cdb.admin.CartoDBTableData.prototype.initialize.call(this,a,b),this.bind("error",function(){this.reset([])}),b&&b.sql&&this.setSQL(b.sql)},_parseSQL:function(a){a=a.replace(/([^\\]){x}/g,"$10").replace(/\\{x}/g,"{x}"),a=a.replace(/([^\\]){y}/g,"$10").replace(/\\{y}/g,"{y}"),a=a.replace(/([^\\]){z}/g,"$10").replace(/\\{z}/g,"{z}");var b="156543.03515625",c="ST_MakeEnvelope(-20037508.5,-20037508.5,20037508.5,20037508.5,3857)";return a=a.replace("!bbox!",c).replace("!pixel_width!",b).replace("!pixel_height!",b)},sqlSource:function(){return this.options.get("sql_source")},setSQL:function(a,b){b=b||{},this.options.set({page:0,sort_order:"asc",order_by:"",filter_column:"",filter_value:"",sql_source:b.sql_source||null},{silent:!0});var c=b.silent;b.silent=!0,this.options.set({sql:a?this._parseSQL(a):""},b),c||this.options.trigger("change:sql",this.options,a)},getSQL:function(){return this.options.get("sql")},url:function(){return this.sqlApiUrl()},isReadOnly:function(){return"filters"!==this.sqlSource()},quartiles:function(a,b,c,d){var e=_.template("SELECT quartile, max(<%= column %>) as maxAmount FROM (SELECT <%= column %>, ntile(<%= slots %>) over (order by <%= column %>) as quartile FROM (<%= sql %>) as _rambo WHERE <%= column %> IS NOT NULL) x GROUP BY quartile ORDER BY quartile");this._sqlQuery(e({slots:a,sql:this.options.get("sql"),column:b}),function(a){c(_(a.rows).pluck("maxamount"))},d)},isGeoreferenced:function(){return this.getGeometryTypes().length>0}}),cdb.admin.CartoDBLayer=cdb.geo.CartoDBLayer.extend({MAX_HISTORY:5,MAX_HISTORY_QUERY:5,MAX_HISTORY_TILE_STYLE:5,initialize:function(){this.sync=_.debounce(this.sync,1e3),this.error=!1,this.set("use_server_style",!0),this.initHistory("query"),this.initHistory("tile_style"),this.table=new cdb.admin.CartoDBTableMetadata({id:this.get("table_name")}),this.infowindow=new cdb.geo.ui.InfowindowModel({template_name:"infowindow_light"}),this.tooltip=new cdb.geo.ui.InfowindowModel({template_name:"tooltip_light"});var a=this.get("wizard_properties");this.wizard_properties=new cdb.admin.WizardProperties(_.extend({},a,{table:this.table,layer:this})),this.wizard_properties.bind("change:type",this._manageInteractivity,this),this.legend=new cdb.geo.ui.LegendModel,this.bind("change:table_name",function(){this.table.set("id",this.get("table_name")).fetch()},this),this.bindInfowindow(this.infowindow,"infowindow"),this.bindInfowindow(this.tooltip,"tooltip"),this.bindLegend(this.legend),this.bindTable(this.table),this.tooltip.bind("change:fields",this._manageInteractivity,this),this.get("table")&&(table_attr=this.get("table"),delete this.attributes.table,this.table.set(table_attr)),this.isTableLoaded()||this.table.fetch()},isTableLoaded:function(){return this.table.get("id")&&this.table.get("privacy")},toLayerGroup:function(){var a=_.clone(this.attributes);return a.layer_definition={version:"1.0.1",layers:[]},this.get("visible")&&a.layer_definition.layers.push(this.getLayerDef()),a.type="layergroup",a},getLayerDef:function(){var a=this.attributes,b=a.query||"select * from "+cdb.Utils.safeTableNameQuoting(a.table_name);return a.query_wrapper&&(b=_.template(a.query_wrapper)({sql:b})),{type:"cartodb",options:{sql:b,cartocss:this.get("tile_style"),cartocss_version:"2.1.1",interactivity:this.get("interactivity")}}},initHistory:function(a){this.get(a+"_history")||this.set(a+"_history",[]),this[a+"_history_position"]=0,this[a+"_storage"]=new cdb.admin.localStorage(a+"_storage_"+this.get("table_name"))},addToHistory:function(a,b){b!=this.get(a+"_history")[this.get(a+"_history").length-1]&&(this.get(a+"_history").push(b),this.trimHistory(a),this[a+"_history_position"]=this.get(a+"_history").length-1)},trimHistory:function(a){for(var b=this["MAX_HISTORY_"+a.toUpperCase()]?this["MAX_HISTORY_"+a.toUpperCase()]:this.MAX_HISTORY;this.get(a+"_history").length>b;){var c=this.get(a+"_history").splice(0,1);this[a+"_storage"].add(c[0])}},moveHistoryPosition:function(a,b){var c=this[a+"_history_position"]+b;c>=0&&c<this.get(a+"_history").length?this[a+"_history_position"]=c:c<0&&Math.abs(c)<=this[a+"_storage"].get().length&&(this[a+"_history_position"]=c)},getCurrentHistoryPosition:function(a){var b=this[a+"_history_position"];return this[a+"_history_position"]>=0?this.get(a+"_history")[b]:Math.abs(b)<=this[a+"_storage"].get().length?this[a+"_storage"].get(this[a+"_storage"].get().length-Math.abs(b)):this.get(a+"_history")[0]},redoHistory:function(a){return this.moveHistoryPosition(a,1),this.getCurrentHistoryPosition(a)},undoHistory:function(a){var b=this.getCurrentHistoryPosition(a);return this.moveHistoryPosition(a,-1),b},isHistoryAtLastPosition:function(a){return 0===this.get(a+"_history").length||this.get(a+"_history").length-1==this[a+"_history_position"]},isHistoryAtFirstPosition:function(a){if(0===this.get(a+"_history").length)return!0;var b=this[a+"_storage"].get();if(!b||0!==b.length){var c=b?1*b.length:0,d=-1*c;return d==this[a+"_history_position"]}return 0===this[a+"_history_position"]},clone:function(){var a=_.clone(this.attributes);return delete a.id,a.table=this.table.toJSON(),new cdb.admin.CartoDBLayer(a)},toJSON:function(){var a=_.clone(this.attributes);a.extra_params&&(a.extra_params=_.clone(this.attributes.extra_params),a.extra_params.api_key&&delete a.extra_params.api_key,a.extra_params.map_key&&delete a.extra_params.map_key),delete a.infowindow,delete a.tooltip,a.wizard_properties=this.wizard_properties.toJSON(),a.legend=this.legend.toJSON();var b={kind:"cartodb"===a.type.toLowerCase()?"carto":a.type,options:a,order:a.order,infowindow:null,tooltip:this.tooltip.toJSON()};return this.wizard_properties.supportsInteractivity()&&(b.infowindow=this.infowindow.toJSON()),void 0!==a.id&&(b.id=a.id),b},parse:function(a,b){var c={};if(!a||this._saving&&!this.isNew())return c;a.options.extra_params&&this.attributes&&this.attributes.extra_params&&(a.options.extra_params.map_key=this.attributes.extra_params.map_key);var d=this.attributes,e=d&&d.wizard_properties;return e&&e.properties&&e.properties.metadata&&a.options.wizard_properties&&a.options.wizard_properties.properties&&(a.options.wizard_properties.properties.metadata=e.properties.metadata),this.wizard_properties&&a.options.wizard_properties&&this.wizard_properties.properties(a.options.wizard_properties),_.extend(c,a.options,{id:a.id,type:"carto"===a.kind?"CartoDB":a.kind,infowindow:a.infowindow,tooltip:a.tooltip,order:a.order}),c},sync:function(a,b,c){return"read"!=a&&(c.data=JSON.stringify(b.toJSON())),c.contentType="application/json",c.url=b.url(),Backbone.syncAbort(a,this,c)},unbindSQLView:function(a){this.sqlView.unbind(null,null,this),this.sqlView=null},getCurrentState:function(){return this.error?"error":"success"},bindSQLView:function(a){var b=this;this.sqlView=a,this.sqlView.bind("error",this.errorSQLView,this),this.sqlView.bind("reset",function(){b.table.isInSQLView()&&(b.error=!1,b.sqlView.modify_rows?(b.set({query:null}),b.invalidate(),b.table.useSQLView(null,{force_data_fetch:!0}),b.trigger("clearSQLView")):b.save({query:a.getSQL(),sql_source:a.sqlSource()}))},this);var c=this.get("query");c?this.applySQLView(c,{add_to_history:!1}):this.table.data().fetch()},bindTable:function(a){this.table=a;var b=this;b.table.bind("change:name",function(){b.get("table_name")!=b.table.get("name")&&b.fetch({success:function(){b.updateCartoCss(b.table.previous("name"),b.table.get("name"))}})}),this.table.bind("change:schema",this._manageInteractivity,this)},_manageInteractivity:function(){var a=null;if(this.wizard_properties.supportsInteractivity()){this.table.containsColumn("cartodb_id")&&(a=["cartodb_id"]);var b=this.tooltip.getInteractivity();b.length&&(a=(a||[]).concat(b)),a&&(a=a.join(","))}this.get("interactivity")!==a&&(this.isNew()?this.set({interactivity:a}):this.save({interactivity:a}))},updateCartoCss:function(a,b){var c=this.get("tile_style");if(c){var d=new RegExp("#"+a,"g");c=c.replace(d,"#"+b),this.save({tile_style:c})}},bindLegend:function(a){var b=this.get("legend");b&&this.legend.set(b),this.legend.bind("change:template change:type change:title change:show_title change:items",_.debounce(function(){this.isNew()||this.save(null,{silent:!0})},250),this)},bindInfowindow:function(a,b){b=b||"infowindow";var c=this.get(b);if(c)a.set(c);else{var d=0;_(this.table.get("schema")).each(function(b){_.contains(["the_geom","created_at","updated_at","cartodb_id"],b[0])||(a.addField(b[0],d),++d)})}this.table.linkToInfowindow(a);var e="change:fields change:template_name change:alternative_names change:template change:disabled change:width change:maxHeight",f=_.debounce(function(){a.unbind(e,f,this),a.removeMissingFields(this.table.columnNames()),a.bind(e,f,this),this.isNew()||this.save(null,{silent:!0})},250);a.bind(e,f,this)},resetQuery:function(){this.get("query")&&this.save({query:void 0,sql_source:null})},errorSQLView:function(a,b){this.save({query:null},{silent:!0}),this.trigger("errorSQLView",b),this.error=!0},clearSQLView:function(){this.table.useSQLView(null),this.addToHistory("query","SELECT * FROM "+cdb.Utils.safeTableNameQuoting(this.table.get("name"))),this.undoHistory("query"),this.resetQuery(),this.trigger("clearSQLView")},applySQLView:function(a,b){b=b||{add_to_history:!0,sql_source:null},this.table.useSQLView(this.sqlView),this.sqlView.setSQL(a,{silent:!0,sql_source:b.sql_source||null}),b.add_to_history&&this.addToHistory("query",a),this.sqlView.fetch(),this.trigger("applySQLView",a)},moveToFront:function(a){var b=this.collection,c=b.getDataLayers();b.moveLayer(this,{to:c.length})}},{createDefaultLayerForTable:function(a,b){return new cdb.admin.CartoDBLayer({user_name:b,table_name:a,tile_style:"#"+a+cdb.admin.CartoStyles.DEFAULT_GEOMETRY_STYLE,style_version:"2.1.0",visible:!0,interactivity:"cartodb_id",maps_api_template:cdb.config.get("maps_api_template"),no_cdn:!0})}}),_.extend(cdb.geo.ui.InfowindowModel.prototype,{toJSON:function(){var a=[];return this.attributes.disabled||(a=_.clone(this.attributes.fields)),{fields:a,template_name:this.attributes.template_name,template:this.attributes.template,alternative_names:this.attributes.alternative_names,old_fields:this.attributes.old_fields,old_template_name:this.attributes.old_template_name,width:this.attributes.width,maxHeight:this.attributes.maxHeight}},removeMissingFields:function(a){for(var b={},c=0;c<a.length;++c){var d=a[c];b[d]=!0}var e=this.get("fields");if(e)for(var c=0;c<e.length;++c){var f=e[c].name;f in b||this.removeField(f)}},addMissingFields:function(a){for(var b={},c=this.get("fields"),d=0;d<c.length;++d){var e=c[d].name;b[e]=!0}for(var d=0;d<a.length;++d){var f=a[d];f in b||this.addField(f)}},mergeFields:function(a){this.removeMissingFields(a),this.addMissingFields(a)},getInteractivity:function(){for(var a=this.get("fields")||[],b=[],c=0;c<a.length;++c)b.push(a[c].name);return b}}),cdb.admin.GMapsBaseLayer=cdb.geo.GMapsBaseLayer.extend({clone:function(){return new cdb.admin.GMapsBaseLayer(_.clone(this.attributes))},parse:function(a){var b={};return _.extend(b,a.options,{id:a.id,type:"GMapsBase",order:a.order,parent_id:a.parent_id}),b},toJSON:function(){var a=_.clone(this.attributes),b={kind:"gmapsbase",options:a,order:a.order};return void 0!==a.id&&(b.id=a.id),b}}),cdb.admin.WMSLayer=cdb.geo.WMSLayer.extend({clone:function(){return new cdb.admin.WMSLayer(_.clone(this.attributes))},_generateClassName:function(a){if(a){var b=a;return b&&parseInt(b)&&_.isNumber(parseInt(b))&&(b="w"+b),b.replace(/\s+/g,"").replace(/[^a-zA-Z_0-9 ]/g,"").toLowerCase()}return""},parse:function(a){var b=this,c={};return _.extend(c,a.options,{id:a.id,className:b._generateClassName(a.options.layers),type:"WMS",order:a.order,parent_id:a.parent_id}),c},toJSON:function(){var a=_.clone(this.attributes),b={kind:"wms",options:a,order:a.order};return void 0!==a.id&&(b.id=a.id),b}}),cdb.admin.PlainLayer=cdb.geo.PlainLayer.extend({parse:function(a){var b={};return _.extend(b,a.options,{id:a.id,type:"Plain",order:a.order,parent_id:a.parent_id}),b},toJSON:function(){var a=_.clone(this.attributes),b={kind:"background",options:a,order:a.order};return void 0!==a.id&&(b.id=a.id),b}}),cdb.admin.TileLayer=cdb.geo.TileLayer.extend({clone:function(){return new cdb.admin.TileLayer(_.clone(this.attributes))},_generateClassName:function(a){return a?a.replace(/\s+/g,"").replace(/[^a-zA-Z_0-9 ]/g,"").toLowerCase():""},parse:function(a){var b=this,c={};return _.extend(c,a.options,{id:a.id,className:b._generateClassName(a.options.urlTemplate),type:"Tiled",order:a.order,parent_id:a.parent_id}),c},toJSON:function(){var a=_.clone(this.attributes),b={kind:"tiled",options:a,order:a.order};return void 0!==a.id&&(b.id=a.id),b},validateTemplateURL:function(a){var b=["a","b","c"],c=new Image;c.onload=a.success,c.onerror=a.error,c.src=this.get("urlTemplate").replace(/\{s\}/g,function(){return b[Math.floor(3*Math.random())]}).replace(/\{x\}/g,"0").replace(/\{y\}/g,"0").replace(/\{z\}/g,"0")}},{byCustomURL:function(a,b){if(a&&a.indexOf("/")===-1)throw new TypeError("invalid URL");a=a.replace(/\{S\}/g,"{s}").replace(/\{X\}/g,"{x}").replace(/\{Y\}/g,"{y}").replace(/\{Z\}/g,"{z}");var c=new cdb.admin.TileLayer({urlTemplate:a,attribution:null,maxZoom:21,minZoom:0,name:"",tms:b});return c.set("className",c._generateClassName(a)),c}}),cdb.admin.TorqueLayer=cdb.admin.CartoDBLayer.extend({}),cdb.admin.Layers=cdb.geo.Layers.extend({_DATA_LAYERS:["CartoDB","torque"],model:function(a,b){var c={Tiled:cdb.admin.TileLayer,CartoDB:cdb.admin.CartoDBLayer,Plain:cdb.admin.PlainLayer,GMapsBase:cdb.admin.GMapsBaseLayer,WMS:cdb.admin.WMSLayer,torque:cdb.admin.CartoDBLayer},d={"Layer::Tiled":"Tiled","Layer::Carto":"CartoDB","Layer::Background":"Plain",tiled:"Tiled",carto:"CartoDB",wms:"WMS",background:"Plain",gmapsbase:"GMapsBase",torque:"torque"};return new c[d[a.kind]](a,b)},initialize:function(){this.bind("change:order",function(){this._isSorted()||this.sort()}),cdb.geo.Layers.prototype.initialize.call(this)},add:function(a,b){return Backbone.Collection.prototype.add.apply(this,arguments)},getTorqueLayers:function(){return this.where({type:"torque"})},getTiledLayers:function(){return this.where({type:"Tiled"})},getLayerDefIndex:function(a){var b=this.getLayersByType("CartoDB");if(!b.length)return-1;for(var c=0,d=0;c<b.length;++c)if(b[c].get("visible")){if(b[c].cid===a.cid)return d;++d}return-1},getLayerDef:function(){for(var a=this.getLayersByType("CartoDB"),b={version:"1.0.1",layers:[]},c=0;c<a.length;++c)a[c].get("visible")&&b.layers.push(a[c].getLayerDef());return b},getDataLayers:function(){var a=this;return this.filter(function(b){return _.contains(a._DATA_LAYERS,b.get("type"))})},getTotalDataLayers:function(){return this.getDataLayers().length},getTotalDataLegends:function(){var a=this;return this.filter(function(b){return _.contains(a._DATA_LAYERS,b.get("type"))&&b.get("legend")&&b.get("legend").type&&"none"!==b.get("legend").type.toLowerCase()}).length},getLayersByType:function(a){return a&&""!==a?this.filter(function(b){return b.get("type")===a}):(cdb.log.info("a layer type is necessary to get layers"),0)},isLayerOnTopOfDataLayers:function(a){var b=this.getDataLayers().splice(-1)[0];return b.cid===a.cid},url:function(a){var b=cdb.config.urlVersion("layer",a);return"/api/"+b+"/maps/"+this.map.id+"/layers"},parse:function(a){return a.layers},saveLayers:function(a){a=a||{},this.save(null,a)},save:function(a,b){Backbone.sync("update",this,b)},toJSON:function(a){var b=_.map(this.models,function(b){return b.toJSON(a)});return{layers:b}},clone:function(a){return a=a||new cdb.admin.Layers,this.each(function(b){if(b.clone){var c=b.clone();c.unset("id"),a.add(c)}else{var d=_.clone(b.attributes);delete d.id,a.add(d)}}),a},_isSorted:function(){var a=_(this.models).map(function(a){return{cid:a.cid,order:a.get("order")}});return a.sort(function(a,b){return a.order-b.order}),_.isEqual(_(a).map(function(a){return a.cid}),_(this.models).map(function(a){return a.cid}))},moveLayer:function(a,b){b=b||{};var c=b.to,d=this.at(c);a.set("order",d.get("order"),{silent:!0}),this.remove(a,{silent:!0}),this.add(a,{at:c,silent:!0});for(var e=0;e<this.size();e++){var f=this.at(e);f.set("order",e)}this.trigger("reset"),this.saveLayers({complete:b.complete,error:function(){throw"Error saving layers after moving them"}})}}),cdb.admin.Map=cdb.geo.Map.extend({urlRoot:"/api/v1/maps",initialize:function(){this.constructor.__super__.initialize.apply(this),this.sync=Backbone.delayedSaveSync(Backbone.syncAbort,500),this.bind("change:id",this._fetchLayers,this),this.layers=new cdb.admin.Layers,this.layers.map=this,this.layers.bind("reset add change",this._layersChanged,this),this.layers.bind("reset add remove change:attribution",this._updateAttributions,this)},saveLayers:function(a){a=a||{};var b=function(){};this.layers.saveLayers({success:a.success||b,error:a.error||b})},_layersChanged:function(){this.layers.size()>=1&&(this._adjustZoomtoLayer(this.layers.at(0)),this.layers.size()>=2&&this.set({dataLayer:this.layers.at(1)}))},_fetchLayers:function(){this.layers.fetch()},relatedTo:function(a){this.table=a,this.table.bind("change:map_id",this._fetchOrCreate,this)},parse:function(a){return a.bounding_box_ne=JSON.parse(a.bounding_box_ne),a.bounding_box_sw=JSON.parse(a.bounding_box_sw),a.view_bounds_ne=JSON.parse(a.view_bounds_ne),a.view_bounds_sw=JSON.parse(a.view_bounds_sw),a.center=JSON.parse(a.center),a},_fetchOrCreate:function(){var a=this,b=this.table.get("map_id");b?(this.set({id:b}),this.fetch({error:function(){cdb.log.info("creating map for table"),a.create()}})):this.create()},setBaseLayer:function(a){if(this.trigger("savingLayers"),this.isBaseLayerAdded(a))return this.trigger("savingLayersFinish"),!1;var b=this,c=a,d=this.layers.at(0),e=c.get("labels")&&c.get("labels").url,f={success:function(){e||b.trigger("savingLayersFinish")},error:function(){cdb.log.error("error changing the basemap"),b.trigger("savingLayersFinish")}};return d?d.get("type")===c.get("type")?this._updateBaseLayer(d,c,f):this._replaceBaseLayer(d,c,f):this._addBaseLayer(c,f),f.success=function(){b.trigger("savingLayersFinish")},e?this._hasLabelsLayer()?this._updateLabelsLayer(c,f):this._addLabelsLayer(c,f):this._hasLabelsLayer()&&this._destroyLabelsLayer(f),c},_updateBaseLayer:function(a,b,c){var d=_.extend(_.clone(b.attributes),{id:a.get("id"),order:a.get("order")});a.clear({silent:!0}),a.set(d),a.save(null,c)},_replaceBaseLayer:function(a,b,c){this.layers.remove(a),b.set({id:a.get("id"),order:a.get("order")}),this.layers.add(b,{at:0}),b.save(null,c)},_addBaseLayer:function(a,b){this.layers.add(a,{at:0}),a.save(null,b)},_hasLabelsLayer:function(){return this.layers.size()>1&&"Tiled"===this.layers.last().get("type")},_updateLabelsLayer:function(a,b){var c=this.layers.last();c.set({name:this._labelsLayerNameFromBaseLayer(a),urlTemplate:a.get("labels").url,attribution:a.get("attribution"),minZoom:a.get("minZoom"),maxZoom:a.get("maxZoom"),subdomains:a.get("subdomains")}),c.save(null,b)},_addLabelsLayer:function(a,b){this.layers.add({name:this._labelsLayerNameFromBaseLayer(a),urlTemplate:a.get("labels").url,attribution:a.get("attribution"),minZoom:a.get("minZoom"),maxZoom:a.get("maxZoom"),subdomains:a.get("subdomains"),kind:"tiled"});var c=this.layers.last();c.save(null,b)},_destroyLabelsLayer:function(a){this.layers.last().destroy(a)},_labelsLayerNameFromBaseLayer:function(a){return a.get("name")+" Labels"},addDataLayer:function(a){this.addLayer(a),this.set({dataLayer:a})},create:function(){this.unset("id"),this.set({table_id:this.table.id}),this.save()},autoSave:function(){this.bind("change:center",this.save),this.bind("change:zoom",this.save)},toJSON:function(){var a=_.clone(this.attributes);return delete a.dataLayer,a},changeProvider:function(a,b){var c=this;if(b&&b.get("id"))return void cdb.log.error("the baselayer should not be saved in the server");var d=function(){b&&c.setBaseLayer(b)};this.get("provider")!==a?this.save({provider:a},{success:function(){d(),c.change()},error:function(a,b){c.error(_t("error switching base layer"),b)},silent:!0}):d()},isProviderGmaps:function(){var a=this.get("provider");return a&&a.toLowerCase().indexOf("googlemaps")!==-1},clone:function(a){a=a||new cdb.admin.Map;var b=_.clone(this.attributes);return delete b.id,a.set(b),a.set({center:_.clone(this.attributes.center),bounding_box_sw:_.clone(this.attributes.bounding_box_sw),bounding_box_ne:_.clone(this.attributes.bounding_box_ne),view_bounds_sw:_.clone(this.attributes.view_bounds_sw),view_bounds_ne:_.clone(this.attributes.view_bounds_ne),attribution:_.clone(this.attributes.attribution)}),this.layers.clone(a.layers),a.layers.map=a,a},notice:function(a,b,c){this.trigger("notice",a,b,c)},error:function(a,b){var c=b&&JSON.parse(b.responseText).errors[0];this.trigger("notice",a+" "+c,"error")},addCartodbLayerFromTable:function(a,b,c){c=c||{};var d=this,e=new cdb.admin.CartoDBTableMetadata({id:a});e.fetch({success:function(){var a=new cdb.admin.Map({id:e.get("map_id")});a.layers.bind("reset",function(){function b(){e.table.unbind("change:geometry_types",b),"torque"===e.wizard_properties.get("type")&&d.layers.getTorqueLayers().length&&e.wizard_properties.active("polygon"),d.layers.create(e,_.extend({wait:!0},c))}var e=a.layers.at(1).clone();e.unset("order"),e.isTableLoaded()?b():(e.table.bind("change:geometry_types",b),e.table.data().fetch())}),a.layers.fetch()}})},clamp:function(){var a=function(a,b){return Number((a-Math.floor(a/b)*b).toPrecision(8))},b=this.get("center"),c=b[1];return(c<-180||c>180)&&(c=a(180+c,360)-180,this.set("center",[b[0],c])),this}}),cdb.admin.Group=cdb.core.Model.extend({defaults:{display_name:""},initialize:function(a){this.parse(a||{})},parse:function(a){return this.users=new cdb.admin.GroupUsers(a.users,{group:this}),a}}),cdb.admin.UserGroups=Backbone.Collection.extend({model:cdb.admin.Group,initialize:function(a,b){this.organization=b.organization}}),cdb.admin.OrganizationGroups=Backbone.Collection.extend({model:cdb.admin.Group,url:function(a){var b=cdb.config.urlVersion("organizationGroups",a);return"/api/"+b+"/organization/"+this.organization.id+"/groups"},initialize:function(a,b){if(!b.organization)throw new Error("organization is required");this.organization=b.organization},parse:function(a){return this.total_entries=a.total_entries,a.groups},newGroupById:function(a){var b=this.get(a);return b||(b=new this.model({id:a}),b.collection=this),b},totalCount:function(){return this.total_entries}}),cdb.admin.UserLayers=cdb.admin.Layers.extend({url:function(a){var b=cdb.config.urlVersion("layer",a);return"/api/"+b+"/users/"+this.user.id+"/layers"},custom:function(){return this.where({category:void 0})}}),cdb.admin.User=cdb.core.Model.extend({urlRoot:"/api/v1/users",defaults:{avatar_url:"http://cartodb.s3.amazonaws.com/static/public_dashboard_default_avatar.png",username:""},initialize:function(a){a=a||{},this.tables=[],null===this.get("avatar_url")&&this.set("avatar_url",this.defaults.avatar_url),this.get("get_layers")&&(this.layers=new cdb.admin.UserLayers,this.layers.user=this,this._fetchLayers()),this.email="undefined"!=typeof a.email?a.email:"",this.get("organization")&&(this.organization=new cdb.admin.Organization(this.get("organization"),{currentUserId:this.id})),this.groups=new cdb.admin.UserGroups(a.groups,{organization:_.result(this.collection,"organization")||this.organization})},isInsideOrg:function(){return!!this.organization&&(0!=this.organization.id||this.isOrgOwner())},isOrgOwner:function(){return!!this.organization&&this.organization.owner.get("id")===this.get("id")},isOrgAdmin:function(){return!!this.organization&&this.organization.isOrgAdmin(this)},isViewer:function(){return 1==this.get("viewer")},isBuilder:function(){return!this.isViewer()},nameOrUsername:function(){return this.get("name")||this.get("username")},renderData:function(a){var b=this.get("username");return a&&a.id===this.id&&(b=_t("You")),{username:b,avatar_url:this.get("avatar_url")}},_fetchLayers:function(){this.layers.fetch({add:!0})},fetchTables:function(){var a=this;if(!this._fetchingTables){var b=new cdb.admin.Visualizations;b.options.set("type","table"),b.bind("reset",function(){a.tables=b.map(function(a){return a.get("name")})}),this._fetchingTables=!0,b.fetch()}},hasCreateDatasetsFeature:function(){return this.isBuilder()},canCreateDatasets:function(){return!(!this.get("remaining_byte_quota")||this.get("remaining_byte_quota")<=0)&&this.hasCreateDatasetsFeature()},hasCreateMapsFeature:function(){return this.isBuilder()},canAddLayerTo:function(a){
if(!a||!a.layers||!a.layers.getDataLayers)throw new Error("Map model is not defined or wrong");var b=a.layers.getDataLayers();return b.length<this.getMaxLayers()},getMaxLayers:function(){return this.get("limits")&&this.get("limits").max_layers||5},getMaxConcurrentImports:function(){return this.get("limits")&&this.get("limits").concurrent_imports||1},featureEnabled:function(a){var b=this.get("feature_flags");return!(!b||0===b.length||!a)&&_.contains(b,a)},isCloseToLimits:function(){var a=this.get("quota_in_bytes"),b=this.get("remaining_byte_quota");return 100*b/a<20},getMaxLayersPerMap:function(){return this.get("max_layers")||4},canStartTrial:function(){return!this.isInsideOrg()&&"FREE"===this.get("account_type")&&this.get("table_count")>0},canCreatePrivateDatasets:function(){var a=this.get("actions");return a&&a.private_tables},equals:function(a){if(a.get)return this.get("id")===a.get("id")},viewUrl:function(){return new cdb.common.UserUrl({base_url:this.get("base_url"),is_org_admin:this.isOrgAdmin()})},upgradeContactEmail:function(){return this.isInsideOrg()?this.isOrgOwner()?"enterprise-support@carto.com":this.organization.owner.get("email"):"support@carto.com"},usedQuotaPercentage:function(){return 100*this.get("db_size_in_bytes")/this.organization.get("available_quota_for_user")},assignedQuotaInRoundedMb:function(){return Math.floor(this.get("quota_in_bytes")/1024/1024).toFixed(0)},assignedQuotaPercentage:function(){return 100*this.get("quota_in_bytes")/this.organization.get("available_quota_for_user")}}),cdb.admin.Permission=cdb.core.Model.extend({urlRoot:"/api/v1/perm",initialize:function(){this.acl=new Backbone.Collection,this.owner=null,this._generateOwner(),this._generateAcl(),this.bind("change:owner",this._generateOwner,this),this.bind("change:acl",this._generateAcl,this)},_generateOwner:function(){this.owner||(this.owner=new cdb.admin.User),this.owner.set(this.get("owner"))},_generateAcl:function(){this.acl.reset([],{silent:!0}),_.each(this.get("acl"),function(a){var b;switch(a.type){case"user":b=new cdb.admin.User(a.entity);break;case"org":b=new cdb.admin.Organization(a.entity);break;case"group":b=new cdb.admin.Group(a.entity);break;default:throw new Error("Unknown ACL item type: "+a.type)}this._grantAccess(b,a.access)},this)},cleanPermissions:function(){this.acl.reset()},hasAccess:function(a){return this.hasReadAccess(a)},hasReadAccess:function(a){return!!this.findRepresentableAclItem(a)},hasWriteAccess:function(a){var b=cdb.Utils.result(this.findRepresentableAclItem(a),"get","access");return b===cdb.admin.Permission.READ_WRITE},canChangeReadAccess:function(a){return this._canChangeAccess(a)},canChangeWriteAccess:function(a){return(!a.isBuilder||a.isBuilder())&&this._canChangeAccess(a,function(a){return cdb.Utils.result(a,"get","access")!==cdb.admin.Permission.READ_WRITE})},_canChangeAccess:function(a){var b=this.findRepresentableAclItem(a);return this.isOwner(a)||!b||b===this._ownAclItem(a)||cdb.Utils.result(arguments,1,b)||!1},grantWriteAccess:function(a){this._grantAccess(a,this.constructor.READ_WRITE)},grantReadAccess:function(a){this._grantAccess(a,this.constructor.READ_ONLY)},revokeWriteAccess:function(a){this.grantReadAccess(a)},revokeAccess:function(a){var b=this._ownAclItem(a);b&&this.acl.remove(b)},isOwner:function(a){return _.result(this.owner,"id")===_.result(a,"id")},toJSON:function(){return{entity:this.get("entity"),acl:this.acl.toJSON()}},getUsersWithAnyPermission:function(){return this.acl.chain().filter(this._hasTypeUser).map(this._getEntity).value()},isSharedWithOrganization:function(){return this.acl.any(this._hasTypeOrg)},clone:function(){var a=_.clone(this.attributes);return delete a.id,new cdb.admin.Permission(a)},overwriteAcl:function(a){this.acl.reset(a.acl.models)},findRepresentableAclItem:function(a){if(this.isOwner(a))return this._newAclItem(a,this.constructor.READ_WRITE);var b=["_ownAclItem","_organizationAclItem","_mostPrivilegedGroupAclItem"];return this._findMostPrivilegedAclItem(b,function(b){return this[b](a)})},_hasTypeUser:function(a){return"user"===a.get("type")},_getEntity:function(a){return a.get("entity")},_hasTypeOrg:function(a){return"org"===a.get("type")},_isOrganization:function(a){return a instanceof cdb.admin.Organization},_ownAclItem:function(a){if(a&&_.isFunction(a.isNew)||cdb.log.error("model is required to find an ACL item"),!a.isNew())return this.acl.find(function(b){return b.get("entity").id===a.id})},_organizationAclItem:function(a){var b=_.result(a.collection,"organization")||a.organization;if(b)return this._ownAclItem(b)},_mostPrivilegedGroupAclItem:function(a){var b=_.result(a.groups,"models");if(b)return this._findMostPrivilegedAclItem(b,this._ownAclItem)},_findMostPrivilegedAclItem:function(a,b){for(var c,d=0,e=a[d];e&&cdb.Utils.result(c,"get","access")!==cdb.admin.Permission.READ_WRITE;e=a[++d])c=b.call(this,e)||c;return c},_grantAccess:function(a,b){var c=this._ownAclItem(a);if(c)c.set("access",b);else{if(c=this._newAclItem(a,b),!c.isValid())throw new Error(b+" is not a valid ACL access");this.acl.add(c)}},_newAclItem:function(a,b){var c;if(a instanceof cdb.admin.User)c="user";else if(a instanceof cdb.admin.Group)c="group";else{if(!this._isOrganization(a))throw new Error("model not recognized as a valid ACL entity "+a);c="org"}return new cdb.admin.ACLItem({type:c,entity:a,access:b})}},{READ_ONLY:"r",READ_WRITE:"rw"}),cdb.admin.ACLItem=Backbone.Model.extend({defaults:{access:"r"},isOwn:function(a){return a.id===this.get("entity").id},validate:function(a,b){var c=cdb.admin.Permission;if(a.access!==c.READ_ONLY&&a.access!==c.READ_WRITE)return"access can't take 'r' or 'rw' values"},toJSON:function(){var a=_.pick(this.get("entity").toJSON(),"id","username","avatar_url","name");return a.username||(a.username=a.name,delete a.name),{type:this.get("type")||"user",entity:a,access:this.get("access")}}}),cdb.admin.GroupUsers=Backbone.Collection.extend({model:cdb.admin.User,initialize:function(a,b){if(!b.group)throw new Error("group is required");this.group=b.group},url:function(){return this.group.url.apply(this.group,arguments)+"/users"},parse:function(a){return this.total_entries=a.total_entries,this.total_user_entries=a.total_user_entries,a.users},addInBatch:function(a){return this._batchAsyncProcessUsers("POST",a)},removeInBatch:function(a){var b=this;return this._batchAsyncProcessUsers("DELETE",a).done(function(){_.each(a,b.remove.bind(b))})},_batchAsyncProcessUsers:function(a,b){var c=this,d=$.Deferred();return $.ajax({type:a,url:cdb.config.prefixUrl()+this.url(),data:{users:b},success:function(){var a=arguments;c.fetch({success:function(){d.resolve.apply(d,a)},error:function(){d.resolve.apply(d,a)}})},error:function(){d.reject.apply(d,arguments)}}),d},totalCount:function(){return this.total_user_entries}}),cdb.admin.Grantable=cdb.core.Model.extend({initialize:function(){this.entity=this._createEntity()},_createEntity:function(){var a=cdb.Utils.capitalize(this.get("type")),b=new cdb.admin[a](this.get("model"));return b.organization=this.collection.organization,b}}),cdb.admin.Grantables=Backbone.Collection.extend({model:cdb.admin.Grantable,url:function(a){var b=cdb.config.urlVersion("organizationGrantables",a);return"/api/"+b+"/organization/"+this.organization.id+"/grantables"},initialize:function(a,b){if(!b.organization)throw new Error("organization is required");this.organization=b.organization,this.currentUserId=b.currentUserId,this.sync=Backbone.syncAbort},parse:function(a){return this.total_entries=a.total_entries,_.reduce(a.grantables,function(a,b){return b.id===this.currentUserId?this.total_entries--:a.push(b),a},[],this)},totalCount:function(){return this.total_entries}}),cdb.admin.Organization=cdb.core.Model.extend({url:"/api/v1/org/",initialize:function(a,b){a=a||{},this.owner=new cdb.admin.User(this.get("owner")),this.display_email="undefined"!=typeof a.admin_email&&null!=a.admin_email&&(""==a.admin_email?this.owner.email:a.admin_email);var c={organization:this,currentUserId:b&&b.currentUserId};this.users=new cdb.admin.Organization.Users(a.users,c),this.groups=new cdb.admin.OrganizationGroups(a.groups,c),this.grantables=new cdb.admin.Grantables(void 0,c),this.users.each(this._setOrganizationOnModel,this),this.groups.each(this._setOrganizationOnModel,this)},_setOrganizationOnModel:function(a){a.organization=this},fetch:function(){throw new Error("organization should not be fetch, should be static")},containsUser:function(a){return!!this.users.find(function(b){return b.id===a.id})},isOrgAdmin:function(a){return this.owner.id===a.id||!!_.find(this.get("admins"),function(b){return b.id===a.id})},viewUrl:function(){return new cdb.common.OrganizationUrl({base_url:this.get("base_url")})}}),cdb.admin.Organization.Users=Backbone.Collection.extend({model:cdb.admin.User,_DEFAULT_EXCLUDE_CURRENT_USER:!0,url:function(){return"/api/v1/organization/"+this.organization.id+"/users"},initialize:function(a,b){if(!b.organization)throw new Error("Organization is needed for fetching organization users");this.elder("initialize"),this.organization=b.organization,this.currentUserId=b.currentUserId,this._excludeCurrentUser=this._DEFAULT_EXCLUDE_CURRENT_USER,this.sync=Backbone.syncAbort},comparator:function(a){return a.get("username")},excludeCurrentUser:function(a){a=!!a,this._excludeCurrentUser=a,a&&!this.currentUserId&&cdb.log.error("set excludeCurrentUser to true, but there is no current user id set to exclude!")},restoreExcludeCurrentUser:function(){this.excludeCurrentUser(this._DEFAULT_EXCLUDE_CURRENT_USER)},parse:function(a){return this.total_entries=a.total_entries,this.total_user_entries=a.total_user_entries,_.reduce(a.users,function(a,b){return this._excludeCurrentUser&&b.id===this.currentUserId?(this.total_user_entries--,this.total_entries--):a.push(b),a},[],this)},totalCount:function(){return this.total_user_entries}}),cdb.admin.Organization.Invites=cdb.core.Model.extend({defaults:{users_emails:[],welcome_text:"I'd like to invite you to my CARTO organization,\nBest regards"},url:function(){return"/api/v1/organization/"+this.organizationId+"/invitations"},initialize:function(a,b){if(!b.organizationId)throw new Error("Organization id is needed for fetching organization users");this.organizationId=b.organizationId}}),cdb.admin.Like=cdb.core.Model.extend({defaults:{likeable:!0},url:function(a){var b=cdb.config.urlVersion("like",a);return"/api/"+b+"/viz/"+this.get("vis_id")+"/like"},initialize:function(){_.bindAll(this,"_onSaveError"),this.on("destroy",function(){this.set({liked:!1,likes:this.get("likes")-1})},this)},_onSaveError:function(a,b){this.trigger("error",{status:b.status,statusText:b.statusText})},toggleLiked:function(){this.get("liked")?this.destroy():(this.set({id:null},{silent:!0}),this.save({},{error:this._onSaveError}))}},{newByVisData:function(a){var b=_.defaults({id:a.liked?a.vis_id:null},_.omit(a,"url")),c=new cdb.admin.Like(b);return a.url&&(c.url=a.url),c}}),cdb.admin.carto=cdb.admin.carto||{},cdb.admin.carto.category={max_values:10,others_value:"Others",category_generator:function(a,b,c,d){var e=this,f=a.geomColumnTypes()&&a.geomColumnTypes()[0]||"polygon",g="polygon-fill";switch(f){case"polygon":g="polygon-fill";break;case"line":g="line-color";break;default:g="marker-fill"}var h=a.getUnqualifiedName(),i="#"+h+" {\n",j=manage_carto_properies(b);for(var k in j)"categories"!==k&&"colors"!==k&&"property"!==k&&(i+="   "+k+": "+b[k]+";\n");i+="}\n",c.property||!b.categories||0===b.categories.length?this.get_categories(b.property,a,function(c){d(i+e.generate_categories(b,a,c),c)}):d(i+this.generate_categories(b,a,b.categories),b.categories)},get_categories:function(a,b,c){var d=this;b.data().categoriesForColumn(this.max_values+1,a,function(a){var b=a.type,e=a.categories.length>d.max_values,f=a.categories.slice(0,d.max_values).sort(),g=[];for(var h in f){var i={};i.title=f[h],i.title_type=b,i.color=cdb.admin.color_brewer[h],i.value_type="color",g.push(i)}e&&g.push({title:d.others_value,value_type:"color",color:cdb.admin.color_brewer[f.length],default:!0}),c(g)})},generate_categories:function(a,b,c,d){function e(a){return a.replace(/\n/g,"\\n").replace(/\"/g,'\\"')}d=d||a.property;var f=b.getUnqualifiedName(),g="",h=b.geomColumnTypes()&&b.geomColumnTypes()[0]||"polygon",i=c||a.categories;if(i)for(var j in i){var k=i[j][i[j].value_type],l="polygon-fill";switch(h){case"polygon":l="file"==i[j].value_type?"polygon-pattern-file":"polygon-fill";break;case"line":l="file"==i[j].value_type?"line-pattern-file":"line-color";break;default:l="file"==i[j].value_type?"marker-file":"marker-fill"}if(i[j].default)g+="\n#"+f+" {\n   "+l+": "+k+";\n}";else{var m="";m="string"!=i[j].title_type||null===i[j].title?i[j].title:'"'+e(i[j].title)+'"',g+="\n#"+f+"["+d+"="+m+"] {\n   "+l+": "+k+";\n","polygon"===h&&"polygon-pattern-file"===l&&(g+="   polygon-opacity:0;\n",g+="   polygon-pattern-opacity:"+(a["polygon-opacity"]||1)+";\n"),g+="}"}}return g}},cdb.admin.carto=cdb.admin.carto||{},cdb.admin.carto.torque={torque_generator:function(a,b,c,d){var e=_.omit(b,["property","torque-duration","torque-frame-count","torque-blend-mode","torque-trails","torque-cumulative","torque-resolution","torque-aggregation-function"]),f="Map {\n"+["-torque-frame-count:"+b["torque-frame-count"],"-torque-animation-duration:"+b["torque-duration"],'-torque-time-attribute:"'+b.property+'"',"-torque-aggregation-function:"+(b["torque-aggregation-function"]?'"'+b["torque-aggregation-function"]+'"':'"count(cartodb_id)"'),"-torque-resolution:"+b["torque-resolution"],"-torque-data-aggregation:"+(b["torque-cumulative"]?"cumulative":"linear")].join(";\n")+";\n}";b["torque-blend-mode"]&&(e["comp-op"]=b["torque-blend-mode"]),"torque_heat"===e.type&&"number"==typeof e["marker-opacity"]&&(e["marker-opacity"]+="*[value]"),simple_polygon_generator(a,e,c,function(c){for(var e=1;e<=b["torque-trails"];++e){var g="\n#"+a.getUnqualifiedName()+"[frame-offset="+e+"] {\n marker-width:"+(b["marker-width"]+2*e)+";\n marker-fill-opacity:"+b["marker-opacity"]/(2*e)+"; \n}";c+=g}d(f+"\n\n"+c)})}},cdb.admin.carto=cdb.admin.carto||{},cdb.admin.carto.torque_cat={sql:function(a,b){function c(a){return a.replace(/\n/g,"\\n").replace(/\"/g,'\\"')}var d=["select *, (CASE"];torque_cat=1;for(var e in a){var f,g=a[e];f="string"!==g.title_type||null===g.title?g.title===cdb.admin.carto.category.others_value?void 0:g.title:"'"+c(g.title)+"'",void 0!==f&&(null===f?d.push('WHEN "'+b+'" is '+f+" THEN "+torque_cat):d.push('WHEN "'+b+'" = '+f+" THEN "+torque_cat),torque_cat+=1)}return d.push("ELSE "+torque_cat+" END) as torque_category FROM __wrapped _cdb_wrap"),d.join(" ")},generate:function(a,b,c,d){function e(a){return _.map(a,function(a,b){return a=_.clone(a),a.title=b+1,a.title_type="number",a})}var f=this,g=cdb.admin.carto.category;b["torque-aggregation-function"]="CDB_Math_Mode(torque_category)",cdb.admin.carto.torque.torque_generator(a,b,c,function(h){function i(c){var i=e(c),j=f.sql(c,b.property_cat);d(h+g.generate_categories(b,a,i,"value"),c,j)}c.property_cat||!b.categories||0===b.categories.length?g.get_categories(b.property_cat,a,i):i(b.categories)})}},cdb.admin.Asset=cdb.core.Model.extend({defaults:{state:"idle",name:""}}),cdb.admin.Assets=Backbone.Collection.extend({model:cdb.admin.Asset,url:function(a){var b=cdb.config.urlVersion("asset",a);return"/api/"+b+"/users/"+this.user.id+"/assets"},initialize:function(a,b){this.user=b.user},parse:function(a,b){return a.assets}}),cdb.admin.StaticAsset=cdb.admin.Asset.extend({defaults:{state:"idle",public_url:"",kind:"marker",name:"",host:"http://com.cartodb.users-assets.production.s3.amazonaws.com",folder:"maki-icons",ext:"svg",size:"18"},toJSON:function(){var a=_.clone(this.attributes);return a.public_url=this.get("host")+"/"+this.get("folder")+"/"+a.icon+(this.get("size")?"-"+this.get("size"):"")+"."+this.get("ext"),a},get:function(a){var b=this.attributes[a];return"public_url"===a&&(b=this.get("host")+"/"+this.get("folder")+"/"+this.attributes.icon+(this.get("size")?"-"+this.get("size"):"")+"."+this.get("ext")),b}}),cdb.admin.StaticAssets=cdb.admin.Assets.extend({model:cdb.admin.StaticAsset,url:function(){return""},initialize:function(a,b){},parse:function(a,b){return[]}}),carto_quotables=["text-face-name"],carto_variables=["text-name"];var carto_functionMap={"Equal Interval":"equalInterval",Jenks:"jenkBins","Heads/Tails":"headTails",Quantile:"quantileBins"};DEFAULT_QFUNCTION="Quantile";var _cartocss_spec_props=getProp(carto.default_reference.version.latest,"css");cdb.admin.CartoStyles=Backbone.Model.extend({defaults:{type:"polygon",properties:{"polygon-fill":"#FF6600","line-color":"#FFFFFF","line-width":1,"polygon-opacity":.7,"line-opacity":1}},initialize:function(){if(this.table=this.get("table"),!this.table)throw"table must be passed as param";this.properties=new cdb.core.Model(this.get("properties")),this.bind("change:properties",this._generateCarto,this),this.generators={},this.registerGenerator("polygon",simple_polygon_generator),this.registerGenerator("cluster",cluster_generator),this.registerGenerator("bubble",bubble_generator),this.registerGenerator("intensity",intensity_generator),this.registerGenerator("choropleth",choropleth_generator),this.registerGenerator("color",cdb.admin.carto.category.category_generator.bind(cdb.admin.carto.category)),this.registerGenerator("category",cdb.admin.carto.category.category_generator.bind(cdb.admin.carto.category)),this.registerGenerator("density",density_generator),this.registerGenerator("torque",cdb.admin.carto.torque.torque_generator.bind(cdb.admin.carto.torque)),this.registerGenerator("torque_heat",cdb.admin.carto.torque.torque_generator.bind(cdb.admin.carto.torque)),this.registerGenerator("torque_cat",cdb.admin.carto.torque_cat.generate.bind(cdb.admin.carto.torque_cat))},attr:function(a,b){var c=this.attributes.properties[a];this.attributes.properties[a]=b,c!=b&&(this.trigger("change:properties",this,this.attributes.properties),this.trigger("changes",this))},registerGenerator:function(a,b){this.generators[a]=b},_generateHeader:function(){var a={polygon:"simple"},b=this.get("type");b=a[b]||b;var c="/** "+b+" visualization */\n\n";return c},regenerate:function(){this._generateCarto()},_generateCarto:function(){var a=this,b=this.generators[this.get("type")],c=this.get("type");if(!b)return void cdb.log.info("can't get style generator for "+this.get("type"));var d={};this.properties.bind("change",function(){d=this.properties.changedAttributes()},this),this.properties.set(this.get("properties")),this.properties.unbind("change",null,this),this.trigger("loading"),b(this.table,this.get("properties"),d,function(b,d,e){if(a.get("type")===c){var f={style:a._generateHeader()+b};e?f.sql=e:a.unset("sql",{silent:!0}),d&&(f.metadata=d),a.set(f,{silent:!0}),a.change({changes:{style:""}}),a.trigger("load")}})}},{DEFAULT_GEOMETRY_STYLE:"{\n // points\n [mapnik-geometry-type=point] {\n    marker-fill: #FF6600;\n    marker-opacity: 1;\n    marker-width: 12;\n    marker-line-color: white;\n    marker-line-width: 3;\n    marker-line-opacity: 0.9;\n    marker-placement: point;\n    marker-type: ellipse;marker-allow-overlap: true;\n  }\n\n //lines\n [mapnik-geometry-type=linestring] {\n    line-color: #FF6600; \n    line-width: 2; \n    line-opacity: 0.7;\n  }\n\n //polygons\n [mapnik-geometry-type=polygon] {\n    polygon-fill:#FF6600;\n    polygon-opacity: 0.7;\n    line-opacity:1;\n    line-color: #FFFFFF;\n   }\n }"}),cdb.admin.CartoParser=function(a){this.parse_env=null,this.ruleset=null,a&&this.parse(a)},cdb.admin.CartoParser.prototype={RESERVED_VARIABLES:["mapnik-geometry-type","points_density","points_count","src","value"],parse:function(a){var b=this,c=this.parse_env={validation_data:!1,frames:[],errors:[],error:function(b){b.line=carto.Parser().extractErrorLine(a,b.index),this.errors.push(b)}},d=null,e=null;try{carto.tree.Reference.setData(carto.default_reference.version.latest),d=new carto.Parser(c).parse(a)}catch(a){return void(this.parse_env.errors=this._parseError(["style.mss"+a.message]))}if(d){var f={};this.definitions=e=d.toList(c);var g;for(var h in e)e[h].elements.length>0&&"Map"===e[h].elements[0].value&&(g=e.splice(h,1)[0]);var i=torque.cartocss_reference.version.latest.layer;g&&g.rules.forEach(function(a){var d=a.name;if(d in i){var e=i[a.name].type,f=a.value.value[0].value[0];b._checkValidType(f,e)||c.error({message:"Expected type "+e+".",index:a.index})}else c.error({message:"Rule "+d+" not allowed for Map.",index:a.index})});var e=carto.inheritDefinitions(e,c);e=carto.sortStyles(e,c);for(var h in e)for(var j in e[h]){var k=e[h][j];k&&k.toXML&&k.toXML(c,f)}c.errors.message&&_(c.errors.message.split("\n")).each(function(a){c.errors.push(a)})}return this.ruleset=d,this},_checkValidType:function(a,b){return["number","float"].indexOf(b)>-1?"number"==typeof a.value:"string"===b?"undefined"!==a.value&&"string"==typeof a.value:b.constructor===Array?b.indexOf(a.value)>-1||"linear"===a.value:"color"!==b||checkValidColor(a)},_checkValidColor:function(a){var b={rgb:3,hsl:3,rgba:4,hsla:4};return"undefined"!=typeof a.rgb||b[a.name]===a.args},_parseError:function(a){var b=[];for(var c in a){var d=a[c];if(d&&d.length>0){var e=d.match(/.*:(\d+):(\d+)\s*(.*)/);e?b.push({line:parseInt(e[1],10),message:e[3]}):b.push({line:null,message:d})}}return b.sort(function(a,b){return a.line-b.line}),b=_.uniq(b,!0,function(a){return a.line+a.message})},errors:function(){return this.parse_env?this.parse_env.errors:[]},_colorsFromRule:function(a){function b(a,c){var d=[];for(var e in a)if(a[e]instanceof c)d.push(a[e]);else if("object"==typeof a[e]){var f=b(a[e],c);f.length&&(d=d.concat(f))}return d}return b(a.ev(this.parse_env),carto.tree.Color)},_varsFromRule:function(a){function b(a,c){var d=[];for(var e in a)if(a[e]instanceof c)d.push(a[e]);else if("object"==typeof a[e]){var f=b(a[e],c);f.length&&(d=d.concat(f))}return d}return b(a,carto.tree.Field)},_extract:function(a,b){var c=[];if(this.ruleset){var d=this.ruleset.toList(this.parse_env);for(var e in d){var f=d[e];if(f.filters){for(var g in f.rules){var h=f.rules[g],i=a(this,h);c=c.concat(i)}if(b)for(var j in f.filters){var k=f.filters[j];for(var l in k){var m=k[l];m.key&&m.key.value&&c.push(m.key.value)}}}}var n=this;return _.reject(_.uniq(c),function(a){return _.contains(n.RESERVED_VARIABLES,a)})}},colorsUsed:function(a){var b=function(a,b){return _.map(a._colorsFromRule(b),function(a){return a.rgb})},c=this._extract(b,!1);return a&&"hex"==a.mode&&(c=_.map(c,function(a){return cdb.Utils.rgbToHex(a[0],a[1],a[2])})),c},variablesUsed:function(){var a=function(a,b){return _.map(a._varsFromRule(b),function(a){return a.value})};return this._extract(a,!0)},getDefaultRules:function(){for(var a=[],b=0;b<this.definitions.length;++b){var c=this.definitions[b];8388607===c.zoom&&0===_.size(c.filters.filters)&&"__default__"===c.attachment&&(a=a.concat(c.rules))}var d={};for(var e in a){var f=a[e];d[f.name]=f}return d},getRuleByName:function(a,b){if(!a._rulesByName){var c=a._rulesByName={};for(var d in a.rules){var e=a.rules[d];c[e.name]=e}}return a._rulesByName[b]}},cdb.admin.color_ramps={green:{3:["#E5F5F9","#99D8C9","#2CA25F"],4:["#EDF8FB","#B2E2E2","#66C2A4","#238B45"],5:["#EDF8FB","#B2E2E2","#66C2A4","#2CA25F","#006D2C"],6:["#EDF8FB","#CCECE6","#99D8C9","#66C2A4","#2CA25F","#006D2C"],7:["#EDF8FB","#D7FAF4","#CCECE6","#66C2A4","#41AE76","#238B45","#005824"]},blue:{3:["#EDF8B1","#7FCDBB","#2C7FB8"],4:["#FFFFCC","#A1DAB4","#41B6C4","#225EA8"],5:["#FFFFCC","#A1DAB4","#41B6C4","#2C7FB8","#253494"],6:["#FFFFCC","#C7E9B4","#7FCDBB","#41B6C4","#2C7FB8","#253494"],7:["#FFFFCC","#C7E9B4","#7FCDBB","#41B6C4","#1D91C0","#225EA8","#0C2C84"]},pink:{3:["#E7E1EF","#C994C7","#DD1C77"],4:["#F1EEF6","#D7B5D8","#DF65B0","#CE1256"],5:["#F1EEF6","#D7B5D8","#DF65B0","#DD1C77","#980043"],6:["#F1EEF6","#D4B9DA","#C994C7","#DF65B0","#DD1C77","#980043"],7:["#F1EEF6","#D4B9DA","#C994C7","#DF65B0","#E7298A","#CE1256","#91003F"]},black:{3:["#F0F0F0","#BDBDBD","#636363"],4:["#F7F7F7","#CCCCCC","#969696","#525252"],5:["#F7F7F7","#CCCCCC","#969696","#636363","#252525"],6:["#F7F7F7","#D9D9D9","#BDBDBD","#969696","#636363","#252525"],7:["#F7F7F7","#D9D9D9","#BDBDBD","#969696","#737373","#525252","#252525"]},red:{3:["#FFEDA0","#FEB24C","#F03B20"],4:["#FFFFB2","#FECC5C","#FD8D3C","#E31A1C"],5:["#FFFFB2","#FECC5C","#FD8D3C","#F03B20","#BD0026"],6:["#FFFFB2","#FED976","#FEB24C","#FD8D3C","#F03B20","#BD0026"],7:["#FFFFB2","#FED976","#FEB24C","#FD8D3C","#FC4E2A","#E31A1C","#B10026"]},inverted_green:{3:["#2CA25F","#99D8C9","#E5F5F9"],4:["#238B45","#66C2A4","#B2E2E2","#EDF8FB"],5:["#006D2C","#2CA25F","#66C2A4","#B2E2E2","#EDF8FB"],6:["#006D2C","#2CA25F","#66C2A4","#99D8C9","#CCECE6","#EDF8FB"],7:["#005824","#238B45","#41AE76","#66C2A4","#CCECE6","#D7FAF4","#EDF8FB"]},inverted_blue:{3:["#2C7FB8","#7FCDBB","#EDF8B1"],4:["#225EA8","#41B6C4","#A1DAB4","#FFFFCC"],5:["#253494","#2C7FB8","#41B6C4","#A1DAB4","#FFFFCC"],6:["#253494","#2C7FB8","#41B6C4","#7FCDBB","#C7E9B4","#FFFFCC"],7:["#0C2C84","#225EA8","#1D91C0","#41B6C4","#7FCDBB","#C7E9B4","#FFFFCC"]},inverted_pink:{3:["#DD1C77","#C994C7","#E7E1EF"],4:["#CE1256","#DF65B0","#D7B5D8","#F1EEF6"],5:["#980043","#DD1C77","#DF65B0","#D7B5D8","#F1EEF6"],6:["#980043","#DD1C77","#DF65B0","#C994C7","#D4B9DA","#F1EEF6"],7:["#91003F","#CE1256","#E7298A","#DF65B0","#C994C7","#D4B9DA","#F1EEF6"]},inverted_black:{3:["#636363","#BDBDBD","#F0F0F0"],4:["#525252","#969696","#CCCCCC","#F7F7F7"],5:["#252525","#636363","#969696","#CCCCCC","#F7F7F7"],6:["#252525","#636363","#969696","#BDBDBD","#D9D9D9","#F7F7F7"],7:["#252525","#525252","#737373","#969696","#BDBDBD","#D9D9D9","#F7F7F7"]},inverted_red:{3:["#F03B20","#FEB24C","#FFEDA0"],4:["#E31A1C","#FD8D3C","#FECC5C","#FFFFB2"],5:["#BD0026","#F03B20","#FD8D3C","#FECC5C","#FFFFB2"],6:["#BD0026","#F03B20","#FD8D3C","#FEB24C","#FED976","#FFFFB2"],7:["#B10026","#E31A1C","#FC4E2A","#FD8D3C","#FEB24C","#FED976","#FFFFB2"]},spectrum1:{3:["#1a9850","#fff2cc","#d73027"],4:["#1a9850","#d2ecb4","#fed6b0","#d73027"],5:["#1a9850","#8cce8a","#fff2cc","#f79272","#d73027"],6:["#1a9850","#8cce8a","#d2ecb4","#fed6b0","#f79272","#d73027"],7:["#1a9850","#8cce8a","#d2ecb4","#fff2cc","#fed6b0","#f79272","#d73027"]},spectrum2:{3:["#0080ff","#fff2cc","#ff4d4d"],4:["#0080ff","#7fbfff","#ffa6a6","#ff4d4d"],5:["#0080ff","#40a0ff","#fff2cc","#ff7a7a","#ff4d4d"],6:["#0080ff","#40a0ff","#7fbfff","#ffa6a6","#ff7a7a","#ff4d4d"],7:["#0080ff","#40a0ff","#7fbfff","#fff2cc","#ffa6a6","#ff7a7a","#ff4d4d"]},purple_states:{3:["#F1E6F1","#B379B3","#8A4E8A"],4:["#F1E6F1","#D8BBD8","#A05AA0","#8A4E8A"],5:["#F1E6F1","#D8BBD8","#B379B3","#A05AA0","#8A4E8A"],6:["#F1E6F1","#D8BBD8","#CCA5CC","#B379B3","#A05AA0","#8A4E8A"],7:["#F1E6F1","#D8BBD8","#CCA5CC","#C08FC0","#B379B3","#A05AA0","#8A4E8A"]},red_states:{3:["#F2D2D3","#D4686C","#C1373C"],4:["#F2D2D3","#EBB7B9","#CC4E52","#C1373C"],5:["#F2D2D3","#EBB7B9","#D4686C","#CC4E52","#C1373C"],6:["#F2D2D3","#EBB7B9","#E39D9F","#D4686C","#CC4E52","#C1373C"],7:["#F2D2D3","#EBB7B9","#E39D9F","#DB8286","#D4686C","#CC4E52","#C1373C"]},blue_states:{3:["#ECF0F6","#6182B5","#43618F"],4:["#ECF0F6","#B2C2DB","#4E71A6","#43618F"],5:["#ECF0F6","#B2C2DB","#6182B5","#4E71A6","#43618F"],6:["#ECF0F6","#B2C2DB","#9BB0D0","#6182B5","#4E71A6","#43618F"],7:["#ECF0F6","#B2C2DB","#9BB0D0","#849EC5","#6182B5","#4E71A6","#43618F"]},inverted_purple_states:{3:["#8A4E8A","#B379B3","#F1E6F1"],4:["#8A4E8A","#A05AA0","#D8BBD8","#F1E6F1"],5:["#8A4E8A","#A05AA0","#B379B3","#D8BBD8","#F1E6F1"],6:["#8A4E8A","#A05AA0","#B379B3","#CCA5CC","#D8BBD8","#F1E6F1"],7:["#8A4E8A","#A05AA0","#B379B3","#C08FC0","#CCA5CC","#D8BBD8","#F1E6F1"]},inverted_red_states:{3:["#C1373C","#D4686C","#F2D2D3"],4:["#C1373C","#CC4E52","#EBB7B9","#F2D2D3"],5:["#C1373C","#CC4E52","#D4686C","#EBB7B9","#F2D2D3"],6:["#C1373C","#CC4E52","#D4686C","#E39D9F","#EBB7B9","#F2D2D3"],7:["#C1373C","#CC4E52","#D4686C","#DB8286","#E39D9F","#EBB7B9","#F2D2D3"]},inverted_blue_states:{3:["#43618F","#6182B5","#ECF0F6"],4:["#43618F","#4E71A6","#B2C2DB","#ECF0F6"],5:["#43618F","#4E71A6","#6182B5","#B2C2DB","#ECF0F6"],6:["#43618F","#4E71A6","#6182B5","#9BB0D0","#B2C2DB","#ECF0F6"],7:["#43618F","#4E71A6","#6182B5","#849EC5","#9BB0D0","#B2C2DB","#ECF0F6"]}},cdb.admin.color_brewer=["#A6CEE3","#1F78B4","#B2DF8A","#33A02C","#FB9A99","#E31A1C","#FDBF6F","#FF7F00","#CAB2D6","#6A3D9A","#DDDDDD"],cdb.admin.CommonTables=Backbone.Collection.extend({}),cdb.admin.ExportMapModel=cdb.core.Model.extend({urlRoot:"/api/v3/visualization_exports",initialize:function(a){this._loadAttributes(a)},requestExport:function(){this.save(null,{success:this._requestExportSuccessHandler.bind(this)}),window.user_data&&window.user_data.email?cdb.god.trigger("metrics","export_map",{email:window.user_data.email}):cdb.god.trigger("metrics","export_map_public",{})},cancelExport:function(){this._interrupt()},_requestExportSuccessHandler:function(){this._pollPID=setInterval(function(){this.fetch({success:this._checkState.bind(this),error:this._errorHandler.bind(this)})}.bind(this),2e3)},_checkState:function(){"complete"===this.get("state")?this._finishExport():"failure"===this.get("state")&&this._errorHandler()},_finishExport:function(){clearInterval(this._pollPID)},_errorHandler:function(){throw this._interrupt(),new Error("There is a problem with your export. Please try again.")},_interrupt:function(){clearInterval(this._pollPID)},_loadAttributes:function(a){if(!a)throw new Error("no attributes were specified");if(!a.visualization_id)throw new Error("'visualization_id' is required");this.visualization_id=a.visualization_id}}),cdb.admin.models=cdb.admin.models||{},cdb.admin.models.Filter=cdb.core.Model.extend({DEFAULT_HIST_BUCKETS:100,urlRoot:"/api/v1/filters",initialize:function(){if(this.table=this.get("table"),!this.table)throw"Filter needs a table";this.unset("table"),this.table.bind("data:saved",function(){this._fetchHist()},this),this.table.has("name")&&this.table.has("schema")&&this._fetchHist(),this.table.bind("change:name change:schema",this._fetchHist,this),this.bind("destroy",function(){this.table.unbind("change:name change:schema",this._fetchHist,this)})},_fetchHist:function(){"date"==this.get("column_type")?this._fetchDateHist():this._fetchNumericHist()},_fetchNumericHist:function(){var a=this;this.table.originalData().histogram(this.DEFAULT_HIST_BUCKETS,this.get("column"),function(b,c){b?a._changeHist(b,c):a.trigger("error","numeric histogram couldn't be generated")})},_fetchDateHist:function(){var a=this;this.table.originalData().date_histogram(this.DEFAULT_HIST_BUCKETS,this.get("column"),function(b,c){b?a._changeDateHist(b,c):a.trigger("error","date histogram couldn't be generated")})},_changeDateHist:function(a,b){var c=this.get("bounds");if(this.set("hist",a,{silent:!0}),this.set("bounds",b,{silent:!0}),this.has("lower")){var d=Math.max(1e3*b.lower,this.get("lower")),e=Math.min(1e3*b.upper,this.get("upper"));c&&(b.upper>c.upper&&(e=1e3*b.upper),b.lower<c.lower&&(d=1e3*b.lower)),(_.isNaN(d)||_.isNaN(e))&&(d=1e3*b.lower,e=1e3*b.upper),this.set({lower:d,upper:e,lower_limit:1e3*b.lower,upper_limit:1e3*b.upper,tz:b.tz})}else{var f=b.bucket_size;b.lower=Math.round(1e3*b.lower),b.upper=Math.round(1e3*b.upper),this.set({bucket_size:f,lower:b.lower,upper:b.upper,lower_limit:b.lower,upper_limit:b.upper,tz:b.tz})}},_changeHist:function(a,b){var c=this.get("bounds");if(this.set("hist",a,{silent:!0}),this.set("bounds",b,{silent:!0}),this.has("lower")){var d=Math.min(b.upper,this.get("upper")),e=Math.max(b.lower,this.get("lower"));c&&(b.upper>c.upper&&(d=b.upper),b.lower<c.lower&&(e=b.lower)),this.set({lower:e,upper:d,lower_limit:b.lower,upper_limit:b.upper})}else{var f=b.bucket_size;b.upper=f*Math.ceil(b.upper/f),this.set({bucket_size:f,lower:b.lower,upper:b.upper,lower_limit:b.lower,upper_limit:b.upper})}},_getDateFromTimestamp:function(a){return new Date(a)},interpolate:function(a){var b=this.get("lower_limit"),c=this.get("upper_limit");return(1-a)*b+a*c},fitToBucket:function(a){
var b=this.get("bucket_size");return b?b*Math.floor(a/b):0},getSQLCondition:function(){return"date"==this.attributes.column_type?this.getSQLConditionForDate():this.getSQLConditionForNumber()},_getTimeZone:function(a){return a?new Date(a).getTimezoneOffset():0},getSQLConditionForDate:function(){var a=this.get("lower"),b=this.get("upper");if(_.isNaN(a)||_.isNaN(b)||void 0==a||void 0==b)return null;var c,d,e=moment(a).format("YYYY-MM-DDTHH:mm:ssZ").toString(),f=moment(b).format("YYYY-MM-DDTHH:mm:ssZ").toString(),g=_.clone(this.attributes);return this.get("upper")>=this.get("upper_limit")?(c=_.extend(g,{lower:e,upper:moment(this.get("upper_limit")).format("YYYY-MM-DDTHH:mm:ssZ").toString()}),d=_.template(" (<%= column %> >= ('<%= lower %>') AND <%= column %> <= ('<%= upper %>')) ")(c)):(c=_.extend(g,{lower:e,upper:f}),d=_.template(" (<%= column %> >= ('<%= lower %>') AND <%= column %> <= ('<%= upper %>')) ")(c)),d},getSQLConditionForNumber:function(){return this.attributes.lower||this.attributes.upper?this.attributes.upper>=this.attributes.upper_limit?_.template(" (<%= column %> >= <%= lower %> AND <%= column %> <= <%= upper %>) ")(this.attributes):_.template(" (<%= column %> >= <%= lower %> AND <%= column %> < <%= upper %>) ")(this.attributes):_.template(" (<%= column %> IS NULL) ")(this.attributes)},toJSON:function(){return{column:this.get("column"),upper:this.get("upper"),lower:this.get("lower"),tz:this.get("tz"),column_type:this.get("column_type")}}}),cdb.admin.models.FilterDiscrete=cdb.core.Model.extend({DEFAULT_HIST_BUCKETS:65,urlRoot:"/api/v1/filters",defaults:{list_view:!0},initialize:function(){if(this.table=this.get("table"),this.items=new Backbone.Collection,this.get("items")&&this.items.reset(this.get("items")),!this.table)throw"Filter needs a table";this.unset("table"),this.table.bind("data:saved",function(){this._fetchHist()},this),this.items.bind("change",function(){this.trigger("change",this),this.trigger("change:items",this,this.items)},this),this._fetchHist()},_fetchHist:function(){var a=this;this.table.originalData().discreteHistogram(this.DEFAULT_HIST_BUCKETS,this.get("column"),function(b){b?a._updateHist(b):a.trigger("error","Histogram couldn't be generated")})},_updateHist:function(a){for(var b=0;b<a.rows.length;++b){var c=this.items.where({bucket:a.rows[b].bucket});c.length?a.rows[b].selected=c[0].get("selected"):a.rows[b].selected=!0}this.set("reached_limit",a.reached_limit),this.items.reset(a.rows)},_sanitize:function(a){return a?a.replace(/'/g,"''"):a},getSQLCondition:function(){return"boolean"==this.get("column_type")?this.getSQLConditionForBoolean():this.getSQLConditionForString()},getSQLConditionForBoolean:function(){if(0===this.items.size())return" (true) ";var a=this.items.filter(function(a){return a.get("selected")}),b=this.items.filter(function(a){return null!=a.get("bucket")&&a.get("selected")}),c=this.items.filter(function(a){return null==a.get("bucket")&&a.get("selected")});return a.length>0&&0==c.length?_.template("<%= column %> IN (<%= opts %>) ")({column:this.get("column"),opts:b.map(function(a){return a.get("bucket")}).join(",")}):1==a.length&&1==c.length?_.template("<%= column %> IS NULL ")({column:this.get("column")}):a.length>0?_.template("<%= column %> IN (<%= opts %>) OR <%= column %> IS NULL ")({column:this.get("column"),opts:b.map(function(a){return a.get("bucket")}).join(",")}):_.template("<%= column %> IN (NULL) ")({column:this.get("column")})},_containsNull:function(a){var b=!1;return _.each(a,function(a){a.get("bucket")||(b=!0)}),b},_nullIsNotSelected:function(a,b){var c=_.difference(a,b),d=!1;return _.each(c,function(a){a.get("selected")||a.get("bucket")||(d=!0)}),d},getSQLConditionForString:function(){var a=this;if(!this.get("list_view")){if(this.get("free_text")){var b=this._sanitize(this.get("free_text"));return _.template("<%= column %> ILIKE '%<%= t %>%' ")({column:this.get("column"),t:b})}return" (true) "}if(0===this.items.size())return" (true) ";var c=this.items.filter(function(a){return a.get("selected")});if(c.length>0){c.filter(function(a){return a.get("selected")});if(c.length==this.items.length)return _.template(" (true) ")({column:this.get("column"),opts:c.map(function(b){var c=a._sanitize(b.get("bucket"));return"'"+c+"'"}).join(",")});var d="<%= column %> IN (<%= opts %>) ";return this._nullIsNotSelected(this.items.models,c)?d="<%= column %> IN (<%= opts %>) AND <%= column %> IS NOT NULL ":this._containsNull(c)&&(d="<%= column %> IN (<%= opts %>) OR <%= column %> IS NULL "),_.template(d)({column:this.get("column"),opts:c.map(function(b){var c=a._sanitize(b.get("bucket"));return"'"+c+"'"}).join(",")})}return" (true) "},toJSON:function(){return{reached_limit:this.get("reached_limit"),column:this.get("column"),items:this.items.toJSON(),free_text:this.get("free_text"),list_view:this.get("list_view"),column_type:this.get("column_type")}}}),cdb.admin.models.Filters=Backbone.Collection.extend({model:function(a,b){var c=b.collection,d=a.column,e=c.table.get("original_schema")?"original_schema":"schema",f=c.table.getColumnType(d,e)||a.column_type,g=c._getFilterModelforColumnType(f);return new g(_.extend(a,{column_type:f,table:c.table}))},initialize:function(a,b){if(!b.table)throw"Filters need a table";this.table=b.table},getSQLCondition:function(){var a=this.map(function(a){return a.getSQLCondition()}),b=_(a).compact().join(" AND ");return b},removeFilters:function(){for(;this.size();)this.at(0).destroy()},_getFilterModelforColumnType:function(a){return"number"==a||"date"==a?cdb.admin.models.Filter:cdb.admin.models.FilterDiscrete}}),cdb.admin.Geocoding=cdb.core.Model.extend({_POLLTIMER:2e3,defaults:{kind:"",formatter:"",table_name:""},idAttribute:"id",url:function(a){var b=cdb.config.urlVersion("geocoding",a),c="/api/"+b+"/geocodings/";return this.isNew()?c:c+this.id},initialize:function(){this.bind("change",this._checkFinish,this)},setUrlRoot:function(a){this.urlRoot=a},pollCheck:function(a){var b=this,c=0;this.pollTimer=setInterval(function(){b.fetch({error:function(a){b.trigger("change")}}),++c},a||this._POLLTIMER)},destroyCheck:function(){clearInterval(this.pollTimer)},_checkFinish:function(){var a=this.get("state"),b=this.get("error"),c=_.clone(this.attributes);null===a?this.trigger("geocodingStarted",this):"finished"===a?(this.destroyCheck(),this.clear({silent:!0}),this.trigger("geocodingComplete",c,this)):"failed"===a?(this.destroyCheck(),this.clear({silent:!0}),this.trigger("geocodingError",b,this)):"reset"===a||"cancelled"===a?this.clear({silent:!0}):this.trigger("geocodingChange",this)},cancelGeocoding:function(){this.destroyCheck(),this.trigger("geocodingCanceled",this),this.save({state:"cancelled"},{wait:!0})},resetGeocoding:function(){this.destroyCheck(),this.trigger("geocodingReset",this),this.set("state","reset")},isGeocoding:function(){return this.get("id")&&this.get("table_name")&&(this.get("formatter")||this.get("kind"))}}),cdb.admin.Geocodings=cdb.core.Model.extend({url:function(a){var b=cdb.config.urlVersion("geocoding",a);return"/api/"+b+"/geocodings"}}),cdb.admin.Geocodings.AvailableGeometries=cdb.core.Model.extend({url:function(a){var b=cdb.config.urlVersion("geocoding",a);return"/api/"+b+"/geocodings/available_geometries"},parse:function(a){return{available_geometries:a}}}),cdb.admin.Geocodings.Estimation=cdb.core.Model.extend({urlRoot:function(){var a=cdb.config.urlVersion("geocoding","read");return"/api/"+a+"/geocodings/estimation_for/"},reset:function(){this.unset("rows"),this.unset("estimation")},costInCredits:function(){return this.get("estimation")},mayHaveCost:function(){return 0!==this.costInCredits()},costInDollars:function(){return Math.ceil(this.costInCredits()/100)}}),cdb.admin.Import=cdb.core.Model.extend({idAttribute:"item_queue_id",urlRoot:"/api/v1/imports",initialize:function(){this.bind("change",this._checkFinish,this)},setUrlRoot:function(a){this.urlRoot=a},pollCheck:function(a){var b=this,c=0;this.pollTimer=setInterval(function(){b.fetch({error:function(a){b.trigger("change")}}),++c},a||1500)},destroyCheck:function(){clearInterval(this.pollTimer)},_checkFinish:function(){this.get("success")===!0?(clearInterval(this.pollTimer),this.trigger("importComplete",this)):this.get("success")===!1?(clearInterval(this.pollTimer),this.trigger("importError",this)):this.trigger("importChange",this)}}),cdb.admin.SlideTransition=cdb.core.Model.extend({defaults:{time:0}}),cdb.admin.Slide=cdb.core.Model.extend({initialize:function(){var a=this;this._tracked=[],this.visualization=null,this.bind("change:active",function(){a.isActive()&&a.master&&a.visualization&&a.master.changeTo(this.visualization)})},unload:function(){var a=this;this.unbind(null,null,this),this.visualization.unbind(null,null,this),this.visualization=null,this.master.map.unbind(null,null,this),this.master.unbind(null,null,this),_.each(this._tracked,function(b){b.unbind(null,null,a)}),this._tracked=[],this.loaded=!1},_trackObject:function(a,b,c){this._tracked.push(a);var d="change";b&&b.length&&(d=b.map(function(a){return"change:"+a}).join(" ")),a.bind(d,function(){this.isActive()&&c.call(this,a,b?_.pick(a.attributes,b):a.attributes)},this)},setMaster:function(a){this.master=a,this.visualization||(this.visualization=new cdb.admin.Visualization(_.extend(_.pick(this.attributes,"id","map_id","next_id","prev_id","transition_options","type"),{bindMap:!1,parent_id:a.id})))},isActive:function(){return!!this.get("active")},destroy:function(){return this.visualization.destroy.apply(this.visualization,arguments),this.trigger("destroy",this,this.collection),this},setNext:function(a,b){var c=new cdb.admin.Visualization({id:this.id});return c.order.save("next_id",a,b),this._reorder(a),this.trigger("change:next_id",this,a),this},_reorder:function(a){var b,c;if(this.collection){var d=this.collection;if(null!==a?(b=d.get(a),c=d.indexOf(b)):c=d.length,c>=0){var e=d.indexOf(this);d.models.splice(c,0,this),e>=c&&(e+=1),d.models.splice(e,1)}}}}),cdb.admin.Slides=Backbone.Collection.extend({model:cdb.admin.Slide,initialize:function(a,b){if(!b||!b.visualization)throw new Error("visualization is undefined");this.visualization=b.visualization,this.master_visualization_id=this.visualization.id;var c=this,d=function(a){a.setMaster(c.visualization)};this.bind("add",d,this),this.bind("add",function(a){this.setActive(a)},this),this.bind("reset",function(){this.each(d),this.setActive(this.at(0))},this),this.bind("remove",this._onRemoveSlide,this)},_onRemoveSlide:function(a,b,c){a.isActive()&&this.length>0&&(c.index!==this.length?this.setActive(this.at(c.index)):c.index==this.length&&this.setActive(this.at(c.index-1)))},initializeModels:function(){var a=this,b=function(b){b.setMaster(a.visualization)};this.each(b)},create:function(a){var b=this;0===this.length?this._createSlide(function(c){b._createSlide(function(d){b.add(c),b.add(d),a&&a(d)},{no_add:!0,prev_id:c.id})},{no_add:!0}):this._createSlide(a)},_createSlide:function(a,b){b=b||{};var c=this,d=b.prev_id||null;return!d&&this.length&&(d=this.last().visualization.id),this.visualization.copy({copy_overlays:!0,type:"slide",parent_id:this.master_visualization_id,prev_id:d},{success:function(d){d.map.layers.bind("reset",function(){var e=new cdb.admin.Slide({id:d.id});e.visualization=d,b.no_add||c.add(e),a&&a(e)})}})},setActive:function(a){var b=this.find(function(a){return a.get("active")});b&&b.set("active",!1),a&&a.set("active",!0)},existsTorqueLayer:function(){return this.any(function(a){return 0!==a.visualization.map.layers.getTorqueLayers().length})}}),cdb.admin.TableSynchronization=cdb.core.Model.extend({_X:1.2,_INTERVAL:1500,_STATES:["created","failure","success","syncing","queued"],defaults:{name:"",url:"",state:"",run_at:0,ran_at:0,retried_times:0,interval:0,error_code:0,error_message:"",service_name:"",service_item_id:"",content_guessing:!0,type_guessing:!0},url:function(a){var b=cdb.config.urlVersion("synchronization",a),c="/api/"+b+"/synchronizations/";return this.isNew()?c:c+this.id},initialize:function(){this.bind("destroy",function(){this.unset("id")})},toJSON:function(){var a=_.clone(this.attributes),b={url:a.url,interval:a.interval,content_guessing:a.content_guessing,type_guessing:a.type_guessing,create_vis:a.create_vis};return"remote"===a.type&&_.extend(b,{remote_visualization_id:a.remote_visualization_id,create_vis:!1,value:a.value}),void 0!==a.id&&(b.id=a.id),a.service_name&&(b.service_name=a.service_name,b.service_item_id=a.service_item_id),b},syncNow:function(a){$.ajax({url:cdb.config.prefixUrl()+this.url()+"/sync_now",type:"PUT"}).always(a)},pollCheck:function(a){function b(){c.destroyCheck(),c.fetch({error:function(a,b){c.set({error_message:b.statusText||"",state:"failure"})}}),d*=c._X,c.pollTimer=setInterval(b,d)}var c=this,d=this._INTERVAL;this.pollTimer=setInterval(b,d)},destroyCheck:function(){clearInterval(this.pollTimer)},isSync:function(){return!this.isNew()},linkToTable:function(a){var b=this;a.has("synchronization")&&this.set(a.get("synchronization")),a.bind("change:synchronization",function(){b.set(a.get("synchronization"))},a),a.bind("destroy",function(){b.unbind(null,null,a),b.destroy()},a)}}),cdb.admin.TileJSON=cdb.core.Model.extend({idAttribute:"url",url:function(){return this.get("url")},save:function(){},newTileLayer:function(){if(!this._isFetched())throw new Error("no tiles, have fetch been called and returned a successful resultset?");var a=new cdb.admin.TileLayer({urlTemplate:this._urlTemplate(),name:this._name(),attribution:this.get("attribution"),maxZoom:this.get("maxzoom"),minZoom:this.get("minzoom"),bounding_boxes:this.get("bounds"),tms:"tms"===this.get("scheme")});return a},_isFetched:function(){return this.get("tiles").length>0},_urlTemplate:function(){return this.get("tiles")[0]},_name:function(){return this.get("name")||this.get("description")}}),cdb.admin.VisualizationOrder=cdb.core.Model.extend({url:function(a){return this.visualization.url(a)+"/next_id"},initialize:function(){this.visualization=this.get("visualization"),this.set("id",this.visualization.id),this.unset("visualization")}}),cdb.admin.Visualization=cdb.core.Model.extend({defaults:{bindMap:!0},url:function(a){var b=cdb.config.urlVersion("visualization",a),c="/api/"+b+"/viz";return this.isNew()?c:c+"/"+this.id},INHERIT_TABLE_ATTRIBUTES:["name","description","privacy"],initialize:function(){this.map=new cdb.admin.Map,this.permission=new cdb.admin.Permission(this.get("permission")),this.overlays=new cdb.admin.Overlays([]),this.overlays.vis=this,this.initSlides(),this.bind("change:type",this.initSlides),this.transition=new cdb.admin.SlideTransition(this.get("transition_options"),{parse:!0}),this.order=new cdb.admin.VisualizationOrder({visualization:this}),this.like=cdb.admin.Like.newByVisData({vis_id:this.id,liked:this.get("liked"),likes:this.get("likes")}),"derived"===this.get("type")&&this.get("related_tables")&&this.generateRelatedTables(),this.get("bindMap")&&this._bindMap(),this.on(_(this.INHERIT_TABLE_ATTRIBUTES).map(function(a){return"change:"+a}).join(" "),this._changeAttributes,this),this._initBinds()},initSlides:function(){return this.slides?this:("derived"===this.get("type")&&this.get("bindMap")?(this.slides=new cdb.admin.Slides(this.get("children"),{visualization:this}),this.slides.initializeModels()):this.slides=new cdb.admin.Slides([],{visualization:this}),this)},activeSlide:function(a){return a>=0&&a<this.slides.length&&this.slides.setActive(this.slides.at(a)),this},setMaster:function(a){var b=this;a.bind("change:id",function(){b.changeTo(a),b.slides.master_visualization_id=a.id},this),a.bind("change",function(){var c=a.changedAttributes();c.type&&b.set("type",a.get("type")),b.set("description",a.get("description")),c.name&&b.set("name",a.get("name")),c.privacy&&b.set("privacy",a.get("privacy"))})},enableOverlays:function(){this.bind("change:id",this._fetchOverlays,this),this.isNew()||this._fetchOverlays()},_fetchOverlays:function(){this.overlays.fetch({reset:!0})},_initBinds:function(){this.permission.acl.bind("reset",function(){this.set("permission",this.permission.attributes,{silent:!0}),this.trigger("change:permission",this)},this),this.bind("change:permission",function(){this.permission.set(this.get("permission"))},this)},isLoaded:function(){return this.has("privacy")&&this.has("type")},generateRelatedTables:function(a){var b=this.get("related_tables");if(b.length){for(var c=new Backbone.Collection([]),d=0,e=b.length;d<e;d++){var f=new cdb.admin.CartoDBTableMetadata(b[d]);c.add(f)}this.related_tables=c,a&&a.success&&a.success()}},getRelatedTables:function(a,b){if(b=b||{},"derived"===this.get("type")){if(!b.force&&this.get("related_tables"))return void this.generateRelatedTables(a);var c=this;this.fetch({success:function(){c.generateRelatedTables(a)},error:a&&a.error&&a.error})}},tableMetadata:function(){return this._metadata||(this._metadata=new cdb.admin.CartoDBTableMetadata(this.get("table"))),this._metadata},_bindMap:function(){this.on("change:map_id",this._fetchMap,this),this.map.bind("change:id",function(){this.set("map_id",this.map.id)},this),this.map.set("id",this.get("map_id")),this.map.layers.bind("change:id remove",function(){this.getRelatedTables(null,{force:!0})},this)},isVisualization:function(){return"derived"===this.get("type")||"slide"===this.get("type")},changeTo:function(a,b){this.set(a.attributes,{silent:!0}),this.transition.set(a.transition.attributes);var c=function(){this.map.layers.unbind("reset",c),this.map.layers.unbind("error",d),b&&b.success&&b.success(this)},d=function(){this.map.layers.unbind("reset",c),this.map.layers.unbind("error",d),b&&b.error&&b.error()};this.map.layers.bind("reset",c,this),this.map.layers.bind("error",d,this),this.permission.set(a.permission.attributes),this.set({map_id:a.get("map_id")}),this.getRelatedTables()},changeToVisualization:function(a){var b=this;if(this.isVisualization())b.notice("","",1e3);else{var c={success:function(c){b.changeTo(c,a),b.notice("","",1e3)},error:function(c){var d="error changing to visualization";b.error(d,c),a&&a.error(c,d)}};this.copy({name:this.get("name"),description:this.get("description")},c)}return this},parse:function(a){return this.transition&&a.transition_options&&this.transition.set(this.transition.parse(a.transition_options)),this.like&&this.like.set({vis_id:this.id,likes:this.get("likes"),liked:this.get("liked")}),a},toJSON:function(){var a=_.clone(this.attributes);return delete a.bindMap,delete a.stats,delete a.related_tables,delete a.children,a.map_id=this.map.id,a.transition_options=this.transition.toJSON(),a},createChild:function(a,b){a=a||{},b=b||{};var c=new cdb.admin.Visualization(_.extend({copy_overlays:!1,type:"slide",parent_id:this.id},a));return c.save(null,b),c},copy:function(a,b){a=a||{},b=b||{};var c=new cdb.admin.Visualization(_.extend({source_visualization_id:this.id},a));return c.save(null,b),c},_fetchMap:function(){this.map.set("id",this.get("map_id")).fetch()},_changeAttributes:function(a,b){if(!this.isVisualization()){var c=this;this.map.layers.each(function(a){if("cartodb"==a.get("type").toLowerCase()){if(!c.changedAttributes())return!1;var b=_.pick(c.changedAttributes(),c.INHERIT_TABLE_ATTRIBUTES);b&&a.fetch()}})}},publicURL:function(){var a=this.permission.owner.viewUrl();return a+"/viz/"+this.get("id")+"/public_map"},deepInsightsUrl:function(a){var b=a.viewUrl();return b+"/bivisualizations/"+this.get("id")+"/embed_map"},embedURL:function(){var a=this.permission.owner.viewUrl();return a+"/viz/"+this.get("id")+"/embed_map"},vizjsonURL:function(){var a=this.permission.owner.viewUrl(),b=cdb.config.urlVersion("vizjson","read","v2");return a+"/api/"+b+"/viz/"+this.get("id")+"/viz.json"},notice:function(a,b,c){this.trigger("notice",a,b,c)},error:function(a,b){this.trigger("notice",a,"error")},sharedWithEntities:function(){return _.map(this.permission.acl.toArray()||[],function(a){return a.get("entity")})},privacyOptions:function(){return this.isVisualization()?cdb.admin.Visualization.ALL_PRIVACY_OPTIONS:_.reject(cdb.admin.Visualization.ALL_PRIVACY_OPTIONS,function(a){return"PASSWORD"===a})},isOwnedByUser:function(a){return a.equals(this.permission.owner)},viewUrl:function(a){var b=this.permission.owner,c=this.permission.owner.viewUrl();if(this.isVisualization()||_.isUndefined(this.get("type"))){var d=this.get("id");return a&&a.id!==b.id&&this.permission.hasAccess(a)&&(c=a.viewUrl(),d=b.get("username")+"."+d),new cdb.common.MapUrl({base_url:c.urlToPath("viz",d)})}return a&&this.permission.hasAccess(a)&&(c=a.viewUrl()),new cdb.common.DatasetUrl({base_url:c.urlToPath("tables",this.tableMetadata().getUnquotedName())})},_canonicalViewUrl:function(){var a=this.isVisualization()||_.isUndefined(this.get("type")),b=a?cdb.common.MapUrl:cdb.common.DatasetUrl;return new b({base_url:this.get("url")})}},{ALL_PRIVACY_OPTIONS:["PUBLIC","LINK","PRIVATE","PASSWORD"]}),cdb.admin.Visualizations=Backbone.Collection.extend({model:cdb.admin.Visualization,_PREVIEW_TABLES_PER_PAGE:10,_TABLES_PER_PAGE:20,_PREVIEW_ITEMS_PER_PAGE:3,_ITEMS_PER_PAGE:9,initialize:function(){var a=new cdb.core.Model({tag_name:"",q:"",page:1,type:"derived",exclude_shared:!1,per_page:this._ITEMS_PER_PAGE});this.sync=Backbone.syncAbort,this.options=_.extend(a,this.options),this.total_entries=0,this.options.bind("change",this._changeOptions,this),this.bind("reset",this._checkPage,this),this.bind("update",this._checkPage,this),this.bind("add",this._fetchAgain,this)},getTotalPages:function(){return Math.ceil(this.total_entries/this.options.get("per_page"))},_checkPage:function(){var a=this.getTotalPages();this.options.get("page")-1;this.options.get("page")>a?this.options.set({page:a+1}):this.options.get("page")<1&&this.options.set({page:1})},_createUrlOptions:function(){return _.compact(_(this.options.attributes).map(function(a,b){return b+"="+encodeURIComponent(a)})).join("&")},url:function(a){var b="";if(this.options.get("deepInsights"))b+="/api/v1/bivisualizations",b+="?page="+this.options.get("page")+"&per_page="+this.options.get("per_page");else{var c=cdb.config.urlVersion("visualizations",a);b+="/api/"+c+"/viz/",b+="?"+this._createUrlOptions()}return b},remove:function(a){this.total_entries--,this.elder("remove",a)},parse:function(a){return this.total_entries=a.total_entries,this.slides&&this.slides.reset(a.children),this.total_shared=a.total_shared,this.total_likes=a.total_likes,this.total_user_entries=a.total_user_entries,_.map(a.visualizations,function(a){return a.bindMap=!1,a})},_changeOptions:function(){},create:function(a){var b=$.Deferred();return Backbone.Collection.prototype.create.call(this,a,{wait:!0,success:function(){b.resolve()},error:function(){b.reject()}}),b.promise()},fetch:function(a){var b=$.Deferred(),c=this;return this.trigger("loading",this),$.when(Backbone.Collection.prototype.fetch.call(this,a)).done(function(a){c.trigger("loaded"),b.resolve()}).fail(function(a){c.trigger("loadFailed"),b.reject(a)}),b.promise()}});var alwaysTrueValidator=function(a){return!0},columnExistsValidator=columnExistsValidatorFor("Column");cdb.admin.FormSchema=cdb.core.Model.extend({validators:{polygon:alwaysTrueValidator,cluster:alwaysTrueValidator,intensity:alwaysTrueValidator,bubble:columnExistsValidator,choropleth:columnExistsValidator,color:columnExistsValidator,category:columnExistsValidator,density:alwaysTrueValidator,torque:columnExistsValidatorFor("Time Column"),torque_cat:columnExistsValidatorFor("Time Column"),torque_heat:columnExistsValidatorFor("Time Column")},initialize:function(){if(this.table=this.get("table"),this.unset("table"),!this.table)throw new Error("table is undefined");var a=this.get("type");if(!a)throw new Error("type is undefined");var b=this.defaultFor(a);if(!b)throw new Error("invalid type: "+a);b.forEach(function(a,b){a.index=b}),this.set(_.object(_.pluck(b,"name"),b),{silent:!0}),this._fillColumns(),this.table.bind("change:schema",function(){var a={};this.table.previous("schema")||(a.silent=!0),this._fillColumns(a),a.silent&&(this._previousAttributes=_.clone(this.attributes))},this)},toJSON:function(){var a=_.values(_.omit(this.attributes,"type"));return a.sort(function(a,b){return a.index-b.index}),a},_fillColumns:function(a){var b=this,c=JSON.parse(JSON.stringify(this.attributes));_.each(c,function(a){for(var c in a.form){var d=a.form[c];if(d.columns){var e=d.columns.split("|"),f=[];d.extra_default&&(f=d.extra_default.slice());for(var g in e){var h=e[g],i=b.table.columnNamesByType(h);if(f=f.concat(_.without(i,"cartodb_id")),d.default_column===h){var j=_.without(i,"cartodb_id","created_at","updated_at");j.length&&(d.value=j[0])}}d.value?_.contains(f,d.value)||(d.value=f[0]):d.value=f[0],d.extra=f}}}),this.set(c,a)},defaultFor:function(a){var b=cdb.admin.forms.get(a)[this.table.geomColumnTypes()[0]||"point"];return b},style:function(a){var b={};return _(this.attributes).each(function(c){a&&!_.contains(a,c)||_(c.form).each(function(a,c){b[c]=a.value})}),b},isValid:function(a){return this.validators[a||"polygon"](this.attributes)},wasValid:function(a){return this.validators[a](this.previousAttributes())},dynamicProperties:function(){var a=[];return _.each(this.attributes,function(b){for(var c in b.form){var d=b.form[c];d.columns&&a.push(b)}}),a},changedDinamycProperty:function(){var a=[],b=this.dynamicProperties();for(var c in b)this.changedAttributes(b[c])&&a.push(b[c]);return a},dinamycProperty:function(a){return _.keys(this.get(a.name).form)[0]},dinamycValues:function(a){var b=this.get(a.name),c=this.dinamycProperty(a);return b.form[c].extra}}),cdb.admin.WizardProperties=cdb.core.Model.extend({initialize:function(){if(this.table=this.get("table"),this.unset("table"),!this.table)throw new Error("table is undefined");if(this.layer=this.get("layer"),this.unset("layer"),!this.layer)throw new Error("layer is undefined");this.forms={},this._savedStates={},this.cartoStylesGeneration=new cdb.admin.CartoStyles(_.extend({},this.layer.get("wizard_properties"),{table:this.table})),this.attributes.properties&&0!==_.keys(this.attributes.properties).length&&this.properties(this.attributes),delete this.attributes.properties,this.cartoStylesGeneration.bind("load",function(){this.trigger("load")},this),this.cartoStylesGeneration.bind("loading",function(){this.trigger("loading")},this),this.table.bind("columnRename",function(a,b){if(!this.isDisabled()){var c={};for(var d in this.attributes)this.get(d)===b&&(c[d]=a);this.set(c)}},this),this.table.bind("change:schema",function(){this.isDisabled()||void 0===this.table.previous("schema")||this.cartoStylesGeneration.regenerate()},this),this.table.bind("change:geometry_types",function(){if(this.table.changedAttributes()){var a=this.table.geometryTypeChanged();a&&this.trigger("change:form");var b=this.table.previous("geometry_types"),c=this.table.geomColumnTypes();return b&&0!==b.length||this.get("type")?c&&0!==c.length?void(b&&0!==b.length&&a&&this.active("polygon",{},{persist:!1})):void(this.table.isInSQLView()||this.unset("type",{silent:!0})):void this.active("polygon")}},this),this.linkLayer(this.layer),this.bindGenerator(),this.bind("change:type",this._updateForm),this.table.bind("change:geometry_types",this._updateForm,this),this._updateForm(),this._fillGenerator({silent:!0})},_updateForm:function(){for(var a in this.forms){var b=this.forms[a];for(var c in b){var d=b[c];d.unbind(null,null,this)}}var e=this.get("type");if(e){var c=this._form(e);c.bind("change",function(){if(c.isValid(this.get("type")))if(c.wasValid(this.get("type"))){var a=this,b=c.changedDinamycProperty(),d=[];if(b.length&&(_.each(b,function(b){var e=c.dinamycProperty(b);a.has(e)&&!_.contains(c.dinamycValues(b),a.get(e))&&d.push(b)}),d.length)){var e=c.style(d);this.set(e)}}else this.isDisabled()||this.active(this.get("type"),null,{persist:!1,restore:!1});else this.active("polygon");this.trigger("change:form")},this)}},_form:function(a,b){var c=this.forms[a]||(this.forms[a]={});return b=b||this.table.geomColumnTypes()[0]||"point",c[b]||(c[b]=new cdb.admin.FormSchema({table:this.table,type:a||"polygon"}),c[b].__geomType=b),c[b]},formData:function(a){var b=this._form(a);return b.toJSON()},defaultStyleForType:function(a){return this._form(a).style()},saveCurrent:function(a,b){var c=a+"_"+b;this._savedStates[c]=_.clone(this.attributes)},getSaved:function(a,b){var c=a+"_"+b;return this._savedStates[c]||{}},active:function(a,b,c){c=_.defaults(c||{},{persist:!0});var d=this.table.geomColumnTypes()[0];if(d){c=_.defaults(c||{},{persist:!0,restore:!0}),"color"===a&&(a="category"),this.get("geometry_type")&&d!==this.get("geometry_type")&&(c.persist=!1);var e=this.defaultStyleForType(a),f=c.persist&&a===this.get("type")?this.attributes:{};_.extend(e,c.restore?this.getSaved(a,d):{},f,b),e.type=a,e.geometry_type=d;var g=this.get("type"),h=this.get("geometry_type");g&&h&&this._form(g,h).isValid(g)&&this.saveCurrent(g,h),this.clear({silent:!0}),this.cartoStylesGeneration.unset("metadata",{silent:!0}),this.cartoStylesGeneration.unset("properties",{silent:!0}),this.enableGeneration(),this.set(e)}},enableGeneration:function(){this.layer.set("tile_style_custom",!1,{silent:!0})},isDisabled:function(){return this.layer.get("tile_style_custom")},properties:function(a){if(!a)return this;var b="color"===a.type?"category":a.type,c=_.extend({type:b},a.properties);return this.set(c)},_fillGenerator:function(a){a=a||{},this.cartoStylesGeneration.set({properties:_.clone(this.attributes),type:this.get("type")},a)},_updateGenerator:function(){var a=this.get("type"),b=this._form(a).isValid(a);this._fillGenerator({silent:!b||this.isDisabled()})},bindGenerator:function(){this.bind("change",this._updateGenerator,this)},unbindGenerator:function(){this.unbind("change",this._updateGenerator,this)},toJSON:function(){return{type:this.get("type"),properties:_.omit(this.attributes,"type","metadata")}},linkLayer:function(a){var b=this;a.bind("change:query",function(){this.isDisabled()||this.cartoStylesGeneration.regenerate()},this);var c=function(c,d,e){e=e||"CartoDB",b.unbindGenerator();var f=b.cartoStylesGeneration.get("metadata");f?b.set("metadata",f):b.unset("metadata"),b.bindGenerator();var g={tile_style:c,type:e,tile_style_custom:!1};d?g.query_wrapper=d.replace(/__wrapped/g,"(<%= sql %>)"):g.query_wrapper=null,g.query_generated=null!==g.query_wrapper,a.isNew()||!a.collection?a.set(g):a.save(g)};this.cartoStylesGeneration.bind("change:style change:sql",function(){var a=this.cartoStylesGeneration.get("style");a&&c(a,this.cartoStylesGeneration.get("sql"),this.get("layer-type"))},this)},unlinkLayer:function(a){this.unbind(null,null,a),a.unbind(null,null,this)},getEnabledWizards:function(){var a={point:["polygon","cluster","choropleth","bubble","density","category","intensity","torque","torque_cat","torque_heat"],line:["polygon","choropleth","category","bubble"],polygon:["polygon","choropleth","category","bubble"]};return a[this.table.geomColumnTypes()[0]||"point"]},propertiesFromStyle:function(a){var b=new cdb.admin.CartoParser,c=b.parse(a);if(!c)return{};var d=c.getDefaultRules();if(b.errors().length)return{};var e={},f=this._getTypeFromCSS(a),g=_.uniq(_.keys(this.attributes).concat(_.keys(this._form(f).style())));if(d){for(var h in g){var i=g[h],j=d[i];if(j){if(j=j.ev(),!carto.tree.Reference.validValue(b.parse_env,j.name,j.value))return{};var k=j.value.ev(this.parse_env);k="color"===k.is?k.toString():"uri"===k.is?"url("+k.toString()+")":k.value,e[i]=k}}return"image-filters"in e&&!e["image-filters"]&&(e["image-filters"]=d["image-filters"].value.value[0].value[0]),e}return{}},_getTypeFromCSS:function(a){return a.indexOf("colorize-alpha")>-1?"torque_heat":a.indexOf("torque-time-attribute")>-1?"torque":this.get("type")},supportsInteractivity:function(){var a=this.get("type");return!_.contains(["torque","cluster","density","torque_cat"],a)}}),cdb.admin.WKT={types:["POINT","LINESTRING","POLYGON","MULTIPOINT","MULTILINESTRING","MULTIPOLYGON"]},cdb.admin.WMSService=Backbone.Model.extend({_PROXY_URL:"//cartodb-wms.global.ssl.fastly.net/api",_PROXY_TILES:"//cartodb-wms.global.ssl.fastly.net/mapproxy",
methodToURL:{read:"/check",create:"/add"},sync:function(a,b,c){return c=c||{},c.url=this.url(a.toLowerCase()),c.dataType="jsonp",a="READ",Backbone.sync.apply(this,arguments)},url:function(a){var b=this._PROXY_URL+this.methodToURL[a],c=this.get("wms_url"),d=document.createElement("a");d.href=c;var e=d.search.substr(1).split("&"),f=_.find(e,function(a){return a.toLowerCase().indexOf("request=getcapabilities")!==-1}),g=_.find(e,function(a){return a.toLowerCase().indexOf("service=wms")!==-1});f||e.push("request=GetCapabilities"),g||e.push("service=WMS"),c+="?"+e.join("&"),b+="?url="+encodeURIComponent(c);var h="wmts"===this.get("type");return b+="&type="+(h?"wmts":"wms"),"create"===a&&(this.get("layer")&&this.get("srs")?(b+="&layer="+this.get("layer"),b+="&srs=EPSG:"+this.get("srs")[0].split(":")[1]):h&&this.get("layer")&&this.get("matrix_sets").length>0&&(b+="&layer="+this.get("layer"),b+="&matrix_set="+cdb.admin.WMSService.supportedMatrixSets(this.get("matrix_sets"))[0])),b},newTileLayer:function(){if(!this.get("mapproxy_id"))throw new Error("mapproxy_id must be set");return new cdb.admin.TileLayer({urlTemplate:this._PROXY_TILES+"/"+this.get("mapproxy_id")+"/wmts/map/webmercator/{z}/{x}/{y}.png",attribution:this.get("attribution")||null,maxZoom:21,minZoom:0,name:this.get("title")||this.get("name"),proxy:!0,bounding_boxes:this.get("bounding_boxes")})}},{SUPPORTED_MATRIX_SETS:["EPSG:4326","EPSG:4258"],supportedMatrixSets:function(a){return _.intersection(a,this.SUPPORTED_MATRIX_SETS)}}),cdb.admin.overlays=cdb.admin.overlays||{},cdb.admin.models.Overlay=cdb.core.Model.extend({defaults:{order:1},sync:Backbone.syncAbort,url:function(a){var b=cdb.config.urlVersion("overlays",a),c="/api/"+b+"/viz/"+this.collection.vis.id+"/overlays";return this.isNew()?c:c+"/"+this.id},_clone:function(a){var b;if(null==a||"object"!=typeof a)return a;if(a instanceof Array){b=[];for(var c=0,d=a.length;c<d;c++)b[c]=this._clone(a[c]);return b}if(a instanceof Object){b={};for(var e in a)a.hasOwnProperty(e)&&(b[e]=this._clone(a[e]));return b}throw new Error("Type not supported")},cloneAttributes:function(){return this._clone(this.attributes)},toJSON:function(){return{template:this.get("template"),order:this.get("order"),type:this.get("type"),options:{x:this.get("x"),y:this.get("y"),device:this.get("device"),display:this.get("display"),style:this.get("style"),extra:this.get("extra")}}},parse:function(a){a.display=a.options.display;var b=a.options;return b&&(b="string"==typeof b?JSON.parse(b):b,_.extend(a,{x:b.x,y:b.y,device:b.device,extra:b.extra,style:b.style,display:b.display})),delete a.options.display,a},clone:function(){return new cdb.admin.models.Overlay(_.omit(_.clone(this.attributes),"id","parent_id"))}}),cdb.admin.Overlays=Backbone.Collection.extend({model:cdb.admin.models.Overlay,url:function(a){var b=cdb.config.urlVersion("overlays",a);return"/api/"+b+"/viz/"+this.vis.get("id")+"/overlays"},comparator:function(a){return a.get("order")},initialize:function(){this._bindOverlays()},_bindOverlays:function(){this.bind("reset",function(){var a=this.filter(function(a){return"header"===a.get("type")});if(a.length){var b=this;this.vis.on("change:name change:description",function(){a[0].set({title:this.get("name"),description:b._getMarkdown(this.get("description"))})},this.vis)}},this)},getOverlaysZIndex:function(a){var b=this.filter(function(b){return b.get("device")===a&&("text"===b.get("type")||"annotation"===b.get("type")||"image"===b.get("type"))});return _.map(b,function(a){return parseInt(a.get("style")["z-index"])})},createOverlayByType:function(a,b){var c={fullscreen:this._createFullScreenOverlay,header:this._createHeaderOverlay,layer_selector:this._createLayerSelectorOverlay,share:this._createShareOverlay,search:this._createSearchOverlay,zoom:this._createZoomOverlay,logo:this._createLogoOverlay},d=c[a];if(d)return d.call(this,b)},_createZoomOverlay:function(){var a={type:"zoom",order:6,display:!0,template:'<a href="#zoom_in" class="zoom_in">+</a> <a href="#zoom_out" class="zoom_out">-</a>',x:20,y:20};this.create(a)},_createLogoOverlay:function(){var a={type:"logo",order:10,display:!0,x:10,y:40};this.create(a)},_createSearchOverlay:function(){var a={type:"search",order:3,display:!0,x:60,y:20};this.create(a)},_createLayerSelectorOverlay:function(){var a={type:"layer_selector",order:4,display:!0,x:212,y:20};this.create(a)},_createShareOverlay:function(){var a={type:"share",order:2,display:!0,x:20,y:20};this.create(a)},_getMarkdown:function(a){return a?$(markdown.toHTML(a)).html():""},_createHeaderOverlay:function(a){var b=this,c=!1,d=!1;"title"===a&&(c=!0),"description"===a&&(d=!0);var e=this.vis.get("description"),f=this.vis.get("name");if(c||"description"!=a||e){var g={type:"header",order:1,display:!0,extra:{title:f,description:e,show_title:c,show_description:d}},h=this.create(g),i=this.vis;this.vis.on("change:name change:description",function(){h.set({title:i.get("name"),description:b._getMarkdown(i.get("description"))})},h),h.bind("destroy",function(){i.unbind(null,null,h)})}},_createFullScreenOverlay:function(){var a={type:"fullscreen",order:7,display:!0,x:20,y:172};this.create(a)}});
//# sourceMappingURL=models.js.map
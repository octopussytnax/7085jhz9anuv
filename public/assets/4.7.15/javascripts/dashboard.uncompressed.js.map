{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "lib/assets/javascripts/cartodb/common/background_polling/background_polling_model.js",
    "lib/assets/javascripts/cartodb/common/background_polling/background_polling_view.js",
    "lib/assets/javascripts/cartodb/common/background_polling/models/analysis_collection.js",
    "lib/assets/javascripts/cartodb/common/background_polling/models/geocoding_model.js",
    "lib/assets/javascripts/cartodb/common/background_polling/models/geocoding_model_poller.js",
    "lib/assets/javascripts/cartodb/common/background_polling/models/geocodings_collection.js",
    "lib/assets/javascripts/cartodb/common/background_polling/models/import_model.js",
    "lib/assets/javascripts/cartodb/common/background_polling/models/import_model_poller.js",
    "lib/assets/javascripts/cartodb/common/background_polling/models/imports_collection.js",
    "lib/assets/javascripts/cartodb/common/background_polling/models/imports_model.js",
    "lib/assets/javascripts/cartodb/common/background_polling/models/pecan_model.js",
    "lib/assets/javascripts/cartodb/common/background_polling/models/poller.js",
    "lib/assets/javascripts/cartodb/common/background_polling/models/upload_config.js",
    "lib/assets/javascripts/cartodb/common/background_polling/models/upload_model.js",
    "lib/assets/javascripts/cartodb/common/background_polling/views/analysis/background_analysis_item_view.js",
    "lib/assets/javascripts/cartodb/common/background_polling/views/background_polling_header_title_view.js",
    "lib/assets/javascripts/cartodb/common/background_polling/views/background_polling_header_view.js",
    "lib/assets/javascripts/cartodb/common/background_polling/views/geocodings/background_geocoding_item_view.js",
    "lib/assets/javascripts/cartodb/common/background_polling/views/geocodings/geocoding_result_details_view.js",
    "lib/assets/javascripts/cartodb/common/background_polling/views/imports/background_import_item_view.js",
    "lib/assets/javascripts/cartodb/common/background_polling/views/imports/background_import_limit_view.js",
    "lib/assets/javascripts/cartodb/common/background_polling/views/imports/twitter_import_details_view.js",
    "lib/assets/javascripts/cartodb/common/batch_process_items.js",
    "lib/assets/javascripts/cartodb/common/dialogs/change_lock/change_lock_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/change_lock/change_lock_view_model.js",
    "lib/assets/javascripts/cartodb/common/dialogs/change_privacy/change_privacy_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/change_privacy/option_model.js",
    "lib/assets/javascripts/cartodb/common/dialogs/change_privacy/options_collection.js",
    "lib/assets/javascripts/cartodb/common/dialogs/change_privacy/password_option_model.js",
    "lib/assets/javascripts/cartodb/common/dialogs/change_privacy/share/grantables_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/change_privacy/share/group_details_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/change_privacy/share/permission_toggler_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/change_privacy/share/permission_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/change_privacy/share/share_model.js",
    "lib/assets/javascripts/cartodb/common/dialogs/change_privacy/share/share_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/change_privacy/share/user_details_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/change_privacy/start_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/create_content.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/create_dataset_model.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/create_footer.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/create_header.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/create_listing.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/create_loading.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/create_map_model.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/create_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/footer/guessing_toggler_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/footer/privacy_toggler_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/datasets/content_result_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/datasets/dataset_item_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/datasets/datasets_paginator_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/datasets/remote_dataset_item_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/datasets_list_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/datasets_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/import_options.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/data_import/data_form_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/data_import/data_header_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/import_arcgis_selected_dataset_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/import_arcgis_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/import_data_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/import_default_fallback_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/import_default_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/import_selected_dataset_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/service_import/import_service_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/service_import/service_header_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/service_import/service_item_description_format.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/service_import/service_item_model.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/service_import/service_items_collection.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/service_import/service_list_item_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/service_import/service_list_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/service_import/service_loader_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/twitter_import/credits_info_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/twitter_import/credits_usage_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/twitter_import/import_twitter_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/twitter_import/twitter_categories/twitter_categories_collection.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/twitter_import/twitter_categories/twitter_categories_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/twitter_import/twitter_categories/twitter_category_model.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/twitter_import/twitter_categories/twitter_category_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/create/listing/navigation_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/delete_items_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/delete_items_view_model.js",
    "lib/assets/javascripts/cartodb/common/dialogs/duplicate_vis_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/pecan/pecan_card.js",
    "lib/assets/javascripts/cartodb/common/dialogs/pecan/pecan_dialog_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/sync_dataset/interval_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/sync_dataset/sync_dataset_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/video_tutorial/video_tutorial_footer_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/video_tutorial/video_tutorial_header_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/video_tutorial/video_tutorial_item_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/video_tutorial/video_tutorial_list_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/video_tutorial/video_tutorial_model.js",
    "lib/assets/javascripts/cartodb/common/dialogs/video_tutorial/video_tutorial_preview_view.js",
    "lib/assets/javascripts/cartodb/common/dialogs/video_tutorial/video_tutorial_view.js",
    "lib/assets/javascripts/cartodb/common/forms/spinner.js",
    "lib/assets/javascripts/cartodb/common/local_storage.js",
    "lib/assets/javascripts/cartodb/common/mamufas_import/mamufas_import_dialog_view.js",
    "lib/assets/javascripts/cartodb/common/mamufas_import/mamufas_import_view.js",
    "lib/assets/javascripts/cartodb/common/map_templates.js",
    "lib/assets/javascripts/cartodb/common/paged_search_model.js",
    "lib/assets/javascripts/cartodb/common/router.js",
    "lib/assets/javascripts/cartodb/common/scroll/scroll-view.js",
    "lib/assets/javascripts/cartodb/common/scroll/scroll.tpl",
    "lib/assets/javascripts/cartodb/common/service_models/service_oauth_model.js",
    "lib/assets/javascripts/cartodb/common/service_models/service_token_model.js",
    "lib/assets/javascripts/cartodb/common/support_view.js",
    "lib/assets/javascripts/cartodb/common/user_notification/user_notification_model.js",
    "lib/assets/javascripts/cartodb/common/user_notification/user_notification_view.js",
    "lib/assets/javascripts/cartodb/common/view_factory.js",
    "lib/assets/javascripts/cartodb/common/view_helpers/bytes_to_size.js",
    "lib/assets/javascripts/cartodb/common/view_helpers/navigate_through_router.js",
    "lib/assets/javascripts/cartodb/common/view_helpers/pluralize_string.js",
    "lib/assets/javascripts/cartodb/common/view_helpers/random_quote.js",
    "lib/assets/javascripts/cartodb/common/views/base_dialog/view.js",
    "lib/assets/javascripts/cartodb/common/views/create_default_fallback_map.js",
    "lib/assets/javascripts/cartodb/common/views/dashboard_header/breadcrumbs/dropdown_view.js",
    "lib/assets/javascripts/cartodb/common/views/dashboard_header/notifications/collection.js",
    "lib/assets/javascripts/cartodb/common/views/dashboard_header/notifications/dropdown_view.js",
    "lib/assets/javascripts/cartodb/common/views/dashboard_header/notifications/model.js",
    "lib/assets/javascripts/cartodb/common/views/dashboard_header/notifications/organization-model.js",
    "lib/assets/javascripts/cartodb/common/views/dashboard_header/notifications/view.js",
    "lib/assets/javascripts/cartodb/common/views/dashboard_header/settings_dropdown_view.js",
    "lib/assets/javascripts/cartodb/common/views/dashboard_header/user_support_view.js",
    "lib/assets/javascripts/cartodb/common/views/dashboard_header_view.js",
    "lib/assets/javascripts/cartodb/common/views/date_pickers/dates_range_picker.js",
    "lib/assets/javascripts/cartodb/common/views/error_details_view.js",
    "lib/assets/javascripts/cartodb/common/views/likes/view.js",
    "lib/assets/javascripts/cartodb/common/views/mapcard_preview.js",
    "lib/assets/javascripts/cartodb/common/views/paged_search/paged_search_view.js",
    "lib/assets/javascripts/cartodb/common/views/pagination/model.js",
    "lib/assets/javascripts/cartodb/common/views/pagination/view.js",
    "lib/assets/javascripts/cartodb/common/views/warnings_details_view.js",
    "lib/assets/javascripts/cartodb/common/visualizations_fetch_model.js",
    "lib/assets/javascripts/cartodb/dashboard/background_polling_model.js",
    "lib/assets/javascripts/cartodb/dashboard/content_controller_view.js",
    "lib/assets/javascripts/cartodb/dashboard/content_footer/view.js",
    "lib/assets/javascripts/cartodb/dashboard/content_result_view.js",
    "lib/assets/javascripts/cartodb/dashboard/datasets/datasets_item.js",
    "lib/assets/javascripts/cartodb/dashboard/datasets/loading_library_view.js",
    "lib/assets/javascripts/cartodb/dashboard/datasets/remote_datasets_item.js",
    "lib/assets/javascripts/cartodb/dashboard/editable_fields/editable_description.js",
    "lib/assets/javascripts/cartodb/dashboard/editable_fields/editable_tags.js",
    "lib/assets/javascripts/cartodb/dashboard/entry.js",
    "lib/assets/javascripts/cartodb/dashboard/filters_view.js",
    "lib/assets/javascripts/cartodb/dashboard/header_view_model.js",
    "lib/assets/javascripts/cartodb/dashboard/list_view.js",
    "lib/assets/javascripts/cartodb/dashboard/main_view.js",
    "lib/assets/javascripts/cartodb/dashboard/maps/deep_insights_item.js",
    "lib/assets/javascripts/cartodb/dashboard/maps/maps_item.js",
    "lib/assets/javascripts/cartodb/dashboard/maps/placeholder_item_view.js",
    "lib/assets/javascripts/cartodb/dashboard/mapviews_graph.js",
    "lib/assets/javascripts/cartodb/dashboard/onboarding_view.js",
    "lib/assets/javascripts/cartodb/dashboard/router.js",
    "lib/assets/javascripts/cartodb/dashboard/router/current_url_model.js",
    "node_modules/cartodb-pecan/src/cartocss.js",
    "node_modules/cartodb-pecan/src/cartocss/color-ramps.js",
    "node_modules/cartodb-pecan/src/cartocss/get-default-css-for-geometry-type.js",
    "node_modules/cartodb-pecan/src/cartocss/get-geo-attr.js",
    "node_modules/cartodb-pecan/src/deep-defaults.js",
    "node_modules/cartodb-pecan/src/get-method-properties.js",
    "node_modules/cartodb-pecan/src/get-weight-from-shape.js",
    "node_modules/cartodb-pecan/src/guess-map.js",
    "node_modules/cartodb-pecan/src/has-enough-to-guess.js",
    "node_modules/cartodb-pecan/src/pecan.js",
    "node_modules/perfect-scrollbar/index.js",
    "node_modules/perfect-scrollbar/src/js/lib/class.js",
    "node_modules/perfect-scrollbar/src/js/lib/dom.js",
    "node_modules/perfect-scrollbar/src/js/lib/event-manager.js",
    "node_modules/perfect-scrollbar/src/js/lib/guid.js",
    "node_modules/perfect-scrollbar/src/js/lib/helper.js",
    "node_modules/perfect-scrollbar/src/js/main.js",
    "node_modules/perfect-scrollbar/src/js/plugin/autoupdate.js",
    "node_modules/perfect-scrollbar/src/js/plugin/default-setting.js",
    "node_modules/perfect-scrollbar/src/js/plugin/destroy.js",
    "node_modules/perfect-scrollbar/src/js/plugin/handler/click-rail.js",
    "node_modules/perfect-scrollbar/src/js/plugin/handler/drag-scrollbar.js",
    "node_modules/perfect-scrollbar/src/js/plugin/handler/keyboard.js",
    "node_modules/perfect-scrollbar/src/js/plugin/handler/mouse-wheel.js",
    "node_modules/perfect-scrollbar/src/js/plugin/handler/native-scroll.js",
    "node_modules/perfect-scrollbar/src/js/plugin/handler/selection.js",
    "node_modules/perfect-scrollbar/src/js/plugin/handler/touch.js",
    "node_modules/perfect-scrollbar/src/js/plugin/initialize.js",
    "node_modules/perfect-scrollbar/src/js/plugin/instances.js",
    "node_modules/perfect-scrollbar/src/js/plugin/resizer.js",
    "node_modules/perfect-scrollbar/src/js/plugin/update-geometry.js",
    "node_modules/perfect-scrollbar/src/js/plugin/update-scroll.js",
    "node_modules/perfect-scrollbar/src/js/plugin/update.js",
    "node_modules/queue-async/build/queue.js",
    "node_modules/underscore/underscore.js"
  ],
  "names": [],
  "mappingslhtznlFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjrPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC5IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvzlrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACzpntnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AChthTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACnzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACxHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACnvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACzvNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACrtIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACpxrMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACjjjJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACtnjljlbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACtxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACzvvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACjnhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChlxnTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACxlHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AChplJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACnvMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACtvHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACnhjezhLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACrzllzxKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnnJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvvfnxfjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrz
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar ImportsCollection = require('./models/imports_collection');\nvar GeocodingsCollection = require('./models/geocodings_collection');\nvar AnalysisCollection = require('./models/analysis_collection');\nvar pollingsTimer = 3000;\n\n/**\n *  Background polling default model\n *\n */\n\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    showGeocodingDatasetURLButton: false,\n    showSuccessDetailsButton: true,\n    geocodingsPolling: false, // enable geocodings polling\n    importsPolling: false // enable imports polling\n  },\n\n  initialize: function(attrs, opts) {\n    this.user = opts.user;\n    this.vis = opts.vis;\n    this.importsCollection = opts.importsCollection || new ImportsCollection(null, { user: this.user });\n    this.geocodingsCollection = opts.geocodingsCollection || new GeocodingsCollection(null, { user: this.user, vis: this.vis });\n    this.analysisCollection = opts.anaylysisCollection || new AnalysisCollection(null, { user: this.user });\n    this._initBinds();\n    this.startPollings();\n  },\n\n  _initBinds: function() {\n    this.importsCollection.bind('change:state', function(mdl) {\n      this.trigger('change', mdl, this);\n      this._onImportsStateChange(mdl)\n    }, this);\n    this.importsCollection.bind('remove', function(mdl) {\n      this.trigger('importRemoved', mdl, this);\n    }, this);\n    this.importsCollection.bind('add', function(mdl) {\n      this.trigger('importAdded', mdl, this);\n    }, this);\n\n    this.geocodingsCollection.bind('change:state', function(mdl) {\n      this.trigger('change', mdl, this);\n      this._onGeocodingsStateChange(mdl);\n    }, this);\n    this.geocodingsCollection.bind('remove', function(mdl) {\n      this.trigger('geocodingRemoved', mdl, this);\n    }, this);\n    this.geocodingsCollection.bind('add', function(mdl) {\n      this.trigger('geocodingAdded', mdl, this);\n    }, this);\n\n    this.analysisCollection.bind('reset', function() {\n      if (this.analysisCollection.size() > 0) {\n        this.trigger('analysisAdded', this.analysisCollection, this);\n      } else {\n        this.trigger('analysisRemoved', this.analysisCollection, this);  \n      }\n    }, this); \n\n    this.analysisCollection.bind('change:state', function(mdl) {\n      this._onAnalysisStateChange(mdl, this.analysisCollection);\n    }, this);\n  },\n\n  // Helper functions\n\n  getTotalFailedItems: function() {\n    return this.importsCollection.failedItems().length + this.geocodingsCollection.failedItems().length;\n  },\n\n  removeImportItem: function(mdl) {\n    if (!mdl) {\n      return false;\n    }\n    this.importsCollection.remove(mdl);\n  },\n\n  addImportItem: function(mdl) {\n    if (!mdl) {\n      return false;\n    }\n    this.importsCollection.add(mdl);\n  },\n\n  removeGeocodingItem: function(mdl) {\n    if (!mdl || !this.canAddImport()) {\n      return false;\n    }\n    this.geocodingsCollection.remove(mdl);\n  },\n\n  addGeocodingItem: function(mdl) {\n    if (!mdl || !this.canAddGeocoding()) {\n      return false;\n    }\n    this.geocodingsCollection.add(mdl);\n  },\n\n  removeAnalysis: function() {\n    this.analysisCollection.destroyCheck();\n    this.analysisCollection.reset();\n  },\n\n  addAnalysis: function(array) {\n    if (!array || !this.canAddAnalysis()) {\n      return false;\n    }\n    this.analysisCollection.reset(array);\n  },\n\n  canAddImport: function() {\n    return this.importsCollection.canImport();\n  },\n\n  canAddGeocoding: function() {\n    return this.geocodingsCollection.canGeocode();\n  },\n\n  canAddAnalysis: function() {\n    return this.analysisCollection.canStartPecan();\n  },\n\n  getTotalImports: function() {\n    return this.importsCollection.size();\n  },\n\n  getTotalGeocodings: function() {\n    return this.geocodingsCollection.size();\n  },\n\n  getTotalAnalysis: function() {\n    return this.analysisCollection.size() > 0 ? 1 : 0;\n  },\n\n  getTotalPollings: function() {\n    return this.importsCollection.size() + this.geocodingsCollection.size() + ( this.analysisCollection.isAnalyzing() ? 1 : 0 );\n  },\n\n  stopPollings: function() {\n    if (this.get('geocodingsPolling')) {\n      this.geocodingsCollection.destroyCheck();\n    }\n    if (this.get('importsPolling')) {\n      this.importsCollection.destroyCheck();\n    }\n  },\n\n  startPollings: function() {\n    var self = this;\n    // Don't start pollings inmediately, \n    // wait some seconds\n    setTimeout(function() {\n      if (self.get('geocodingsPolling')) {\n        self.geocodingsCollection.pollCheck();\n      }\n      if (self.get('importsPolling')) {\n        self.importsCollection.pollCheck();\n      }  \n    }, pollingsTimer);\n  },\n\n  // onChange functions\n  _onImportsStateChange: function() {},\n\n  _onGeocodingsStateChange: function() {},\n\n  _onAnalysisStateChange: function() {},\n\n  clean: function() {\n    this.importsCollection.unbind(null, null, this);\n    this.geocodingsCollection.unbind(null, null, this);\n    this.analysisCollection.unbind(null, null, this);\n    this.elder('clean');\n  }\n\n});\n",
    "var $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar ImportItemView = require('./views/imports/background_import_item_view');\nvar AnalysisItemView = require('./views/analysis/background_analysis_item_view');\nvar GeocodingItemView = require('./views/geocodings/background_geocoding_item_view');\nvar ImportLimitItemView = require('./views/imports/background_import_limit_view');\nvar ImportsModel = require('./models/imports_model');\nvar GeocodingModel = require('./models/geocoding_model');\nvar BackgroundPollingModel = require('./background_polling_model');\nvar BackgroundPollingHeaderView = require('./views/background_polling_header_view');\n\n/**\n *  Background polling view\n *\n *  It will pool all polling operations that happens\n *  in Cartodb, as in imports and geocodings\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'BackgroundPolling',\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.createVis = this.options.createVis;\n    this.vis = this.options.vis;\n    if (!this.model) {\n      this.model = new BackgroundPollingModel({}, {\n        user: this.user\n      });\n    }\n    this.template = cdb.templates.getTemplate('common/background_polling/background_polling');\n    this._initBinds();\n  },\n\n  render: function() {\n    this.$el.html(this.template());\n    this._initViews();\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('importAdded', this._addImport, this);\n    this.model.bind('geocodingAdded', this._addGeocoding, this);\n    this.model.bind('analysisAdded', this._addAnalysis, this);\n    this.model.bind('analysisAdded analysisRemoved importAdded importRemoved geocodingAdded geocodingRemoved', this._checkPollingsSize, this);\n    cdb.god.bind('importByUploadData', this._addDataset, this);\n    cdb.god.bind('fileDropped', this._onDroppedFile, this);\n    this.add_related_model(cdb.god);\n  },\n\n  _initViews: function() {\n    var backgroundPollingHeaderView = new BackgroundPollingHeaderView({\n      model: this.model\n    });\n\n    this.$el.prepend(backgroundPollingHeaderView.render().el);\n    this.addView(backgroundPollingHeaderView);\n  },\n\n  _checkPollingsSize: function() {\n    if (this.model.getTotalPollings() > 0) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  },\n\n  _addAnalysis: function(collection) {\n\n    if (this._analysisItem) {\n      this._analysisItem.clean();\n    }\n\n    this._analysisItem = new AnalysisItemView({\n      collection: collection,\n      vis: this.vis,\n      user: this.user\n    });\n\n    this._analysisItem.bind('remove', function(mdl) {\n      this.model.removeAnalysis();\n    }, this);\n\n    this.$('.js-list').prepend(this._analysisItem.render().el);\n    this.addView(this._analysisItem);\n  },\n\n  _addGeocoding: function(mdl) {\n    var geocodingItem = new GeocodingItemView({\n      showGeocodingDatasetURLButton: this.model.get('showGeocodingDatasetURLButton'),\n      model: mdl,\n      user: this.user\n    });\n\n    geocodingItem.bind('remove', function(mdl) {\n      this.model.removeGeocodingItem(mdl);\n    }, this);\n\n    this.$('.js-list').prepend(geocodingItem.render().el);\n    this.addView(geocodingItem);\n\n    // Enable pollings again\n    this.enable();\n  },\n\n  _addImport: function(m) {\n    var importItem = new ImportItemView({\n      showSuccessDetailsButton: this.model.get('showSuccessDetailsButton'),\n      model: m,\n      user: this.user\n    });\n\n    importItem.bind('remove', function(mdl) {\n      this.model.removeImportItem(mdl);\n    }, this);\n\n    this.$('.js-list').prepend(importItem.render().el);\n    this.addView(importItem);\n\n    this.enable();\n  },\n\n  _addDataset: function(d) {\n    if (d) {\n      this._addImportsItem(d);\n    }\n  },\n\n  _onDroppedFile: function(files) {\n    if (files) {\n      this._addImportsItem({\n        type: 'file',\n        value: files,\n        create_vis: this.createVis\n      });\n    }\n  },\n\n  _addImportsItem: function(uploadData) {\n    if (this.model.canAddImport()) {\n      this._removeLimitItem();\n    } else {\n      this._addLimitItem();\n      return false;\n    }\n\n    var imp = new ImportsModel({}, {\n      upload: uploadData,\n      user: this.user\n    });\n    this.model.addImportItem(imp);\n  },\n\n  // Limits view\n\n  _addLimitItem: function() {\n    if (!this._importLimit) {\n      var v = new ImportLimitItemView({\n        user: this.user\n      });\n      this.$('.js-list').prepend(v.render().el);\n      this.addView(v);\n      this._importLimit = v;\n    }\n  },\n\n  _removeLimitItem: function() {\n    var v = this._importLimit;\n    if (v) {\n      v.clean();\n      this.removeView(v);\n      delete this._importLimit;\n    }\n  },\n\n  // Enable background polling checking\n  // ongoing imports\n  enable: function() {\n    this.model.startPollings();\n  },\n\n  // Disable/stop background pollings\n  disable: function() {\n    this.model.stopPollings();\n  },\n\n  show: function() {\n    this.$el.addClass('is-visible');\n  },\n\n  hide: function() {\n    this.$el.removeClass('is-visible');\n  },\n\n  clean: function() {\n    this.disable();\n    this.elder('clean');\n  }\n\n});\n",
    "var Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar Pecan = require('cartodb-pecan');\nvar PecanModel = require('./pecan_model');\nvar batchAnalysisCount = 5;\n\n/**\n *  Analysis collection\n *\n *  - Get the stats of the current layer\n *\n */\n\nmodule.exports = Backbone.Collection.extend({\n\n  model: PecanModel,\n\n  initialize: function(mdls, opts) {\n    this.user = opts.user;\n    this._initBinds();\n  },\n\n  _initBinds: function() {\n    this.bind('reset', this.pollCheck, this);\n  },\n\n  // Public methods\n\n  canStartPecan: function() {\n    return this.getTotalAnalysis() === this.getCompletedAnalysis()\n  },\n\n  pollCheck: function() {\n    if (this._nextAnalysisItems) {\n      _.each(this._nextAnalysisItems, function(mdl) {\n        mdl.unbind(null, null, this);\n      }, this);\n    }\n\n    var idleItems = _.first(this.where({ state: 'idle' }),batchAnalysisCount);\n\n    if (idleItems.length > 0) {\n      this._nextAnalysisItems = idleItems;\n\n      _.each(this._nextAnalysisItems, function(mdl) {\n        if (this.user.featureEnabled('pecan_debugging')) {\n          mdl.bind('print_stats', function(stats) {\n            this._printStats(stats);\n          }, this);\n        }\n        mdl.bind('change:state', function(mdl, state) {\n          if (mdl.isAnalyzed()) {\n            var arePendingAnalysis = _.find(this._nextAnalysisItems, function(analysis) {\n              return !analysis.isAnalyzed()\n            });\n            if (!arePendingAnalysis) {\n              this.pollCheck();\n            }\n          }\n        }, this);\n        mdl.getData();\n      }, this);\n    }\n  },\n\n  _printStats: function(stats) {\n    var name        = stats.column;\n    var type        = stats.type;\n    var weight      = stats.weight;\n    var skew        = stats.skew;\n    var distinct    = stats.distinct;\n    var count       = stats.count;\n    var null_ratio  = stats.null_ratio;\n    var dist_type   = stats.dist_type;\n    var calc_weight = (weight + Pecan.getWeightFromShape(dist_type)) / 2;\n\n    var distinctPercentage = (distinct / count) * 100;\n\n    cdb.log.info(\"%cAnalyzing %c\" + name, \"text-decoration:underline; font-weight:bold\", \"text-decoration:underline; font-weight:normal\");\n\n    cdb.log.info('%c · %ctype%c = ' + type, 'color:#666;', 'color: #666; font-weight:bold;', \"color: #666; font-weight:normal\");\n    cdb.log.info('%c · %cdistinctPercentage%c = ' + distinctPercentage, 'color:#666;', 'color: #666; font-weight:bold;', \"color: #666; font-weight:normal\");\n    cdb.log.info('%c · %ccount%c = ' + count, 'color:#666;', 'color: #666; font-weight:bold;', 'color: #666; font-weight:normal;');\n    cdb.log.info('%c · %cnull ratio%c = ' + null_ratio, 'color:#666;', 'color: #666; font-weight:bold;', 'color: #666; font-weight:normal;');\n\n    if (dist_type) {\n      cdb.log.info('%c · %cdist_type%c = ' + dist_type, 'color:#666;', 'color: #666; font-weight:bold;', 'color: #666; font-weight:normal;');\n      cdb.log.info('%c · %ccalc_weight%c = ' + calc_weight, 'color:#666;', 'color: #666; font-weight:bold;', 'color: #666; font-weight:normal;');\n    }\n\n    if (skew) {\n      cdb.log.info(\"%c · %cskew%c: \" + skew.toFixed(2), \"color:#666;\", 'color: #666; font-weight:bold;', 'color: #666; font-weight:normal;');\n    }\n\n    if (weight) {\n      cdb.log.info(\"%c · %cweight%c: \" + weight.toFixed(2), \"color: #666;\", \"color:#666; font-weight:bold;\", \"color:#666;font-weight:normal\");\n    }\n\n    if (stats.density) {\n      cdb.log.info(\"%c · %cdensity%c: \" + stats.density, \"color:#666;\", 'color: #666; font-weight:bold;', 'color: #666; font-weight:normal;');\n    }\n\n  },\n\n  destroyCheck: function() {\n    var items = this.where({ state: 'idle' });\n    this.remove(items);\n  },\n\n  failedItems: function() {},\n\n  getTotalAnalysis: function() {\n    return this.size();\n  },\n\n  getSuccessfullyAnalysedColumns: function() {\n    return this.where({ success: true }).length;\n  },\n\n  getCompletedAnalysis: function() {\n    return this.where({ state: 'analyzed' }).length;\n  },\n\n  isAnalyzing: function() {\n    return this.getCompletedAnalysis() !== this.getTotalAnalysis();\n  }\n\n});\n",
    "var Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar GeocodingModelPoller = require('./geocoding_model_poller');\n\n/**\n *  Geocoding model\n *\n */\nmodule.exports = cdb.core.Model.extend({\n\n  options: {\n    startPollingAutomatically: true\n  },\n\n  defaults: {\n    kind: '',\n    formatter: '',\n    table_name: '',\n    state: ''\n  },\n\n  url: function(method) {\n    var version = cdb.config.urlVersion('geocoding', method);\n\n    var base = '/api/' + version + '/geocodings/';\n    if (this.isNew()) {\n      return base;\n    }\n    return base + this.id;\n  },\n\n  setUrlRoot: function(urlRoot) {\n    this.urlRoot = urlRoot;\n  },\n\n  initialize: function(opts) {\n    var self = this;\n    this._initBinds();\n    _.extend(this.options, opts);\n    this.poller = new GeocodingModelPoller(this);\n    if (this.options.startPollingAutomatically) {\n      this._checkModel();\n    };\n  },\n\n  _initBinds: function() {\n    this.bind('change:id', this._checkModel, this);\n  },\n\n  _checkModel: function() {\n    var self = this;\n\n    if (this.get('id')) {\n      this.pollCheck();\n    } else {\n      this._saveModel();\n    }\n  },\n\n  _saveModel: function() {\n    var self = this;\n    if (this.isNew()) {\n      this.save({}, {\n        error: function() {\n          self.set({\n            state: 'failed',\n            error: {\n              title: 'Oops, there was a problem',\n              description: 'Unfortunately there was an error starting the geocoder'\n            }\n          });\n        }\n      });\n    }\n  },\n\n  pollCheck: function() {\n    this.poller.start();\n  },\n\n  destroyCheck: function() {\n    this.poller.stop();\n  },\n\n  getError: function() {\n    return this.get('error');\n  },\n\n  hasFailed: function() {\n    var state = this.get('state');\n    return state === \"failed\" || state === \"reset\" || state === \"cancelled\"\n  },\n\n  hasCompleted: function() {\n    return this.get('state') === \"finished\"\n  },\n\n  isOngoing: function() {\n    return !this.hasCompleted() && !this.hasFailed()\n  },\n\n  cancelGeocoding: function() {\n    this.save({ state: 'cancelled' }, { wait:true });\n  },\n\n  resetGeocoding: function() {\n    this.set('state', 'reset');\n  }\n});\n",
    "var Poller = require('./poller');\n\nvar GeocodingModelPoller = function(model) {\n\n  var POLLING_INTERVAL = 2000;\n\n  var options = {\n    interval: POLLING_INTERVAL,\n    stopWhen: function(model) {\n      return model.hasFailed() || model.hasCompleted();\n    },\n    error: function(model) {\n      model.trigger(\"change\");\n    }\n  };\n\n  Poller.call(this, model, options);\n};\n\nGeocodingModelPoller.prototype = _.extend({}, Poller.prototype);\n\nmodule.exports = GeocodingModelPoller;\n",
    "var Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar pollTimer = 60000;\nvar GeocodingModel = require('./geocoding_model');\n\n/**\n *  Geocodings collection\n *\n *  - Check ongoing geocodings in order to add them\n *  to the collection.\n *\n */\n\nmodule.exports = Backbone.Collection.extend({\n\n  model: GeocodingModel,\n\n  url: function(method) {\n    var version = cdb.config.urlVersion('geocoding', method);\n    return '/api/' + version + '/geocodings';\n  },\n\n  initialize: function(mdls, opts) {\n    this.user = opts.user; \n    this.vis = opts.vis;\n  },\n\n  parse: function(r) {\n    var self = this;\n\n    _.each(r.geocodings, function(data) {\n\n      // Check if that geocoding exists...\n      var geocodings = self.filter(\n        function(mdl) {\n          return mdl.get('id') === data.id\n        }\n      );\n\n      if (geocodings.length === 0) {\n        self._checkOngoingGeocoding(\n          new GeocodingModel(data, { startPollingAutomatically: false })\n        )\n      }\n    });\n\n    return this.models\n  },\n\n  _checkOngoingGeocoding: function(mdl) {\n    if (!this.vis) {\n      // If there is NOT a vis, let's start polling\n      // this geocoding model\n      this.add(mdl);\n      mdl.pollCheck();\n    } else {\n      var self = this;\n      // If there is a vis, let's check if that\n      // geocoding belongs to the visualization\n      this.vis.map.layers.each(function(lyr) {\n        if (lyr.table && lyr.table.id === mdl.get('table_name')) {\n          self.add(mdl);\n          mdl.pollCheck();\n        }\n      })\n    }\n  },\n\n  // Public methods\n\n  canGeocode: function() {\n    return !this.any(function(m) {\n      return m.isOngoing();\n    });\n  },\n\n  fetchGeocodings: function() {\n    var self = this;\n    this.fetch({\n      error: function(e) {\n        self.destroyCheck();\n      }\n    });\n  },\n\n  pollCheck: function(i) {\n    if (this.pollTimer) return;\n\n    var self = this;\n    this.pollTimer = setInterval(function() {\n      self.fetchGeocodings();\n    }, pollTimer);\n\n    this.fetchGeocodings();\n  },\n\n  destroyCheck: function() {\n    clearInterval(this.pollTimer);\n    delete this.pollTimer;\n  },\n\n  failedItems: function() {\n    return this.filter(function(item) {\n      return item.hasFailed();\n    });\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar cdbAdmin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar ImportModelPoller = require('./import_model_poller');\n\n/**\n *  New import model that controls\n *  the state of an import\n *\n */\nmodule.exports = cdb.core.Model.extend({\n\n  url: function(method) {\n    var version = cdb.config.urlVersion('import', method);\n    var base = '/api/' + version + '/imports';\n\n    if (this.isNew()) {\n      return base;\n    }\n    return base + '/' + this.id;\n  },\n\n  idAttribute: 'item_queue_id',\n\n  initialize: function() {\n    this._initBinds();\n    this.poller = new ImportModelPoller(this);\n  },\n\n  _initBinds: function() {\n    this.bind('change:item_queue_id', this._checkQueueId, this);\n  },\n\n  createImport: function(data) {\n    var d = this._prepareData(data);\n    this[d.interval === 0 ? '_createRegularImport' : '_createSyncImport'](d);\n  },\n\n  _checkQueueId: function() {\n    if (this.get('item_queue_id')) {\n      this.pollCheck();\n    }\n  },\n\n  _prepareData: function(data) {\n    var d = {\n      create_vis: data.create_vis,\n      privacy: data.privacy\n    };\n\n    var type = data.type;\n\n    if (type !== 'remote') {\n      _.extend(d, {\n        type_guessing: data.type_guessing,\n        content_guessing: data.content_guessing,\n        interval: data.interval\n      });\n    }\n\n    var service = data.service_name;\n\n    // Url?\n    if (type === \"url\") {\n      _.extend(d, {\n        url: data.value\n      });\n    }\n\n    // Remote?\n    if (type === \"remote\") {\n      _.extend(d, {\n        type: \"remote\",\n        interval: null,\n        remote_visualization_id: data.remote_visualization_id,\n        create_vis: false,\n        value: data.value\n      });\n    }\n\n    // SQL?\n    if (type === \"sql\") {\n      _.extend(d, {\n        table_name: data.table_name,\n        sql: data.value\n      });\n    }\n\n    // Duplicate?\n    if (type === \"duplication\") {\n      _.extend(d, {\n        table_name: data.table_name,\n        table_copy: data.value\n      });\n    }\n\n    // Service?\n    if (type === \"service\") {\n      // If service is Twitter, service_item_id should be\n      // sent stringified\n      var service_item_id = (service === \"twitter_search\")\n          ? JSON.stringify(data.service_item_id)\n          : data.service_item_id;\n\n      // User defined limits?\n      if (data.user_defined_limits) {\n        d.user_defined_limits = data.user_defined_limits;\n      }\n\n      _.extend(d, {\n        value:            data.value,\n        service_name:     data.service_name,\n        service_item_id:  service_item_id\n      });\n    }\n\n    return d;\n  },\n\n  _createSyncImport: function(d) {\n    var self = this;\n    // Create synchronization model\n    var sync = new cdbAdmin.TableSynchronization(d);\n\n    sync.save(null, {\n      success: function(m) {\n        self.set('item_queue_id', m.get('data_import').item_queue_id);\n      },\n      error: function(mdl, r, opts) {\n        self._setErrorState(r);\n      }\n    });\n  },\n\n  _createRegularImport: function(d) {\n    var self = this;\n\n    this.save(d, {\n      error: function(mdl, r, opts) {\n        self._setErrorState(r);\n      }\n    });\n  },\n\n  _setErrorState: function(r) {\n    var msg;\n    try {\n      msg = r && JSON.parse(r.responseText).errors.imports;\n    } catch(err) {\n      // e.g. if responseText is empty (seems to happen when server is down/offline)\n      msg = 'Unfortunately there was an error starting the import';\n    }\n    this.set({\n      state: 'failure',\n      get_error_text: {\n        title: 'There was an error',\n        what_about: msg\n      }\n    });\n  },\n\n  pollCheck: function() {\n    this.poller.start();\n  },\n\n  destroyCheck: function() {\n    this.poller.stop();\n  }\n\n});\n",
    "var Poller = require('./poller');\n\nvar ImportModelPoller = function(model) {\n\n  var POLLING_INTERVAL = 2000; // Interval time between poll checkings\n  var POLLING_INTERVAL_MULTIPLIER = 2.5;  // Multiply interval by this number\n  var POLLING_REQUESTS_BEFORE_INTERVAL_CHANGE = 30; // Max tries until interval change\n\n  var options = {\n    interval: function(numberOfRequests) {\n      if (numberOfRequests >= POLLING_REQUESTS_BEFORE_INTERVAL_CHANGE) {\n        return POLLING_INTERVAL * POLLING_INTERVAL_MULTIPLIER;\n      }\n      return POLLING_INTERVAL;\n    },\n    stopWhen: function(model) {\n      var state = model.get('state');\n      return (state === \"complete\" || state === \"failure\");\n    }\n  };\n\n  Poller.call(this, model, options);\n};\n\nImportModelPoller.prototype = _.extend({}, Poller.prototype);\n\nmodule.exports = ImportModelPoller;\n",
    "var Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar pollTimer = 30000;\nvar ImportsModel = require('./imports_model');\n\n/**\n *  Imports collection\n *\n *  If it is fetched, it will add the import\n *\n */\n\nmodule.exports = Backbone.Collection.extend({\n\n  model: ImportsModel,\n\n  url: function(method) {\n    var version = cdb.config.urlVersion('import', method);\n    return '/api/' + version + '/imports';\n  },\n\n  initialize: function(mdls, opts) {\n    this.user = opts.user;\n  },\n\n  parse: function(r) {\n    var self = this;\n\n    if (r.imports.length === 0) {\n      this.destroyCheck();\n    } else {\n      _.each(r.imports, function(id) {\n\n        // Check if that import exists...\n        var imports = self.filter(function(mdl){ return mdl.imp.get('item_queue_id') === id });\n\n        if (imports.length === 0) {\n          self.add(new ImportsModel({ id: id }, { user: self.user } ));\n        }\n      });\n    }\n\n    return this.models\n  },\n\n  canImport: function() {\n    var importQuota = this.user.getMaxConcurrentImports();\n    var total = this.size();\n    var finished = 0;\n\n    this.each(function(m) {\n      if (m.hasFailed() || m.hasCompleted()) {\n        ++finished;\n      }\n    });\n\n    return (total - finished) < importQuota;\n  },\n\n  pollCheck: function(i) {\n    if (this.pollTimer) return;\n\n    var self = this;\n    this.pollTimer = setInterval(function() {\n      self.fetch();\n    }, pollTimer || 2000);\n\n    // Start doing a fetch\n    this.fetch();\n  },\n\n  destroyCheck: function() {\n    clearInterval(this.pollTimer);\n    delete this.pollTimer;\n  },\n\n  failedItems: function() {\n    return this.filter(function(item) {\n      return item.hasFailed();\n    });\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar ImportModel = require('./import_model');\nvar UploadModel = require('./upload_model');\n\n/**\n *  Upload/import model\n *\n *  It takes the control of the upload and import,\n *  listening the change of any of these steps.\n *\n *  Steps:\n *  - upload\n *  - import\n *\n */\n\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    step: 'upload',\n    state: ''\n  },\n\n  initialize: function(attrs, opts) {\n    if (_.isEmpty(opts)) opts = {};\n    this.user = opts && opts.user;\n    this.upl = new UploadModel(opts.upload, { user: this.user });\n    this.imp = new ImportModel(opts.import);\n    this._initBinds();\n    this._checkStatus();\n  },\n\n  _initBinds: function() {\n    this.bind('change:import',  this._onImportChange, this);\n    this.bind('change:upload',  this._onUploadChange, this);\n    this.bind('change:id',      this._onIdChange, this);\n\n    this.imp.bind('change', function() {\n      this.trigger('change:import');\n      this.trigger('change');\n    }, this);\n    this.upl.bind('change', function() {\n      this.trigger('change:upload');\n      this.trigger('change');\n    }, this)\n  },\n\n  _destroyBinds: function() {\n    this.upl.unbind(null, null, this);\n    this.imp.unbind(null, null, this);\n  },\n\n  _onIdChange: function() {\n    var item_queue_id = this.get('id');\n    if (item_queue_id) this.imp.set('item_queue_id', item_queue_id);\n    this.set('step', 'import');\n  },\n\n  _onUploadChange: function(m, i) {\n    if (this.get('step') === \"upload\") {\n      var item_queue_id = this.upl.get('item_queue_id');\n      var state = this.upl.get('state');\n\n      if (item_queue_id) this.set('id', item_queue_id);\n      if (state) this.set('state', state);\n    }\n  },\n\n  _onImportChange: function() {\n    if (this.get('step') === \"import\") {\n      var state = this.imp.get('state');\n      if (state) this.set('state', state);\n    }\n  },\n\n  _checkStatus: function() {\n    if (!this.get('id') && !this.upl.isValid()) {\n      this.trigger('change:upload');\n      return;\n    }\n\n    if (this.upl.get('type') === 'file') {\n      this.upl.upload();\n    } else if (this.get('id')) {\n      this.set('step', 'import');\n      this.imp.set('item_queue_id', this.get('id'));\n    } else if (!this.imp.get('item_queue_id') && this.upl.get('type') !== \"\") {\n      this.set('step', 'import');\n      this.imp.createImport(this.upl.toJSON());\n    }\n  },\n\n  pause: function() {\n    this.stopUpload();\n    this.stopImport();\n  },\n\n  hasFailed: function() {\n    var state = this.get('state');\n    var step = this.get('step');\n\n    return ( step === 'import' && state === 'failure' ) || ( step === 'upload' && state === 'error' );\n  },\n\n  hasCompleted: function() {\n    return this.get('step') === \"import\" && this.imp && this.imp.get('state') === 'complete'\n  },\n\n  getWarnings: function() {\n    var step = this.get('step');\n\n    return step === 'import' ? this.imp.get('warnings') : '';\n  },\n\n  getError: function() {\n    if (this.hasFailed()) {\n      var step = this.get('step');\n      return _.extend(\n        {\n          error_code: this[step === \"upload\" ? 'upl' : 'imp'].get('error_code'),\n          item_queue_id: step === \"import\" ? this.imp.get('id') : '',\n          original_url: step === \"import\" ? this.imp.get('original_url') : '',\n          data_type: step === \"import\" ? this.imp.get('data_type') : '',\n          http_response_code: step === \"import\" ? this.imp.get('http_response_code') : '',\n          http_response_code_message: step === \"import\" ? this.imp.get('http_response_code_message') : ''\n        }\n        ,\n        this[step === \"upload\" ? 'upl' : 'imp'].get('get_error_text')\n      )\n    }\n\n    return {\n      title: '',\n      what_about: '',\n      error_code: ''\n    }\n  },\n\n  importedVis: function() {\n    if (this.get('import').derived_visualization_id) {\n      return this._getMapVis();\n    } else {\n      return this._getDatasetVis();\n    }\n  },\n\n  _getMapVis: function() {\n    var derivedVisId = this.imp.get('derived_visualization_id');\n\n    if (!derivedVisId) {\n      return false;\n    }\n\n    return this._createVis({\n      type: 'derived',\n      id: derivedVisId\n    });\n  },\n\n  _getDatasetVis: function() {\n    var tableName = this.imp.get('table_name');\n\n    if (!tableName) {\n      return false;\n    }\n\n    return this._createVis({\n      type: 'table',\n      table: {\n        name: tableName\n      }\n    });\n  },\n\n  _createVis: function(attrs) {\n    var vis = new cdb.admin.Visualization(attrs);\n    vis.permission.owner = this.user;\n    return vis;\n  },\n\n  setError: function(opts) {\n    var step = this.get('step');\n    var stepModel = this[ step === \"upload\" ? 'upl' : 'imp' ];\n\n    this.stopUpload();\n    this.stopImport();\n\n    stepModel.set(opts);\n\n    this.set('state', 'error');\n  },\n\n  stopUpload: function() {\n    this.upl.stopUpload();\n  },\n\n  stopImport: function() {\n    this.imp.destroyCheck();\n  },\n\n  get: function (attr) {\n    if (attr === \"upload\") return this.upl.toJSON();\n    if (attr === \"import\") return this.imp.toJSON();\n\n    return cdb.core.Model.prototype.get.call(this, attr);\n  },\n\n  toJSON: function() {\n    return {\n      step: this.get('step'),\n      id: this.get('id'),\n      state: this.get('state'),\n      upload: this.upl.toJSON(),\n      import: this.imp.toJSON()\n    }\n  }\n\n});\n",
    "var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar Pecan = require('cartodb-pecan');\n\n/**\n *  Pecan model\n *\n */\n\nmodule.exports = cdb.core.Model.extend({\n\n  _PRINT_STATS: true,\n\n  defaults: {\n    table_id: '',\n    column: '',\n    state: 'idle'\n  },\n\n  initialize: function() {\n    _.bindAll(this, \"_onDescribe\");\n    this.sql = cdb.admin.SQL();\n    this.query = 'SELECT * FROM ' + this.get(\"table_id\");\n  },\n\n  getData: function() {\n    this.sql.describe(this.query, this.get(\"column\"), {}, this._onDescribe);\n  },\n\n  _onDescribe: function(stats) {\n    var properties = {\n      state: \"analyzed\",\n      success: false\n    };\n\n    if (this._PRINT_STATS) {\n      this.trigger('print_stats', stats, this);\n    }\n\n    var hasEnoughToGuess = Pecan.hasEnoughToGuess({\n      stats: stats,\n      isPointGeometryType: this.get('geometry_type') === 'point'\n    });\n\n    if (hasEnoughToGuess) {\n      var response = Pecan.guessMap({\n        tableName: this.get('table_id'),\n        column: {\n          stats: stats,\n          geometryType: this.get('geometry_type'),\n          bbox: this.get('bbox')\n        },\n        dependencies: {\n          underscore: _\n        }\n      });\n\n      if (response) {\n        var overrides = {\n          sql: this.query,\n          success: true\n        };\n        properties = _.extend(properties, overrides, stats, response);\n      }\n    }\n\n    if (stats.type === 'geom' && stats.bbox) {\n      properties.bbox = stats.bbox;\n    }\n\n    this.set(properties);\n  },\n\n  isAnalyzed: function() {\n    return this.get('state') === 'analyzed';\n  },\n\n  hasFailed: function() {\n    return this.get('state') === 'failed';\n  }\n\n});\n",
    "/*\n * Periodically fetches a model/collection. It waits for ongoing \n * fetch requests before trying to fetch again. A stop condition\n * can be specified.\n *\n * Usage example:\n * \n * var poller = new Poller(model, {\n *   interval: 1000,\n *   stopWhen: function(model) {\n *     return model.get('state') === 'completed';\n *   }\n * });\n * \n * poller.start();\n *\n * // ...\n *\n * poller.stop();\n * \n */\nvar Poller = function(model, options) {\n  this.model = model;\n  this.numberOfRequests = 0;\n  this.polling = false;\n  this.interval = options['interval'];\n  if (typeof this.interval !== \"function\") {\n    this.interval = function() { return options['interval']; };\n  }\n  this.stopWhen = options['stopWhen'];\n  this.error = options['error'];\n  this.autoStart = options['autoStart'];\n\n  if (this.autoStart) {\n    this.start();\n  }\n}\n\nPoller.prototype.start = function() {\n  if (this.timeout) {\n    return;\n  }\n\n  this._scheduleFetch();\n}\n\nPoller.prototype._scheduleFetch = function() {\n  this.timeout = setTimeout(this._fetch.bind(this), this.interval(this.numberOfRequests));\n}\n\nPoller.prototype._fetch = function() {\n  var self = this;\n  if (!self.polling) {\n    self.polling = true;\n    self.model.fetch({\n      success: function() {\n        self.polling = false;\n        self.numberOfRequests++;\n        if (self._continuePolling()) {\n          self._scheduleFetch();\n        }\n      },\n      error: function(e) {\n        _.isFunction(self.error) && self.error(self.model);\n      }\n    })\n  }\n}\n\nPoller.prototype._continuePolling = function() {\n  return !this.stopWhen ||\n    (_.isFunction(this.stopWhen) && !this.stopWhen(this.model));\n}\n\nPoller.prototype.stop = function() {\n  this.polling = false;\n  clearTimeout(this.timeout);\n  delete(this.timeout);\n}\n\nmodule.exports = Poller;\n",
    "\n/**\n *  Default upload config\n *\n */\n\nmodule.exports = {\n  uploadStates: [\n    'enqueued',\n    'pending',\n    'importing',\n    'uploading',\n    'guessing',\n    'unpacking',\n    'getting',\n    'creating',\n    'complete'\n  ],\n  fileExtensions: [\n    'csv',\n    'xls',\n    'xlsx',\n    'zip',\n    'kml',\n    'geojson',\n    'json',\n    'ods',\n    'kmz',\n    'tsv',\n    'gpx',\n    'tar',\n    'gz',\n    'tgz',\n    'osm',\n    'bz2',\n    'tif',\n    'tiff',\n    'txt',\n    'sql',\n    'rar',\n    'carto',\n    'gpkg'\n  ],\n  // How big should file be?\n  fileTimesBigger: 3\n}\n",
    "var Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar UploadConfig = require('./upload_config');\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\nvar moment = (typeof window !== \"undefined\" ? window['moment'] : typeof global !== \"undefined\" ? global['moment'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n/**\n * Model that let user upload files to our endpoints.\n *\n * NOTE: this model extends Backbone.Model instead of cdb.core.Model, because it's required for the\n * vendor/backbone-model-file-upload.\n */\nmodule.exports = Backbone.Model.extend({\n\n  url: '/api/v1/imports',\n\n  fileAttribute: 'filename',\n\n  defaults: {\n    type: '',\n    value: '',\n    interval: 0,\n    privacy: '',\n    progress: 0,\n    state: 'idle',\n    service_item_id: '',\n    service_name: '',\n    option: '',\n    content_guessing: true,\n    type_guessing: true,\n    create_vis: true\n  },\n\n  initialize: function(val, opts) {\n    this.user = opts && opts.user;\n    this._initBinds();\n    // We need to validate entry attributes\n    this._validate(this.attributes, { validate: true});\n  },\n\n  isValidToUpload: function() {\n    return this.get('value') && this.get('state') !== 'error';\n  },\n\n  setFresh: function(d) {\n    if (d && !_.isEmpty(d)) {\n      // Set upload properties except create_vis (defined when created)\n      this.set(_.omit(d, 'create_vis'));\n    } else {\n      this.clear();\n    }\n  },\n\n  _initBinds: function() {\n    this.bind('progress', function(progress) {\n      this.set({\n        progress: progress*100,\n        state: 'uploading'\n      });\n    }, this);\n\n    this.bind('change:value', function() {\n      if (this.get('state') === \"error\") {\n        this.set({ state: 'idle' })\n        this.unset('get_error_text', { silent: true });\n      }\n    }, this);\n\n    this.bind('error invalid', function(m, d) {\n      this.set({\n        state: 'error',\n        error_code: (d && d.error_code) || '',\n        get_error_text: {\n          title: 'Invalid import',\n          what_about: (d && d.msg) || ''\n        }\n      }, { silent: true });\n      // We need this, if not validate will run again and again and again... :(\n      this.trigger('change');\n    }, this);\n  },\n\n  validate: function(attrs) {\n    if (!attrs) return;\n\n    if (attrs.type === \"file\") {\n      // Number of files\n      if (attrs.value && attrs.value.length) {\n        return {\n          msg: \"Unfortunately only one file is allowed per upload\"\n        }\n      }\n\n      // File name\n      var name = attrs.value.name;\n      if (!name) {\n        return {\n          msg: \"File name should be defined\"\n        }\n      }\n\n      // File extension\n      var ext = name.substr(name.lastIndexOf('.') + 1);\n      if (ext) {\n        ext = ext.toLowerCase();\n      }\n      if (!_.contains(UploadConfig.fileExtensions, ext)) {\n        return {\n          msg: \"Unfortunately this file extension is not allowed\"\n        }\n      }\n      // File size\n      if (this.user && ((this.user.get('remaining_byte_quota') * UploadConfig.fileTimesBigger) < attrs.value.size)) {\n        return {\n          msg: \"Unfortunately the size of the file is bigger than your remaining quota\",\n          error_code: 8001\n        }\n      }\n    }\n\n    if (attrs.type === \"remote\") {\n      // Valid remote visualization id?\n      if (!attrs.remote_visualization_id) {\n        return {\n          msg: \"The remote visualization id was not specified\"\n        }\n\n      }\n      // Remote size?\n      if (this.user && attrs.size && ((this.user.get('remaining_byte_quota') * UploadConfig.fileTimesBigger) < attrs.size)) {\n        return {\n          msg: \"Unfortunately the size of the remote dataset is bigger than your remaining quota\",\n          error_code: 8001\n        }\n      }\n    }\n\n    if (attrs.type === \"url\") {\n      // Valid URL?\n      if (!Utils.isURL(attrs.value)) {\n        return {\n          msg: \"Unfortunately the URL provided is not valid\"\n        }\n      }\n    }\n\n    if (attrs.type === \"sql\") {\n      if (!attrs.value) {\n        return {\n          msg: \"Query is not provided\"\n        }\n      }\n    }\n\n    if (attrs.type === \"duplication\") {\n      if (!attrs.value) {\n        return {\n          msg: \"Dataset copy is not defined\"\n        }\n      }\n    }\n\n    if (attrs.type === \"service\" && attrs.service_name === \"twitter_search\") {\n      var service_item_id = attrs.service_item_id;\n\n      // Empty?\n      if (!service_item_id || _.isEmpty(service_item_id)) {\n        return {\n          msg: \"Twitter data is empty\"\n        }\n      }\n\n      // Categories?\n      if (_.isEmpty(service_item_id.categories)) {\n        return {\n          msg: \"Twitter categories are not valid\"\n        }\n      }\n\n      // Dates?\n      var dates = service_item_id.dates;\n      if (!dates || _.isEmpty(dates)) {\n        return {\n          msg: \"Twitter dates are empty\"\n        }\n      }\n      var isToDateValid = moment(dates.fromDate) <= moment(new Date());\n      if (!dates.fromDate || !dates.toDate || !isToDateValid) {\n        return {\n          msg: \"Twitter dates are not valid\"\n        }\n      }\n    }\n  },\n\n  isValid: function() {\n    return this.get('value') && this.get('state') !== \"error\"\n  },\n\n  upload: function() {\n    if (this.get('type') === \"file\") {\n      var self = this;\n      this.xhr = this.save(\n        {\n          filename: this.get('value')\n        },\n        {\n          success: function(m) {\n            m.set('state', 'uploaded');\n          },\n          error: function(m, msg) {\n\n            var message = 'Unfortunately there was a connection error';\n\n            if (msg && msg.status === 429) {\n              var response = JSON.parse(msg.responseText);\n              message = response.errors.imports;\n            }\n\n            self.set({\n              state: 'error',\n              get_error_text: { title: 'There was an error', what_about: message }\n            });\n\n          },\n          complete: function() {\n            delete self.xhr;\n          }\n        }\n      );\n    }\n  },\n\n  stopUpload: function() {\n    if (this.xhr) this.xhr.abort();\n  },\n\n  setGuessing: function(val) {\n    this.set({\n      type_guessing: val,\n      content_guessing: val\n    });\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar ViewFactory = require('../../../view_factory');\nvar PecanDialog = require('../../../dialogs/pecan/pecan_dialog_view');\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'ImportItem',\n  tagName: 'li',\n\n  events: {\n    'click .js-abort':       '_removeItem',\n    'click .js-show_dialog': '_showDialog',\n    'click .js-close':       '_removeItem'\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.vis = this.options.vis;\n    this.template = cdb.templates.getTemplate('common/background_polling/views/analysis/background_analysis_item');\n    this._initBinds();\n  },\n\n  render: function() {\n    var totalItems    = this.collection.getTotalAnalysis();\n    var totalAnalyzed = this.collection.getCompletedAnalysis();\n    var totalSuccess  = this.collection.getSuccessfullyAnalysedColumns();\n\n    var d = {\n      totalSuccess: totalSuccess,\n      totalItems: totalItems,\n      totalAnalyzed: totalAnalyzed,\n      progress: (totalAnalyzed / totalItems) * 100\n    };\n\n    this.$el.html(this.template(d));\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.collection.bind('change:state', this._onChangeState, this);\n    this.add_related_model(this.collection);\n  },\n\n  _onChangeState: function() {\n    var totalItems    = this.collection.getTotalAnalysis();\n    var totalAnalyzed = this.collection.getCompletedAnalysis();\n    var totalSuccess  = this.collection.getSuccessfullyAnalysedColumns();\n\n    this.render();\n\n    if (totalAnalyzed === totalItems && totalSuccess === 0) {\n      this._removeItem();\n    }\n  },\n\n  _showDialog: function() {\n\n    var pecanDialog = new PecanDialog({\n      clean_on_hide: true,\n      vis: this.vis,\n      collection:this.collection,\n      user: this.user\n    });\n\n    pecanDialog.appendToBody();\n  },\n\n  _skip: function() {\n    var layerID = this.vis.get(\"active_layer_id\");\n    var name;\n    var activeLayer  = this.vis.map.layers.where({ id: layerID });\n\n    if (activeLayer) {\n      name = activeLayer[0].table.get(\"name\");\n    }\n\n    var skipPencanDialog = 'pecan_' + this.user.get(\"username\") + \"_\" + name;\n    localStorage[skipPencanDialog] = true;\n  },\n\n  _removeItem: function() {\n    this.trigger('remove', this.collection, this);\n    this._skip();\n    this.clean();\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n *  Background polling header title view\n *\n *  It will contain only the title\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  tagName: 'h3',\n  className: 'CDB-Text CDB-Size-large u-lSpace--xl',\n\n  initialize: function() {\n    this.template = cdb.templates.getTemplate('common/background_polling/views/background_polling_header_title');\n    this._initBinds();\n  },\n\n  render: function() {\n    this.$el.html(\n      this.template({\n        imports: this.model.getTotalImports(),\n        geocodings: this.model.getTotalGeocodings(),\n        analysis: this.model.getTotalAnalysis(),\n        totalPollings: this.model.getTotalPollings()\n      })\n    );\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change analysisAdded analysisRemoved importAdded importRemoved geocodingAdded geocodingRemoved', this.render, this);\n  }\n\n});",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BackgroundPollingHeaderTitleView = require('./background_polling_header_title_view');\n\n/**\n *  Background polling header view\n *\n *  It will contain:\n *  - Badge\n *  - Title\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  className: \"BackgroundPolling-header\",\n\n  initialize: function() {\n    this.template = cdb.templates.getTemplate('common/background_polling/views/background_polling_header');\n    this._initBinds();\n  },\n\n  render: function() {\n    this.$el.html(this.template());\n    this._initViews();\n    this._updateBadges();\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change importAdded importRemoved geocodingAdded geocodingRemoved', this._updateBadges, this);\n  },\n\n  _initViews: function() {\n    var headerTitle = new BackgroundPollingHeaderTitleView({\n      model: this.model\n    });\n    this.$el.append(headerTitle.render().el);\n    this.addView(headerTitle);\n  },\n\n  _updateBadges: function() {\n    var failed = this.model.getTotalFailedItems();\n\n    if (this.$('.BackgroundPolling-headerBadgeCount').length === 0 && failed > 0) {\n      var $span = $('<span>').addClass(\"BackgroundPolling-headerBadgeCount Badge Badge--negative CDB-Text CDB-Size-small\").text(failed);\n      this.$('.BackgroundPolling-headerBadge')\n        .append($span)\n        .addClass('has-failures');\n    } else if (this.$('.BackgroundPolling-headerBadgeCount').length > 0 && failed > 0) {\n      this.$('.BackgroundPolling-headerBadgeCount').text(failed);\n    } else if (failed === 0) {\n      this.$('.BackgroundPolling-headerBadgeCount').remove();\n      this.$('.BackgroundPolling-headerBadge').removeClass('has-failures');\n    }\n\n    // Show geocoding icon if only geocoding\n    var geocodingsCount = this.model.getTotalGeocodings();\n    var isGeocoding = geocodingsCount > 0 && geocodingsCount === this.model.getTotalPollings();\n    this.$('.js-icon').toggleClass('CDB-IconFont-marker', isGeocoding);\n    this.$('.js-icon').toggleClass('CDB-IconFont-cloud', !isGeocoding);\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\nvar pluralizeString = require('../../../view_helpers/pluralize_string');\nvar GeocodingResultDetailsView = require('./geocoding_result_details_view');\n\n/**\n *  Geocoding item within background polling\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'ImportItem',\n  tagName: 'li',\n\n  events: {\n    'click .js-abort': '_cancelGeocoding',\n    'click .js-info': '_showDetails',\n    'click .js-close': '_removeGeocoding'\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.template = cdb.templates.getTemplate('common/background_polling/views/geocodings/background_geocoding_item');\n    this._initBinds();\n  },\n\n  render: function() {\n    var processedRows = this.model.get('processed_rows') || 0;\n    var processableRows = this.model.get('processable_rows') || 0;\n    var realRows = this.model.get('real_rows') || 0;\n    var isLatLngType = this.model.get('latitude_column') && this.model.get('longitude_column');\n\n    var d = {\n      realRows: realRows,\n      tableName: this.model.get('table_name'),\n      canCancel: _.isFunction(this.model.cancelGeocoding),\n      hasFailed: this.model.hasFailed(),\n      hasCompleted: this.model.hasCompleted(),\n      processedRows: processedRows,\n      processableRows: processableRows,\n      processableRowsFormatted: Utils.formatNumber(processableRows),\n      realRowsPluralize: pluralizeString('row', 'rows', this.model.get('real_rows')),\n      realRowsFormatted: Utils.formatNumber(realRows),\n      processableRowsPluralize: pluralizeString('row', 'rows', processableRows),\n      width: realRows > 0 ? (processableRows/realRows) : 100,\n      isLatLngType: isLatLngType\n    }\n    this.$el.html(this.template(d));\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change', this.render, this);\n    this.model.bind('remove', this.clean, this);\n  },\n\n  _cancelGeocoding: function() {\n    this.model.cancelGeocoding();\n  },\n\n  _removeGeocoding: function() {\n    this.trigger('remove', this.model, this);\n    this.clean();\n  },\n\n  _showDetails: function() {\n    new GeocodingResultDetailsView({\n      clean_on_hide: true,\n      user: this.user,\n      model: this.model,\n      showGeocodingDatasetURLButton: this.options.showGeocodingDatasetURLButton\n    }).appendToBody();\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BaseDialog = require('../../../views/base_dialog/view');\nvar pluralizeString = require('../../../view_helpers/pluralize_string');\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\n\n/**\n *  When a geocoding proccess finishes, this dialog displays\n *  all the info about the task (price, rows, errors, etc).\n *\n */\n\nmodule.exports = BaseDialog.extend({\n\n  className: 'Dialog BackgroundPollingDetails is-opening',\n\n  initialize: function() {\n    this.elder('initialize');\n    this.user = this.options.user;\n  },\n\n  render_content: function() {\n    var error = this.model.get('error') || {};\n\n    var processedRows = this.model.get('processed_rows') || 0;\n    var processableRows = this.model.get('processable_rows') || 0;\n    var realRows = this.model.get('real_rows') || 0;\n    var geometryType = this.model.get('geometry_type') || 'point';\n\n    // Related to price and credits\n    var price = this.model.get('price');\n    var hasPrice = price !== undefined && price !== null;\n    var googleUser = this.user.featureEnabled('google_maps');\n\n    var datasetURL;\n    if (this.user && this.model.get('table_name')) {\n      var vis = new cdb.admin.Visualization({\n        type: 'table',\n        table: {\n          name: this.model.get('table_name')\n        }\n      });\n      vis.permission.owner = this.user;\n      datasetURL = encodeURI(vis.viewUrl(this.user).edit());\n    }\n\n    // Select template\n    var template = 'common/background_polling/views/geocodings/';\n    if (this.model.hasCompleted()) {\n      template += realRows === 0 ? 'geocoding_no_result_details' : 'geocoding_success_details';\n    } else {\n      template += 'geocoding_error_details';\n    }\n\n    return cdb.templates.getTemplate(template)({\n      id: this.model.get('id'),\n      geometryTypePluralize: pluralizeString(geometryType, geometryType + 's', processableRows),\n      geometryType: geometryType,\n      remainingQuotaFormatted: Utils.formatNumber(this.model.get('remaining_quota')),\n      googleUser: googleUser,\n      tableName: this.model.get('table_name'),\n      state: this.model.get('state') || '',\n      blockPrice: this.user.get('geocoding').block_price,\n      realRows: realRows,\n      realRowsFormatted: Utils.formatNumber(realRows),\n      processedRows: processedRows,\n      processableRows: processableRows,\n      processableRowsFormatted: Utils.formatNumber(processableRows),\n      hasPrice: hasPrice,\n      price: price,\n      customHosted: cdb.config.get('cartodb_com_hosted'),\n      errorDescription: error.description,\n      showGeocodingDatasetURLButton: this.options.showGeocodingDatasetURLButton && datasetURL,\n      datasetURL: datasetURL\n    });\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar UploadConfig = require('../../models/upload_config');\nvar ErrorDetailsView = require('../../../views/error_details_view');\nvar WarningsDetailsView = require('../../../views/warnings_details_view');\nvar ViewFactory = require('../../../view_factory');\nvar TwitterImportDetailsDialog = require('./twitter_import_details_view');\n\n/**\n *  Import item within background importer\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'ImportItem',\n  tagName: 'li',\n\n  events: {\n    'click .js-abort':      '_removeItem',\n    'click .js-show_error': '_showImportError',\n    'click .js-show_warnings': '_showImportWarnings',\n    'click .js-show_stats': '_showImportStats',\n    'click .js-close':      '_removeItem'\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this._showSuccessDetailsButton = this.options.showSuccessDetailsButton;\n    this.template = cdb.templates.getTemplate('common/background_polling/views/imports/background_import_item');\n    this._initBinds();\n  },\n\n  render: function() {\n    var upload = this.model.get('upload');\n    var imp = this.model.get('import');\n\n    var d = {\n      name: '',\n      state: this.model.get('state'),\n      progress: '',\n      service: '',\n      step: this.model.get('step'),\n      url: '',\n      failed: this.model.hasFailed(),\n      completed: this.model.hasCompleted(),\n      warnings: this.model.getWarnings(),\n      showSuccessDetailsButton: this._showSuccessDetailsButton,\n      tables_created_count: imp.tables_created_count\n    };\n\n    // URL\n    if (d.state === \"complete\") {\n      var vis = this.model.importedVis();\n      if (vis) {\n        d.url = encodeURI(vis.viewUrl(this.user).edit());\n      }\n    }\n\n    // Name\n    if (upload.type) {\n      if (upload.type === \"file\") {\n        if (upload.value.length > 1) {\n          d.name = upload.value.length + ' files';\n        } else {\n          d.name = upload.value.name;\n        }\n      }\n      if (upload.type === \"url\" || upload.type === \"remote\") {\n        d.name = upload.value;\n      }\n      if (upload.type === \"service\") {\n        d.name = upload.value && upload.value.filename || '';\n      }\n      if (upload.service_name === \"twitter_search\") {\n        d.name = 'Twitter import';\n      }\n      if (upload.type === \"sql\") {\n        d.name = 'SQL';\n      }\n      if (upload.type === \"duplication\") {\n        d.name = upload.table_name || upload.value;\n      }\n    } else {\n      d.name = imp.display_name || imp.item_queue_id || 'import';\n    }\n\n    // Service\n    d.service = upload.service_name;\n\n    // Progress\n    if (this.model.get('step') === 'upload') {\n      d.progress = this.model.get('upload').progress;\n    } else {\n      d.progress = (UploadConfig.uploadStates.indexOf(d.state)/UploadConfig.uploadStates.length) * 100;\n    }\n\n    this.$el.html(this.template(d));\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change', this.render, this);\n    this.model.bind('remove', this.clean, this);\n  },\n\n  _removeItem: function() {\n    this.trigger('remove', this.model, this);\n    this.model.pause();\n    this.clean();\n  },\n\n  _showImportStats: function() {\n    (new TwitterImportDetailsDialog({\n      clean_on_hide: true,\n      user: this.user,\n      model: this.model\n    })).appendToBody();\n  },\n\n  _showImportError: function() {\n    var dialog = ViewFactory.createDialogByView(\n      new ErrorDetailsView({\n        err: this.model.getError(),\n        user: this.user\n      })\n    );\n    dialog.appendToBody();\n  },\n\n  _showImportWarnings: function() {\n    var dialog = ViewFactory.createDialogByView(\n      new WarningsDetailsView({\n        warnings: this.model.getWarnings(),\n        user: this.user\n      })\n    );\n    dialog.appendToBody();\n  }\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n *  Import limit message within background importer\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'ImportItem ImportItem--sticky',\n  tagName: 'li',\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.template = cdb.templates.getTemplate('common/background_polling/views/imports/background_import_limit');\n  },\n\n  render: function() {\n    var importQuota = this.user.getMaxConcurrentImports();\n    var isUpgradeable = !cdb.config.get('cartodb_com_hosted') && importQuota === 1;\n\n    this.$el.html(\n      this.template({\n        upgradeUrl: window.upgrade_url,\n        isUpgradeable: isUpgradeable,\n        importQuota: importQuota\n      })\n    );\n\n    return this;\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BaseDialog = require('../../../views/base_dialog/view');\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\n\n/**\n *  When a Twitter import finishes, this dialog displays\n *  all the info about the price/cost etc.\n *\n */\n\nmodule.exports = BaseDialog.extend({\n\n  className: 'Dialog TwitterImportDetails is-opening',\n\n  initialize: function() {\n    this.elder('initialize');\n    this.user = this.options.user;\n    this.template = cdb.templates.getTemplate('common/background_polling/views/imports/twitter_import_details');\n  },\n\n  render_content: function() {\n    var imp = this.model.get('import');\n    var userTwitterValues = this.user.get('twitter');\n    var availableTweets = userTwitterValues.quota - userTwitterValues.monthly_use;\n    var vis = this.model.importedVis();\n    var url = vis && encodeURI(vis.viewUrl(this.user).edit()) || '';\n    var d = {\n      type: vis && vis.get('type') === \"table\" ? \"dataset\" : \"map\",\n      mapURL: url,\n      datasetTotalRows: imp.tweets_georeferenced,\n      datasetTotalRowsFormatted: Utils.formatNumber(imp.tweets_georeferenced),\n      tweetsCost: imp.tweets_cost,\n      tweetsCostFormatted: Utils.formatNumber(imp.tweets_cost),\n      availableTweets: availableTweets,\n      availableTweetsFormatted: Utils.formatNumber(availableTweets),\n      tweetsOverquota: imp.tweets_overquota,\n      tweetsOverquotaFormatted: Utils.formatNumber(imp.tweets_overquota),\n      blockSizeFormatted: Utils.formatNumber(userTwitterValues.block_size),\n      blockPriceFormatted: Utils.formatNumber(userTwitterValues.block_price)\n    };\n    return this.template(d);\n  }\n\n});\n",
    "var queue = require('queue-async');\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n/**\n * Convenient object to do async batch processing, and don't continue until all items have successfully finished.\n * In case of error it will fail immediately.\n *\n * Example usage:\n *   var batchProcess = require('../common/batch_process_items');\n *   batchProcess({\n *     items: [ ... ],\n *     done: function() {\n *       this.close();\n *     },\n *     fail: function(jqXHR, errorType, e) {\n *       this._errorMsg = 'Server response: '+ jqXHR.responseText;\n *       this.render();\n *     }\n *   });\n *\n * @param opts {Object}\n *   howManyInParallel: {Number}\n *   items: {Array} each item will be passed to processItem(item, ...\n *   processItem: {Function} given an item and a callback, should call callback() for success case, or callback(error) if something failed.\n *   fail: {Function}\n *   done: {Function} called if all items\n */\nmodule.exports = function(opts) {\n  var q = queue(opts.howManyInParallel);\n  _.each(opts.items, function(item) {\n    q.defer(function(callback) {\n      opts.processItem(item, callback);\n    });\n  });\n\n  q.awaitAll(function(error/*, result1, ..., resultN */) {\n    // error and results contains outcome of the jqXHR requests above, see http://api.jquery.com/jQuery.ajax/#jqXHR\n    if (error) {\n      opts.fail(error);\n    } else {\n      opts.done();\n    }\n  });\n};\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar BaseDialog = require('../../views/base_dialog/view');\nvar pluralizeString = require('../../view_helpers/pluralize_string');\nvar randomQuote = require('../../view_helpers/random_quote');\n\n/**\n * Lock/unlock datasets/maps dialog.\n */\nmodule.exports = BaseDialog.extend({\n\n  events: function() {\n    return _.extend({}, BaseDialog.prototype.events, {\n      'click .js-ok': '_ok'\n    });\n  },\n\n  initialize: function() {\n    this.elder('initialize');\n    this.options.template = this.options.template || cdb.templates.getTemplate('common/dialogs/change_lock/templates/dashboard');\n    this.model.bind('change', function() {\n      if (this.model.get('state') === 'ProcessItemsDone') {\n        this.close();\n      } else {\n        this.render();\n      }\n    }, this);\n  },\n\n  /**\n   * @implements cdb.ui.common.Dialog.prototype.render_content\n   */\n  render_content: function() {\n    return this['_render' + this.model.get('state')]();\n  },\n\n  _renderConfirmChangeLock: function() {\n    // An entity can be an User or Organization\n    var itemsCount = this.model.get('items').length;\n    var areLocked = this.model.get('initialLockValue');\n\n    return this.options.template({\n      model: this.model,\n      itemsCount: itemsCount,\n      ownerName: this.options.ownerName,\n      isOwner: this.options.isOwner,\n      thisOrTheseStr: itemsCount === 1 ? 'this' : 'these',\n      itOrThemStr: itemsCount === 1 ? 'it' : 'them',\n      areLocked: areLocked,\n      positiveOrNegativeStr: areLocked ? 'positive' : 'alert',\n      lockOrUnlockStr: areLocked ? 'unlock' : 'lock',\n      contentTypePluralized: pluralizeString(\n        this.model.get('contentType') === 'datasets' ? 'dataset' : 'map', //singular\n        this.model.get('contentType'), // plural\n        itemsCount\n      )\n    });\n  },\n\n  /**\n   * @overrides BaseDialog.prototype._ok\n   */\n  _ok: function(e) {\n    this.killEvent(e);\n    this.model.inverseLock();\n    this.render();\n  },\n\n  _renderProcessingItems: function() {\n    var lockingOrUnlockingStr = this.model.get('initialLockValue') ? 'Unlocking' : 'Locking';\n    return cdb.templates.getTemplate('common/templates/loading')({\n      title: lockingOrUnlockingStr + ' ' + pluralizeString(this.model.get('contentType') === 'datasets' ? 'dataset' : 'map', this.model.get('items').length) + '…',\n      quote: randomQuote()\n    });\n  },\n\n  _renderProcessItemsFail: function() {\n    var lockingOrUnlockingStr = this.model.get('initialLockValue') ? 'unlock' : 'lock';\n    return cdb.templates.getTemplate('common/templates/fail')({\n      msg: 'Failed to ' + lockingOrUnlockingStr + ' all items'\n    });\n  }\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar batchProcessItems = require('../../batch_process_items');\n\n/**\n * View model for change lock view.\n * Manages the life cycle states for the change lock view.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    state: 'ConfirmChangeLock',\n    initialLockValue: false,\n    contentType: 'datasets',\n    items: undefined // a Backbone collection\n  },\n\n  initialize: function(attrs) {\n    this.elder('initialize');\n    this.set('items', new Backbone.Collection(attrs.items));\n    if (this.get('items').chain().map(function(item) { return item.get('locked'); }).uniq().value().length > 1) {\n      var errorMsg = 'It is assumed that all items have the same locked state, a user should never be able to ' +\n        'select a mixed item with current UI. If you get an error with this message something is broken';\n      if (window.trackJs && window.trackJs.track) {\n        window.trackJs.track(errorMsg);\n      } else {\n        throw new Error(errorMsg);\n      }\n    }\n\n    this.set('initialLockValue', this.get('items').at(0).get('locked'));\n  },\n\n  inverseLock: function() {\n    this.set('state', 'ProcessingItems');\n\n    batchProcessItems({\n      howManyInParallel: 5,\n      items: this.get('items').toArray(),\n      processItem: this._lockItem.bind(this, !this.get('initialLockValue')),\n      done: this.set.bind(this, 'state', 'ProcessItemsDone'),\n      fail: this.set.bind(this, 'state', 'ProcessItemsFail')\n    });\n  },\n\n  _lockItem: function(newLockedValue, item, callback) {\n    item.save({ locked: newLockedValue })\n      .done(function() {\n        callback();\n      })\n      .fail(function() {\n        callback('something failed');\n      });\n  }\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar StartView = require('./start_view');\nvar PrivacyOptions = require('./options_collection');\nvar BaseDialog = require('../../views/base_dialog/view');\nvar randomQuote = require('../../view_helpers/random_quote');\nvar ViewFactory = require('../../view_factory');\nvar ShareView = require('./share/share_view');\n\n/**\n * Change privacy datasets/maps dialog.\n */\nvar ChangePrivacyView = BaseDialog.extend({\n\n  initialize: function() {\n    this.elder('initialize');\n    this._privacyOptions = PrivacyOptions.byVisAndUser(this.options.vis, this.options.user);\n    this._initViews();\n    this._initBinds();\n  },\n\n  /**\n   * @implements cdb.ui.common.Dialog.prototype.render_content\n   */\n  render_content: function() {\n    return this._panes.getActivePane().render().el;\n  },\n\n  ok: function() {\n    var selectedOption = this._privacyOptions.selectedOption();\n    if (!selectedOption.canSave()) {\n      return;\n    }\n\n    var self = this;\n    this._panes.active('saving');\n    selectedOption.saveToVis(this.options.vis, {\n      success: function() {\n        self.close();\n      },\n      error: function() {\n        self._panes.active('saveFail');\n      }\n    });\n  },\n\n  _initViews: function() {\n    this._panes = new cdb.ui.common.TabPane({\n      el: this.el\n    });\n    this.addView(this._panes);\n    this._panes.addTab('start',\n      new StartView({\n        privacyOptions: this._privacyOptions,\n        user: this.options.user,\n        vis: this.options.vis\n      })\n    );\n    this._panes.addTab('saving',\n      ViewFactory.createByTemplate('common/templates/loading', {\n        title: 'Saving privacy…',\n        quote: randomQuote()\n      }).render()\n    );\n    this._panes.addTab('saveFail',\n      ViewFactory.createByTemplate('common/templates/fail', {\n        msg: ''\n      }).render()\n    );\n    this._panes.active('start');\n  },\n\n  _initBinds: function() {\n    this._panes.bind('tabEnabled', this.render, this);\n    this._panes.getPane('start').bind('clickedShare', this._openShareDialog, this);\n  },\n\n  _openShareDialog: function() {\n    var view = new ShareView({\n      clean_on_hide: true,\n      enter_to_confirm: true,\n      user: this.options.user,\n      vis: this.options.vis,\n      ChangePrivacyView: ChangePrivacyView\n    });\n\n    // Order matters, close this dialog before appending the share one, for side-effects to work as expected (body.is-inDialog)\n    this.close();\n    view.appendToBody();\n  }\n});\n\nmodule.exports = ChangePrivacyView;\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n/**\n * Default model for a privacy option.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    privacy: 'PUBLIC',\n    disabled: false,\n    selected: false,\n    password: undefined\n  },\n\n  validate: function(attrs) {\n    if (attrs.disabled && attrs.selected) {\n      return 'Option can not be disabled and selected at the same time';\n    }\n  },\n\n  classNames: function() {\n    return _.chain(['disabled', 'selected'])\n      .map(function(attr) { return !!this.attributes[attr] ? 'is-'+attr : undefined; }, this)\n      .compact().value().join(' ');\n  },\n\n  canSave: function() {\n    return !this.get('disabled');\n  },\n\n  /**\n   * @param vis {Object} instance of cdb.admin.Visualization\n   * @param callbacks {Object}\n   */\n  saveToVis: function(vis, callbacks) {\n    return vis.save(this._attrsToSave(), _.extend({ wait: true }, callbacks));\n  },\n\n  /**\n   * @returns {Object} attrs\n   * @protected\n   */\n  _attrsToSave: function() {\n    return _.pick(this.attributes, 'privacy', 'password');\n  }\n});\n",
    "var Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar OptionModel = require('./option_model');\nvar PasswordOptionModel = require('./password_option_model');\n\n/**\n * type property should match the value given from the API.\n */\nvar ALL_OPTIONS = [{\n  privacy: 'PUBLIC',\n  illustrationType: 'positive',\n  iconFontType: 'unlock',\n  title: 'Public',\n  desc: 'Everyone can view and download it',\n  alwaysEnable: true\n}, {\n  privacy: 'LINK',\n  illustrationType: 'alert',\n  iconFontType: 'unlock',\n  title: 'With link',\n  desc: 'Only the people with the link can view it'\n}, {\n  privacy: 'PASSWORD',\n  illustrationType: 'alert',\n  iconFontType: 'unlockWithEllipsis',\n  title: 'Password protected',\n  desc: 'Only the people with the password can view it'\n}, {\n  privacy: 'PRIVATE',\n  illustrationType: 'negative',\n  iconFontType: 'lock',\n  title: 'Private',\n  desc: 'Only you can access it'\n}];\n\n\n/**\n * Collection that holds the different privacy options.\n */\nmodule.exports = Backbone.Collection.extend({\n\n  model: function(attrs, options) {\n    if (attrs.privacy === 'PASSWORD') {\n      return new PasswordOptionModel(attrs, options);\n    } else {\n      return new OptionModel(attrs, options);\n    }\n  },\n\n  initialize: function() {\n    this.bind('change:selected', this._deselectLastSelected, this)\n  },\n\n  selectedOption: function() {\n    return this.find(function(option) {\n      return option.get('selected');\n    })\n  },\n\n  passwordOption: function() {\n    return this.find(function(option) {\n      return option.get('privacy') === 'PASSWORD';\n    })\n  },\n\n  _deselectLastSelected: function(m, isSelected) {\n    if (isSelected) {\n      this.each(function(option) {\n        if (option !== m) {\n          option.set({selected: false}, {silent: true});\n        }\n      });\n    }\n  }\n\n}, { // Class properties:\n\n  /**\n   * Get a privacy options collection from a Vis model\n   *\n   * Note that since the user's permissions should change very seldom, it's reasonable to assume they will be static for\n   * the collection's lifecycle, so set them on the models attrs when creating the collection.\n   * collection is created.\n   *\n   * @param vis {Object} instance of cdb.admin.Visualization\n   * @param user {Object} instance of cdb.admin.User\n   * @returns {Object} instance of this collection\n   */\n  byVisAndUser: function(vis, user) {\n    var canSelectPremiumOptions = user.get('actions')[ vis.isVisualization() ? 'private_maps' : 'private_tables' ];\n    var currentPrivacy = vis.get('privacy');\n    var availableOptions = vis.privacyOptions();\n\n    return new this(\n      _.chain(ALL_OPTIONS)\n        .filter(function(option) {\n          return _.contains(availableOptions, option.privacy);\n        })\n        .map(function(option) {\n          // Set state that depends on vis and user attrs, they should not vary during the lifecycle of this collection\n          return _.defaults({\n            selected: option.privacy === currentPrivacy,\n            disabled: !(option.alwaysEnable || canSelectPremiumOptions)\n          }, option)\n        })\n        .value()\n    );\n  }\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar OptionModel = require('./option_model');\n\n/**\n * View model for the special privacy option representing a password protected map.\n * It handles the logic related to the password that needs to be set for the option.\n */\nvar PasswordOptionModel = OptionModel.extend({\n  \n  initialize: function() {\n    OptionModel.prototype.initialize.apply(this, arguments);\n\n    // Initially a default fake password is set, but if option is selected (like switching option) it's reset\n    this.set('password', PasswordOptionModel.DEFAULT_FAKE_PASSWORD);\n  },\n\n  /**\n   * @override OptionModel.attrsToSave\n   */\n  _attrsToSave: function() {\n    var attrs = OptionModel.prototype._attrsToSave.call(this);\n    \n    if (attrs.password === PasswordOptionModel.DEFAULT_FAKE_PASSWORD) {\n      delete attrs.password;\n    }\n    \n    return attrs;\n  }, \n  \n  canSave: function() {\n    return OptionModel.prototype.canSave.call(this) && !_.isEmpty(this.get('password'));\n  }\n  \n}, {\n  \n  DEFAULT_FAKE_PASSWORD: '!@#!@#'\n  \n});\n\nmodule.exports = PasswordOptionModel;\n",
    "var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar PermissionView = require('./permission_view');\nvar UserDetailsView = require('./user_details_view');\nvar GroupDetailsView = require('./group_details_view');\nvar ViewFactory = require('../../../view_factory');\n\n/**\n * Content view of the share dialog, lists of users to share item with.\n * - model: {Object} the share view model\n * - collection: {cdb.admin.Grantables}\n * - hasSearch: {Boolean}\n */\nmodule.exports = cdb.core.View.extend({\n\n  initialize: function() {\n    _.each(['model', 'collection', 'pagedSearchModel'], function(name) {\n      if (_.isUndefined(this.options[name])) throw new Error(name + ' is required');\n    }, this);\n\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.$el.empty();\n\n    if (!this.options.pagedSearchModel.get('q')) {\n      this._renderOrganizationPermissionView()\n    }\n    this._renderGrantablesViews();\n    return this;\n  },\n\n  _initBinds: function() {\n    this.collection.bind('reset', this.render, this);\n    this.add_related_model(this.collection);\n\n    this.options.pagedSearchModel.on('change:q', this.render, this);\n    this.add_related_model(this.options.pagedSearchModel);\n  },\n\n  _renderGrantablesViews: function() {\n    var dependentVisualizations = this.model.get('vis').tableMetadata().dependentVisualizations();\n    this.collection.each(function(grantable) {\n      this._appendView(\n        new PermissionView({\n          model: grantable.entity,\n          permission: this.model.get('permission'),\n          isWriteAccessTogglerAvailable: this.model.isWriteAccessTogglerAvailable(),\n          detailsView: this._createDetailsView(\n            this._detailsViewOpts.bind(this, dependentVisualizations, grantable.entity),\n            grantable\n          )\n        })\n      )\n    }, this);\n  },\n\n  _renderOrganizationPermissionView: function() {\n    this._appendView(\n      new PermissionView({\n        model: this.model.get('organization'),\n        permission: this.model.get('permission'),\n        isWriteAccessTogglerAvailable: this.model.isWriteAccessTogglerAvailable(),\n        detailsView: ViewFactory.createByTemplate('common/dialogs/change_privacy/share/details', {\n          avatarUrl: false,\n          willRevokeAccess: false,\n          title: 'Default settings for your Organization',\n          desc: 'New users will have this permission',\n          roleLabel: false\n        }, {\n          className: 'ChangePrivacy-shareListItemInfo'\n        })\n      })\n    );\n  },\n\n  _appendView: function(view) {\n    this.$el.append(view.render().el);\n    this.addView(view);\n  },\n\n  _createDetailsView: function(detailsViewOpts, grantable) {\n    var type = grantable.get('type');\n    switch(type) {\n      case 'user':\n        return new UserDetailsView(\n          detailsViewOpts([grantable.id])\n        );\n        break;\n      case 'group':\n        return new GroupDetailsView(\n          detailsViewOpts(\n            grantable.entity.users.chain()\n              .reject(this._isCurrentUser)\n              .pluck('id')\n              .value()\n          )\n        );\n        break;\n      default:\n        cdb.log.error('No details view for grantable model of type ' + type);\n        return new cdb.core.View(detailsViewOpts());\n    }\n  },\n\n  _detailsViewOpts: function(dependentVisualizations, grantableEntity, userIds) {\n    return {\n      className: 'ChangePrivacy-shareListItemInfo',\n      model: grantableEntity,\n      permission: this.model.get('permission'),\n      isUsingVis: _.any(dependentVisualizations, function(vis) {\n        return _.any(userIds, function(userId) {\n          return userId === vis.permission.owner.id;\n        })\n      })\n    };\n  },\n\n  _isCurrentUser: function(user) {\n    return user.id === cdb.config.get('user').id;\n  },\n\n});\n",
    "var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar pluralizeString = require('../../../view_helpers/pluralize_string')\n\nmodule.exports = cdb.core.View.extend({\n\n  initialize: function() {\n    _.each(['permission', 'isUsingVis'], function(name) {\n      if (_.isUndefined(this.options[name])) throw new Error(name + ' is required');\n    }, this);\n  },\n\n  render: function() {\n    this.$el.html(\n      this.getTemplate('common/dialogs/change_privacy/share/details')({\n        willRevokeAccess: this._willRevokeAccess(),\n        avatarUrl: this.model.get('avatar_url'),\n        title: this.model.get('display_name'),\n        desc: this._desc(),\n        roleLabel: false\n      })\n    );\n    return this;\n  },\n\n  _desc: function() {\n    var usersCount = this.model.users.length;\n    var xMembers = pluralizeString.prefixWithCount('member', 'members', usersCount);\n\n    if (this._willRevokeAccess()) {\n      return xMembers + '. ' + pluralizeString(\"Member's\", \"Members'\", usersCount) + ' maps will be affected';\n    } else if (this.options.isUsingVis) {\n      return xMembers + '. ' + pluralizeString('Member is', 'Members are', usersCount) + ' using this dataset';\n    } else {\n      return xMembers;\n    }\n  },\n\n  _willRevokeAccess: function() {\n    return this.options.isUsingVis && !this.options.permission.hasReadAccess(this.model);\n  }\n\n});\n",
    "var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * View for an individual access toggler.\n */\nmodule.exports = cdb.core.View.extend({\n\n  tagName: 'span',\n\n  events: {\n    'mouseover .js-toggler.is-disabled': '_onHoverDisabledToggler',\n    'mouseout .js-toggler': '_closeTooltip',\n    'mouseleave .js-toggler': '_closeTooltip',\n    'change .js-input': '_onChangeInput'\n  },\n\n  initialize: function() {\n    _.each(['model', 'permission', 'hasAccess', 'canChangeAccess', 'toggleAccess', 'label'], function(name) {\n      if (_.isUndefined(this.options[name])) throw new Error(name + ' is required');\n    }, this);\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.$el.html(\n      cdb.templates.getTemplate('common/dialogs/change_privacy/share/permission_toggler')({\n        cid: this.cid,\n        hasAccess: this.options.hasAccess(),\n        canChangeAccess: this.options.canChangeAccess(),\n        label: this.options.label\n      })\n    );\n    return this;\n  },\n\n  _onChangeInput: function() {\n    this.options.toggleAccess();\n  },\n\n  _onHoverDisabledToggler: function(ev) {\n    var aclItem = this.options.permission.findRepresentableAclItem(this.model);\n    if (aclItem && !aclItem.isOwn(this.model)) {\n      this._tooltipView().showTipsy();\n    }\n  },\n\n  _closeTooltip: function() {\n    this._tooltipView().hideTipsy();\n  },\n\n  _tooltipView: function(el) {\n    if (!this._tooltip) {\n      this._tooltip = this._newTooltipView();\n      this.addView(this._tooltip);\n    }\n    return this._tooltip;\n  },\n\n  _newTooltipView: function(el) {\n    return new cdb.common.TipsyTooltip({\n      el: this.$('.js-toggler'),\n      trigger: 'manual',\n      title: this._inheritedAccessTooltipText.bind(this)\n    });\n  },\n\n  _inheritedAccessTooltipText: function() {\n    var aclItem = this.options.permission.findRepresentableAclItem(this.model);\n    var type = aclItem.get('type');\n    switch(type) {\n      case 'group':\n        return 'Access is inherited from group ' + aclItem.get('entity').get('name');\n      case 'org':\n        return 'Access is inherited from organization';\n      default:\n        cdb.log.error('Trying to display inherited access for an unrecognized type ' + type)\n        return ''\n    }\n  }\n\n});\n",
    "var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar PermissionTogglerview = require('./permission_toggler_view');\nvar ViewFactory = require('../../../view_factory');\n\n/**\n * View to change permission for a given model.\n */\nmodule.exports = cdb.core.View.extend({\n\n  className: 'ChangePrivacy-shareListItem',\n\n  initialize: function() {\n    _.each(['model', 'permission', 'isWriteAccessTogglerAvailable', 'detailsView'], function(name) {\n      if (_.isUndefined(this.options[name])) throw new Error(name + ' is required');\n    }, this);\n\n    this._initBinds();\n  },\n\n  _initBinds: function() {\n    this.options.permission.acl.bind('add remove reset change', this.render, this);\n    this.add_related_model(this.options.permission);\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this._renderDetails();\n    this._renderAccessTogglers();\n    return this;\n  },\n\n  _renderDetails: function() {\n    this._renderView(this.options.detailsView);\n  },\n\n  _renderAccessTogglers: function() {\n    var togglers = [\n      this._newReadToggler()\n    ];\n\n    if (this.options.isWriteAccessTogglerAvailable) {\n      togglers.unshift(this._newWriteToggler());\n    }\n\n    this._renderView(ViewFactory.createByList(togglers));\n  },\n\n  _newWriteToggler: function() {\n    var p = this.options.permission;\n    return new PermissionTogglerview({\n      className: 'ChangePrivacy-shareListItemTogglerContainer',\n      model: this.model,\n      permission: p,\n      label: 'Write',\n      hasAccess: p.hasWriteAccess.bind(p, this.model),\n      canChangeAccess: p.canChangeWriteAccess.bind(p, this.model),\n      toggleAccess: this._toggleWrite.bind(this)\n    });\n  },\n\n  _newReadToggler: function() {\n    var p = this.options.permission;\n    return new PermissionTogglerview({\n      model: this.model,\n      permission: p,\n      label: 'Read',\n      hasAccess: p.hasReadAccess.bind(p, this.model),\n      canChangeAccess: p.canChangeReadAccess.bind(p, this.model),\n      toggleAccess: this._toggleRead.bind(this)\n    });\n  },\n\n  _renderView: function(view) {\n    this.addView(view);\n    this.$el.append(view.render().el)\n  },\n\n  _toggleWrite: function() {\n    var p = this.options.permission;\n    if (p.canChangeWriteAccess(this.model)) {\n      if (p.hasWriteAccess(this.model)) {\n        p.revokeWriteAccess(this.model);\n      } else {\n        p.grantWriteAccess(this.model);\n      }\n    }\n  },\n\n  _toggleRead: function() {\n    var p = this.options.permission;\n    if (p.canChangeReadAccess(this.model)) {\n      if (p.hasReadAccess(this.model)) {\n        p.revokeAccess(this.model);\n      } else {\n        p.grantReadAccess(this.model);\n      }\n    }\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n/**\n * View model for a share view modal.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    vis: undefined,\n    permission: undefined,\n    organization: undefined\n  },\n\n  initialize: function(attrs) {\n    if (!attrs.vis) throw new Error('vis is required');\n    if (!attrs.organization) throw new Error('organization is required');\n\n    var vis = this.get('vis');\n    this.set('permission', vis.permission.clone());\n\n    if (!vis.isVisualization()) {\n      var self = this;\n      vis.tableMetadata().fetch({\n        silent: true,\n        success: function() {\n          self.trigger('all');\n        }\n      });\n    }\n  },\n\n  name: function() {\n    return this.get('vis').get('name');\n  },\n\n  isWriteAccessTogglerAvailable: function() {\n    return !this.get('vis').isVisualization();\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar BaseDialog = require('../../../views/base_dialog/view');\nvar randomQuote = require('../../../view_helpers/random_quote');\nvar ViewFactory = require('../../../view_factory');\nvar PagedSearchModel = require('../../../paged_search_model');\nvar PagedSearchView = require('../../../views/paged_search/paged_search_view');\nvar ShareModel = require('./share_model');\nvar GrantablesView = require('./grantables_view');\n\n/**\n * Dialog to share item with other users in organization.\n */\nmodule.exports = BaseDialog.extend({\n\n  events: BaseDialog.extendEvents({\n    'click .js-back': '_openChangePrivacy'\n  }),\n\n  initialize: function() {\n    if (!this.options.ChangePrivacyView) throw new Error('ChangePrivacyView is required');\n    this.user = this.options.user;\n    this.organization = this.user.organization;\n    this.model = new ShareModel({\n      vis: this.options.vis,\n      organization: this.organization\n    });\n    this.elder('initialize');\n    this._initViews();\n    this._initBinds();\n  },\n\n  render: function() {\n    BaseDialog.prototype.render.apply(this, arguments);\n    this.$('.content').addClass('Dialog-content--expanded');\n    return this;\n  },\n\n  // @implements cdb.ui.common.Dialog.prototype.render_content\n  render_content: function() {\n    return [\n      this._htmlNode(\n        cdb.templates.getTemplate('common/dialogs/change_privacy/share/share_header')({\n          name: this.options.vis.get('name')\n        })\n      ),\n      this._grantablesView.render().el,\n      this._htmlNode(cdb.templates.getTemplate('common/dialogs/change_privacy/share/share_footer')())\n    ];\n  },\n\n  // @implements cdb.ui.common.Dialog.prototype.ok\n  ok: function() {\n    var loadingView = ViewFactory.createDialogByTemplate('common/templates/loading', {\n      title: 'Sharing…',\n      quote: randomQuote()\n    });\n    loadingView.appendToBody();\n\n    var permission = this.options.vis.permission;\n    permission.overwriteAcl(this.model.get('permission'));\n    permission.save()\n      .always(function() {\n        loadingView.close();\n      })\n      .fail(function() {\n        var failView = ViewFactory.createDialogByTemplate('common/templates/fail', {\n          msg: ''\n        });\n        failView.appendToBody();\n      })\n      .done(this._openChangePrivacy.bind(this));\n  },\n\n  _initViews: function() {\n    var model = this.model;\n    var grantables = this.organization.grantables;\n    var pagedSearchModel = new PagedSearchModel({\n      per_page: 50,\n      order: 'name',\n    });\n    this._grantablesView = new PagedSearchView({\n      isUsedInDialog: true,\n      pagedSearchModel: pagedSearchModel,\n      collection: grantables,\n      createListView: function() {\n        return new GrantablesView({\n          model: model,\n          collection: grantables,\n          pagedSearchModel: pagedSearchModel\n        })\n      }\n    });\n  },\n\n  _initBinds: function() {\n    this.model.on('all', this._grantablesView.render, this._grantablesView);\n  },\n\n  _htmlNode: function(htmlStr) {\n    return $(htmlStr)[0];\n  },\n\n  _openChangePrivacy: function() {\n    var view = new this.options.ChangePrivacyView({\n      clean_on_hide: true,\n      enter_to_confirm: true,\n      vis: this.options.vis,\n      user: this.user\n    });\n    view.appendToBody();\n    this.close();\n  }\n\n});\n",
    "var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * View for the user details to show in the context of a permission item.\n */\nmodule.exports = cdb.core.View.extend({\n\n  initialize: function() {\n    _.each(['permission', 'isUsingVis'], function(name) {\n      if (_.isUndefined(this.options[name])) throw new Error(name + ' is required');\n    }, this);\n  },\n\n  render: function() {\n    this.$el.html(\n      this.getTemplate('common/dialogs/change_privacy/share/details')({\n        willRevokeAccess: this._willRevokeAccess(),\n        avatarUrl: this.model.get('avatar_url'),\n        title: this.model.get('username'),\n        desc: this._desc(),\n        roleLabel: this.model.get('viewer') ? 'Viewer' : 'Builder'\n      })\n    );\n    return this;\n  },\n\n  _desc: function() {\n    var email = this.model.get('email')\n\n    if (this._willRevokeAccess()) {\n      return email + \". User's maps will be affected\";\n    } else if (this.options.isUsingVis) {\n      return email + \". User is using this dataset\";\n    } else {\n      return email;\n    }\n  },\n\n  _willRevokeAccess: function() {\n    return this.options.isUsingVis && !this.options.permission.hasReadAccess(this.model);\n  }\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar pluralizeStr = require('../../view_helpers/pluralize_string');\n\nvar DISABLED_SAVE_CLASS_NAME = 'is-disabled';\nvar SHARED_ENTITIES_SAMPLE_SIZE = 5;\n\n/**\n * View represent the start screen when opening the privacy dialog.\n * Display privacy options and possibly a upgrade or share banner depending on user privileges.\n */\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-option': '_onClickOption',\n    'click .js-share': '_onClickShare',\n    'keyup .js-password-input': '_onKeyUpPasswordInput'\n  },\n\n  initialize: function() {\n    this.elder('initialize');\n    if (!this.options.privacyOptions) throw new Error('privacyOptions is required');\n    if (!this.options.user) throw new Error('user is required');\n    if (!this.options.vis) throw new Error('vis is required');\n    this.template = cdb.templates.getTemplate('common/dialogs/change_privacy/start');\n    this._initBinds();\n  },\n\n  render: function() {\n    // Password might not be available (i.e. for changing privacy of a dataset)\n    var pwdOption = this.options.privacyOptions.passwordOption();\n    var password = pwdOption ? pwdOption.get(\"password\") : '';\n\n    var selectedOption = this.options.privacyOptions.selectedOption();\n    var upgradeUrl = cdb.config.get('upgrade_url');\n    var sharedEntities = this.options.vis.permission.getUsersWithAnyPermission();\n\n    this.$el.html(\n      this.template({\n        vis: this.options.vis,\n        privacyOptions: this.options.privacyOptions,\n        password: password,\n        saveBtnClassNames: selectedOption.canSave() ? '' : DISABLED_SAVE_CLASS_NAME,\n        showUpgradeBanner: upgradeUrl && this.options.privacyOptions.any(function(o) { return !!o.get('disabled'); }),\n        upgradeUrl: upgradeUrl,\n        showTrial: this.options.user.canStartTrial(),\n        showShareBanner: this.options.user.organization,\n        sharedEntitiesCount: sharedEntities.length,\n        personOrPeopleStr: pluralizeStr('person', 'people', sharedEntities.length),\n        sharedEntitiesSampleCount: SHARED_ENTITIES_SAMPLE_SIZE,\n        sharedEntitiesSample: _.take(sharedEntities, SHARED_ENTITIES_SAMPLE_SIZE),\n        sharedWithOrganization: this.options.vis.permission.isSharedWithOrganization()\n      })\n    );\n\n    this.delegateEvents();\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.options.privacyOptions.bind('change:selected change:disabled', this.render, this);\n    this.options.privacyOptions.bind('change:password', this._onChangePassword, this);\n    this.add_related_model(this.options.privacyOptions);\n  },\n\n  _onClickOption: function(ev) {\n    var i = $(ev.target).closest('.js-option').data('index');\n    var option = this.options.privacyOptions.at(i);\n\n    if (!option.get('disabled')) {\n      option.set('selected', true);\n    }\n\n    var pwdOption = this.options.privacyOptions.passwordOption();\n    if (option === pwdOption) {\n      this.$(\".js-password-input\")\n        .val('') // reset any existing input value\n        .focus()\n        .keyup(); // manually trigger a key up event to change password state\n    } else if (pwdOption) { // Password might not be available (i.e. for changing privacy of a dataset)\n      this.$(\".js-password-input\").val(pwdOption.get(\"password\"));\n    }\n  },\n\n  _onChangePassword: function() {\n    this.$('.ok').toggleClass(DISABLED_SAVE_CLASS_NAME, !this.options.privacyOptions.selectedOption().canSave());\n  },\n\n  _onKeyUpPasswordInput: function(ev) {\n    this.options.privacyOptions.passwordOption().set('password', ev.target.value);\n  },\n\n  _onClickShare: function(ev) {\n    this.killEvent(ev);\n    this.trigger('clickedShare');\n  }\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar CreateHeader = require('./create_header');\nvar CreateFooter = require('./create_footer');\nvar CreateListing = require('./create_listing');\nvar CreateLoading = require('./create_loading');\nvar NavigationView = require('./listing/navigation_view');\n\n/**\n *  Create content view\n *\n *  It will manage big components within dialog. They are:\n *\n *  - Create header\n *  - Navigation\n *  - Create body\n *  - Create footer\n *  - Create loading\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click': '_onClickContent'\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this._initViews();\n    this._setOption();\n    return this;\n  },\n\n  _initViews: function() {\n    // Create dialog header\n    var createHeader = new CreateHeader({\n      el: this.$('.CreateDialog-header'),\n      user: this.user,\n      model: this.model\n    })\n    createHeader.render();\n    this.addView(createHeader);\n\n    // Navigation view\n    var navigationView = new NavigationView({\n      el: this.$('.js-navigation'),\n      user: this.user,\n      routerModel: this.model.visFetchModel,\n      createModel: this.model,\n      collection: this.model.collection\n    });\n    navigationView.render();\n    this.addView(navigationView);\n\n    // Create dialog footer\n    var createFooter = new CreateFooter({\n      el: this.$('.CreateDialog-footer'),\n      user: this.user,\n      createModel: this.model\n    });\n\n    createFooter.render();\n    this.addView(createFooter);\n\n    // Create pane\n    this.createPane = new cdb.ui.common.TabPane({\n      el: this.$(\".Dialog-body--create\")\n    });\n    // Don't show navigation menu when\n    // a map or dataset is being created\n    this.createPane.bind('tabEnabled', function(tabName) {\n      navigationView[tabName === \"listing\" ? 'show' : 'hide' ]();\n    }, this);\n    this.addView(this.createPane);\n\n    // Create dialog loading state\n    var createLoading = new CreateLoading({\n      user: this.user,\n      createModel: this.model\n    });\n\n    createLoading.render();\n    this.createPane.addTab('loading', createLoading);\n\n    // Create dialog listing\n    this._createListing = new CreateListing({\n      user: this.user,\n      createModel: this.model\n    });\n    this._createListing.render();\n    this.createPane.addTab('listing', this._createListing);\n    this.addView(this._createListing);\n\n    this.model.set('option', 'listing');\n  },\n\n  _setOption: function() {\n    this.createPane.active(this.model.getOption());\n  },\n\n  _initBinds: function() {\n    _.bindAll(this, '_onScrollContent');\n    this.model.bind('change:option', this._setOption, this);\n    this.model.bind('change:option', this._maybeShowOnboarding, this);\n    this.$(\".Dialog-body--create\").bind('scroll', this._onScrollContent);\n  },\n\n  _maybeShowOnboarding: function() {\n    if (this._onboardingView && this.model.showOnboarding()) {\n      this._createListing.$el.append(this._onboardingView.render().el);\n      this._onboardingView.show();\n    }\n  },\n\n  _onClickContent: function() {\n    cdb.god.trigger('closeDialogs');\n  },\n\n  _onScrollContent: function() {\n    var isScrolled = this.$(\".Dialog-body--create\").scrollTop() > 0;\n    this.$('.js-navigation').toggleClass('with-long-separator', !!isScrolled);\n  },\n\n  clean: function() {\n    this.$(\".Dialog-body--create\").unbind('scroll', this._onScrollContent);\n    this.elder('clean');\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar UploadModel = require('../../background_polling/models/upload_model');\nvar VisFetchModel = require('../../visualizations_fetch_model');\n\n/**\n *  Create dataset model\n *\n *  - Store the state of the dialog (listing or loading).\n *  - Store the selected datasets for a map creation.\n *  - Store the upload info for a dataset creation.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    type: 'dataset',\n    option: 'listing',\n    listing: 'import' // [import, datasets, scratch]\n  },\n\n  initialize: function(val, opts) {\n    this.user = opts.user;\n    this.upload = new UploadModel({\n      create_vis: false\n    }, {\n      user: this.user\n    });\n\n    this.selectedDatasets = new Backbone.Collection();\n    this.collection = new cdb.admin.Visualizations();\n    this.visFetchModel = new VisFetchModel({\n      content_type: 'datasets',\n      library: this.showLibrary()\n    });\n\n    this._initBinds();\n  },\n\n  viewsReady: function() {\n    // nothing to do for this use-case\n  },\n\n  // For create-listing view\n  showLibrary: function() {\n    return true;\n  },\n\n  // For create-listing view\n  showDatasets: function() {\n    return false;\n  },\n\n  // For create-listing view\n  canSelect: function() {\n    return true;\n  },\n\n  // Get option state (it could be loading or listing)\n  getOption: function() {\n    var option = this.get('option');\n    var states = option.split('.');\n\n    if (states.length > 0) {\n      return states[0];\n    }\n\n    return '';\n  },\n\n  // Get import state (it could be any of the possibilities of the import options, as in scratch, dropbox, etc...)\n  // For create-footer view\n  getImportState: function() {\n    var option = this.get('option');\n    var states = option.split('.');\n\n    if (states.length > 0 && states.length < 4 && states[0] === \"listing\" && states[1] === \"import\") {\n      return states[2];\n    }\n\n    return '';\n  },\n\n  // For create-footer view\n  showGuessingToggler: function() {\n    return true;\n  },\n\n  // For create-footer view\n  showPrivacyToggler: function() {\n    return true;\n  },\n\n  // For create-footer view\n  startUpload: function() {\n    cdb.god.trigger('importByUploadData', this.upload.toJSON());\n  },\n\n  // For create-listing-import view\n  setActiveImportPane: function(option) {\n    if (option && this.get('listing') === \"import\" && this.getImportState() !== option) {\n      this.set('option', 'listing.import.' + option);\n    }\n  },\n\n  // For create-footer view\n  isMapType: function() {\n    return false;\n  },\n\n  // For create-from-scratch view\n  createFromScratch: function() {\n    this.trigger('creatingDataset', 'dataset', this);\n    this.set('option', 'loading');\n\n    var self = this;\n    var dataset = new cdb.admin.CartoDBTableMetadata();\n\n    dataset.save({}, {\n      success: function(m) {\n        self.trigger('datasetCreated', m, self);\n      },\n      error: function(m, e) {\n        self.trigger('datasetError', e, self);\n      }\n    });\n  },\n\n  _initBinds: function() {\n    this.upload.bind('change', function() {\n      this.trigger('change:upload', this);\n    }, this);\n    this.collection.bind('change:selected', this._onItemSelected, this);\n    this.visFetchModel.bind('change', this._fetchCollection, this);\n    this.bind('change:option', this._maybePrefetchDatasets, this);\n    this.bind('change:listing', this._maybePrefetchDatasets, this);\n  },\n\n  _maybePrefetchDatasets: function() {\n    var isDatasets = this.get('listing') === 'datasets';\n\n    // Fetch collection if it was never fetched (and a search is not applied!)\n    if (isDatasets && !this.get('collectionFetched') && !this.visFetchModel.isSearching()) {\n      this.set('collectionFetched', true);\n      this._fetchCollection();\n    }\n  },\n\n  _selectedItems: function() {\n    return this.collection.where({ selected: true });\n  },\n\n  _fetchCollection: function() {\n    var params = this.visFetchModel.attributes;\n\n    this.collection.options.set({\n      locked: '',\n      q: params.q,\n      page: params.page || 1,\n      tags: params.tag,\n      per_page: this.collection['_TABLES_PER_PAGE'],\n      shared: params.shared,\n      only_liked: params.liked,\n      order: 'updated_at',\n      type: '',\n      types: params.library ? 'remote' : 'table',\n      exclude_raster: true\n    });\n\n    this.collection.fetch();\n  },\n\n  _onItemSelected: function(changedModel) {\n    // Triggers an import immediately\n    if (changedModel.get('type') === 'remote') {\n      // previously located in listings/datasets/remote_datasets_item_view\n      var table = new cdb.admin.CartoDBTableMetadata(changedModel.get('external_source'));\n      var d = {\n        type: 'remote',\n        value: changedModel.get('name'),\n        remote_visualization_id: changedModel.get('id'),\n        size: table.get('size'),\n        create_vis: false\n      };\n      cdb.god.trigger('importByUploadData', d);\n    }\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar GuessingTogglerView = require('./footer/guessing_toggler_view');\nvar PrivacyTogglerView = require('./footer/privacy_toggler_view');\n\n/**\n *  Create footer view\n *\n *  It will show possible choices depending the\n *  selected option and the state of the main model\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-templates': '_goToTemplates',\n    'click .js-create_map': '_createMap',\n    'click .js-connect': '_connectDataset',\n    'click .js-videoTutorial': '_startTutorial'\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.createModel = this.options.createModel;\n    this.guessingModel = new cdb.core.Model({ guessing: true });\n    this.privacyModel = new cdb.core.Model({\n      privacy: this.user.canCreatePrivateDatasets() ? 'PRIVATE' : 'PUBLIC'\n    });\n    this.template = cdb.templates.getTemplate('common/views/create/create_footer');\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    var userCanUpgrade = window.upgrade_url && !cdb.config.get('cartodb_com_hosted') && (!this.user.isInsideOrg() || this.user.isOrgOwner() );\n\n    this.$el.html(\n      this.template({\n        isMapType: this.createModel.isMapType(),\n        option: this.createModel.getOption(),\n        listingState: this.createModel.get('listing'),\n        isLibrary: this.createModel.visFetchModel.get('library'),\n        importState: this.createModel.getImportState(),\n        isUploadValid: this.createModel.upload.isValidToUpload(),\n        selectedDatasetsCount: this.createModel.selectedDatasets.length,\n        maxSelectedDatasets: this.user.getMaxLayers(),\n        mapTemplate: this.createModel.get('mapTemplate'),\n        userCanUpgrade: userCanUpgrade,\n        upgradeUrl: window.upgrade_url,\n        currentUrl: window.location.href\n      })\n    );\n\n    this._initViews();\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.createModel.bind('change:upload', this.render, this);\n    this.createModel.bind('change:option', this.render, this);\n    this.createModel.bind('change:listing', this.render, this);\n    this.createModel.selectedDatasets.bind('all', this.render, this);\n    this.createModel.visFetchModel.bind('change:library', this.render, this);\n    this.add_related_model(this.createModel);\n    this.add_related_model(this.createModel.selectedDatasets);\n    this.add_related_model(this.createModel.visFetchModel);\n  },\n\n  _initViews: function() {\n    this.guessingTogglerView = new GuessingTogglerView({\n      model: this.guessingModel,\n      createModel: this.createModel\n    });\n    this.$('.js-footer-info').append(this.guessingTogglerView.render().el);\n    this.addView(this.guessingTogglerView);\n\n    this.privacyTogglerView = new PrivacyTogglerView({\n      model: this.privacyModel,\n      user: this.user,\n      createModel: this.createModel\n    });\n    this.$('.js-footerActions').prepend(this.privacyTogglerView.render().el);\n    this.addView(this.privacyTogglerView);\n  },\n\n  _connectDataset: function() {\n    if (this.createModel.upload.isValidToUpload()) {\n      // Setting privacy for new import if toggler is enabled\n      if (this.createModel.showPrivacyToggler()) {\n        this.createModel.upload.set('privacy', this.privacyModel.get('privacy'));\n      }\n      // Set proper guessing values before starting the upload\n      this.createModel.upload.setGuessing(this.guessingModel.get('guessing'));\n      this.createModel.startUpload();\n    }\n  },\n\n  _startTutorial: function() {\n    this.createModel.startTutorial();\n  },\n\n  _goToTemplates: function(e) {\n    if (e) e.preventDefault();\n    this.createModel.set('option', 'templates');\n  },\n\n  _createMap: function() {\n    var selectedDatasets = this.createModel.selectedDatasets;\n    if (selectedDatasets.length > 0 && selectedDatasets.length <= this.user.getMaxLayers()) {\n      this.createModel.createMap();\n    }\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n *  Create header view\n *\n *  It will manage which content should be displayed\n *  depending create model\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n  \n  initialize: function() {\n    this.user = this.options.user;\n    this.template = cdb.templates.getTemplate('common/views/create/create_header');\n    this._initBinds();\n  },\n\n  render: function() {\n    this.$el.html(\n      this.template({\n        type: this.model.get('type'),\n        option: this.model.getOption()\n      })\n    );\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:option', this.render, this);\n  }\n\n});",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar DatasetsView = require('./listing/datasets_view');\nvar ImportsView = require('./listing/imports_view');\n\n/**\n *  Create listing view\n *\n *  It will display all the possibilities to select\n *  any of your current datasets or connect a new dataset.\n *\n */\nmodule.exports = cdb.core.View.extend({\n\n  className: 'CreateDialog-listing CreateDialog-listing--noPaddingTop',\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.createModel = this.options.createModel;\n    this.template = cdb.templates.getTemplate('common/views/create/create_listing');\n\n    // Bug with binding... do not work with the usual one for some reason :(\n    this.createModel.bind('change:listing', this._onChangeListing.bind(this));\n    this.add_related_model(this.createModel);\n    this._onChangeListing();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.$el.html(this.template());\n    this._initViews();\n    return this;\n  },\n\n  _onChangeListing: function() {\n    if (this.listingPane) {\n      this.listingPane.active(this.createModel.get('listing'));\n    }\n  },\n\n  _initViews: function() {\n    // Listing content pane\n    this.listingPane = new cdb.ui.common.TabPane({\n      el: this.$(\".ListingContent\")\n    });\n    this.addView(this.listingPane);\n\n    // Datasets view\n    var datasetsView = new DatasetsView({\n      defaultUrl: this.user.viewUrl().dashboard().datasets(),\n      user: this.user,\n      createModel: this.createModel,\n      routerModel: this.createModel.visFetchModel,\n      collection: this.createModel.collection\n    });\n\n    datasetsView.render();\n    this._addListingPane('datasets', datasetsView);\n\n    // Imports view\n    if (this.user.canCreateDatasets()) {\n      var importsView = new ImportsView({\n        user: this.user,\n        createModel: this.createModel\n      });\n\n      importsView.render();\n      this._addListingPane('import', importsView);\n    }\n  },\n\n  _addListingPane: function(name, view) {\n    this.listingPane.addTab(name, view, {\n      active: this.createModel.get('listing') === name\n    });\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar randomQuote = require('../../view_helpers/random_quote');\n\n/**\n *  Create loading view\n *\n *  It will show a big loading when a new map is gonna be created\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'IntermediateInfo',\n  tagName: 'div',\n\n  initialize: function() {\n    this.createModel = this.options.createModel;\n    this.user = this.options.user;\n    this.model = new cdb.core.Model({ state: 'loading', type: 'dataset' });\n    this._initBinds();\n  },\n\n  render: function() {\n    var currentImport = this.model.get('currentImport');\n    var d = {\n      createModelType: this.createModel.get('type'),\n      type: this.model.get('type'),\n      state: this.model.get('state'),\n      currentImport: currentImport,\n      currentImportName: currentImport && ( currentImport.upl.get('service_item_id') || currentImport.upl.get('value') ),\n      tableIdsArray: this.model.get('tableIdsArray'),\n      selectedDatasets: this.createModel.selectedDatasets,\n      upgradeUrl: window.upgrade_url,\n      freeTrial: this.user.get('show_trial_reminder'),\n      quote: randomQuote()\n    };\n\n    if (currentImport) {\n      d.err = currentImport.getError();\n      d.err.item_queue_id = currentImport.get('id');\n    }\n\n    if (d.state === \"error\") {\n      var sizeError = d.err && d.err.error_code && d.err.error_code == \"8001\";\n      var userCanUpgrade = !cdb.config.get('cartodb_com_hosted') && (!this.user.isInsideOrg() || this.user.isOrgOwner());\n\n      this.template = cdb.templates.getTemplate(\n        sizeError && userCanUpgrade ?\n          'common/views/create/create_loading_upgrade' :\n          'common/views/create/create_loading_error'\n      )\n    } else {\n      this.template = cdb.templates.getTemplate('common/views/create/create_loading');\n    }\n\n    this.$el.html( this.template(d) );\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:state change:tableIdsArray change:currentImport', this.render, this);\n    // Dataset\n    this.createModel.bind('datasetError', this._onDatasetError, this);\n    this.createModel.bind('creatingDataset', this._creatingDataset, this);\n\n    // Map\n    this.createModel.bind('importingRemote', this._importingRemote, this);\n    this.createModel.bind('importFailed', this._onImportFailed, this);\n    this.createModel.bind('creatingMap', this._creatingMap, this);\n    this.createModel.bind('mapError', this._onMapError, this);\n\n    this.add_related_model(this.createModel);\n  },\n\n  _creatingDataset: function() {\n    this.model.set({\n      type: 'dataset',\n      state: 'loading'\n    });\n  },\n\n  _onDatasetError: function() {\n    this.model.set({\n      type: 'dataset',\n      state: 'error'\n    });\n  },\n\n  _importingRemote: function(m) {\n    this.model.set(\n      _.extend(\n        m.toJSON(),\n        {\n          state: 'importing'\n        }\n      )\n    );\n  },\n\n  _onImportFailed: function(m) {\n    this.model.set(\n      _.extend(\n        m.toJSON(),\n        {\n          state: 'error'\n        }\n      )\n    );\n  },\n\n  _creatingMap: function(m) {\n    this.model.set(\n      _.extend(\n        m.toJSON(),\n        {\n          state: 'creating'\n        }\n      )\n    );\n  },\n\n  _onMapError: function(m) {\n    this.model.set(\n      _.extend(\n        m.toJSON(),\n        {\n          state: 'error'\n        }\n      )\n    );\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar ImportsModel = require('../../background_polling/models/imports_model');\nvar UploadModel = require('../../background_polling/models/upload_model');\nvar VisFetchModel = require('../../visualizations_fetch_model');\n\n/**\n *  This model will be on charge of create a new map\n *  using user selected datasets, where they can be\n *  already imported datasets or remote (and needed to import)\n *  datasets.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    type: 'map',\n    option: 'listing',\n    currentImport: null,\n    tableIdsArray: [],\n    listing: 'datasets' // [import, datasets, scratch]\n  },\n\n  _DEFAULT_MAP_NAME: 'Untitled Map',\n\n  initialize: function(attrs, opts) {\n    this.user = opts.user;\n    this.upload = new UploadModel({\n      create_vis: true\n    }, {\n      user: this.user\n    });\n\n    this.selectedDatasets = new Backbone.Collection(opts.selectedItems);\n    this.collection = new cdb.admin.Visualizations();\n    this.vis = new cdb.admin.Visualization({ name: 'Untitled map' });\n    this.visFetchModel = new VisFetchModel({\n      content_type: 'datasets',\n      library: this.showLibrary()\n    });\n\n    this._initBinds();\n  },\n\n  // For entry point, notifies model that depending views are ready for changes (required for custom events)\n  viewsReady: function() {\n    if (this.selectedDatasets.isEmpty()) {\n      this._maybePrefetchDatasets();\n    } else {\n      // Not empty, so start creating map from these preselected items\n      this.createMap();\n    }\n  },\n\n  // For create-listing view\n  showLibrary: function() {\n    return false;\n  },\n\n  // For create-listing view\n  showDatasets: function() {\n    return true;\n  },\n\n  // For create-listing view\n  canSelect: function(datasetModel) {\n    if (datasetModel.get('selected')) {\n      return true;\n    } else {\n      return this.selectedDatasets.length < this.user.getMaxLayers();\n    }\n  },\n\n  // Get option state (it could be listing or loading)\n  getOption: function() {\n    var option = this.get('option');\n    var states = option.split('.');\n\n    if (states.length > 0) {\n      return states[0];\n    }\n\n    return '';\n  },\n\n  // Get import state (it could be any of the possibilities of the import options, as in scratch, dropbox, etc...)\n  // For create-footer view\n  getImportState: function() {\n    var option = this.get('option');\n    var states = option.split('.');\n\n    if (states.length > 0 && states.length < 4 && states[0] === \"listing\" && states[1] === \"import\") {\n      return states[2];\n    }\n\n    return '';\n  },\n\n  // For create-footer view\n  showGuessingToggler: function() {\n    return true;\n  },\n\n  // For create-footer view\n  showPrivacyToggler: function() {\n    return this.get('listing') === 'import';\n  },\n\n  // For create-listing-import view\n  setActiveImportPane: function(option) {\n    if (option && this.get('listing') === \"import\" && this.getImportState() !== option) {\n      this.set('option', 'listing.import.' + option);\n    }\n  },\n\n  // For create-footer view\n  isMapType: function() {\n    return true;\n  },\n\n  startTutorial: function() {\n    this.trigger('startTutorial', this);\n  },\n\n  // For create-footer view\n  startUpload: function() {\n    cdb.god.trigger('importByUploadData', this.upload.toJSON());\n  },\n\n  createMap: function() {\n    if (this.selectedDatasets.length === 0) {\n      return;\n    }\n    this.set('option', 'loading');\n    this._checkCollection();\n  },\n\n  // For create-from-scratch view\n  createFromScratch: function() {\n    this.trigger('creatingDataset', 'dataset', this);\n    this.set('option', 'loading');\n\n    var self = this;\n    var dataset = new cdb.admin.CartoDBTableMetadata();\n\n    dataset.save({}, {\n      success: function(m) {\n        self.trigger('datasetCreated', m, self);\n      },\n      error: function(m, e) {\n        self.trigger('datasetError', e, self);\n      }\n    });\n  },\n\n  _initBinds: function() {\n    this.upload.bind('change', function() {\n      this.trigger('change:upload', this);\n    }, this);\n    this.bind('change:option', this._onOptionChange, this);\n\n    this.collection.bind('change:selected', function(changedModel, wasSelected) {\n      this.selectedDatasets[ wasSelected ? 'add' : 'remove' ](changedModel);\n    }, this);\n    this.collection.bind('reset', function() {\n      this.selectedDatasets.each(function(model) {\n        var sameModel = this.collection.get(model.id);\n        if (sameModel) {\n          sameModel.set('selected', true);\n        }\n      }, this);\n    }, this);\n    this.visFetchModel.bind('change', this._fetchCollection, this);\n\n    if (this.selectedDatasets.isEmpty()) {\n      this.bind('change:option', this._maybePrefetchDatasets, this);\n      this.bind('change:listing', this._maybePrefetchDatasets, this);\n    }\n  },\n\n  _maybePrefetchDatasets: function() {\n    var isDatasets = this.get('listing') === 'datasets';\n\n    // Fetch collection if it was never fetched (and a search is not applied!)\n    if (isDatasets && !this.get('collectionFetched') && !this.visFetchModel.isSearching()) {\n      this.set('collectionFetched', true);\n      this._fetchCollection();\n    }\n  },\n\n  _fetchCollection: function() {\n    var params = this.visFetchModel.attributes;\n    var types;\n\n    if (this.visFetchModel.isSearching()) {\n      // Supporting search in data library and user datasets at the same time\n      types = 'table,remote';\n    } else {\n      types = params.library ? 'remote' : 'table';\n    }\n\n    this.collection.options.set({\n      locked: '',\n      q: params.q,\n      page: params.page || 1,\n      tags: params.tag,\n      per_page: this.collection['_TABLES_PER_PAGE'],\n      shared: params.shared,\n      only_liked: params.liked,\n      order: 'updated_at',\n      type: '',\n      types: types,\n      exclude_raster: true\n    });\n\n    this.collection.fetch();\n  },\n\n  _selectedItems: function() {\n    return this.selectedDatasets;\n  },\n\n  _checkCollection: function() {\n    if (this.selectedDatasets.length > 0) {\n      this._importDataset(this.selectedDatasets.pop());\n    } else {\n      this.set('currentImport', '');\n      this._createMap();\n    }\n  },\n\n  _importDataset: function(mdl) {\n    var tableIdsArray = _.clone(this.get('tableIdsArray'));\n\n    if (mdl.get('type') === \"remote\") {\n      var d = {\n        create_vis: false,\n        type: 'remote',\n        value: mdl.get('name'),\n        remote_visualization_id: mdl.get('id'),\n        size: mdl.get('external_source') ? mdl.get('external_source').size : undefined\n      };\n\n      var impModel = new ImportsModel({}, {\n        upload: d,\n        user: this.user\n      });\n      this.set('currentImport', _.clone(impModel));\n      this.trigger('importingRemote', this);\n\n      impModel.bind('change:state', function(m) {\n        if (m.hasCompleted()) {\n          var data = m.imp.toJSON();\n          tableIdsArray.push(data.table_name);\n          this.set('tableIdsArray', tableIdsArray);\n          this._checkCollection();\n          this.trigger('importCompleted', this);\n        }\n        if (m.hasFailed()) {\n          this.trigger('importFailed', this);\n        }\n      }, this);\n\n      // If import model has any errors at the beginning\n      if (impModel.hasFailed()) {\n        this.trigger('importFailed', this);\n      }\n    } else {\n      var table = mdl.tableMetadata();\n      tableIdsArray.push(table.get('name'));\n      this.set({\n        currentImport: '',\n        tableIdsArray: tableIdsArray\n      });\n      this._checkCollection();\n    }\n  },\n\n  _createMap: function() {\n    var self = this;\n    var vis = new cdb.admin.Visualization({\n      name: this._DEFAULT_MAP_NAME,\n      type: 'derived'\n    });\n\n    this.trigger('creatingMap', this);\n\n    vis.save({\n      tables: this.get('tableIdsArray')\n    }, {\n      success: function() {\n        self._redirectTo(vis.viewUrl(self.user).edit().toString());\n      },\n      error: function() {\n        self.trigger('mapError', self);\n      }\n    });\n  },\n\n  _redirectTo: function(url) {\n    window.location = url;\n  }\n\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BaseDialog = require('../../views/base_dialog/view');\nvar CreateContent = require('./create_content');\n\n/**\n *  Create view dialog\n *\n *  It let user create a new dataset or map, just\n *  decide the type before creating this dialog, by default\n *  it will help you to create a map.\n *\n */\n\nmodule.exports = BaseDialog.extend({\n\n  className: 'Dialog is-opening CreateDialog',\n\n  initialize: function() {\n    this.elder('initialize');\n    this.user = this.options.user;\n    this.template = cdb.templates.getTemplate('common/views/create/dialog_template');\n    this._initBinds();\n  },\n\n  render: function() {\n    BaseDialog.prototype.render.call(this);\n    this.$('.content').addClass('Dialog-content--expanded');\n    this._initViews();\n    return this;\n  },\n\n  render_content: function() {\n    return this.template();\n  },\n\n  _initBinds: function() {\n    cdb.god.bind('importByUploadData', this.close, this);\n    this.add_related_model(cdb.god);\n  },\n\n  _initViews: function() {\n    var createContent = new CreateContent({\n      el: this.$el,\n      model: this.model,\n      user: this.user\n    });\n    createContent.render();\n    this.addView(createContent);\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * Manages if upcoming import should guess or not.\n * Expected to be rendered in the footer of a create dialog.\n */\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-toggle': '_toggle'\n  },\n\n  initialize: function() {\n    this.elder('initialize');\n    this.createModel = this.options.createModel;\n    this.template = cdb.templates.getTemplate('common/dialogs/create/footer/guessing_toggler');\n    this._initBinds();\n  },\n\n  render: function() {\n    var htmlStr = '';\n    if (this.createModel.showGuessingToggler()) {\n      htmlStr = this.template({\n        isGuessingEnabled: this.model.get('guessing'),\n        importState: this.createModel.getImportState(),\n        isUploadValid: this.createModel.upload.isValidToUpload(),\n        customHosted: cdb.config.get('cartodb_com_hosted')\n      });\n    }\n    this.$el.html(htmlStr);\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.createModel.bind('change', this.render, this);\n    this.model.bind('change', this.render, this);\n    this.add_related_model(this.createModel);\n  },\n\n  _toggle: function() {\n    var value = !this.model.get('guessing');\n    this.model.set('guessing', value);\n  }\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\n/**\n *  Change the privacy of the new dataset.\n *  - If the user can't change the privacy, it will refer to the upgrade page\n *   unless app is the \"open source\" version\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n  events: {\n    'click': '_onClick'\n  },\n\n  initialize: function () {\n    this.user = this.options.user;\n    this.createModel = this.options.createModel;\n    this.template = cdb.templates.getTemplate('common/dialogs/create/footer/privacy_toggler_template');\n    this._initBinds();\n  },\n\n  render: function () {\n    this.clearSubViews();\n    this.$el.empty();\n\n    if (this.createModel.showPrivacyToggler()) {\n      var canChangePrivacy = this.user.canCreatePrivateDatasets();\n      var privacy = this.model.get('privacy');\n      var nexPrivacy = privacy === 'PUBLIC' ? 'PRIVATE' : 'PUBLIC';\n      var icon = privacy === 'PUBLIC' ? 'unlock' : 'lock';\n      var upgradeUrl = cdb.config.get('upgrade_url') || window.upgrade_url;\n      var canUpgrade = !cdb.config.get('cartodb_com_hosted') && !canChangePrivacy && upgradeUrl;\n\n      this.$el.html(\n        this.template({\n          privacy: privacy,\n          isDisabled: !canChangePrivacy,\n          canUpgrade: canUpgrade,\n          nextPrivacy: nexPrivacy,\n          upgradeUrl: upgradeUrl,\n          icon: icon\n        })\n      );\n\n      this._initViews();\n    }\n\n    return this;\n  },\n\n  _initBinds: function () {\n    this.model.bind('change:privacy', this.render, this);\n  },\n\n  _initViews: function () {\n    // Tooltip\n    this.addView(\n      new cdb.common.TipsyTooltip({\n        el: this.$('.js-toggler'),\n        html: true,\n        title: function () {\n          return $(this).attr('data-title');\n        }\n      })\n    );\n  },\n\n  _onClick: function () {\n    if (this.user.canCreatePrivateDatasets()) {\n      var privacy = this.model.get('privacy');\n      this.model.set('privacy', privacy === 'PUBLIC' ? 'PRIVATE' : 'PUBLIC');\n      return;\n    }\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar randomQuote = require('../../../../../common/view_helpers/random_quote');\n\n/*\n *  Content result default view\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-connect': '_onConnectClick'\n  },\n\n  initialize: function() {\n    if (!this.options.defaultUrl) {\n      throw new Error('defaultUrl is required')\n    }\n    this.user = this.options.user;\n    this.routerModel = this.options.routerModel;\n    this.template = cdb.templates.getTemplate(this.options.template);\n\n    this._initBinds();\n  },\n\n  render: function() {\n    var type = this.routerModel.get('content_type');\n\n    this.$el.html(this.template({\n      defaultUrl:     this.options.defaultUrl,\n      page:           this.routerModel.get('page'),\n      tag:            this.routerModel.get('tag'),\n      q:              this.routerModel.get('q'),\n      shared:         this.routerModel.get('shared'),\n      locked:         this.routerModel.get('locked'),\n      library:        this.routerModel.get('library'),\n      quote:          randomQuote(),\n      type:           type,\n      totalItems:     this.collection.size(),\n      totalEntries:   this.collection.total_entries\n    }));\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.routerModel.bind('change', this.render, this);\n    this.collection.bind('reset', this.render, this);\n    this.add_related_model(this.routerModel);\n    this.add_related_model(this.collection);\n  },\n\n  _onConnectClick: function() {\n    this.trigger('connectDataset', this);\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar moment = (typeof window !== \"undefined\" ? window['moment'] : typeof global !== \"undefined\" ? global['moment'] : null);\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\nvar pluralizeString = require('../../../../view_helpers/pluralize_string');\nvar LikesView = require('../../../../views/likes/view');\n\n/**\n * View representing an item in the list under datasets route.\n */\nmodule.exports = cdb.core.View.extend({\n\n  tagName: 'li',\n  className: 'DatasetsList-item DatasetsList-item--selectable',\n\n  events: {\n    'click .js-tag-link': '_onTagClick',\n    'click': '_toggleSelected'\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.routerModel = this.options.createModel.visFetchModel;\n    this.template = cdb.templates.getTemplate('common/views/create/listing/dataset_item');\n    this.table = new cdb.admin.CartoDBTableMetadata(this.model.get('table'));\n\n    this.model.on('change', this.render, this);\n  },\n\n  render: function() {\n    var vis = this.model;\n    var table = this.table;\n    var tags = vis.get('tags') || [];\n    var description = vis.get('description') && Utils.stripHTML(markdown.toHTML(vis.get('description'))) || '';\n\n    var d = {\n      isRaster:                vis.get('kind') === 'raster',\n      geometryType:            table.geomColumnTypes().length > 0 ? table.geomColumnTypes()[0] : '',\n      title:                   vis.get('name'),\n      isOwner:                 vis.permission.isOwner(this.user),\n      owner:                   vis.permission.owner.renderData(this.user),\n      showPermissionIndicator: !vis.permission.hasWriteAccess(this.user),\n      description:             description,\n      privacy:                 vis.get('privacy').toLowerCase(),\n      likes:                   vis.get('likes') || 0,\n      timeDiff:                moment(vis.get('updated_at')).fromNow(),\n      tags:                    tags,\n      tagsCount:               tags.length,\n      maxTagsToShow:           3,\n      rowCount:                undefined,\n      datasetSize:             undefined,\n      syncStatus:              undefined,\n      syncRanAt:               undefined\n    };\n\n    var rowCount = table.get('row_count');\n    if (rowCount >= 0) {\n      d.rowCount = ( rowCount < 10000 ? Utils.formatNumber(rowCount) : Utils.readizableNumber(rowCount) );\n      d.pluralizedRows = pluralizeString('Row', rowCount);\n    }\n\n    var datasetSize = table.get('size');\n    if (datasetSize >= 0) {\n      d.datasetSize = Utils.readablizeBytes(datasetSize, true);\n    }\n\n    if (!_.isEmpty(vis.get(\"synchronization\"))) {\n      d.syncRanAt = moment(vis.get(\"synchronization\").ran_at || new Date()).fromNow();\n      d.syncStatus = vis.get(\"synchronization\").state;\n    }\n\n    this.$el.html(this.template(d));\n\n    this._renderLikesIndicator();\n    this._renderTooltips();\n\n    // Item selected?\n    this.$el[ vis.get('selected') ? 'addClass' : 'removeClass' ]('is--selected');\n\n    return this;\n  },\n\n  _renderLikesIndicator: function() {\n    var view = new LikesView({\n      model: this.model.like\n    });\n    this.$('.js-likes-indicator').replaceWith(view.render().el);\n    this.addView(view);\n  },\n\n  _renderTooltips: function() {\n    if (!_.isEmpty(this.model.get(\"synchronization\"))) {\n      this.addView(\n        new cdb.common.TipsyTooltip({\n          el: this.$('.DatasetsList-itemStatus'),\n          title: function(e) {\n            return $(this).attr('data-title')\n          }\n        })\n      )\n    }\n  },\n\n  _onTagClick: function(ev) {\n    var tag = $(ev.target).val();\n\n    if (tag) {\n      this.routerModel.set('tag', tag);\n    }\n  },\n\n  _toggleSelected: function(ev) {\n    // Let links use default behaviour\n    if (ev.target.tagName !== 'A') {\n      this.killEvent(ev);\n      if (this.options.createModel.canSelect(this.model)) {\n        this.model.set('selected', !this.model.get('selected'));\n      }\n    }\n  }\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar PaginationModel = require('../../../../views/pagination/model');\nvar PaginationView = require('../../../../views/pagination/view');\n\n\n/**\n * Responsible for the datasets paginator\n *  ___________________________________________________________________________\n * |                                                                           |\n * |                                             Page 2 of 42 [1] 2 [3][4][5]  |\n * |___________________________________________________________________________|\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'DatasetsPaginator',\n\n  initialize: function() {\n    this.routerModel = this.options.routerModel;\n    this.collection = this.options.collection;\n    this.model = new PaginationModel({\n      current_page: this.routerModel.get('page')\n    });\n\n    this._initBinds();\n    this._initViews();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.$el.append(this.paginationView.render().el);\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change', this.render, this);\n    this.model.bind('change:current_page', function() {\n      this.routerModel.set('page', this.model.get('current_page'));\n    }, this);\n    this.collection.bind('reset', this._updatePaginationModelByCollection, this);\n    this.routerModel.bind('change:page', this._updatePaginationModelByRouterModel, this);\n\n    this.add_related_model(this.routerModel);\n    this.add_related_model(this.collection);\n    this.add_related_model(this.model);\n  },\n\n  _initViews: function() {\n    this.paginationView = new PaginationView({\n      model: this.model\n    });\n    this.addView(this.paginationView);\n  },\n\n  _updatePaginationModelByCollection: function() {\n    this.model.set({\n      per_page:    this.collection.options.get('per_page'),\n      total_count: this.collection.total_entries\n    });\n  },\n\n  _updatePaginationModelByRouterModel: function() {\n    this.model.set('current_page', this.routerModel.get('page'));\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar DatasetItem = require('./dataset_item_view');\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\nvar UploadConfig = require('../../../../background_polling/models/upload_config');\nvar pluralizeString = require('../../../../view_helpers/pluralize_string');\n\n/**\n *  Remote dataset item view\n *\n */\n\nmodule.exports = DatasetItem.extend({\n\n  tagName: 'li',\n  className: 'DatasetsList-item',\n\n  events: {\n    'click .js-tag-link': '_onTagClick',\n    'click': '_toggleSelected'\n  },\n\n  initialize: function() {\n    this.elder('initialize');\n    this.template = cdb.templates.getTemplate('common/views/create/listing/remote_dataset_item');\n    this.table = new cdb.admin.CartoDBTableMetadata(this.model.get('external_source'));\n  },\n\n  render: function() {\n    var vis = this.model;\n    var table = this.table;\n    var tags = vis.get('tags') || [];\n    var description = vis.get('description') && Utils.stripHTML(markdown.toHTML(vis.get('description'))) || '';\n    var source = vis.get('source') && markdown.toHTML(vis.get('source')) || '';\n\n    var d = {\n      isRaster:                vis.get('kind') === 'raster',\n      geometryType:            table.geomColumnTypes().length > 0 ? table.geomColumnTypes()[0] : '',\n      title:                   vis.get('display_name') || vis.get('name'),\n      source:                  source,\n      description:             description,\n      timeDiff:                moment(vis.get('updated_at')).fromNow(),\n      tags:                    tags,\n      tagsCount:               tags.length,\n      routerModel:             this.routerModel,\n      maxTagsToShow:           3,\n      canImportDataset:        this._canImportDataset(),\n      rowCount:                undefined,\n      datasetSize:             undefined\n    };\n\n    var rowCount = table.get('row_count');\n    if (rowCount >= 0) {\n      d.rowCount = ( rowCount < 10000 ? Utils.formatNumber(rowCount) : Utils.readizableNumber(rowCount) );\n      d.pluralizedRows = pluralizeString('Row', rowCount);\n    }\n\n    var datasetSize = table.get('size');\n    if (datasetSize >= 0) {\n      d.datasetSize = Utils.readablizeBytes(\n        datasetSize,\n        datasetSize.toString().length > 9 ? false : true\n      );\n    }\n\n    this.$el.html(this.template(d));\n    this._setItemClasses();\n    this._renderTooltips();\n\n    return this;\n  },\n\n  _setItemClasses: function() {\n    // Item selected?\n    this.$el[ this.model.get('selected') ? 'addClass' : 'removeClass' ]('is--selected');\n    // Check if it is selectable\n    this.$el[ this._canImportDataset() ? 'addClass' : 'removeClass' ]('DatasetsList-item--selectable');\n    // Check if it is importable\n    this.$el[ this._canImportDataset() ? 'removeClass' : 'addClass' ]('DatasetsList-item--banned');\n  },\n\n  _renderTooltips: function() {\n    this.addView(\n      new cdb.common.TipsyTooltip({\n        el: this.$('.DatasetsList-itemStatus'),\n        title: function(e) {\n          return $(this).attr('data-title')\n        }\n      })\n    )\n  },\n\n  _onTagClick: function(ev) {\n    if (ev) {\n      this.killEvent(ev);\n    }\n\n    var tag = $(ev.target).val();\n\n    if (tag) {\n      this.routerModel.set({\n        tag: tag,\n        library: true\n      });\n    }\n  },\n\n  _canImportDataset: function() {\n    var table_size = this.table.get('size') || 0;\n    return (\n        this.user.get('remaining_byte_quota') * UploadConfig.fileTimesBigger >= table_size &&\n        this.user.get('limits')['import_file_size'] > table_size\n      );\n  },\n\n  _toggleSelected: function(ev) {\n    // Let links use default behaviour\n    if (ev.target.tagName !== 'A') {\n      this.killEvent(ev);\n      if (this._canImportDataset() && this.options.createModel.canSelect(this.model)) {\n        this.model.set('selected', !this.model.get('selected'));\n      }\n    }\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar DatasetsItem = require('./datasets/dataset_item_view');\nvar RemoteDatasetsItem = require('./datasets/remote_dataset_item_view');\n\n/**\n * View representing the list of items\n */\nmodule.exports = cdb.core.View.extend({\n\n  tagName: 'ul',\n\n  className: 'DatasetsList',\n\n  events: {},\n\n  _ITEMS: {\n    'remotes':  RemoteDatasetsItem,\n    'datasets': DatasetsItem\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.createModel = this.options.createModel;\n    this.collection.bind('reset', this.render, this);\n    this.add_related_model(this.collection);\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.collection.each(this._addItem, this);\n    return this;\n  },\n\n  _addItem: function(m, i) {\n    var type = m.get('type') === \"remote\" ? 'remotes' : 'datasets';\n\n    var item = new this._ITEMS[type]({\n      model:       m,\n      createModel: this.createModel,\n      user:        this.user\n    });\n\n    this.addView(item);\n    this.$el.append(item.render().el);\n  },\n\n  show: function() {\n    this.$el.removeClass('is-hidden');\n  },\n\n  hide: function() {\n    this.$el.addClass('is-hidden');\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar DatasetsList = require('./datasets_list_view');\nvar ContentResult = require('./datasets/content_result_view');\nvar DatasetsPaginator = require('./datasets/datasets_paginator_view');\n\n/**\n *  Datasets list view\n *\n *  Show datasets view to select them for\n *  creating a map or importing a dataset\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.createModel = this.options.createModel;\n    this.routerModel = this.options.routerModel;\n\n    this._initViews();\n    this._initBindings();\n  },\n\n  _initBindings: function() {\n    this.routerModel.bind('change', this._onRouterChange, this);\n    this.collection.bind('loading', this._onDataLoading, this);\n    this.collection.bind('reset', this._onDataFetched, this);\n    this.collection.bind('error', function(e) {\n      // Old requests can be stopped, so aborted requests are not\n      // considered as an error\n      if (!e || (e && e.statusText !== \"abort\")) {\n        this._onDataError()\n      }\n    }, this);\n    this.add_related_model(this.routerModel);\n    this.add_related_model(this.createModel);\n    this.add_related_model(this.collection);\n  },\n\n  _initViews: function() {\n    this.controlledViews = {};  // All available views\n    this.enabledViews = [];     // Visible views\n\n    var noDatasetsView = new ContentResult({\n      className:  'ContentResult no-datasets',\n      user: this.user,\n      defaultUrl: this.options.defaultUrl,\n      routerModel: this.routerModel,\n      collection: this.collection,\n      template: 'common/views/create/listing/content_no_datasets'\n    });\n    noDatasetsView.bind('connectDataset', function() {\n      if (this.user.canCreateDatasets()) {\n        this.createModel.set('listing', 'import');\n      }\n    }, this);\n    noDatasetsView.render().hide();\n    this.controlledViews.no_datasets = noDatasetsView;\n    this.$el.append(noDatasetsView.el);\n    this.addView(noDatasetsView);\n\n    var listView = new DatasetsList({\n      user:         this.user,\n      createModel:  this.createModel,\n      routerModel:  this.routerModel,\n      collection:   this.collection\n    });\n    this.controlledViews.list = listView;\n    this.$el.append(listView.render().el);\n    this.addView(listView);\n\n    var noResultsView = new ContentResult({\n      defaultUrl: this.options.defaultUrl,\n      routerModel: this.routerModel,\n      collection: this.collection,\n      template: 'common/views/create/listing/datasets_no_result'\n    });\n    noResultsView.render().hide();\n    this.controlledViews.no_results = noResultsView;\n    this.$el.append(noResultsView.el);\n    this.addView(noResultsView);\n\n    var errorView = new ContentResult({\n      defaultUrl: this.options.defaultUrl,\n      routerModel: this.routerModel,\n      collection: this.collection,\n      template: 'common/views/create/listing/datasets_error'\n    });\n    errorView.render().hide();\n    this.controlledViews.error = errorView;\n    this.$el.append(errorView.el);\n    this.addView(errorView);\n\n    var mainLoaderView = new ContentResult({\n      defaultUrl: this.options.defaultUrl,\n      routerModel: this.routerModel,\n      collection: this.collection,\n      template: 'common/views/create/listing/datasets_loader'\n    });\n\n    this.controlledViews.main_loader = mainLoaderView;\n    this.$el.append(mainLoaderView.render().el);\n    this.addView(mainLoaderView);\n\n    var datasetsPaginator = new DatasetsPaginator({\n      routerModel: this.routerModel,\n      collection: this.collection\n    });\n\n    this.controlledViews.content_footer = datasetsPaginator;\n    this.$el.append(datasetsPaginator.render().el);\n    this.addView(datasetsPaginator);\n  },\n\n  _onRouterChange: function() {\n    this._hideBlocks();\n    this._showBlocks([ 'main_loader' ]);\n  },\n\n  /**\n   * Arguments may vary, depending on if it's the collection or a model that triggers the event callback.\n   * @private\n   */\n  _onDataFetched: function() {\n    var activeViews = [ 'content_footer' ];\n    var tag = this.routerModel.get('tag');\n    var q = this.routerModel.get('q');\n    var shared = this.routerModel.get('shared');\n    var locked = this.routerModel.get('locked');\n    var library = this.routerModel.get('library');\n\n    if (library && this.collection.total_user_entries === 0) {\n      activeViews.push('no_datasets');\n    }\n\n    if (this.collection.size() === 0) {\n      if (!tag && !q && shared === \"no\" && !locked) {\n        if (!library) {\n          this._goToLibrary();\n          return;\n        } else {\n          activeViews.push('no_results');\n        }\n      } else {\n        activeViews.push('no_results');\n      }\n    } else {\n      activeViews.push('list');\n    }\n\n    this._hideBlocks();\n    this._showBlocks(activeViews);\n  },\n\n  _onDataLoading: function() {\n    this._hideBlocks();\n    this._showBlocks([ 'main_loader' ]);\n  },\n\n  _onDataError: function(e) {\n    this._hideBlocks();\n    this._showBlocks([ 'error' ]);\n  },\n\n  _showBlocks: function(views) {\n    var self = this;\n    if (views) {\n      _.each(views, function(v){\n        if (self.controlledViews[v]) {\n          self.controlledViews[v].show();\n          self.enabledViews.push(v);\n        }\n      })\n    } else {\n      self.enabledViews = [];\n      _.each(this.controlledViews, function(v){\n        v.show();\n        self.enabledViews.push(v);\n      })\n    }\n  },\n\n  _goToLibrary: function() {\n    this.routerModel.set({\n      shared: 'no',\n      library: true,\n      page: 1\n    });\n  },\n\n  _hideBlocks: function(views) {\n    var self = this;\n    if (views) {\n      _.each(views, function(v){\n        if (self.controlledViews[v]) {\n          self.controlledViews[v].hide();\n          self.enabledViews = _.without(self.enabledViews, v);\n        }\n      })\n    } else {\n      _.each(this.controlledViews, function(v){\n        v.hide();\n      });\n      self.enabledViews = [];\n    }\n  },\n\n  _isBlockEnabled: function(name) {\n    if (name) {\n      return _.contains(this.enabledViews, name);\n    }\n    return false\n  }\n\n});\n",
    "var ImportService = require('./imports/service_import/import_service_view');\nvar ImportTwitter = require('./imports/twitter_import/import_twitter_view');\nvar ImportDataView = require('./imports/import_data_view');\nvar ImportArcGISView = require('./imports/import_arcgis_view');\n\n/**\n * Attributes:\n *\n *  className: import pane class view\n *  enabled: function that takes cdb.config and returns whether the service is enabled\n *  fallbackClassName: ...\n *  name: local name\n *  title: text for tab link\n *  options:\n *    - service:\n *    - fileExtensions:\n *    - showAvailableFormats:\n *    - acceptSync:\n *    - fileAttrs:\n *\n */\n\nmodule.exports = {\n  File: {\n    className: ImportDataView,\n    enabled: function (config, userData) { return true; },\n    name: 'file',\n    title: 'Data file',\n    options: {\n      type: 'url',\n      fileEnabled: true,\n      acceptSync: true\n    }\n  },\n  GDrive:   {\n    className: ImportService,\n    enabled: function (config, userData) { return !!config.get('oauth_gdrive'); },\n    name: 'gdrive',\n    title: 'Google Drive',\n    options: {\n      service: 'gdrive',\n      fileExtensions: ['Google SpreadSheet', 'CSV'],\n      showAvailableFormats: false,\n      acceptSync: true,\n      fileAttrs: {\n        ext: true,\n        title: 'filename',\n        description: {\n          content: [{\n            name: 'size',\n            format: 'size',\n            key: true\n          }]\n        }\n      }\n    }\n  },\n  Dropbox: {\n    className: ImportService,\n    enabled: function (config, userData) { return !!config.get('oauth_dropbox'); },\n    name: 'dropbox',\n    title: 'Dropbox',\n    options: {\n      service: 'dropbox',\n      fileExtensions: ['CSV', 'XLS'],\n      showAvailableFormats: false,\n      acceptSync: true,\n      fileAttrs: {\n        ext: true,\n        title: 'filename',\n        description: {\n          content: [\n            {\n              name: 'id',\n              format: ''\n            },\n            {\n              name: 'size',\n              format: 'size',\n              key: true\n            }\n          ],\n          separator: '-'\n        }\n      }\n    }\n  },\n  Box: {\n    className: ImportService,\n    enabled: function (config, userData) { return !!config.get('oauth_box'); },\n    name: 'box',\n    title: 'Box',\n    fallback: 'common/views/create/listing/import_box_fallback',\n    options: {\n      service: 'box',\n      fileExtensions: ['CSV', 'XLS'],\n      showAvailableFormats: false,\n      acceptSync: true,\n      fileAttrs: {\n        ext: true,\n        title: 'filename',\n        description: {\n          content: [\n            {\n              name: 'size',\n              format: 'size',\n              key: true\n            }\n          ],\n          separator: '-'\n        }\n      }\n    }\n  },\n  Twitter: {\n    className: ImportTwitter,\n    enabled: function (config, userData) { return userData.twitter.enabled && !!config.get('datasource_search_twitter'); },\n    fallback: 'common/views/create/listing/import_twitter_fallback',\n    name: 'twitter',\n    title: 'Twitter'\n  },\n  Mailchimp: {\n    className: ImportService,\n    enabled: function (config, userData) { return userData.mailchimp.enabled && !!config.get('oauth_mailchimp'); },\n    fallback: 'common/views/create/listing/import_mailchimp_fallback',\n    name: 'mailchimp',\n    title: 'MailChimp',\n    options: {\n      service: 'mailchimp',\n      fileExtensions: [],\n      acceptSync: true,\n      showAvailableFormats: false,\n      headerTemplate: 'common/views/create/listing/import_types/data_header_mailchimp',\n      fileAttrs: {\n        ext: true,\n        title: 'filename',\n        description: {\n          content: [{\n            name: 'member_count',\n            format: 'number',\n            key: true\n          }],\n          itemName: 'member',\n          separator: ''\n        }\n      }\n    }\n  },\n  // Instagram: {\n  //   className: ImportService,\n  //   fallback: 'common/views/create/listing/import_instagram_fallback',\n  //   name: 'instagram',\n  //   title: 'Instagram',\n  //   options: {\n  //     service: 'instagram',\n  //     fileExtensions: [],\n  //     acceptSync: false,\n  //     showAvailableFormats: false,\n  //     fileAttrs: {\n  //       ext: false,\n  //       title: 'title'\n  //     }\n  //   }\n  // },\n  Arcgis: {\n    className: ImportArcGISView,\n    enabled: function (config, userData) { return config.get('arcgis_enabled'); },\n    fallback: 'common/views/create/listing/import_arcgis_fallback',\n    name: 'arcgis',\n    title: 'ArcGIS Server&trade;'\n  },\n  Salesforce: {\n    className: ImportDataView,\n    enabled: function (config, userData) { return config.get('salesforce_enabled'); },\n    fallback: 'common/views/create/listing/import_salesforce_fallback',\n    name: 'salesforce',\n    title: 'Salesforce',\n    options: {\n      type: 'service',\n      service_name: 'salesforce',\n      acceptSync: true,\n      formTemplate: 'common/views/create/listing/import_types/data_form_salesforce',\n      headerTemplate: 'common/views/create/listing/import_types/data_header_salesforce'\n    }\n  }\n};\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\n\n/**\n *  Form view for url import for example\n *\n *  - It accepts an url\n *  - It checks if it is valid\n *  - It could have a file option\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  options: {\n    template: '',\n    fileEnabled: false\n  },\n\n  events: {\n    'keyup .js-textInput': '_onTextChanged',\n    'submit .js-form': '_onSubmitForm'\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.template = cdb.templates.getTemplate(this.options.template || 'common/views/create/listing/import_types/data_form');\n    this._initBinds();\n    this._checkVisibility();\n  },\n\n  render: function() {\n    this.$el.html(\n      this.template(this.options)\n    )\n    this._initViews();\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:state', this._checkVisibility, this);\n  },\n\n  _initViews: function() {\n    if (this.options.fileEnabled) {\n      var self = this;\n      this.$('.js-fileInput').bind('change', function(e) {\n        if (this.files && this.files.length > 0) {\n          self._onFileChanged(this.files);\n        }\n        this.value = \"\";\n      });\n\n      this._initDropzone();\n    }\n  },\n\n  _initDropzone: function() {\n    var el = $('html')[0]; // :(\n    var self = this;\n\n    this.dragster = new Dragster(el);\n\n    $(el).bind(\"dragster:enter\", function (e) {\n      self._showDropzone();\n    });\n\n    $(el).bind(\"dragster:leave\", function (e) {\n      self._hideDropzone();\n    });\n\n    if (el.dropzone) { // avoid loading the dropzone twice\n      return;\n    }\n\n    this.dropzone = new Dropzone(el, {\n      url: ':)',\n      autoProcessQueue: false,\n      previewsContainer: false\n    });\n\n    this.dropzone.on('dragover', function() {\n      self._showDropzone();\n    });\n\n    this.dropzone.on(\"drop\", function (ev) {\n      var files = ev.dataTransfer.files;\n      self._onFileChanged(files);\n      self._hideDropzone();\n    });\n  },\n\n  _destroyDropzone: function() {\n    var el = $('html')[0]; // :(\n\n    if (this.dragster) {\n      this.dragster.removeListeners();\n      this.dragster.reset();\n      $(el).unbind('dragster:enter dragster:leave');\n    }\n\n    if (this.dropzone) {\n      this.dropzone.destroy();\n    }\n  },\n\n  _setValidFileExtensions: function(list) {\n    return RegExp(\"(\\.|\\/)(\" + list.join('|') + \")$\", \"i\");\n  },\n\n  _onTextChanged: function() {\n    var value = this.$('.js-textInput').val();\n    if (!value) {\n      this._hideTextError();\n    }\n  },\n\n  _onFileChanged: function(files) {\n    this.trigger('fileSelected', this);\n\n    if (files && files.length === 1) {\n      files = files[0];\n    }\n\n    this.model.set({\n      type: 'file',\n      value: files\n    });\n\n    if (this.model.get('state') !== \"error\") {\n      this._hideFileError();\n      this.model.set('state', 'selected');\n    } else {\n      this._showFileError();\n    }\n  },\n\n  _showTextError: function() {\n    this.$('.Form-inputError').addClass('is-visible');\n  },\n\n  _hideTextError: function() {\n    this.$('.Form-inputError').removeClass('is-visible');\n  },\n\n  _showDropzone: function() {\n    this.$('.Form-upload').addClass('is-dropping');\n    this._hideFileError();\n  },\n\n  _hideDropzone: function() {\n    this.$('.Form-upload').removeClass('is-dropping');\n  },\n\n  _showFileError: function() {\n    if (this.model.get('state') === \"error\") {\n      this.$('.js-fileError')\n        .text(this.model.get('get_error_text').what_about)\n        .show();\n      this.$('.js-fileLabel').hide();\n      this.$('.js-fileButton').addClass('Button--negative');\n    }\n  },\n\n  _hideFileError: function() {\n    this.$('.js-fileError').hide();\n    this.$('.js-fileLabel').show();\n    this.$('.js-fileButton').removeClass('Button--negative');\n  },\n\n  _onSubmitForm: function(e) {\n    if (e) this.killEvent(e);\n\n    // URL submit\n    var value = this.$('.js-textInput').val();\n\n    if (!value) {\n      this._hideTextError();\n      return;\n    }\n\n    // Change file attributes :S\n    this.trigger('urlSelected', this);\n\n    // Change model\n    var importType = this.model.get('service_name') ? 'service' : 'url';\n    this.model.set({\n      type: importType,\n      value: value,\n      service_item_id: value,\n      state: 'idle'\n    });\n\n    if (this.model.get('state') !== \"error\") {\n      // Remove errors\n      this._hideFileError();\n      this._hideTextError();\n      this.model.set('state', 'selected');\n    } else {\n      this._showTextError();\n    }\n  },\n\n  _checkVisibility: function() {\n    var state = this.model.get('state');\n    this[ state !== \"selected\" ? 'show' : 'hide' ]()\n  },\n\n  clean: function() {\n    this._destroyDropzone();\n    this.$('.js-fileInput').unbind('change');\n    this.elder('clean');\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n *  Data header view\n *\n *  - It will change when upload state changes\n *  - Possibility to change state with a header button\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-back': '_goToStart'\n  },\n\n  options: {\n    fileEnabled: false,\n    acceptSync: false\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.template = cdb.templates.getTemplate(this.options.template || 'common/views/create/listing/import_types/data_header');\n    this._initBinds();\n    this._checkVisibility();\n  },\n\n  render: function() {\n    var acceptSync = this.options.acceptSync && this.user.get('actions') && this.user.get('actions').sync_tables && this.model.get('type') !== \"file\"; \n    \n    this.$el.html(\n      this.template({\n        type: this.model.get('type'),\n        fileEnabled: this.options.fileEnabled,\n        acceptSync: acceptSync,\n        state: this.model.get('state')\n      })\n    );\n    this._checkVisibility();\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:state', this.render, this);\n  },\n\n  _checkVisibility: function() {\n    this.show()\n  },\n\n  _goToStart: function() {\n    this.model.set('state', 'idle');\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\nvar SelectedDataset = require('./import_selected_dataset_view');\n\n/**\n *  Selected ArcGIS dataset\n *\n *  - Displays the result when an ArcGIS url/dataset is selected, no matter the type.\n *  - It will show available sync options if user can and the url is an ArcGIS layer.\n *  - Upgrade link for people who don't have sync permissions.\n *\n */\n\nmodule.exports = SelectedDataset.extend({\n\n  render: function() {\n    var title = this.options.fileAttrs.title && this.model.get('value')[this.options.fileAttrs.title] || this.model.get('value');\n    var description = this._genDescription();\n    var ext = this.options.fileAttrs.ext ? Utils.getFileExtension(title) : '' ;\n\n    if (this.options.fileAttrs.ext) {\n      title = title && title.replace('.' + ext, '');\n    }\n\n    var upgradeUrl = window.upgrade_url;\n    var userCanSync = this.user.get('actions') && this.user.get('actions').sync_tables;\n    var customInstall = cdb.config.get('cartodb_com_hosted');\n\n    this.$el.html(\n      this.template({\n        title: title,\n        description: description,\n        ext: ext,\n        interval: this.model.get('interval'),\n        importCanSync: this.options.acceptSync && this._isArcGISLayer(title),\n        userCanSync: userCanSync,\n        showTrial: this.user.canStartTrial(),\n        showUpgrade: !userCanSync && !customInstall && upgradeUrl && !this.user.isInsideOrg(),\n        upgradeUrl: upgradeUrl\n      })\n    );\n    return this;\n  },\n\n  _isArcGISLayer: function(url) {\n    return url.search(/([0-9]+\\/|[0-9]+)/) !== -1\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar FormView = require('./data_import/data_form_view');\nvar HeaderView = require('./data_import/data_header_view');\nvar SelectedDataset = require('./import_arcgis_selected_dataset_view');\nvar ImportDataView = require('./import_data_view');\n\n/**\n *  Import ArcGIS panel\n *\n *  - It only accepts an url, and it could be a map or a layer.\n *\n */\n\nmodule.exports = ImportDataView.extend({\n\n  options: {\n    fileExtensions: [],\n    type: 'service',\n    service: 'arcgis',\n    acceptSync: true,\n    fileEnabled: false,\n    fileAttrs: {\n      ext: false,\n      title: '',\n      description: ''\n    }\n  },\n\n  _initViews: function() {\n    // Data header\n    var headerView = new HeaderView({\n      el: this.$('.ImportPanel-header'),\n      model: this.model,\n      user: this.user,\n      collection: this.collection,\n      fileEnabled: this.options.fileEnabled,\n      acceptSync: this.options.acceptSync,\n      template: 'common/views/create/listing/import_types/data_header_arcgis'\n    });\n    headerView.render();\n    this.addView(headerView);\n\n    // Dataset selected\n    var selected = new SelectedDataset({\n      el: this.$('.DatasetSelected'),\n      user: this.user,\n      model: this.model,\n      acceptSync: this.options.acceptSync,\n      fileAttrs: this.options.fileAttrs\n    });\n    selected.render();\n    this.addView(selected);\n\n    // Data Form\n    var formView = new FormView({\n      el: this.$('.ImportPanel-form'),\n      user: this.user,\n      model: this.model,\n      template: 'common/views/create/listing/import_types/data_form_arcgis',\n      fileEnabled: this.options.fileEnabled\n    });\n\n    formView.render();\n    this.addView(formView);\n\n  }\n\n})\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar ImportDefaultView = require('./import_default_view');\nvar UploadModel = require('../../../../background_polling/models/upload_model');\nvar FormView = require('./data_import/data_form_view');\nvar HeaderView = require('./data_import/data_header_view');\nvar SelectedDataset = require('./import_selected_dataset_view');\n\n/**\n *  Import data panel\n *\n *  - It accepts an url\n *  - It checks if it is valid\n *\n */\n\nmodule.exports = ImportDefaultView.extend({\n\n  options: {\n    fileExtensions: [],\n    type: 'url',\n    service: '',\n    acceptSync: false,\n    fileEnabled: false,\n    formTemplate: '',\n    headerTemplate: '',\n    fileAttrs: {}\n  },\n\n  className: 'ImportPanel ImportDataPanel',\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.model = new UploadModel({\n      type: this.options.type,\n      service_name: this.options.service\n    }, {\n      user: this.user\n    });\n\n    this.template = cdb.templates.getTemplate('common/views/create/listing/import_types/import_data');\n\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.$el.html(this.template());\n    this._initViews();\n    return this;\n  },\n\n  _initViews: function() {\n    // Data header\n    var headerView = new HeaderView({\n      el: this.$('.ImportPanel-header'),\n      model: this.model,\n      user: this.user,\n      fileEnabled: this.options.fileEnabled,\n      acceptSync: this.options.acceptSync,\n      template: this.options.headerTemplate\n    });\n    headerView.render();\n    this.addView(headerView);\n\n    // Dataset selected\n    var selected = new SelectedDataset({\n      el: this.$('.DatasetSelected'),\n      user: this.user,\n      model: this.model,\n      acceptSync: this.options.acceptSync,\n      fileAttrs: this.options.fileAttrs\n    });\n    selected.render();\n    this.addView(selected);\n\n    // Data Form\n    var formView = new FormView({\n      el: this.$('.ImportPanel-form'),\n      user: this.user,\n      model: this.model,\n      template: this.options.formTemplate,\n      fileEnabled: this.options.fileEnabled\n    });\n\n    formView.bind('fileSelected', function() {\n      selected.setOptions({\n        acceptSync: false,\n        fileAttrs: {\n          ext: true,\n          title: 'name',\n          description: {\n            content: [{\n              name: 'size',\n              format: 'size'\n            }]\n          }\n        }\n      });\n    });\n\n    formView.bind('urlSelected', function() {\n      selected.setOptions({\n        acceptSync: true,\n        fileAttrs: {\n          ext: false,\n          title: '',\n          description: ''\n        }\n      });\n    });\n    formView.render();\n    this.addView(formView);\n\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:state', this._checkState, this);\n    this.model.bind('change', this._triggerChange, this);\n  },\n\n  _checkState: function() {\n    if (this.model.previous('state') === \"selected\") {\n      this.model.set({\n        type: undefined,\n        value: '',\n        service_name: '',\n        service_item_id: '',\n        interval: 0\n      });\n    }\n  }\n\n})\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n *  Import fallback default panel\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'ImportPanel',\n\n  initialize: function() { \n    this.template = cdb.templates.getTemplate( this.options.template || 'common/views/create/listing/import_default_fallback' );\n  },\n\n  render: function() {\n    this.$el.append(this.template());\n  }\n\n})",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar UploadModel = require('../../../../background_polling/models/upload_model');\n\n/**\n *  Default view for an import item\n *\n *  - It is based in an upload model.\n *  - Will trigger a change when model changes.\n *  - It returns their data if it is requested with a method.\n */\n\n\nmodule.exports = cdb.core.View.extend({\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.model = new UploadModel(null, { user: this.user });\n    this._initBinds();\n  },\n\n  _initBinds: function() {\n    this.model.bind('change', this._triggerChange, this);\n  },\n\n  _triggerChange: function() {\n    this.trigger('change', this.model.toJSON(), this);\n  },\n\n  getModelData: function() {\n    if (this.model) {\n      return this.model.toJSON()\n    }\n    return {}\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\nvar pluralizeString = require('../../../../view_helpers/pluralize_string');\n\n/**\n *  Selected dataset\n *\n *  - Displays the result when a dataset is selected, no matter the type.\n *  - It will show available sync options if that import lets it.\n *  - Upgrade link for people who don't have sync permissions.\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'DatasetSelected',\n\n  _FORMATTERS: {\n    'size': Utils.readablizeBytes,\n    'number': Utils.formatNumber\n  },\n\n  options: {\n    acceptSync: false,\n    fileAttrs: {\n      ext: false,\n      title: '',\n      description: {\n        content: [{\n          name: 'id',\n          format: ''\n        }],\n        itemName: '',\n        separator: ''\n      }\n    }\n  },\n\n  events: {\n    'click .js-interval-0': '_onIntervalZero',\n    'click .js-interval-1': '_onIntervalHour',\n    'click .js-interval-2': '_onIntervalDay',\n    'click .js-interval-3': '_onIntervalWeek',\n    'click .js-interval-4': '_onIntervalMonth'\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.template = cdb.templates.getTemplate('common/views/create/listing/import_selected_dataset');\n    this._initBinds();\n    this._checkVisibility();\n  },\n\n  render: function() {\n    var title = this.options.fileAttrs.title && this.model.get('value')[this.options.fileAttrs.title] || this.model.get('value');\n    var description = this._genDescription();\n    var ext = this.options.fileAttrs.ext ? Utils.getFileExtension(title) : '' ;\n\n    if (this.options.fileAttrs.ext) {\n      title = title && title.replace('.' + ext, '');\n    }\n\n    var upgradeUrl = window.upgrade_url;\n    var userCanSync = this.user.get('actions') && this.user.get('actions').sync_tables;\n    var customInstall = cdb.config.get('cartodb_com_hosted');\n\n    this.$el.html(\n      this.template({\n        title: title,\n        description: description,\n        ext: ext,\n        interval: this.model.get('interval'),\n        importCanSync: this.options.acceptSync,\n        userCanSync: userCanSync,\n        showTrial: this.user.canStartTrial(),\n        showUpgrade: !userCanSync && !customInstall && upgradeUrl && !this.user.isInsideOrg(),\n        upgradeUrl: upgradeUrl\n      })\n    );\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:value', this.render, this);\n    this.model.bind('change:interval', this.render, this);\n    this.model.bind('change:state', this._checkVisibility, this);\n  },\n\n  _genDescription: function() {\n    if (this.options.fileAttrs && this.options.fileAttrs.description) {\n      var descriptionOpts = this.options.fileAttrs.description;\n      var descriptionKeyValue = '';\n      var descriptionStr = '';\n      var self = this;\n\n      if (descriptionOpts.content && descriptionOpts.content.length > 0) {\n        _.each(descriptionOpts.content, function(item, i) {\n\n          if (i > 0 && descriptionOpts.separator) {\n            descriptionStr += \" \" + descriptionOpts.separator + ' ';\n          }\n\n          var value = self.model.get('value')[item.name];\n          var format = item.format && self._FORMATTERS[item.format];\n          descriptionStr += format && format(value) || value;\n\n          if (item.key) {\n            descriptionKeyValue = item.name;\n          }\n        })\n      }\n\n      if (descriptionOpts.itemName && descriptionKeyValue) {\n        descriptionStr += ' ' + (descriptionOpts.itemName && pluralizeString(descriptionOpts.itemName, descriptionKeyValue) || '');\n      }\n\n      return descriptionStr;\n    }\n\n    return '';\n  },\n\n  _onIntervalZero: function() {\n    this.model.set('interval', 0);\n  },\n\n  _onIntervalHour: function() {\n    if (this.options.acceptSync && this.user.get('actions').sync_tables) {\n      this.model.set('interval', 3600);\n    }\n  },\n\n  _onIntervalDay: function() {\n    if (this.options.acceptSync && this.user.get('actions').sync_tables) {\n      this.model.set('interval', 86400);\n    }\n  },\n\n  _onIntervalWeek: function() {\n    if (this.options.acceptSync && this.user.get('actions').sync_tables) {\n      this.model.set('interval', 604800);\n    }\n  },\n\n  _onIntervalMonth: function() {\n    if (this.options.acceptSync && this.user.get('actions').sync_tables) {\n      this.model.set('interval', 2592000);\n    }\n  },\n\n  // Change options\n  setOptions: function(d) {\n    if (d && !_.isEmpty(d)) {\n      _.extend(this.options, d);\n    }\n  },\n\n  _checkVisibility: function() {\n    var state = this.model.get('state');\n    if (state === 'selected') {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar ImportDefaultView = require('../import_default_view');\nvar UploadModel = require('../../../../../background_polling/models/upload_model');\nvar ServiceHeader = require('./service_header_view');\nvar ServiceLoader = require('./service_loader_view');\nvar ServiceList = require('./service_list_view');\nvar ServiceSelectedFile = require('../import_selected_dataset_view');\nvar ServiceToken = require('../../../../../service_models/service_token_model');\nvar ServiceOauth = require('../../../../../service_models/service_oauth_model');\nvar ServiceCollection = require('./service_items_collection');\n\n/**\n *  Import service view\n *\n *  - Use a service import panel\n *  - It will request login to the service\n *  - If it works, a list of available files will appear.\n *  - Once a file is selected, sync options will appear.\n *\n */\n\nmodule.exports = ImportDefaultView.extend({\n\n  _DATASOURCE_NAME: '',\n  _WINDOW_INTERVAL: 1000, // miliseconds\n\n  className: 'ImportPanel ImportPanelService',\n\n  options: {\n    service: '',                  // Name of the service\n    showAvailableFormats: false,  // If all available format link should appear or not\n    fileExtensions: [],           // File extensions\n    acceptSync: false,            // Accept sync this service?\n    fileAttrs: {                  // Attributes or changes for service list or selected file:\n      ext: false,                 // If files should show extension\n      title: 'filename',          // Title attribute\n      description: '<%- size %>', // Description attribute\n      formatDescription: 'size',  // If any format function should be applied over the description\n      headerTemplate: ''          // Header template\n    }\n  },\n\n  initialize: function() {\n    if (!this.options.service) {\n      cdb.log.info('Service provider not set for import panel!')\n      return false;\n    } else {\n      this._DATASOURCE_NAME = this.options.service;\n    }\n\n    this.user = this.options.user;\n    this.model = new UploadModel({\n      type: 'service',\n      service_name: this._DATASOURCE_NAME\n    }, { user: this.user });\n\n    this.template = cdb.templates.getTemplate('common/views/create/listing/import_types/import_service');\n\n    this._initModels();\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.$el.html(this.template(this.options));\n    this._initViews();\n    return this;\n  },\n\n  _initModels: function() {\n    // Token\n    this.token = new ServiceToken(null, { datasource_name: this._DATASOURCE_NAME });\n    // Service model\n    this.service = new ServiceOauth(null, { datasource_name: this._DATASOURCE_NAME });\n    // List collection\n    this.collection = new ServiceCollection(null, { datasource_name: this._DATASOURCE_NAME });\n  },\n\n  _initBinds: function() {\n    this.model.bind('change', this._triggerChange, this);\n    this.model.bind('change:state', this._checkState, this);\n    this.token.bind('change:oauth_valid', this._onOauthChange, this);\n    this.service.bind('change:url', this._openWindow, this);\n    this.add_related_model(this.service);\n    this.add_related_model(this.token);\n  },\n\n  _initViews: function() {\n    // Header\n    var header = new ServiceHeader({\n      el: this.$('.ImportPanel-header'),\n      user: this.user,\n      model: this.model,\n      collection: this.collection,\n      title: this.options.title,\n      showAvailableFormats: this.options.showAvailableFormats,\n      fileExtensions: this.options.fileExtensions,\n      acceptSync: this.options.acceptSync,\n      template: this.options.headerTemplate\n    });\n    header.render();\n    this.addView(header);\n\n    // Loader\n    var loader = new ServiceLoader({\n      el: this.$('.ServiceLoader'),\n      model: this.model,\n      token: this.token,\n      service: this.service\n    });\n    loader.render();\n    this.addView(loader);\n\n    // List\n    var list = new ServiceList({\n      el: this.$('.ServiceList'),\n      model: this.model,\n      collection: this.collection,\n      title: this.options.title,\n      fileAttrs: this.options.fileAttrs\n    });\n    list.render();\n    this.addView(list);\n\n    // Selected file\n    var selected = new ServiceSelectedFile({\n      el: this.$('.ServiceSelected'),\n      user: this.user,\n      model: this.model,\n      acceptSync: this.options.acceptSync,\n      fileAttrs: this.options.fileAttrs\n    });\n    selected.render();\n    this.addView(selected);\n  },\n\n  _onOauthChange: function() {\n    if (this.token.get('oauth_valid')) {\n      this._getFiles();\n    }\n  },\n\n  _getFiles: function() {\n    var self = this;\n\n    this.model.set('state', 'retrieving');\n\n    this.collection.fetch({\n      // data: {\n      //   filter: this.options.acceptFileTypes\n      // },\n      error: function() {\n        self.model.set('state', 'error');\n      },\n      success:  function() {\n        self.model.set('state', 'list');\n      }\n    });\n  },\n\n  _checkState: function() {\n    if (this.model.get('state') === \"list\") {\n      if (this.collection.size() === 1) {\n        var item = this.collection.at(0);\n        this.model.set({\n          state: 'selected',\n          value: item.toJSON(),\n          service_item_id: item.get('id')\n        });\n      }\n    }\n    if (this.model.get('state') !== \"selected\") {\n      this.model.set({\n        value: '',\n        service_item_id: '',\n        interval: 0\n      });\n    }\n  },\n\n  _openWindow: function() {\n    var url = this.service.get('url');\n    var self = this;\n    var i = window.open(url, null, \"menubar=no,toolbar=no,width=600,height=495\");\n    var e = window.setInterval(function() {\n      if (i && i.closed) {\n        self._getFiles();\n        clearInterval(e)\n      } else if (!i) {\n        self.model.set('state', 'error');\n        clearInterval(e)\n      }\n    }, this._WINDOW_INTERVAL);\n  }\n\n})\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n *  Service header\n *\n *  - It will change when upload state changes\n *  - Possibility to change state with a header button\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-back': '_goToList'\n  },\n\n  options: {\n    title: 'Service',\n    showAvailableFormats: false,\n    acceptSync: false,\n    fileExtensions: [],\n    template: ''\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.template = cdb.templates.getTemplate( this.options.template || 'common/views/create/listing/import_types/service_header' );\n    this._initBinds();\n  },\n\n  render: function() {\n    this.$el.html(\n      this.template({\n        items: this.collection.size(),\n        service_name: this.model.get(\"service_name\"),\n        showAvailableFormats: this.options.showAvailableFormats,\n        fileExtensions: this.options.fileExtensions,\n        acceptSync: this.options.acceptSync && this.user.get('actions').sync_tables,\n        state: this.model.get('state'),\n        title: this.options.title\n      })\n    );\n    this._checkVisibility();\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:state', this.render, this);\n  },\n\n  _checkVisibility: function() {\n    var state = this.model.get('state');\n    this[ state !== \"list\" ? 'show' : 'hide' ]()\n  },\n\n  _goToList: function() {\n    this.model.set('state', 'list');\n  }\n\n});\n",
    "var Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\n\n/**\n *  Service list item format utils\n *\n *  - Create customized functions for service list items.\n *\n */\n\nmodule.exports = {\n\n  // Due to the fact that backend data source service\n  // returns 0 size when it doesn't know it\n  formatSize: function(s) {\n    if (s && s > 0) {\n      return Utils.readablizeBytes(s);\n    } else {\n      return 'Unknown'\n    }\n  }\n\n}",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n *  Service item model\n *\n */\n\nmodule.exports = cdb.core.Model.extend({\n  \n  defaults: {\n    id: '',\n    filename: '',\n    checksum: '',\n    service: '',\n    size: '',\n    title: ''\n  }\n\n});",
    "var ServiceItem = require('./service_item_model.js');\nvar Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\n\n/**\n *  Service item model + Service items collection\n *\n *  - It needs a datasource name or it won't work.\n *\n */\n\nmodule.exports = Backbone.Collection.extend({\n\n  _DATASOURCE_NAME: 'dropbox',\n\n  model: ServiceItem,\n\n  initialize: function(coll, opts) {\n    if (opts.datasource_name) {\n      this._DATASOURCE_NAME = opts.datasource_name;\n    }\n  },\n\n  fetch: function() {\n    this.trigger(\"fetch\", this);\n\n    // Pass through to original fetch.\n    return Backbone.Collection.prototype.fetch.apply(this, arguments);\n  },\n\n  parse: function(r) {\n    return r.files;\n  },\n\n  url: function(method) {\n    var version = cdb.config.urlVersion('imports_service', method);\n    return '/api/' + version + '/imports/service/' + this._DATASOURCE_NAME + '/list_files'\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\nvar ServiceUtilsFormat = require('./service_item_description_format');\nvar pluralizeString = require('../../../../../view_helpers/pluralize_string');\n\n/**\n *  Service list item view\n *\n *  - Displays the item info.\n *  - It lets user to select the item for a future import.\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  options: {\n    title: '',\n    fileAttrs: {\n      ext: false,\n      title: 'filename',\n      description: 'size',\n      itemName: 'file',\n      formatDescription: ''\n    }\n  },\n\n  _FORMATTERS: {\n    'size': ServiceUtilsFormat.formatSize,\n    'number': Utils.formatNumber\n  },\n\n  className: 'ServiceList-item',\n  tagName: 'li',\n\n  events: {\n    'click .js-choose': '_onSelectItem'\n  },\n\n  initialize: function() {\n    this.template = cdb.templates.getTemplate('common/views/create/listing/import_types/service_list_item');\n  },\n\n  render: function() {\n    var title = this.model.get(this.options.fileAttrs.title);\n    var description = this._genDescription();\n    var ext = this.options.fileAttrs.ext ? Utils.getFileExtension(title) : '' ;\n\n    if (this.options.fileAttrs.ext) {\n      title = title && title.replace('.' + ext, '');\n    }\n\n    this.$el.html(\n      this.template({\n        name: this.options.title,\n        ext: ext,\n        title: title,\n        description: description\n      })\n    );\n    return this;\n  },\n\n  _genDescription: function() {\n    if (this.options.fileAttrs && this.options.fileAttrs.description) {\n      var descriptionOpts = this.options.fileAttrs.description;\n      var descriptionKeyValue = '';\n      var descriptionStr = '';\n      var self = this;\n\n      if (descriptionOpts.content && descriptionOpts.content.length > 0) {\n        _.each(descriptionOpts.content, function(item, i) {\n\n          if (i > 0 && descriptionOpts.separator) {\n            descriptionStr += \" \" + descriptionOpts.separator + ' ';\n          }\n\n          var value = self.model.get(item.name);\n          var format = item.format && self._FORMATTERS[item.format];\n          descriptionStr += format && format(value) || value;\n\n          if (item.key) {\n            descriptionKeyValue = item.name;\n          }\n        })\n      }\n\n      if (descriptionOpts.itemName && descriptionKeyValue) {\n        descriptionStr += ' ' + (descriptionOpts.itemName && pluralizeString(descriptionOpts.itemName, descriptionKeyValue) || '');\n      }\n\n      return descriptionStr;\n    }\n\n    return '';\n  },\n\n  _onSelectItem: function() {\n    this.trigger('selected', this.model, this);\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar ServiceListItem = require('./service_list_item_view');\nvar pluralizeString = require('../../../../../view_helpers/pluralize_string');\n\n/**\n *  Service list view\n *\n *  - It will display all the items available under\n *  the service and the possibility to chose one of\n *  them.\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  _TEXTS: {\n    item: _t('item')\n  },\n\n  options: {\n    title: 'service',\n    fileAttrs: {}\n  },\n\n  initialize: function() {\n    this.template = cdb.templates.getTemplate('common/views/create/listing/import_types/service_list');\n    this._initBinds();\n    this._checkVisibility();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    var size = this.collection.size();\n    this.$el.html(\n      this.template({\n        size: size,\n        title: this.options.title,\n        pluralize: pluralizeString(this._TEXTS.item, size)\n      })\n    );\n    if (this.collection.size() > 0) {\n      this.collection.each(this._addItem, this);\n    }\n    return this;\n  },\n\n  _initBinds: function() {\n    this.collection.bind('reset', this.render, this);\n    this.model.bind('change:state', this._checkVisibility, this);\n    this.add_related_model(this.collection);\n  },\n\n  _addItem: function(m) {\n    var item = new ServiceListItem({\n      model: m,\n      title: this.options.title,\n      fileAttrs: this.options.fileAttrs\n    });\n    item.bind('selected', this._onSelectedItem, this);\n    this.$('.ServiceList-items').append(item.render().el);\n    this.addView(item);\n  },\n\n  _onSelectedItem: function(mdl) {\n    this.model.set({\n      state: 'selected',\n      value: mdl.toJSON(),\n      service_item_id: mdl.get('id')\n    });\n  },\n\n  _checkVisibility: function() {\n    var state = this.model.get('state');\n    if (state === 'list') {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n *  Service loader view\n *\n *  - It will be on charge to make token and oauth petitions\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-connect': '_checkToken'\n  },\n\n  initialize: function() {\n    this.token = this.options.token;\n    this.service = this.options.service;\n    this.template = cdb.templates.getTemplate('common/views/create/listing/import_types/service_loader');\n    this._initBinds();\n    this._checkVisibility();\n  },\n\n  render: function() {\n    this.$el.html(\n      this.template({\n        state: this.model.get('state')\n      })\n    );\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:state', this.render, this);\n    this.model.bind('change:state', this._checkVisibility, this);\n  },\n\n  _checkToken: function() {\n    var self = this;\n    this.model.set('state', 'token');\n\n    var self = this;\n    this.token.fetch({\n      success: function(r) {\n        if (!r.get('oauth_valid')) {\n          self._getOauthURL();\n        }\n      },\n      error: function(e) {\n        self._getOauthURL();\n      }\n    });\n  },\n\n  _checkVisibility: function() {\n    var state = this.model.get('state');\n    if (state !== 'list' && state !== 'selected') {\n      this.show();\n    } else {\n      this.hide();\n    }\n  },\n\n  _getOauthURL: function() {\n    var self = this;\n    this.model.set('state', 'oauth');\n    this.service.set({ url: '' }, { silent: true });\n    this.service.fetch({\n      error: function() {\n        self.model.set('state', 'error');\n      }\n    });\n  }\n\n})",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\n\n/**\n *  Credits info view\n *\n *  - Percentage of use\n *  - Possible money spent\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  initialize: function() {\n    this.user = this.options.user;\n    this._initBinds();\n    this.template = cdb.templates.getTemplate('common/views/create/listing/import_types/credits_info');\n  },\n\n  render: function() {\n    var twitterData = this.user.get('twitter');\n    var remaining = twitterData.quota - twitterData.monthly_use;\n    var per = Math.min(100,Math.ceil((this.model.get('value') * 100) / remaining));\n\n    this.$el.html(\n      this.template({\n        value: this.model.get('value'),\n        remaining: remaining,\n        per: per,\n        hardLimit: twitterData.hard_limit,\n        remainingFormatted: Utils.formatNumber(remaining),\n        quota: twitterData.quota,\n        block_price: twitterData.block_price,\n        block_size: Utils.readizableNumber(twitterData.block_size)\n      })\n    )\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change', this.render, this);\n  }\n\n});",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar CreditsInfo = require('./credits_info_view');\n\n/**\n *  Set max use of credits for Twitter\n *\n *  - Slider range = 1000 credits\n *  - Last step should be infinite if user doesn't\n *    have \"soft_limit\".\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  _DEFAULT_PER_VALUE: 80, // Default percentage value for slider\n  _MIN_PER_VALUE: 1,      // Default min percentage value for slider\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.model = new cdb.core.Model();\n    this._initBinds();\n    this._setModel();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.$(\".js-slider\").slider(\"destroy\");\n    this._initViews();\n    return this;\n  },\n\n  _initBinds: function() {\n    _.bindAll(this, '_onSlideChange');\n    this.model.bind('change:value', this._onValueChange, this);\n  },\n\n  _setModel: function() {\n    var twitterData = this.user.get('twitter');\n    var max = twitterData.quota - twitterData.monthly_use;\n    var min =  (this._MIN_PER_VALUE * max) / 100; // Just 1% of the quota\n    var defaultValue = (max * this._DEFAULT_PER_VALUE) / 100;\n    var value = max > 0 ? defaultValue : (max + 1);\n    \n    this.model.set({\n      max: (twitterData.hard_limit ? max : max + 1 ),\n      min: min,\n      step: min,\n      value: max > 0 ? value : twitterData.quota,\n      disabled: max > 0 ? false : true\n    });\n  },\n\n  _initViews: function() {\n    // Slider\n    this.$(\".js-slider\").slider(\n      _.extend({\n          range: 'min',\n          orientation: \"horizontal\",\n          slide: this._onSlideChange,\n          change: this._onSlideChange\n        },\n        this.model.attributes\n      )\n    );\n\n    // Info\n    var creditsInfo = new CreditsInfo({\n      el: this.$('.js-info'),\n      user: this.user,\n      model: this.model\n    });\n    creditsInfo.render();\n    this.addView(creditsInfo);\n  },\n\n  _onSlideChange: function(ev, ui) {\n    this.model.set('value', ui.value);\n  },\n\n  _onValueChange: function() {\n    this.trigger('maxCreditsChange', this.getMaxCredits(), this);\n  },\n\n  getMaxCredits: function() {\n    var twitterData = this.user.get('twitter');\n    var max = twitterData.quota - twitterData.monthly_use;\n    var value = this.model.get('value');\n    return value > max ? 0 : value\n  }\n\n});",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar ImportDefaultView = require('../../../../../dialogs/create/listing/imports/import_default_view');\nvar UploadModel = require('../../../../../background_polling/models/upload_model');\nvar DatesRangePicker = require('../../../../../views/date_pickers/dates_range_picker');\nvar TwitterCategories = require('../../../../../dialogs/create/listing/imports/twitter_import/twitter_categories/twitter_categories_view');\nvar CreditsUsage = require('./credits_usage_view.js');\n\n/**\n *  Import twitter panel\n *\n *  - It accepts up to 3 categories\n *  - Date range can't be longer than 30 days\n *\n */\n\nmodule.exports = ImportDefaultView.extend({\n\n  options: {\n    acceptSync: false,\n    type: 'service',\n    service: 'twitter_search'\n  },\n\n  className: 'ImportPanel ImportTwitterPanel',\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.model = new UploadModel({\n      type: this.options.type,\n      service_name: this.options.service\n    }, {\n      user: this.user\n    });\n\n    this.template = cdb.templates.getTemplate('common/views/create/listing/import_types/import_twitter');\n\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.$el.html(this.template());\n    this._initViews();\n    return this;\n  },\n\n  _initViews: function() {\n    // Categories\n    var categories = this.categories = new TwitterCategories();\n    categories.bind('changeCategory', this._setModel, this);\n    this.$('.ImportTwitterPanel-cagetories').append(categories.render().el);\n    this.addView(categories);\n\n    // Date picker\n    var datepicker = this.datepicker = new DatesRangePicker({\n      className: 'DatePicker DatePicker--withBorder'\n    });\n    datepicker.bind('changeDate', this._setModel, this);\n    this.$('.js-picker').append(datepicker.render().el);\n    this.addView(datepicker);\n\n    // Use slider\n    var creditsUsage = this.creditsUsage = new CreditsUsage({\n      el: this.$('.CreditsUsage'),\n      user: this.user\n    });\n    creditsUsage.bind('maxCreditsChange', this._setModel, this);\n    creditsUsage.render();\n    this.addView(creditsUsage);\n\n    this._setModel();\n  },\n\n  _initBinds: function() {\n    this.model.bind('change', this._triggerChange, this);\n  },\n\n  _getCategories: function() {\n    var categories = this.categories.getCategories();\n    return _.filter(categories, function(c) {\n      return c.category && c.terms.length > 0\n    });\n  },\n\n  _getDates: function() {\n    return this.datepicker.getDates();\n  },\n\n  _getMaxCredits: function() {\n    return this.creditsUsage.getMaxCredits();\n  },\n\n  _setModel: function() {\n    var categories = this._getCategories();\n    var dates = this._getDates();\n    var maxCredits = this._getMaxCredits();\n    var d = {\n      categories: categories,\n      dates: dates\n    };\n\n    this.model.set({\n      value: d,\n      service_item_id: d,\n      user_defined_limits: {\n        twitter_credits_limit: maxCredits\n      }\n    });\n  }\n\n})\n",
    "var Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar TwitterCategoryModel = require('./twitter_category_model');\n  \n// Twitter categories collection\n\nmodule.exports = Backbone.Collection.extend({\n  model: TwitterCategoryModel\n});",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar TwitterCategoriesCollection = require('./twitter_categories_collection');\nvar TwitterCategoriesModel = require('./twitter_category_model');\nvar TwitterCategoryView = require('./twitter_category_view');\n\n/**\n *  Twitter category list view\n *  - It will generate a collection to store all the \n *    terms added.\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  _MAX_CATEGORIES: 4,\n  _MAX_TERMS: 29,\n\n  initialize: function() {\n    // Add a first empty model\n    var m = this._generateCategory();\n    this.collection = new TwitterCategoriesCollection([ m ]);\n\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.collection.each(this._addCategory, this);\n    return this;\n  },\n\n  _initBinds: function() {\n    this.collection.bind('change', this._manageCategories, this);\n    this.collection.bind('change', this._onCategoryChange, this);\n    this.add_related_model(this.collection);\n  },\n\n  _manageCategories: function() {\n    var self = this;\n    var collection_size = this.collection.size();\n\n    // Check if already created models are completed\n    var nonFilled = this.collection.filter(function(m) {\n      return m.get('terms').length === 0\n    });\n\n    // if so, generate new one\n    if (nonFilled.length === 0 && collection_size < this._MAX_CATEGORIES) {\n      var m = this._generateCategory();\n      this.collection.add(m);\n      this._addCategory(m);\n      return false;\n    }\n\n    // else, let's check\n    if (nonFilled.length > 0) {\n      var m = _.first(nonFilled);\n      var v = _.find(this._subviews, function(view){ return m.cid === view.model.cid });\n      var pos = v.$el.index();\n      \n      // Only one item in the collection, do nothing\n      if (collection_size === 1) return false;\n\n      // If it is the last item but there is no more items, do nothing\n      if (pos === (collection_size - 1)) return false;\n\n      // If it is not the last item and there is another non-filled element\n      // let's remove that one.\n      if (pos !== (collection_size - 1) && nonFilled.length > 1) {\n        m = nonFilled[1];\n        v = _.find(this._subviews, function(view){ return m.cid === view.model.cid });\n        this._removeCategory(v);\n      }\n\n      // Reorder category indexes :(\n      this._setCategoryIndex();\n    }\n  },\n\n  // Set proper index after any category removed\n  _setCategoryIndex: function() {\n    var self = this;\n\n    // Hack to set properly category numbers\n    this.$('.twitter-category').each(function(i,el) {\n      // Get category, removing Category word\n      var category = $(el).find('.js-category').text().replace('Category ','');\n\n      if (category !== (i+1) ) {\n        // Find model\n        var m = self.collection.find(function(m) { return m.get('category') === category });\n        // Find view\n        m.set('category', (i+1).toString() );  \n      }\n      \n    })\n  },\n\n  _generateCategory: function() {\n    return new TwitterCategoriesModel({\n      terms: [],\n      category: (this.collection ? ( this.collection.size() + 1 ) : 1 ).toString()\n    });\n  },\n\n  _addCategory: function(m) {\n    var category = new TwitterCategoryView({ model: m });\n    \n    category.bind('submit', this._onCategorySubmit, this);\n    category.bind('limit', this._onCategoryLimit, this);\n    category.bind('nolimit', this._onCategoryNoLimit, this);\n\n    this.$el.append(category.render().el);\n    \n    this.addView(category);\n    this.trigger(\"addCategory\");\n  },\n\n  _removeCategory: function(v) {\n    v.hide();\n    v.clean();\n    v.model.destroy();\n    this.trigger(\"removeCategory\");\n  },\n\n  _onCategorySubmit: function() {\n    this.trigger('submitCategory', this.collection.toJSON(), this);\n  },\n\n  _onCategoryLimit: function() {\n    this.trigger('limitCategory', this.collection.toJSON(), this);\n  },\n\n  _onCategoryNoLimit: function() {\n    this.trigger('noLimitCategory', this.collection.toJSON(), this);\n  },\n\n  _onCategoryChange: function() {\n    this.trigger('changeCategory', this.collection.toJSON(), this);\n  },\n\n  getCategories: function() {\n    return this.collection.toJSON();\n  }\n\n});",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n// Twitter category model\n\nmodule.exports = cdb.core.Model.extend({\n\n  _MAX_COUNTER: 1014,\n\n  _CHAR_MAP: {\n    ' ': 2,\n    '-': 2,\n    '_': 2,\n    '.': 2\n  },\n  \n  defaults: {\n    terms:    [],\n    category: '',\n    counter:  1014\n  },\n\n  initialize: function() {\n    this._initBinds();\n  },\n\n  _initBinds: function() {\n    this.bind('change:terms', this._setCounter, this);\n  },\n\n  _setCounter: function() {\n    var count = this._MAX_COUNTER;\n    var self = this;\n\n    // Check terms number\n    if (this.get('terms').length > 1) {\n      count = count - ( ( this.get('terms').length - 1 ) * 4 )\n    }\n\n    // Check characters\n    _.each(this.get('terms'), function(term) {\n      _.each(term, function(c) {\n        if (self._CHAR_MAP[c] !== undefined) {\n          count = count - self._CHAR_MAP[c];\n        } else {\n          count--\n        }\n      });\n    });\n\n    // Count never should be fewer then 0 please!\n    this.set('counter', Math.max(0,count));\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n\n/**\n *  Twitter category item view\n *  - It just needs a twitter category model\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'TwitterCategory',\n\n  _MAX_CATEGORIES: 4,\n  _MAX_TERMS: 29,\n\n  events: {\n    'keydown .js-terms':   '_onInputChange',\n    'keypress .js-terms':  '_onInputChange',\n    'keyup .js-terms':     '_onInputChange'\n  },\n\n  initialize: function() {\n    this.template = cdb.templates.getTemplate('common/views/create/listing/import_types/twitter_category');\n    this._initBinds();\n  },\n\n  render: function() {\n    this.$el.append(\n      this.template({\n        terms: this.model.get('terms'),\n        category: this.model.get('category'),\n        counter: this.model.get('counter')\n      })\n    );\n\n    // Show category\n    this.show();\n\n    return this;\n  },\n\n  _initBinds: function() {\n    _.bindAll(this, '_onInputChange');\n    this.model.bind('change:category', this._onCategoryChange, this);\n  },\n\n  _onCategoryChange: function() {\n    this.$('.js-category').text('Category ' + this.model.get('category'));\n  },\n\n  _onInputChange: function(e) {\n    var value = $(e.target).val();\n\n    // It was a ENTER key event? Send signal!\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      this.trigger('submit', this.model, this);\n      return false;\n    }\n\n    // Change icon class\n    this.$('.CDB-IconFont-twitter')[value.length > 0 ? 'addClass' : 'removeClass']('is-highlighted');\n\n    // Check if it is possible to add new characters\n    // if not, stop the action, unless user is deleting\n    // any previous character\n    if (( this.model.get('counter') === 0 || this.model.get('terms').length > this._MAX_TERMS) &&\n      e.keyCode !== 37 /* left */ && e.keyCode !== 39 /* right */ && e.keyCode !== 8 && value.length > 0) {\n      this.killEvent(e);\n      this.trigger('limit', this.model, this);\n      return false;\n    } else {\n      this.trigger('nolimit', this.model, this);\n    }\n\n    var $input = $(e.target);\n    var value = $input.val();\n    var d = {};\n\n    // Get valid terms array\n    if (!value) {\n      value = [];\n    } else {\n      value = value.split(',');\n    }\n\n    d['terms'] = value;\n\n    this.model.set(d);\n  },\n\n  show: function() {\n    this.$el.addClass('enabled');\n  },\n\n  hide: function() {\n    this.$el.removeClass('enabled');\n  }\n\n});",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar ImportOptions = require('./import_options');\nvar ImportFallback = require('./imports/import_default_fallback_view');\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n/**\n *  Imports view\n *\n *  Displays all the import options available\n *  through new create dialog.\n *\n *  IMPORTANT!!\n *\n *  If you need to add a new import pane:\n *\n *  - Create the proper class within imports folder and its tests.\n *  - Add necessary info in import_options file.\n *  - Create a check function here if needed, if not will appear\n *    always enabled (for everybody!).\n *\n */\n\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'ImportOptions',\n\n  _TABS_PER_ROW: 5,\n  _DEFAULT_IMPORT: 'file',\n  _IMPORT_OPTIONS: ImportOptions,\n\n  _TEXTS: {\n    key:      _t('<%- name %> key is not specified and panel can\\'t be enabled'),\n    account:  _t('<%- name %> data source is not available in your plan. Please upgrade'),\n    limits:   _t('You\\'ve reached the limits for your account. Please upgrade'),\n    credits:  _t('You\\'ve reached the available <%- name %> credits for your account this month')\n  },\n\n  events: {\n    'click .js-goNext': '_moveNextTabs',\n    'click .js-goPrev': '_movePrevTabs'\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.model = new cdb.core.Model({ page: 1, maxPages: 0 });\n    this.createModel = this.options.createModel;\n    this.template = cdb.templates.getTemplate('common/views/create/listing/import_view');\n  },\n\n  render: function() {\n    this._destroyBinds();\n    this.clearSubViews();\n    this.$el.empty();\n\n    // Append template content\n    this.$el.append(this.template());\n    // Generate tabs!\n    this._genTabs();\n    // Generate tabs navigation\n    this._genTabsNavigation();\n    // Generate panes!\n    this._genPanes();\n    // Set binds\n    this._initBinds();\n    // Set option\n    this._setOption();\n\n    return this;\n  },\n\n\n  ////////////////////\n  // TABS && PANES! //\n  ////////////////////\n\n  _genTabs: function() {\n    var tabs = \"\";\n    var tabTemplate = cdb.templates.getTemplate('common/views/create/listing/import_tab');\n\n    _.each(this._IMPORT_OPTIONS, function(t) {\n      if (!_.isEmpty(t) && t.enabled(cdb.config, this.user_data)) {\n        tabs += tabTemplate(t);\n      }\n    });\n\n    this.$('.ImportOptions-tabsList').append(tabs);\n\n    // Create tabs\n    this.importTabs = new cdb.admin.Tabs({\n      el:     this.$('.ImportOptions-tabsList'),\n      slash:  true\n    });\n    this.addView(this.importTabs);\n  },\n\n  _genTabsNavigation: function() {\n    var numTabs = this.$('.ImportOptions-tab').size();\n    if (numTabs <= 1) {\n      this.$('.ImportOptions-tabs').hide();\n    }\n\n    // Set max pages\n    this.model.set('maxPages', Math.ceil(numTabs / this._TABS_PER_ROW));\n    this._checkTabsNavigation();\n    if (this.model.get('maxPages') <= 1) {\n      this.$('.ImportOptions-navigation').hide();\n    }\n  },\n\n  _moveNextTabs: function() {\n    var page = this.model.get('page');\n    var maxPages = this.model.get('maxPages');\n\n    if (page < maxPages) {\n      this.model.set('page', page + 1);\n    }\n  },\n\n  _movePrevTabs: function() {\n    var page = this.model.get('page');\n    if (page > 1) {\n      this.model.set('page', page - 1);\n    }\n  },\n\n  _moveTabsNavigation: function() {\n    var page = this.model.get('page');\n    var rowWidth = 800;\n\n    this.$('.ImportOptions-tabsList').css('margin-left', '-' + (rowWidth * (page-1)) + 'px');\n    this._checkTabsNavigation();\n  },\n\n  _checkTabsNavigation: function() {\n    var page = this.model.get('page');\n    var maxPages = this.model.get('maxPages');\n\n    // Check prev button\n    this.$('.js-goPrev')[ page > 1 ? 'removeClass' : 'addClass' ]('is-disabled');\n\n    // Check next button\n    this.$('.js-goNext')[ page < maxPages ? 'removeClass' : 'addClass' ]('is-disabled');\n  },\n\n  _genPanes: function() {\n    var self = this;\n\n    // Create TabPane\n    this.importPanes = new cdb.ui.common.TabPane({\n      el: this.$(\".ImportOptions-panes\")\n    });\n    this.addView(this.importPanes);\n\n    // Link tabs with panes\n    this.importTabs.linkToPanel(this.importPanes);\n\n    // Render panes!\n    _.each(this._IMPORT_OPTIONS, function(imp,i) {\n      var pane = '';\n\n      // Check if import option function exists\n      var fn = self['_check' + i + 'Import'];\n      var isEnabled = (fn && fn(imp, self));\n\n      if (( isEnabled || isEnabled === undefined ) && !_.isEmpty(imp)) {\n        pane = new imp.className(\n          _.extend(\n            ( imp.options || {} ),\n            {\n              user: self.user,\n              title: imp.title\n            }\n          )\n        );\n      } else if (imp.fallback) {\n        pane = new ImportFallback({\n          template: imp.fallback\n        });\n      }\n\n      if (pane) {\n        pane.render();\n        pane.bind('change', self._setUploadModel, self);\n        self.importPanes.addTab(imp.name, pane);\n        self.addView(pane);\n      }\n    });\n  },\n\n  _checkGDriveImport: function(imp, v) {\n    if (!cdb.config.get('oauth_gdrive')) {\n      v._setFailedTab('gdrive', 'key');\n      return false;\n    }\n    return true;\n  },\n\n  _checkDropboxImport: function(imp, v) {\n    if (!cdb.config.get('oauth_dropbox')) {\n      v._setFailedTab('dropbox', 'key');\n      return false;\n    }\n    return true;\n  },\n\n  _checkBoxImport: function(imp, v) {\n    if (!cdb.config.get('oauth_box')) {\n      v._setFailedTab('box', 'key');\n      return false;\n    }\n    return true;\n  },\n\n  _checkTwitterImport: function(imp, v) {\n    // Check if user have twitter datasource enabled!\n    if (!cdb.config.get('datasource_search_twitter')) {\n      v._setFailedTab('twitter', 'key');\n      return false;\n    }\n    // Check if user can create or import a new file or user has\n    // enough rights to enable twitter!\n    if (!v.user.get('twitter').enabled) {\n      return false;\n    }\n    // Check if user can create or import a new file or user has\n    // enough rights to enable twitter!\n    if (( v.user.get('twitter').quota - v.user.get('twitter').monthly_use ) <= 0 && v.user.get('twitter').hard_limit) {\n      v._setFailedTab('twitter', 'credits');\n      return false;\n    }\n    return true;\n  },\n\n  _checkInstagramImport: function(imp, v) {\n    if (!v.user.featureEnabled('instagram_import')) {\n      return false;\n    }\n    if (!cdb.config.get('oauth_instagram')) {\n      v._setFailedTab('instagram', 'key');\n      return false;\n    }\n    return true;\n  },\n\n  _checkSalesforceImport: function(imp, v) {\n    // Check if salesforce feature is enabled\n    if (!v.user.get('salesforce').enabled) {\n      return false;\n    }\n    return true;\n  },\n\n  _checkMailchimpImport: function(imp, v) {\n    // Config available?\n    if (!cdb.config.get('oauth_mailchimp')) {\n      v._setFailedTab('mailchimp', 'key');\n      return false;\n    }\n    // Feature enabled?\n    if (!v.user.featureEnabled('mailchimp_import')) {\n      return false;\n    }\n    return true;\n  },\n\n  _setFailedTab: function(tab, type) {\n    var $tab = this.importTabs.getTab(tab);\n    $tab.addClass('disabled');\n    this._createTooltip(tab, type);\n  },\n\n  _createTooltip: function(tab, type) {\n    var self = this;\n    var $tab = this.importTabs.getTab(tab);\n\n    // Tipsy?\n    var tooltip = new cdb.common.TipsyTooltip({\n      el: $tab,\n      title: function() {\n        return _.template(self._TEXTS[type])({ name: tab })\n      }\n    })\n    this.addView(tooltip);\n  },\n\n  _setUploadModel: function(d) {\n    this.createModel.upload.setFresh(d);\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:page', this._moveTabsNavigation, this);\n    if (this.importPanes) {\n      this.importPanes.bind('tabEnabled',  this._onTabChange, this);\n    }\n  },\n\n  _destroyBinds: function() {\n    if (this.importPanes) {\n      this.importPanes.unbind('tabEnabled', null, this);\n    }\n  },\n\n  _setOption: function() {\n    // First option > data file\n    this.importPanes.active(this._DEFAULT_IMPORT);\n    this._updateImportOption();\n  },\n\n  _updateImportOption: function() {\n    this.createModel.setActiveImportPane(this.importPanes.activeTab);\n  },\n\n\n  ////////////\n  // Events //\n  ////////////\n\n  _onTabChange: function(tabName) {\n    var v = this.importPanes.getPane(tabName);\n    // Set upload model from activated pane to create model\n    var upload = v.getModelData && v.getModelData();\n    if (upload) {\n      this._setUploadModel(upload);\n    } else {\n      this._setUploadModel({});\n    }\n    this._updateImportOption();\n  },\n\n  clean: function() {\n    this._destroyBinds();\n    cdb.core.View.prototype.clean.call(this);\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\nvar pluralizeString = require('../../../view_helpers/pluralize_string');\n\n/**\n *  Listing datasets navigation.\n *\n *  - 'Filter by' datasets.\n *  - 'Search' any pattern within dataset collection.\n *\n */\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'submit .js-search-form':   '_submitSearch',\n    'keydown .js-search-form':  '_onSearchKeyDown',\n    'click .js-search-form':    'killEvent',\n    'click .js-search-link':    '_onSearchClick',\n    'click .js-clean-search':   '_onCleanSearchClick',\n    'click .js-shared':         '_onSharedClick',\n    'click .js-library':        '_onLibraryClick',\n    'click .js-connect':        '_onConnectClick',\n    'click .js-datasets':       '_onDatasetsClick',\n    'click .js-create_empty':   '_onCreateEmptyClick'\n  },\n\n  _TEXTS: {\n    createFromScratchLabel: {\n      map: 'Create empty map',\n      dataset: 'Create empty dataset',\n      addLayer: 'Add an empty layer'\n    }\n  },\n\n  initialize: function() {\n    this.routerModel = this.options.routerModel;\n    this.createModel = this.options.createModel;\n    this.user = this.options.user;\n    this.template = cdb.templates.getTemplate('common/views/create/listing/navigation');\n    this.model = new cdb.core.Model();\n\n    this._preRender();\n    this._initBinds();\n  },\n\n  // It is necessary to add two static elements because\n  // they can't be removed/replaced using render method\n  // each time a change (in a model or a collection) happens.\n  // This is due to the behaviour of the CSS animations.\n  _preRender: function() {\n    var $uInner = $('<div>').addClass('u-inner');\n    var $filtersInner = $('<div>').addClass('Filters-inner');\n    this.$el.append($uInner.append($filtersInner));\n  },\n\n  render: function(m, c) {\n    this.clearSubViews();\n\n    var selectedItemsCount = this._selectedItems().length;\n    // If a change is made from content type we have to know\n    // preventing show wrong data about total items\n    var changedContentType = c && c.changes && c.changes.content_type;\n    var createModelType = this.createModel.get('type');\n\n    this.$('.Filters-inner').html(\n      this.template(\n        _.extend({\n            createModel:           this.createModel,\n            canCreateDataset:      this.user.canCreateDatasets(),\n            listing:               this.createModel.get('listing'),\n            isInsideOrg:           this.user.isInsideOrg(),\n            selectedItemsCount:    selectedItemsCount,\n            maxLayersByMap:        this.user.getMaxLayers(),\n            totalShared:           changedContentType ? 0 : this.collection.total_shared,\n            totalItems:            changedContentType ? 0 : this.collection.total_user_entries,\n            pageItems:             this.collection.size(),\n            routerModel:           this.routerModel,\n            pluralizedContentType: pluralizeString('dataset', changedContentType ? 0 : this.collection.total_user_entries),\n            pluralizedContentTypeSelected: pluralizeString('dataset', selectedItemsCount),\n            createFromScratchLabel: this._TEXTS.createFromScratchLabel[createModelType]\n          },\n          this.routerModel.attributes\n        )\n      )\n    );\n\n    this._animate();\n    if (this.routerModel.isSearching()) {\n      this._focusSearchInput();\n    }\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.on('change:isSearchEnabled', this._onChangeIsSearchEnabled, this);\n    this.createModel.bind('change:listing', this.render, this);\n    this.routerModel.bind('change', this.render, this);\n    this.collection.bind('reset', this.render, this);\n    cdb.god.bind('closeDialogs', this._animate, this);\n    this.add_related_model(cdb.god);\n    this.add_related_model(this.createModel);\n    this.add_related_model(this.collection);\n    this.add_related_model(this.routerModel);\n  },\n\n  _onChangeIsSearchEnabled: function(model, isSearchEnabled) {\n    this._enableSearchUI(isSearchEnabled);\n\n    if (this.routerModel.isSearching()) {\n      this._cleanSearch();\n    } else if (isSearchEnabled) {\n      this._$searchInput().val('');\n      this._focusSearchInput();\n    }\n  },\n\n  _$searchInput: function() {\n    return this.$('.js-search-input')\n  },\n\n  _focusSearchInput: function() {\n    this._$searchInput()\n      .select()\n      .focus();\n  },\n\n  _onSearchKeyDown: function(e) {\n    // ESC\n    if (e.keyCode === 27) {\n      this.killEvent(e);\n      this._cleanSearch();\n    }\n  },\n\n  _selectedItems: function() {\n    return this.collection.where({ selected: true });\n  },\n\n  _animate: function() {\n    this._enableSearchUI(!!this.routerModel.isSearching());\n\n    // Check if user doesn't have any table and it is in library section\n    // to remove useless shadow\n    var inLibrarySection = this.routerModel.get('library');\n    var inDatasetsSection = this.createModel.get('listing') === \"datasets\";\n    var hasDatasets = this.collection.total_user_entries > 0;\n    this.$el.toggleClass('no-shadow', inLibrarySection && !hasDatasets && inDatasetsSection);\n  },\n\n  _enableSearchUI: function(enable) {\n    this.$('.js-search-field').toggle(enable);\n    this.$('.js-links-list').toggleClass('is-hidden', enable);\n    this.$('.js-order-list').toggleClass('is-hidden', enable);\n  },\n\n  _onDatasetsClick: function() {\n    this.routerModel.set({\n      shared: 'no',\n      library: false,\n      page: 1\n    });\n    this.createModel.set('listing', 'datasets');\n  },\n\n  _onSharedClick: function() {\n    this.routerModel.set({\n      shared: 'only',\n      library: false,\n      page: 1\n    });\n    this.createModel.set('listing', 'datasets');\n  },\n\n  _onLibraryClick: function() {\n    this.routerModel.set({\n      shared: 'no',\n      library: true,\n      page: 1\n    });\n    this.createModel.set('listing', 'datasets');\n\n    // Event tracking \"Clicked Common data\"\n    cdb.god.trigger('metrics', 'common_data', {\n      email: window.user_data.email\n    });\n  },\n\n  _onConnectClick: function() {\n    if (this.user.canCreateDatasets()) {\n      this.createModel.set('listing', 'import');\n    }\n  },\n\n  _onCreateEmptyClick: function() {\n    if (this.user.canCreateDatasets()) {\n      this.createModel.createFromScratch();\n    }\n  },\n\n  // Selection actions\n\n  _onSearchClick: function(e) {\n    if (e) this.killEvent(e);\n    this.model.set('isSearchEnabled', !this.model.get('isSearchEnabled'));\n  },\n\n  // Filter actions\n\n  _onCleanSearchClick: function(e) {\n    if (e) e.preventDefault();\n    this._cleanSearch();\n  },\n\n  _cleanSearch: function() {\n    this.routerModel.set({\n      q: '',\n      tag: '',\n      shared: 'no',\n      library: this.createModel.showLibrary()\n    });\n    this.model.set('isSearchEnabled', false);\n  },\n\n  _submitSearch: function(e) {\n    if (e) this.killEvent(e);\n    var val = Utils.stripHTML(this.$('.js-search-input').val().trim(),'');\n    var tag = val.search(':') === 0 ? val.replace(':', '') : '';\n    var q = val.search(':') !== 0 ? val : '';\n\n    this.routerModel.set({\n      page: 1,\n      tag: tag,\n      q: q,\n      shared: 'yes'\n    });\n\n    this.createModel.set('listing', 'datasets');\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BaseDialog = require('../views/base_dialog/view');\nvar pluralizeString = require('../view_helpers/pluralize_string');\nvar randomQuote = require('../view_helpers/random_quote');\nvar MapCardPreview = require('../views/mapcard_preview');\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar moment = (typeof window !== \"undefined\" ? window['moment'] : typeof global !== \"undefined\" ? global['moment'] : null);\n\nvar AFFECTED_ENTITIES_SAMPLE_COUNT = 3;\nvar AFFECTED_VIS_COUNT = 3;\n\n/**\n * Delete items dialog\n */\nmodule.exports = BaseDialog.extend({\n\n  initialize: function() {\n    this.elder('initialize');\n    if (!this.options.viewModel) {\n      throw new TypeError('viewModel is required');\n    }\n    if (!this.options.user) {\n      throw new TypeError('user is required');\n    }\n\n    this._viewModel = this.options.viewModel;\n    this._viewModel.loadPrerequisites();\n    this._viewModel.bind('change', function() {\n      if (this._viewModel.state() === 'DeleteItemsDone') {\n        this.close();\n      } else {\n        this.render();\n      }\n    }, this);\n    this.add_related_model(this._viewModel);\n  },\n\n  render: function() {\n    BaseDialog.prototype.render.call(this);\n    this._loadMapPreviews();\n    return this;\n  },\n\n  /**\n   * @implements cdb.ui.common.Dialog.prototype.render_content\n   */\n  render_content: function() {\n    return this['_render' + this._viewModel.state()]();\n  },\n\n  _renderLoadingPrerequisites: function() {\n    return cdb.templates.getTemplate('common/templates/loading')({\n      title: 'Checking what consequences deleting the selected ' + this._pluralizedContentType() + ' would have...',\n      quote: randomQuote()\n    });\n  },\n\n  _renderLoadPrerequisitesFail: function() {\n    return cdb.templates.getTemplate('common/templates/fail')({\n      msg: 'Failed to check consequences of deleting the selected ' + this._pluralizedContentType()\n    });\n  },\n\n  _renderConfirmDeletion: function() {\n    // An entity can be an User or Organization\n    var affectedEntities = this._viewModel.affectedEntities();\n    var affectedVisData = this._viewModel.affectedVisData();\n\n    return cdb.templates.getTemplate('common/dialogs/delete_items_view_template')({\n      firstItemName: this._getFirstItemName(),\n      selectedCount: this._viewModel.length,\n      isDatasets: this._viewModel.isDeletingDatasets(),\n      pluralizedContentType: this._pluralizedContentType(),\n      affectedEntitiesCount: affectedEntities.length,\n      affectedEntitiesSample: affectedEntities.slice(0, AFFECTED_ENTITIES_SAMPLE_COUNT),\n      affectedEntitiesSampleCount: AFFECTED_ENTITIES_SAMPLE_COUNT,\n      affectedVisCount: affectedVisData.length,\n      pluralizedMaps: pluralizeString('map', affectedVisData.length),\n      affectedVisVisibleCount: AFFECTED_VIS_COUNT,\n      visibleAffectedVis: this._prepareVisibleAffectedVisForTemplate(affectedVisData.slice(0, AFFECTED_VIS_COUNT))\n    });\n  },\n\n  _prepareVisibleAffectedVisForTemplate: function(visibleAffectedVisData) {\n    return visibleAffectedVisData.map(function(visData) {\n      var vis = new cdb.admin.Visualization(visData);\n      var owner = vis.permission.owner;\n      return {\n        visId: vis.get('id'),\n        name: vis.get('name'),\n        url: vis.viewUrl(this.options.user).edit(),\n        owner: owner,\n        ownerName: owner.get('username'),\n        isOwner: vis.permission.isOwner(this.options.user),\n        showPermissionIndicator: !vis.permission.hasWriteAccess(this.options.user),\n        timeDiff: moment(vis.get('updated_at')).fromNow()\n      };\n    }, this);\n  },\n\n  /**\n   * @overrides BaseDialog.prototype.ok\n   */\n  ok: function() {\n    this._viewModel.deleteItems();\n    this.render();\n  },\n\n  _loadMapPreviews: function() {\n    var self = this;\n\n    this.$el.find('.MapCard').each(function() {\n      var username = $(this).data('visOwnerName');\n      var mapCardPreview = new MapCardPreview({\n        el: $(this).find('.js-header'),\n        width: 298,\n        height: 130,\n        mapsApiResource: cdb.config.getMapsResourceName(username),\n        visId: $(this).data('visId'),\n        username: username\n      }).load();\n\n      self.addView(mapCardPreview);\n    });\n  },\n\n  _renderDeletingItems: function() {\n    return cdb.templates.getTemplate('common/templates/loading')({\n      title: 'Deleting the selected ' + this._pluralizedContentType() + '...',\n      quote: randomQuote()\n    });\n  },\n\n  _renderDeleteItemsFail: function() {\n    var message = this._viewModel.errorMessage().replace(/\\n/g, '<br>');\n    if (message === 'something failed') {\n      message = '';\n    }\n    return cdb.templates.getTemplate('common/templates/fail')({\n      msg: 'Failed to delete the selected ' + this._pluralizedContentType() + '. ' + message\n    });\n  },\n\n  _pluralizedContentType: function() {\n    return pluralizeString(\n      this._viewModel.isDeletingDatasets() ? 'dataset' : 'map',\n      this._viewModel.length\n    );\n  },\n\n  _getFirstItemName: function() {\n    if (!this.options.viewModel) return;\n\n    var firstItem = this.options.viewModel.at(0);\n\n    if (firstItem) {\n      return firstItem.get(\"name\");\n    }\n  }\n\n});\n",
    "var Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar batchProcessItems = require('../../common/batch_process_items');\n\n/**\n * View model for delete items view.\n * Manages the states changes for the delete items view.\n */\nmodule.exports = Backbone.Collection.extend({\n\n  initialize: function(models, opts) {\n    if (!opts.contentType) {\n      throw new TypeError('contentType is required')\n    }\n\n    this._contentType = opts.contentType;\n  },\n\n  state: function() {\n    return this._state;\n  },\n\n  errorMessage: function() {\n    return this._errorMessage;\n  },\n\n  setState: function(newState) {\n    this._state = newState;\n    this.trigger('change');\n    this.trigger(newState);\n  },\n\n  isDeletingDatasets: function() {\n    return this._contentType === 'datasets';\n  },\n\n  loadPrerequisites: function() {\n    var setStateToConfirmDeletion = this.setState.bind(this, 'ConfirmDeletion');\n\n    if (this.isDeletingDatasets()) {\n      this.setState('LoadingPrerequisites');\n\n      batchProcessItems({\n        howManyInParallel: 5,\n        items: this.toArray(),\n        processItem: this._loadPrerequisitesForModel,\n        done: setStateToConfirmDeletion,\n        fail: this.setState.bind(this, 'LoadPrerequisitesFail')\n      });\n    } else {\n      setStateToConfirmDeletion();\n    }\n  },\n\n  affectedEntities: function() {\n    return this.chain()\n      .map(function(m) {\n        return m.sharedWithEntities();\n      })\n      .flatten().compact().value();\n  },\n\n  affectedVisData: function() {\n    var visData = this.chain()\n      .map(function(m) {\n          var metadata = m.tableMetadata();\n          return []\n            .concat(metadata.get('dependent_visualizations'))\n            .concat(metadata.get('non_dependent_visualizations'));\n        })\n      .flatten().compact().value();\n\n    return _.uniq(visData, function(metadata) {\n      return metadata.id;\n    });\n  },\n\n  deleteItems: function() {\n    this.setState('DeletingItems');\n\n    // INFO: Don't put more than 1 delete in parallel because this lead to a\n    // race condicition in the derived map deletion (if any)\n    batchProcessItems({\n      howManyInParallel: 1,\n      items: this.toArray(),\n      processItem: this._deleteItem,\n      done: this.setState.bind(this, 'DeleteItemsDone'),\n      fail: this._deletionFailed.bind(this)\n    });\n  },\n\n  _deletionFailed: function(error) {\n    this._errorMessage = error;\n    this.setState('DeleteItemsFail');\n  },\n\n  _loadPrerequisitesForModel: function(m, callback) {\n    var metadata = m.tableMetadata();\n\n    // TODO: extract to be included in fetch call instead? modifying global state is not very nice\n    metadata.no_data_fetch = true;\n\n    metadata.fetch({\n      wait: true, // TODO: from old code (delete_dialog), why is it necessary?\n      success: function() {\n        callback();\n      },\n      error: function(model, jqXHR) {\n        callback(jqXHR.responseText);\n      }\n    });\n  },\n\n  _deleteItem: function(item, callback) {\n    item.destroy({ wait: true })\n      .done(function() {\n        callback();\n      })\n      .fail(function(response) {\n        var errorMessage;\n\n        try {\n          errorMessage = JSON.parse(response.responseText).errors.join('; ');\n        } catch (e) {\n          errorMessage = 'something failed';\n        }\n\n        callback(errorMessage);\n      });\n  }\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar BaseDialog = require('../views/base_dialog/view');\nvar ViewFactory = require('../view_factory');\nvar randomQuote = require('../view_helpers/random_quote');\nvar ErrorDetailsView = require('../views/error_details_view');\n\n/**\n * Dialog to manage duplication process of a cdb.admin.Visualization object.\n */\nmodule.exports = BaseDialog.extend({\n\n  initialize: function() {\n    this.elder('initialize');\n    if (!this.model) throw new Error('model is required (cdb.admin.Visualization)');\n    if (!this.options.user) throw new Error('user is required');\n    this.elder('initialize');\n    this._initViews();\n    this._initBinds();\n    this._duplicateMap();\n  },\n\n  render_content: function() {\n    return this._panes.getActivePane().render().el;\n  },\n\n  _initViews: function() {\n    this._panes = new cdb.ui.common.TabPane({\n      el: this.el\n    });\n    this.addView(this._panes);\n    this._panes.addTab('loading',\n      ViewFactory.createByTemplate('common/templates/loading', {\n        title: 'Duplicating your map',\n        quote: randomQuote()\n      })\n    );\n    this._panes.active('loading');\n  },\n\n  _initBinds: function() {\n    this._panes.bind('tabEnabled', this.render, this);\n  },\n\n  _duplicateMap: function(newName) {\n    var self = this;\n    var newName = this.model.get('name') + ' copy';\n    this.model.copy({\n      name: newName\n    }, {\n      success: function(newVis) {\n        self._redirectTo(newVis.viewUrl(self.options.user).edit().toString());\n      },\n      error: self._showError.bind(self)\n    });\n  },\n\n  _showError: function(model) {\n    var view;\n    try {\n      var err = _.clone(model.attributes);\n      view = new ErrorDetailsView({\n        err: _.extend(err, model.attributes.get_error_text),\n        user: this.options.user\n      });\n    } catch(err) {\n      view = ViewFactory.createByTemplate('common/templates/fail', {\n        msg: \"Sorry, something went wrong, but we're not sure why.\"\n      });\n    }\n    this._panes.addTab('fail', view.render());\n    this._panes.active('fail');\n  },\n\n  _redirectTo: function(url) {\n    window.location = url;\n  }\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\nvar Pecan = require('cartodb-pecan');\n\nmodule.exports = cdb.core.View.extend({\n\n  _CARD_WIDTH: 288,\n  _CARD_HEIGHT: 170,\n  _TABS_PER_ROW: 3,\n  _GET_BBOX_FROM_THE_GEOM: true,\n\n  tagName: \"li\",\n  className: \"GalleryList-item MapsList-item js-card\",\n\n  events: {\n    \"click \": \"_onClick\"\n  },\n\n  initialize: function() {\n    this.template = cdb.templates.getTemplate('common/dialogs/pecan/card');\n  },\n\n  render: function() {\n    var src = this.options.url + \"?api_key=\" + this.options.api_key;\n\n    var wizardName = this.model.get(\"visualizationType\").charAt(0).toUpperCase() + this.model.get(\"visualizationType\").slice(1);\n\n    var null_count = +(this.model.get(\"null_ratio\") * this.model.get(\"count\")).toFixed(2);\n    var prettyNullCount = Utils.formatNumber(null_count);\n\n    this.$el.html(\n      this.template({\n      column: this.model.get(\"column\"),\n      wizard: wizardName,\n      metadata: this.model.get(\"metadata\"),\n      null_count: prettyNullCount,\n      weight: this.model.get(\"weight\")\n    }));\n\n    if (this.model.get(\"visualizationType\") === \"choropleth\") {\n      this._addHistogram();\n    }\n\n    var self = this;\n    var img = new Image();\n    img.onerror = function() {\n      cdb.log.info(\"error loading the image for \" + self.model.get(\"column\"));\n    };\n    img.onload = function() {\n      self.$(\".js-loader\").hide();\n      self.$(\".js-header\").append('<img class=\"MapCard-preview\" src=\"' + src + '\" />');\n      self.$(\"img\").show();\n    };\n\n    img.src = src;\n\n    return this;\n  },\n\n  _onClick: function(e) {\n    this.killEvent(e);\n    this.trigger(\"click\", this.model, this);\n  },\n\n  _addHistogram: function() {\n    var data = this.model.get(\"cat_hist\").slice(0, 7);\n    data = _.sortBy(data, function(d){ return d[0]; });\n    var rampName = Pecan.getMethodProperties(this.model.attributes).name;\n\n    var width = 37;\n    var height = 11;\n    var minHeight = 2;\n\n    var x = d3.scale.ordinal()\n        .rangeRoundBands([0, width], .1);\n\n    var y = d3.scale.linear()\n        .range([height, 0]);\n\n    var xAxis = d3.svg.axis()\n        .scale(x)\n        .orient(\"bottom\");\n\n    var svg = d3.select(this.$(\".js-graph\")[0]).append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n      .append(\"g\");\n\n    x.domain(data.map(function(d) { return d[0]; }));\n    y.domain([0, d3.max(data, function(d) { return d[1]; })]);\n\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    svg.selectAll(\".bar\")\n        .data(data)\n      .enter().append(\"rect\")\n        .attr(\"fill\", function(d, i) {\n          return cdb.admin.color_ramps[rampName][7][i];\n        })\n        .attr(\"class\", \"HistogramGraph-bar\")\n        .attr('data-title', function(d) {\n          return Utils.formatNumber(d[1])\n        })\n        .attr(\"x\", function(d) { return x(d[0]); })\n        .attr(\"width\", 4)\n        .attr(\"y\", function(d) {\n          var value = height - y(d[1]);\n          var yPos = y(d[1]);\n          return value < minHeight ? (height - minHeight) : yPos;\n        })\n        .attr(\"height\", function(d) {\n          var value = height - y(d[1]);\n          return value < minHeight ? minHeight : value;\n        })\n\n    return this;\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\nvar Pecan = require('cartodb-pecan');\nvar BaseDialog = require('../../views/base_dialog/view');\nvar ViewFactory = require('../../view_factory');\nvar randomQuote = require('../../view_helpers/random_quote');\nvar PecanCard = require('./pecan_card');\n\nmodule.exports = BaseDialog.extend({\n\n  _CARD_MARGIN: 20,\n  _CARD_WIDTH: 288,\n  _CARD_HEIGHT: 170,\n  _STROKE_PX_LIMIT: 0.04,\n  _TABS_PER_ROW: 3,\n  _GET_BBOX_FROM_THE_GEOM: true,\n  _DEFAULT_BASEMAP_TEMPLATE: \"http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\",\n  _SUPPORTED_BASEMAPS: [\"light_all\", \"dark_all\", \"light_nolabels\", \"dark_nolabels\", \"base-antique\", \"base-flatblue\", \"toner\", \"watercolor\"],\n\n  events: BaseDialog.extendEvents({\n    \"click .js-goPrev\": \"_prevPage\",\n    \"click .js-goNext\": \"_nextPage\",\n    \"click .js-skip\"  : \"cancel\"\n  }),\n\n  initialize: function() {\n    this.elder('initialize');\n\n    if (!this.options.vis) {\n      throw new Error('vis is required');\n    }\n\n    if (!this.options.user) {\n      throw new Error('user is required');\n    }\n\n    this.columns = this.options.collection;\n    this.add_related_model(this.collection);\n\n    this._initModels();\n    this._initViews();\n    this._initBinds();\n  },\n\n  render_content: function() {\n    return this._panes.getActivePane().render().el;\n  },\n\n  render: function() {\n    BaseDialog.prototype.render.apply(this, arguments);\n    return this;\n  },\n\n  _initModels: function() {\n    this.model = new cdb.core.Model({ page: 1, maxPages: 0 });\n  },\n\n  _initViews: function() {\n\n    _.bindAll(this, \"_addCard\", \"_generateThumbnail\", \"_refreshMapList\", \"_setWizardProperties\");\n\n    this.vis   = this.options.vis;\n    this.map   = this.vis.map;\n    this.user  = this.options.user;\n\n    this._panes = new cdb.ui.common.TabPane({\n      el: this.el\n    });\n\n    this.addView(this._panes);\n\n    this._panes.addTab('vis',\n      ViewFactory.createByTemplate('common/dialogs/pecan/template', {\n      })\n    );\n\n    this._panes.addTab('applying',\n      ViewFactory.createByTemplate('common/templates/loading', {\n        title: 'Applying style…',\n        quote: randomQuote()\n      })\n    );\n\n    this._panes.addTab('loading',\n      ViewFactory.createByTemplate('common/templates/loading', {\n        title: 'Loading previews…',\n        quote: randomQuote()\n      })\n    );\n\n    this._getBBox();\n    this._sendOpenStats();\n    this._loadCards();\n\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:page', this._moveTabsNavigation, this);\n    this._panes.bind('tabEnabled', this.render, this);\n  },\n\n  _getBBox: function() {\n    this.columns.each(function(column) {\n      if (column.get(\"column\") === \"the_geom\") {\n        this.bbox = column.get(\"bbox\");\n      }\n    }, this);\n  },\n\n  _loadCards: function() {\n    this.columns.each(this._loadCard, this);\n  },\n\n  _loadCard: function(column) {\n    var self = this;\n\n    if (column.get(\"success\")) {\n      this._generateThumbnail(column, function(error, url) {\n        if (!error) {\n          self._addCard(url, column);\n        } else {\n          cdb.log.error(error);\n        }\n      });\n    }\n  },\n\n  _sendAppliedStats: function() {\n    cdb.god.trigger('metrics', 'applied_pecan', {\n      email: window.user_data.email\n    });\n  },\n\n  _sendOpenStats: function() {\n    cdb.god.trigger('metrics', 'open_pecan_list', {\n      email: window.user_data.email\n    });\n  },\n\n  _skip: function() {\n    var layerID = this.vis.get(\"active_layer_id\");\n    var name;\n    var activeLayer  = this.vis.map.layers.where({ id: layerID });\n\n    if (activeLayer) {\n      name = activeLayer[0].table.get(\"name\");\n    }\n\n    var skipPencanDialog = 'pecan_' + this.options.user.get(\"username\") + \"_\" + name;\n    localStorage[skipPencanDialog] = true;\n  },\n\n  _nextPage: function() {\n    var page = this.model.get('page');\n    var maxPages = this.model.get('maxPages');\n\n    if (page < maxPages) {\n      this.model.set('page', page + 1);\n    }\n  },\n\n  _prevPage: function() {\n    var page = this.model.get('page');\n    if (page > 1) {\n      this.model.set('page', page - 1);\n    }\n  },\n\n  _moveTabsNavigation: function() {\n    var page = this.model.get('page');\n    var rowWidth = 960;\n\n    var p = rowWidth * (page - 1);\n    this.$('.js-map-list').css('margin-left', '-' + p + 'px');\n    this._refreshNavigation();\n  },\n\n  _refreshNavigation: function() {\n    var page = this.model.get('page');\n    var maxPages = this.model.get('maxPages');\n\n    this.$('.js-goPrev')[ page > 1 ? 'removeClass' : 'addClass' ]('is-disabled');\n    this.$('.js-goNext')[ page < maxPages ? 'removeClass' : 'addClass' ]('is-disabled');\n  },\n\n  _hideNavigation: function() {\n    this.$('.js-navigation').addClass(\"is-hidden\");\n  },\n\n  _setupCSS: function(css, geometryType) {\n    var row_count = this.options.vis.tableMetadata().get(\"row_count\");\n    var removeStrokeIndex = row_count / (this._CARD_WIDTH * this._CARD_HEIGHT);\n    var removeStroke = (removeStrokeIndex > this._STROKE_PX_LIMIT);\n\n    if (geometryType !== \"line\" && removeStroke) {\n      css = css.replace(\"marker-line-width: 1;\", \"marker-line-width: 0.7;\");\n      css = css.replace(\"marker-width: 10;\", \"marker-width: 7;\");\n    }\n\n    return css;\n  },\n\n  _setupTemplate: function() {\n    var template = this.map.getLayerAt(0).get(\"urlTemplate\");\n\n    if (template) {\n      var supportedBasemap = _.find(this._SUPPORTED_BASEMAPS, function(basemap) {\n        return template.indexOf(basemap) !== -1\n      });\n    }\n\n    if (!template || !supportedBasemap) {\n      template = this._DEFAULT_BASEMAP_TEMPLATE;\n    }\n\n    return template;\n  },\n\n  _generateLayerDefinition: function(column) {\n\n    var type = column.get(\"visualizationType\");\n    var sql = column.get(\"sql\");\n    var css = this._setupCSS(column.get(\"css\"), column.get(\"geometryType\"));\n\n    var api_key  = this.user.get(\"api_key\");\n    var maps_api_template = cdb.config.get('maps_api_template');\n\n    var template = this._setupTemplate();\n\n    var layerDefinition = {\n      user_name: user_data.username,\n      maps_api_template: maps_api_template,\n      api_key: api_key,\n      layers: [{\n        type: \"http\",\n        options: {\n          urlTemplate: template,\n          subdomains: [ \"a\", \"b\", \"c\" ]\n        }\n      }, {\n        type: \"cartodb\",\n        options: {\n          sql: sql,\n          cartocss: css,\n          cartocss_version: \"2.1.1\"\n        }\n      }]\n    };\n\n    if (type === \"torque\" || type === \"heatmap\"){\n      layerDefinition.layers[1] = {\n        type: \"torque\",\n        options: {\n          sql: sql,\n          cartocss: css,\n          cartocss_version: \"2.1.1\"\n        }\n      }\n    }\n\n    return layerDefinition;\n  },\n\n  _generateThumbnail: function(column, callback) {\n\n    var layerDefinition = this._generateLayerDefinition(column);\n\n    var onImageReady = function(error, url) {\n      callback && callback(error, url);\n    };\n\n    var the_geom = this.columns.find(function(column) {\n      return column.get(\"column\") === 'the_geom'\n    });\n\n    if (this.bbox && this._GET_BBOX_FROM_THE_GEOM) {\n      cdb.Image(layerDefinition).size(this._CARD_WIDTH, this._CARD_HEIGHT).bbox(this.bbox).getUrl(onImageReady);\n    } else {\n      cdb.Image(layerDefinition).size(this._CARD_WIDTH, this._CARD_HEIGHT).zoom(this.map.get(\"zoom\")).center(this.map.get(\"center\")).getUrl(onImageReady);\n    }\n\n  },\n\n  _addCard: function(url, column) {\n\n    var card = new PecanCard({\n      url: url,\n      urlTemplate: this.map.getLayerAt(0).get(\"urlTemplate\"),\n      api_key: this.user.get(\"api_key\"),\n      model: column\n    });\n\n    card.bind(\"click\", this._onCardClick, this);\n    card.render();\n\n    this._panes.active('vis');\n\n    if (this._getSuccessColumns().length < 3) {\n      this.$(\".js-map-list\").addClass(\"is--centered\");\n    }\n\n    if (column.get(\"visualizationType\") === 'heatmap' || column.get(\"visualizationType\") === 'torque') {\n      this.$(\".js-map-list\").prepend(card.$el);\n    } else {\n      this.$(\".js-map-list\").append(card.$el);\n    }\n\n    this._refreshMapList(card.$el);\n    this._refreshNavigation();\n  },\n\n  _refreshMapList: function($el) {\n    var w = $el.width();\n    var l = this.$(\".js-card\").length;\n    this.$(\".js-map-list\").width(w * l + (l - 1) * this._CARD_MARGIN);\n    this.model.set('maxPages', Math.ceil(this.$('.js-card').size() / this._TABS_PER_ROW));\n  },\n\n  _getSuccessColumns: function() {\n    return this.columns.filter(function(c) { return c.get(\"success\")});\n  },\n\n  _bindDataLayer: function() {\n    this.layer.wizard_properties.unbind(\"load\", this._setWizardProperties, this);\n    this.layer.wizard_properties.bind(\"load\", this._setWizardProperties, this);\n  },\n\n  _getProperties: function(column) {\n\n    var property = column.get(\"column\");\n    var wizard = this._getWizardName(column.get(\"visualizationType\"));\n\n    var properties = { property: property };\n\n    if (wizard === \"category\") {\n      return this._getCategoriesProperties(properties);\n    } else if (wizard === 'choropleth') {\n      return this._getChoroplethProperties(properties);\n    } else if(wizard === \"heatmap\") {\n      return this._getHeatmapProperties(properties);\n    }\n\n  },\n\n  _onCardClick: function(column) {\n    this._panes.active('applying');\n    this.model.set(\"column\", column);\n\n    this._skip();\n\n    this.layer = this._getDataLayer();\n\n    this._sendAppliedStats();\n\n    var wizard = this._getWizardName(column.get(\"visualizationType\"));\n    var properties = this._getProperties(column);\n\n    this._bindDataLayer();\n    this.layer.wizard_properties.active(wizard, properties);\n  },\n\n  _getWizardName: function(name){\n    var mappings = {\"heatmap\": \"torque_heat\"};\n    return mappings[name] || name;\n  },\n\n  _getDataLayer: function() {\n    return this.map.layers.getDataLayers()[0];\n  },\n\n  _setWizardProperties: function() { // TODO: hack, we should find a way to remove this\n    var properties = this._getProperties(this.model.get(\"column\"));\n    this.layer.wizard_properties.unbind(\"load\", this._setWizardProperties, this);\n    if (properties) {\n      this.layer.wizard_properties.set(properties);\n    }\n    this.close();\n  },\n\n  _getChoroplethProperties: function(properties) {\n    var column = this.model.get(\"column\");\n\n    var property = column.get(\"column\");\n    var type     = column.get(\"type\");\n    var dist     = column.get(\"dist_type\");\n    var stats    = column.get(\"stats\");\n\n    properties.qfunction  = this._getQFunction(dist);\n    properties.color_ramp = Pecan.getMethodProperties(stats).name;\n\n    return properties;\n  },\n\n  _getCategoriesProperties: function(properties) {\n    var column = this.model.get(\"column\");\n    properties.metadata   = column.get(\"metadata\");\n    properties.categories = column.get(\"metadata\");\n    return properties;\n  },\n\n  _getHeatmapProperties: function(properties){\n    properties.property = \"cartodb_id\";\n    properties[\"torque-resolution\"] = 2;\n    return properties;\n  },\n\n  _getQFunction: function(dist) {\n    var qfunction = \"Jenks\";\n\n    if (dist === 'L' || dist == 'J') {\n      qfunction = \"Heads/Tails\";\n    } else if (dist === 'A' || dist == 'U') {\n      qfunction = \"Jenks\";\n    } else if (dist === 'F') {\n      qfunction = \"Quantile\"; // we could use 'Equal Interval' too\n    }\n    return qfunction;\n  },\n\n  _keydown: function(e) {\n    if (e.keyCode === $.ui.keyCode.LEFT) {\n      this._prevPage();\n    } else if (e.keyCode === $.ui.keyCode.RIGHT) {\n      this._nextPage();\n    }\n    BaseDialog.prototype._keydown.call(this, e);\n  },\n\n  clean: function() {\n    if (this.layer) {\n      this.layer.wizard_properties.unbind(\"load\", this._setWizardProperties, this);\n    }\n\n    BaseDialog.prototype.clean.call(this);\n  },\n\n  cancel: function(e) {\n    this.killEvent(e);\n    this.model.set('disabled', true);\n    this._skip();\n    this.elder('cancel');\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * Sync interval\n */\nmodule.exports = cdb.core.View.extend({\n\n  tagName: \"li\",\n\n  className: \"DatasetSelected-syncOptionsItem\",\n\n  events: {\n    \"click\": \"_onClick\"\n  },\n\n  initialize: function() {\n    this._setupModel();\n    this._template = cdb.templates.getTemplate('common/dialogs/sync_dataset/interval_template');\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.$el.html(this._template(this.model.attributes));\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:checked', this._onToggleChecked, this);\n  },\n\n  _setupModel: function() {\n    this.model = this.options.model;\n  },\n\n  _onClick: function(e) {\n    this.killEvent(e);\n\n    if (!this.model.get(\"disabled\")) {\n      this.model.set(\"checked\", true);\n      this.trigger(\"checked\", this.model, this);\n    }\n  },\n\n  _onToggleChecked: function() {\n    if (this.model.get(\"checked\")) {\n      this.$(\".js-interval\").addClass(\"is-checked\");\n      this.$(\".js-input\").addClass(\"is-checked\");\n    } else {\n      this.$(\".js-interval\").removeClass(\"is-checked\");\n      this.$(\".js-input\").removeClass(\"is-checked\");\n    }\n  }\n});\n",
    "var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BaseDialog = require('../../views/base_dialog/view');\nvar IntervalView = require('./interval_view');\nvar randomQuote = require('../../view_helpers/random_quote');\n\n/**\n * Sync modal\n */\nmodule.exports = BaseDialog.extend({\n\n  _INTERVALS: [\n    { name: 'Every hour', time: 60 * 60, type: 'hourly', if_external_source: false },\n    { name: 'Every day', time: 60 * 60 * 24, type: 'daily', if_external_source: false },\n    { name: 'Every week', time: 60 * 60 * 24 * 7, type: 'weekly', if_external_source: false },\n    { name: 'Every month', time: 60 * 60 * 24 * 30, type: 'monthly', if_external_source: true },\n    { name: 'Never', time: 0, type: 'never', if_external_source: true }\n  ],\n\n  initialize: function() {\n    if (!this.options.table) {\n      throw new TypeError('table is required');\n    }\n    this.elder('initialize');\n\n    this.model = new cdb.core.Model({\n      option: 'interval',\n      state: 'prefetching',\n      wait: true // await ack before changing model\n    });\n    this.table = this.options.table;\n\n    this._initBinds();\n\n    // Prefetch\n    this.table.fetch({\n      success: this._onFetchedTable.bind(this),\n      error: this._setterForDefaultErrorState()\n    });\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:state', this.render, this);\n  },\n\n  // implements cdb.ui.common.Dialog.prototype.render\n  render: function() {\n    this.clearSubViews();\n    BaseDialog.prototype.render.call(this);\n    this._initIntervals();\n    return this;\n  },\n\n  // implements cdb.ui.common.Dialog.prototype.render\n  render_content: function() {\n    switch (this.model.get('state')) {\n      case 'prefetching':\n        return this._renderLoading('Checking synchronization');\n      case 'error':\n        return this.getTemplate('common/templates/fail')({ msg: '' });\n      case 'saving':\n        return this._renderLoading('Saving…');\n      default:\n        return this.getTemplate('common/dialogs/sync_dataset/sync_dataset')({\n          service: this._serviceName(),\n          url: this._serviceURL()\n        });\n    }\n  },\n\n  _onFetchedTable: function() {\n    this.model.set({\n      state: 'idle',\n      interval: this.table.synchronization.get('interval')\n    });\n  },\n\n  _renderLoading: function(title) {\n    return this.getTemplate('common/templates/loading')({\n      title: title,\n      quote: randomQuote()\n    });\n  },\n\n  _serviceURL: function() {\n    // Does it come from a datasource service (Dropbox, GDrive, ...)?\n    if (this.table.synchronization.get('service_name') || this.table.synchronization.get('service_item_id')) {\n      return this.table.synchronization.get('service_item_id');\n    }\n    return this.table.synchronization.get('url');\n  },\n\n  _serviceName: function() {\n    var name = this.table.synchronization.get('service_name');\n    if (name && _.isString(name)) {\n      return cdb.Utils.capitalize(name);\n    }\n  },\n\n  _initIntervals: function() {\n    this._intervals = new Backbone.Collection();\n\n    var fromExternalSource = this.table.synchronization.from_external_source;\n\n    _.each(this._INTERVALS, function(interval) {\n      var disabled = fromExternalSource && !interval.if_external_source;\n\n      this._intervals.add({\n        name: interval.name,\n        interval: interval.time,\n        checked: this.table.synchronization.get(\"interval\") === interval.time,\n        disabled: disabled\n      });\n    }, this);\n\n    this._intervals.each(function(interval) {\n      var view = new IntervalView({ model: interval });\n      view.bind(\"checked\", this._onIntervalChecked, this);\n      this.$(\".js-intervals\").append(view.render().$el);\n      this.addView(view);\n    }, this);\n  },\n\n  _onIntervalChecked: function(interval) {\n    this._intervals.each(function(i) {\n      if (interval.get(\"interval\") !== i.get(\"interval\")) {\n        i.set(\"checked\", false);\n      }\n    }, this);\n  },\n\n  _getSelectedInterval: function() {\n    return this._intervals.find(function(interval) {\n      return interval.get(\"checked\")\n    });\n  },\n\n  _addTab: function(name, view) {\n    this._contentPane.addTab(name, view.render());\n    this.addView(view);\n  },\n\n  ok: function() {\n    var selectedInterval = this._getSelectedInterval();\n\n    if (selectedInterval) {\n      this.model.set('state', 'saving');\n      var callbacks = {\n        success: this.close.bind(this),\n        error: this._setterForDefaultErrorState()\n      };\n\n      var interval = selectedInterval.get('interval');\n      if (interval) {\n        this.table.synchronization.save({\n          interval: interval\n        }, callbacks);\n      } else {\n        this.table.synchronization.destroy(callbacks);\n      }\n    } else {\n      this.close();\n    }\n  },\n\n  _setterForDefaultErrorState: function() {\n    return this.model.set.bind(this.model, 'state', 'error');\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n *  Video tutorial footer view\n *\n *  Footer content for video tutorials\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-start': '_startTutorial'\n  },\n  \n  initialize: function() {\n    this.template = cdb.templates.getTemplate('common/dialogs/video_tutorial/video_tutorial_footer_template');\n    this._initBinds();\n  },\n\n  render: function() {\n    this.$el.html(\n      this.template({\n        isVideoSelected: this.model.isVideoSelected()\n      })\n    );\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:videoId', this.render, this);\n  },\n\n  _startTutorial: function(e) {\n    var videoId = this.model.get('videoId');\n    if (videoId) {\n      cdb.god.trigger('startTutorial', videoId, this);\n    }\n  }\n\n});",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n *  Video tutorial header view\n *\n *  Header content for video tutorials\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-back': '_backToList'\n  },\n  \n  initialize: function() {\n    this.template = cdb.templates.getTemplate('common/dialogs/video_tutorial/video_tutorial_header_template');\n    this._initBinds();\n  },\n\n  render: function() {\n    this.$el.html(\n      this.template({\n        isVideoSelected: this.model.isVideoSelected()\n      })\n    );\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:videoId', this.render, this);\n  },\n\n  _backToList: function() {\n    this.model.unset('videoId');\n  }\n\n});",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n *  Video tutorial item view\n *\n *  Display primary info about the template item.\n *  Like the name or the description. Once it is\n *  selected the video will be displayed.\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'VideoTutorial-item',\n  tagName: 'li',\n\n  events: {\n    'click .js-button': '_selectVideo'\n  },\n  \n  initialize: function() {\n    this.template = cdb.templates.getTemplate('common/dialogs/video_tutorial/video_tutorial_item_template');\n  },\n\n  render: function() {\n    this.$el.html(\n      this.template({\n        shortName: this.model.get('short_name'),\n        shortDescription: this.model.get('short_description'),\n        color: this.model.get('color'),\n        icon: this.model.get('icon') || '',\n        duration: this.model.get('duration') || '',\n        difficulty: this.model.get('difficulty') || '',\n        iconUrl: this.model.get('icon_url') || ''\n      })\n    );\n    return this;\n  },\n\n  _selectVideo: function() {\n    this.trigger('selected', this.model, this);\n  }\n\n});",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar MapTemplates = require('../../map_templates');\nvar VideoTutorialItemView = require('./video_tutorial_item_view');\n\n/**\n *  Create templates view\n *\n *  It will display all template options for creating\n *  a new map.\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'VideoTutorial-listWrapper',\n\n  initialize: function() {\n    this.collection = new Backbone.Collection(MapTemplates);\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.$el.empty();\n    this.$el.append('<ul class=\"VideoTutorial-list js-list\"></ul>');\n    this.collection.reset(MapTemplates);\n    return this;\n  },\n\n  _initBinds: function() {\n    this.collection.bind('reset', this._renderList, this);\n    this.add_related_model(this.collection);\n  },\n\n  _renderList: function() {\n    this.collection.each(this._addItem, this);\n  },\n\n  _addItem: function(mdl) {\n    var videoItem = new VideoTutorialItemView({ model: mdl });\n    this.$('.js-list').append(videoItem.render().el);\n    videoItem.bind('selected', this._onItemSelected, this);\n    this.addView(videoItem);\n  },\n\n  _onItemSelected: function(mdl) {\n    this.model.set('videoId', mdl.get('videoId'));\n    cdb.god.trigger('onTemplateSelected', this);\n  }\n\n});",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar MapTemplates = require('../../map_templates');\n\n/** \n *  Model that controls video tutorial\n *  views\n *\n */\n\nmodule.exports = Backbone.Model.extend({\n\n  defaults: {\n    videoId: '' \n  },\n\n  isVideoSelected: function() {\n    return !!this.get('videoId')\n  },\n\n  getVideoTemplate: function() {\n    var videoId = this.get('videoId');\n\n    if (videoId) {\n      var item = _.find(MapTemplates, function(item) {\n        return item.videoId === videoId;\n      });\n\n      if (!_.isEmpty(item)) {\n        return item;\n      }\n    }\n\n    return false;\n  }\n\n});",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n *  Video preview view\n *\n *  It will display the selected map template, a video\n *  with advices\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'VideoTutorial-video',\n\n  initialize: function() {\n    this.template = cdb.templates.getTemplate('common/dialogs/video_tutorial/video_tutorial_preview_template');\n    this.localStorage = new cdb.admin.localStorage(\"VideoPlayer\");\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    var d = this.model.getVideoTemplate();\n    if (d && d.name) {\n      this.$el.html(this.template(d));\n      this._loadScript();\n    }\n    return this;\n  },\n\n  _storeVideoInfo: function(seconds) {\n    this.localStorage.set({ currentVideo: { seconds: seconds } });\n  },\n\n  _storeVideoInfoWithId: function(seconds) {\n    var videoId = this.model.get('videoId');\n    this.localStorage.set({ currentVideo: { video_id: videoId, seconds: seconds } });\n  },\n\n  _loadScript: function() {\n    var self = this;\n    $.getScript('//f.vimeocdn.com/js/froogaloop2.min.js', function() {\n      self._initVideoBinds();\n    });\n  },\n\n  _initVideoBinds: function() {\n    var self = this;\n\n    this._removeVideoBinds();\n    this.player = $f(this.$(\"iframe\")[0]);\n\n    this.player.addEvent('ready', function() {\n      self.player.addEvent('playProgress', function(m) {\n        self._storeVideoInfo(m.seconds);\n      });\n    });\n  },\n\n  _removeVideoBinds: function() {\n    if (!this.player) return;\n    this.player.removeEvent('ready');\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:videoId', this.render, this);\n  },\n\n  clean: function() {\n    this._removeVideoBinds();\n    this.elder('clean');\n  }\n\n});",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BaseDialog = require('../../views/base_dialog/view');\nvar VideoTutorialModel = require('./video_tutorial_model');\nvar VideoTutorialHeaderView = require('./video_tutorial_header_view');\nvar VideoTutorialFooterView = require('./video_tutorial_footer_view');\nvar VideoTutorialListView = require('./video_tutorial_list_view');\nvar VideoTutorialVideoView = require('./video_tutorial_preview_view');\n\n/**\n *  Video tutorial dialog\n *\n *  It will let the user check how \n *\n */\n\nmodule.exports = BaseDialog.extend({\n\n  className: 'Dialog is-opening VideoTutorial',\n\n  initialize: function() {\n    this.model = new VideoTutorialModel({\n      videoId: this.options.videoId\n    });\n    this.elder('initialize');\n    this.template = cdb.templates.getTemplate('common/dialogs/video_tutorial/video_tutorial_template');\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews()\n    this.elder('render');\n    this._initViews();\n    return this;\n  },\n\n  render_content: function() {\n    return this.template();\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:videoId', this.setContentVisibility, this);\n    cdb.god.bind('startTutorial', this.close, this);\n    this.add_related_model(cdb.god);\n  },\n\n  _initViews: function() {\n    // Video tutorial header\n    var videoTutorialHeader = new VideoTutorialHeaderView({\n      el: this.$('.VideoTutorial-header'),\n      model: this.model\n    })\n    videoTutorialHeader.render();\n    this.addView(videoTutorialHeader);\n\n    // Video tutorial footer\n    var videoTutorialFooter = new VideoTutorialFooterView({\n      el: this.$('.VideoTutorial-footer'),\n      model: this.model\n    });\n\n    videoTutorialFooter.render();\n    this.addView(videoTutorialFooter);\n\n    // Video tutorial tabpane\n    this._videoTutorialContent = new cdb.ui.common.TabPane({\n      el: this.$(\".VideoTutorial-content\")\n    });\n    this.addView(this._videoTutorialContent);\n\n    // Videos tutorial list\n    this._videoTutorialContent.addTab(\n      'list',\n      new VideoTutorialListView({\n        model: this.model\n      }).render()\n    );\n\n    // Videos tutorial preview\n    this._videoTutorialContent.addTab(\n      'video',\n      new VideoTutorialVideoView({\n        model: this.model\n      }).render()\n    );\n\n    this.setContentVisibility();\n  },\n\n  setContentVisibility: function() {\n    // If video id is defined, content will show video preview\n    this._videoTutorialContent.active( this.model.isVideoSelected() ? 'video' : 'list' );\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\n/** \n *  Old form spinner\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n  className: 'form-view form_spinner',\n\n  defaults: {\n    max: 999999999999,\n    min: -999999999999,\n    inc: 1,\n    width: 25,\n    pattern: /^-?[0-9]+\\.?[0-9]*$/,\n    debounce_time: 200\n  },\n\n  events: {\n    'click .plus': '_plus',\n    'click .minus': '_minus',\n    'keypress input.value': '_checkInputPress',\n    'keydown input.value': '_checkInputPress',\n    'keyup input.value': '_checkInputUp',\n    'change .value': '_checkValueChange'\n  },\n\n  initialize: function() {\n    _.bindAll(this, '_fireChange', '_checkNumber');\n    this.property = this.options.property;\n    this.model.bind('change', this.render, this);\n\n    // Check pattern, if it is empty or not valid,\n    // delete the option before extending defaults\n    if (!this.options.pattern ||\n        typeof this.options.pattern !== \"object\" ||\n        (typeof this.options.pattern === \"object\" && !this.options.pattern.test)\n      )\n    {\n      delete this.options.pattern;\n    }\n\n    _.defaults(this.options, this.defaults);\n\n    if(this.options.debounce_time > 0) {\n      this._fireChange = _.debounce(this._fireChange, this.options.debounce_time);\n    }\n  },\n\n  render: function(prop) {\n    var value = this.options.initValue || this.model.get(this.property);\n\n    if (prop && _.isNumber(prop)) {\n      value = prop;\n    }\n\n    this.$el.html('<input class=\"value\" ' + (this.options.disabled ? 'readonly' : '') + ' value=\"\" style=\"width:' + (this.options.width) + 'px!important\"/><a href=\"#\" class=\"plus\">+</a><a href=\"#\" class=\"minus\">-</a>');\n    this.$('.value').val(value);\n\n    if (this.options.disabled) {\n      this.undelegateEvents();\n      this.$el\n      .addClass('disabled')\n      .find('a').bind('click', this.killEvent);\n    }\n\n    return this;\n  },\n\n  _fireChange: function() {\n    this.model.change();\n  },\n\n  _changeValue: function(a) {\n    this.model.set(a, { silent: true });\n    this._fireChange();\n  },\n\n  inc: function(c) {\n    var a = {};\n    var v = a[this.property] = this.model.get(this.property) + c;\n    v = a[this.property] = Math.min(this.options.max, v.toFixed? v.toFixed(1): 1*v);\n    a[this.property] = Math.max(this.options.min, v);\n    this._changeValue(a);\n    // don't wait to be notified by model, render as fast as the user changes the value\n    this.render(a[this.property]);\n  },\n\n  _plus: function(e) {\n    e && e.preventDefault();\n    this.inc(this.options.inc);\n    return false;\n  },\n\n  _minus: function(e) {\n    e && e.preventDefault();\n    this.inc(-this.options.inc);\n    return false;\n  },\n\n  _checkNumber: function(number) {\n    return this.options.pattern.test(number);\n  },\n\n  _checkInputPress: function(ev) {\n    var newChar = String.fromCharCode(ev.charCode);\n\n    if(newChar == '-' || newChar == '.' || 1*newChar !== NaN) {\n      return true;\n    } else {\n      ev.preventDefault();\n      ev.stopPropagation();\n      return false;\n    }\n  },\n\n  _checkInputUp: function(ev) {\n    this.value? null : this.value = this.model.get(this.property);\n    var number = $(ev.target).val();\n\n    // If it is an ENTER -> saves!\n    if (ev.keyCode === 13) {\n      this._saveValue(ev);\n      return false;\n    }\n\n    // If not, check the key\n    if (!this._checkNumber(number) && number != '-' && number != '') {\n      this.$el.find(\"input.value\").val(this.value);\n      // ev.stopPropagation();\n      // ev.preventDefault();\n    } else {\n      if(number != '-' && number != '') {\n        this.value = $(ev.target).val();\n      }\n    }\n    return true;\n  },\n\n  _checkValueChange: function(ev) {\n    var number = $(ev.target).val();\n    number = (number == '' || number == '-')? 0 : 1*number\n    if (!this._checkNumber(number)) {\n      this.$el.find(\"input.value\").val(this.value);\n    } else {\n      this._saveValue(ev);\n      this.value = $(ev.target).val();\n    }\n    return true;\n  },\n\n  _saveValue: function(ev) {\n    var a = {};\n    var val = this.$el.find(\"input.value\").val()\n    var baseNumber = (this.options.min < 0 && this.options.max > 0)?\n      0:\n      this.options.min;\n\n    var number = (val == '' || val == '-') ? baseNumber : 1*val;\n\n    this.$el.find(\"input.value\").val(number);\n\n    a[this.property] = number;\n    this.model.set(a);\n\n    cdb.god.trigger(\"closeDialogs\");\n  }\n\n});",
    "var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n/**\n *  Local storage wrapper\n *\n *  - It should be used within 'cartodb' key, for example:\n *\n *  var loc_sto = new cdb.common.LocalStorage();\n *  loc_sto.set({ 'dashboard.order': 'create_at' });\n *  loc_sto.get('dashboard.order');\n *\n */\n\n\nvar LocalStorageWrapper = function(name) {\n  this.name = name || 'cartodb';\n  if(!localStorage.getItem(this.name) && this.isEnabled()) {\n    localStorage.setItem(this.name, \"{}\");\n  }\n}\n\n// Some browsers with private mode don't allow to use\n// local storage\nLocalStorageWrapper.prototype.isEnabled = function() {\n  try {\n    localStorage.setItem('checking', 'test');\n    localStorage.removeItem('checking');\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n\nLocalStorageWrapper.prototype.get = function(n) {\n  if (!this.isEnabled()) return false;\n\n  if(n === undefined) {\n    return JSON.parse(localStorage.getItem(this.name));\n  } else {\n    var data = JSON.parse(localStorage.getItem(this.name));\n    return data[n];\n  }\n\n}\n\nLocalStorageWrapper.prototype.search = function(searchTerm) {\n  if (!this.isEnabled()) return null;\n\n  var wholeArray = JSON.parse(localStorage.getItem(this.name));\n  for(var i in wholeArray) {\n    if(wholeArray[i][searchTerm]) {\n      return wholeArray[i][searchTerm];\n    }\n  }\n  return null;\n}\n\nLocalStorageWrapper.prototype.set = function(data) {\n  if (!this.isEnabled()) return null;\n  var d = _.extend(this.get(), data);\n  return localStorage.setItem(this.name, JSON.stringify(d));\n}\n\nLocalStorageWrapper.prototype.add = function(obj) {\n  return this.set(obj);\n}\n\nLocalStorageWrapper.prototype.remove = function(n) {\n  if (!this.isEnabled()) return null;\n  var d = _.omit(this.get(), n);\n  return localStorage.setItem(this.name, JSON.stringify(d));\n}\n\nLocalStorageWrapper.prototype.destroy = function() {\n  delete localStorage.removeItem(this.name);\n}\n\nmodule.exports = LocalStorageWrapper;\n",
    "var BaseDialog = require('../views/base_dialog/view');\n\n/**\n *  Dialog for drop actions using mamufas\n *\n */\n\n\nmodule.exports = BaseDialog.extend({\n\n  className: 'Dialog is-opening MamufasDialog',\n\n  overrideDefaults: {\n    template_name: 'common/views/base_dialog/template',\n    triggerDialogEvents: false\n  },\n\n  initialize: function() {\n    BaseDialog.prototype.initialize.apply(this, arguments);\n    this.template = cdb.templates.getTemplate('common/mamufas_import/mamufas_import_dialog');\n  },\n\n  render_content: function() {\n    return this.template();\n  },\n\n  render: function() {\n    this.elder('render');\n    this.$('.Dialog-content').addClass('Dialog-content--expanded');\n    return this;\n  },\n\n  hide: function() {\n    BaseDialog.prototype.hide.apply(this, arguments);\n    this.trigger('hide');\n    this._setBodyForDialogMode('remove')\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar MamufasDialog = require('./mamufas_import_dialog_view');\n\n/**\n *  Big mamufas to import files\n *  using drag and drop\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.model = new cdb.core.Model({ visible: false });\n  },\n\n  render: function() {\n    return this;\n  },\n\n  _createDragster: function() {\n    if (this.dragster) {\n      this._destroyDragster();\n    }\n    this.dragster = new Dragster(this.$el[0]);\n  },\n\n  _createDropzone: function() {\n    if (this.dropzone) {\n      this._destroyDropzone();\n    }\n    this.dropzone = new Dropzone(this.$el[0], {\n      url: ':)',\n      autoProcessQueue: false,\n      previewsContainer: false\n    });\n  },\n\n  _destroyDragster: function() {\n    if (this.dragster) {\n      this.dragster.removeListeners();\n      this.dragster.reset();\n      delete this.dragster;\n    }\n  },\n\n  _destroyDropzone: function() {\n    if (this.dropzone) {\n      this.dropzone.destroy();\n      delete this.dropzone;\n    }\n  },\n\n  _initBinds: function() {\n    var self = this;\n    var mamufas = new MamufasDialog({ clean_on_hide: true });\n\n    this.$el.on( \"dragster:enter\", function (e) {\n      mamufas.appendToBody();\n    });\n\n    this.$el.on( \"dragster:leave\", function (e) {\n      mamufas.hide();\n    });\n\n    this.dropzone.on(\"drop\", function (ev) {\n      self.dragster.dragleave(ev);\n      mamufas.hide();\n      self.dropzone.removeFile(ev);\n\n      var files = ev.dataTransfer.files;\n      if (files && files.length > 0) {\n        if (files.length === 1) { files = files[0] }\n        cdb.god.trigger('fileDropped', files, this);\n      }\n    });\n  },\n\n  _removeBinds: function() {\n    this.$el.off(\"dragster:enter\");\n    this.$el.off(\"dragster:leave\");\n  },\n\n  enable: function() {\n    if (!this.model.get('visible')) {\n      this._createDragster();\n      this._createDropzone();\n      this._initBinds();\n      this.model.set('visible', true);\n    }\n  },\n\n  disable: function() {\n    if (this.model.get('visible')) {\n      this._removeBinds();\n      this._destroyDragster();\n      this._destroyDropzone();\n      this.model.set('visible', false);\n    }\n  },\n\n  clean: function() {\n    this._removeBinds();\n    this.elder('clean');\n  }\n});\n",
    "\n/**\n *  Map templates\n *\n *  It will display all the possibilities to select\n *  any of your current datasets or connect a new dataset.\n *\n */\n\nmodule.exports = [\n  {\n    name: 'Create animated maps',\n    short_name: 'Create animated maps',\n    description: 'Learn how to animate your data, by using historic United States tornado data.',\n    short_description: 'Create maps for showing events over time',\n    icon: 'snake',\n    color: '#CB3F29',\n    difficulty: 'easy',\n    duration: '5:01',\n    videoId: '122308083',\n    map: {\n      url: 'https://examples.carto.com/viz/960736aa-cd8c-11e4-a309-0e6e1df11cbf/embed_map',\n      source: [\n        'https://examples.carto.com/api/v2/sql?q=SELECT%20*%20FROM%20tornado_centroids&filename=tornados&format=geojson'\n      ]\n    }\n  },\n  {\n    name: 'Animate the life of a cat',\n    short_name: 'Create GPS Data maps',\n    description: 'Let\\'s take a look at one week of movements for a cat named Spencer. Using GPS collected data, we can animate Spencer over time to see his patterns of exploration in his neighborhood.',\n    short_description: 'Mapping your GPS data was never so easy!',\n    icon: 'points',\n    color: '#AC638B',\n    difficulty: 'easy',\n    duration: '1:53',\n    videoId: '122308076',\n    map: {\n      url: 'https://examples.carto.com/viz/00c8701c-c121-11e4-b828-0e4fddd5de28/embed_map',\n      source: [\n        'https://examples.carto.com/api/v2/sql?q=SELECT%20*%20FROM%20spencer_the_cat&filename=spencer_the_cat&format=geojson'\n      ]\n    }\n  },\n  {\n    name: 'Create your own data using the CARTO Editor',\n    short_name: 'Create your own datasets',\n    description: 'Learn to create your own point, line, or polygon dataset directly in the CARTO editor.',\n    short_description: ' Add and style features in a map using the CARTO UI',\n    icon: 'notes',\n    color: '#F2C000',\n    difficulty: 'easy',\n    duration: '5:39',\n    videoId: '122308073',\n    map: {\n      url: 'https://examples.carto.com/viz/eaa226aa-cd8e-11e4-893e-0e0c41326911/embed_map'\n    }\n  },\n  {\n    name: 'Map your local world',\n    short_name: 'Map your local world',\n    description: \"We will use a publically available set of buildings to map Nantucket Island. Then we will use CARTO's annotation tools to highlight our point of interest.\",\n    short_description: 'Learn to create and style a map of your city',\n    icon: 'mountain',\n    color: '#EA703D',\n    difficulty: 'easy',\n    duration: '2:57',\n    videoId: '122308073',\n    map: {\n      url: 'https://examples.carto.com/viz/b8847e3e-c1f4-11e4-8c09-0e853d047bba/embed_map',\n      source: [\n        'https://examples.carto.com/api/v2/sql?q=SELECT%20*%20FROM%20structures_poly_197&filename=buildings_nantucket&format=geojson'\n      ]\n    }\n  },\n  {\n    name: 'Create your first choropleth map using Table Join',\n    short_name: 'Join Datasets',\n    description: 'Create your first choropleth map by joining historic tornado data with United States polygons',\n    short_description: 'Build your first choropleth map by joining two datasets',\n    icon: 'rectangles',\n    color: '#86B765',\n    difficulty: 'medium',\n    duration: '5:17',\n    videoId: '122308079',\n    map: {\n      url: 'https://examples.carto.com/viz/339c7670-cd90-11e4-ab8c-0e018d66dc29/embed_map',\n      source: [\n        'https://examples.carto.com/api/v2/sql?q=SELECT%20*%20FROM%20tornado_centroids&filename=tornados&format=geojson',\n        'https://examples.carto.com/api/v2/sql?q=SELECT%20*%20FROM%20tornados_in_us&filename=tornados_us&format=geojson'\n      ]\n    }\n  },\n  {\n    name: 'Map your MailChimp Campaigns',\n    short_name: 'Map MailChimp Campaigns',\n    description: 'Create a map of where your subscribers are and which of them have opened any of your campaigns. Also this is a great way to learn about conditional styling.',\n    short_description: 'Map your engagement using the MailChimp Connector.',\n    icon: 'email',\n    color: '#AC638B',\n    difficulty: 'easy',\n    duration: '1:49',\n    videoId: '125895396',\n    map: {\n      url: 'https://examples.carto.com/viz/560de38c-ea88-11e4-aac4-0e5e07bb5d8a/embed_map',\n      source: []\n    }\n  }\n]\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * Model representing the query string params for a \"paged search\" of a collection (matching the server-side APIs).\n *\n * @example usage\n *   var PagedSearch = require('common/paged_search_model');\n *   pagedSearch = new PagedSearch({ … })\n *   pagedSearch.fetch(collection) // => jqXHR, GET /collection/123?page=1&per_page20\n *   pagedSearch.set({ page: 2, per_page: 10, q: 'test' });\n *   pagedSearch.fetch(collection) // => GET /collection/123?page=2&per_page10&q=test\n */\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    per_page: 20,\n    page: 1\n    // order: 'name'\n    // q: '',\n  },\n\n  fetch: function(collection) {\n    collection.trigger('fetching');\n    return collection.fetch({\n      data: this.attributes\n    });\n  }\n\n});\n",
    "var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\n\n/**\n * @extends http://backbonejs.org/#Router With some common functionality in the context of this app.\n */\nvar Router = Backbone.Router.extend({\n\n  /**\n   * Placeholder, is replaced by enableAfterMainView().\n   */\n  navigate: function() {\n    throw new Error('router.enableAfterMainView({ ... }) must be called before you can navigate');\n  },\n\n  /**\n   * Enable router to monitor and manage browser URL and history.\n   * Expected to be called after main view as the function name indicates,\n   */\n  enableAfterMainView: function() {\n    /**\n     * @override http://backbonejs.org/#Router-navigate Allow\n     * @param fragmentOrUrl {String} Either a fragment (e.g. '/dashboard/datasets') or a full URL\n     *  (e.g. http://user.carto.com/dashboard/datasets), the navigate method takes care to route correctly.\n     */\n    this.navigate = function(fragmentOrUrl, opts) {\n      Backbone.Router.prototype.navigate.call(this, this.normalizeFragmentOrUrl(fragmentOrUrl), opts);\n    };\n\n    Backbone.history.start({\n      pushState: true,\n      root: this.rootPath() + '/' //Yes, this trailing slash is necessary for the router to update the history state properly.\n    });\n  },\n\n  rootPath: function() {\n    throw new Error('implement rootPath in child router (no trailing slash)');\n  },\n\n  /**\n   * Normalise a given fragment or URL for navigation mechanisms to work.\n   * Typically, remove the leading base URL from the given fragment or URL.\n   *\n   * @param {String} fragmentOrUrl\n   * @return {String}\n   */\n  normalizeFragmentOrUrl: function(fragmentOrUrl) {\n    throw new Error('implement normalizeFragmentOrUrl in child router');\n  }\n});\n\nRouter.supportTrailingSlashes = function(obj) {\n  return _.reduce(obj, function(res, val, key) {\n    res[key] = val;\n    res[key + '/'] = val;\n    return res;\n  }, {});\n};\n\nmodule.exports = Router;\n",
    "var Ps = require('perfect-scrollbar');\nvar template = require('./scroll.tpl');\nvar MutationObserver = window.MutationObserver;\n\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\nmodule.exports = cdb.core.View.extend({\n  tagName: 'div',\n  className: 'ScrollView',\n\n  initialize: function (opts) {\n    if (!opts.createContentView) throw new Error('A factory createContentView function is required');\n    this.options = opts || {};\n    this._type = opts.type || 'vertical'; // vertical or horizontal\n    this._maxScroll = 0;\n  },\n\n  render: function () {\n    this.clearSubViews();\n    this._html();\n\n    var view = this.options.createContentView.call(this);\n    this._contentContainer().append(view.render().el);\n    this.addView(view);\n    this._applyScroll();\n    this._updateScrollWhenExist();\n    return this;\n  },\n\n  _html: function () {\n    this.$el.html(template({\n      type: this._type\n    }));\n\n    (this._type === 'horizontal') && this.$el.addClass('ScrollView--horizontal');\n  },\n\n  _contentContainer: function () {\n    return this.$('.js-content');\n  },\n\n  _wrapperContainer: function () {\n    return this.$('.js-wrapper');\n  },\n\n  _updateScrollWhenExist: function () {\n    // Phantom doesn't provide this api for window.\n    if (!MutationObserver) return;\n\n    // even with the changes in PS, we need to check when this element is added to the dom\n    // in order to trigger manually an update.\n    var element = document.body;\n    var self = this._wrapperContainer().get(0);\n    var onMutationObserver = function () {\n      if (element.contains(self)) {\n        Ps.update(self);\n        observer.disconnect();\n      }\n    };\n\n    var observer = new MutationObserver(onMutationObserver);\n    onMutationObserver();\n\n    var config = { subtree: true, childList: true };\n    observer.observe(element, config);\n  },\n\n  _applyScroll: function () {\n    Ps.initialize(this._wrapperContainer().get(0), {\n      wheelSpeed: 2,\n      wheelPropagation: true,\n      stopPropagationOnClick: false,\n      minScrollbarLength: 20,\n      suppressScrollX: this._type === 'vertical',\n      suppressScrollY: this._type === 'horizontal'\n    });\n  },\n\n  destroyScroll: function () {\n    Ps.destroy(this._wrapperContainer().get(0));\n  },\n\n  clean: function () {\n    this.destroyScroll();\n    cdb.core.View.prototype.clean.call(this);\n  }\n});\n",
    "var _ = require('underscore');\nmodule.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<div class=\"ScrollView-wrapper js-wrapper js-perfect-scroll\">\\n  <div class=\"ScrollView-content js-content\"></div>\\n</div>\\n';\n}\nreturn __p;\n};\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n *  Get oauth url from the service requested\n *\n *  - It needs a datasource name or it won't work.\n *\n *  new cdb.admin.Service({ datasource_name: 'dropbox' })\n */\n\nmodule.exports = cdb.core.Model.extend({\n\n  _DATASOURCE_NAME: 'dropbox',\n\n  initialize: function(attrs, opts) {\n    if (opts.datasource_name) {\n      this._DATASOURCE_NAME = opts.datasource_name;\n    }\n  },\n\n  url: function(method) {\n    var version = cdb.config.urlVersion('imports_service', method);\n    return '/api/' + version + '/imports/service/' + this._DATASOURCE_NAME + '/auth_url'\n  },\n\n  parse: function(r) {\n    return r\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n *  Model to check if oAuth token is valid or not\n *\n *  - It needs a datasource name or it won't work.\n *\n *  new ServiceToken({ datasource_name: 'dropbox' })\n */\n\nmodule.exports = cdb.core.Model.extend({\n\n  _DATASOURCE_NAME: 'dropbox',\n\n  initialize: function(attrs, opts) {\n    if (opts.datasource_name) {\n      this._DATASOURCE_NAME = opts.datasource_name;\n    }\n  },\n\n  url: function(method) {\n    var version = cdb.config.urlVersion('imports_service', method);\n    return '/api/' + version + '/imports/service/' + this._DATASOURCE_NAME + '/token_valid'\n  },\n\n  parse: function(r) {\n    return r\n  }\n\n});\n",
    "/**\n *  Decide what support block app should show\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.template = cdb.templates.getTemplate('common/views/support_banner');\n  },\n\n  render: function() {\n    this.$el.html(\n      this.template({\n        userType: this._getUserType(),\n        orgDisplayEmail: this._getOrgAdminEmail(),\n        isViewer: this.user.isViewer()\n      })\n    )\n    return this;\n  },\n\n  _getUserType: function() {\n    var accountType = this.user.get('account_type').toLowerCase();\n\n    // Get user type\n    if (this.user.isOrgOwner()) {\n      return 'org_admin';\n    } else if (this.user.isInsideOrg()) {\n      return 'org';\n    } else if (accountType === \"internal\" || accountType === \"partner\" || accountType === \"ambassador\") {\n      return 'internal';\n    } else if (accountType !== \"free\") {\n      return 'client';\n    } else {\n      return 'regular';\n    }\n  },\n\n  _getOrgAdminEmail: function() {\n    if(this.user.isInsideOrg()) {\n      return this.user.organization.display_email;\n    } else {\n      return null;\n    }\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\nmodule.exports = cdb.core.Model.extend({\n  sync: function (method, model, options) {\n    return Backbone.sync('update', model, options);\n  },\n\n  url: function () {\n    var baseUrl = this._configModel.get('url_prefix');\n    return baseUrl + '/api/v3/notifications/' + this.get('key');\n  },\n\n  initialize: function (attrs, opts) {\n    if (!opts.key) throw new Error('key is required');\n    if (!opts.configModel) throw new Error('configModel is required');\n\n    this._configModel = opts.configModel;\n    this.attributes = _.extend({ notifications: attrs }, { key: opts.key });\n  },\n\n  getKey: function (key) {\n    var notifications = this.get('notifications') || {};\n    return notifications[key];\n  },\n\n  setKey: function (key, value) {\n    var notifications = this.get('notifications') || {};\n    notifications[key] = value;\n    this.set('notifications', notifications);\n  }\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar DASHBOARD_NOTIFICATION_KEY = 'builder_activated';\n\nmodule.exports = cdb.core.View.extend({\n  className: 'js-builderNotification',\n  events: {\n    'click .js-close': '_onClose'\n  },\n\n  initialize: function () {\n    if (!this.options.notification) { throw new Error('notification is required'); }\n\n    this._notification = this.options.notification;\n    this._template = cdb.templates.getTemplate('common/user_notification/user_notification');\n\n    this.render();\n  },\n\n  render: function () {\n    this.$el.html(this._template());\n\n    $('body').prepend(this.$el);\n    return this;\n  },\n\n  _onClose: function () {\n    this._notification.setKey(DASHBOARD_NOTIFICATION_KEY, true);\n    this._notification.save();\n\n    this.clean();\n  },\n\n  clean: function () {\n    this.constructor.__super__.clean.apply(this);\n  }\n});\n",
    "var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BaseDialog = require('./views/base_dialog/view');\n\n/**\n * Convenient factory to create views without having to create new files.\n */\nmodule.exports = {\n\n  createDialogByTemplate: function(templateOrStr, templateData, dialogOptions) {\n    return this.createDialogByView(this.createByTemplate(templateOrStr, templateData), dialogOptions);\n  },\n\n  /**\n   * @return {Object} instance of cdb.core.View, which takes two params of template and templateData\n   */\n  createByTemplate: function(templateOrStr, templateData, viewOpts) {\n    var template = _.isString(templateOrStr) ? cdb.templates.getTemplate(templateOrStr) : templateOrStr;\n\n    var view = new cdb.core.View(viewOpts);\n    view.render = function() {\n      this.$el.html(\n        template(templateData)\n      );\n      return this;\n    };\n\n    return view;\n  },\n\n  /**\n   * Creates a view that holds a list of views to be rendered.\n   * @param {Array} list of View object, i.e. have a render method, $el, and clean method.\n   * @param {Object,undefined} viewOpts view options, .e.g {className: 'Whatever'}\n   * @return {Object} A view\n   */\n  createByList: function(views, viewOpts) {\n    var listView = new cdb.core.View(viewOpts);\n    listView.render = function() {\n      this.clearSubViews();\n      _.each(views, function(view) {\n        this.addView(view);\n        this.$el.append(view.render().$el);\n      }, this);\n      return this;\n    };\n    return listView;\n  },\n\n  createDialogByView: function(contentView, dialogOptions) {\n\n    var options = _.extend({ clean_on_hide: true, enter_to_confirm: true }, dialogOptions);\n\n    return new (BaseDialog.extend({\n      initialize: function() {\n        this.elder('initialize');\n        this.addView(contentView);\n      },\n\n      render_content: function() {\n        return contentView.render().el;\n      }\n    }))(options);\n  }\n};\n",
    "/**\n * Object representing human-readable version of a given number of bytes.\n *\n * (Extracted logic from an old dashboard view)\n *\n * @param bytes {Number}\n * @returns {Object}\n */\nvar fn = function(bytes) {\n  if (!(this instanceof fn)) return new fn(bytes);\n\n  this.bytes = bytes;\n  if (bytes == 0) {\n    this.unit = 0;\n  } else {\n    this.unit = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n  }\n\n  return this;\n};\n\nfn.prototype.size = function() {\n  return (this.bytes / Math.pow(1024, this.unit));\n};\n\nfn.prototype.UNIT_SUFFIXES = ['B', 'kB', 'MB', 'GB', 'TB'];\nfn.prototype.suffix = function() {\n  return this.UNIT_SUFFIXES[this.unit];\n};\n\nfn.prototype.toString = function(decimals) {\n  var size = this.size();\n  if (decimals) {\n    // 1 decimal: 9.995 => 9.9\n    var round = Math.pow(10, decimals);\n    size = Math.floor(size * round) / round;\n  } else {\n    size = Math.floor(size);\n  }\n  return size + this.suffix();\n};\n\nmodule.exports = fn;\n",
    "var $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\n/**\n * Check if Linux user used right/middle click at the time of the event\n *\n * @param ev {Event}\n * @returns {boolean}\n */\nfunction isLinuxMiddleOrRightClick(ev) {\n  return ev.which === 2 || ev.which === 3;\n}\n\n/**\n * Check if Mac user used CMD key at the time of the event Mac user used CMD key at the time of the event.\n *\n * @param ev {Event}\n * @returns {boolean}\n */\nfunction isMacCmdKeyPressed(ev) {\n  return ev.metaKey;\n}\n\nfunction isCtrlKeyPressed(ev) {\n  return ev.ctrlKey;\n}\n\n/**\n * Click handler for a cartodb.js view, to navigate event target's href URL through the view's router.navigate method.\n *\n * The default behavior is:\n * Unless cmd/ctrl keys are pressed it will cancel the default link behavior and instead navigate to the URL set in the\n * target's href attribute.\n *\n * Prerequisities:\n *  - view has a this.router instance.\n *\n * Example of how to use:\n *   - In a template:\n *     <a href=\"/some/uri\" id=\"#my-link\" ...\n *     <a href=\"/special/uri\" id=\"#my-special-link\" ...\n *\n *   - In the view file:\n *     var navigateThroughRouter = require('../../common/view_helpers/navigateThroughRouter');\n *     module.exports = new cdb.core.View.extend({\n *       events: {\n *         'click a#my-link': navigateThroughRouter\n *         'click a#my-special-link': this._myCustomRoute\n *       }\n *\n *       _myCustomRoute: function(ev) {\n *         // Here you can do you custom logic before/after the routing, e.g.:\n *         console.log('before changing route');\n *         navigateThroughRouter.apply(this, arguments);\n *         console.log('after changing route');\n *       }\n *\n * @param ev {Event}\n */\nmodule.exports = function(ev) {\n  // We always kill the default behaviour of the event, since container around view might have other click behavior.\n  // In case of a cmd/ctrl click by an user.\n  this.killEvent(ev);\n  var url = $(ev.target).closest('a').attr('href');\n\n  if (!url) {\n    return false;\n  }\n\n  if (!isLinuxMiddleOrRightClick(ev) && !isMacCmdKeyPressed(ev)) {\n    (this.router || this.options.router).navigate(url, { trigger: true });\n  } else if (isCtrlKeyPressed(ev) || isMacCmdKeyPressed(ev)) {\n    window.open(url, '_blank');\n  }\n};\n",
    "var pluralizeStr = function(singular, plural, count) {\n  if (arguments.length === 2) {\n    // Backward compability with prev usages, retrofit to the new params signature\n    // pluralizeStr('foobar' , 3) // => foobars\n    return pluralizeStr.call(this, arguments[0], arguments[0] + 's', arguments[1]);\n  }\n\n  return count === 1 ? singular : plural;\n};\n\npluralizeStr.prefixWithCount = function(singular, plural, count) {\n  return pluralizeStr(\n    '1 ' + singular, // e.g. 1 item\n    count + ' ' + plural, // e.g. 123 items\n    count\n  );\n}\n\nmodule.exports = pluralizeStr;\n",
    "/**\n * Random quote\n */\nmodule.exports = function() {\n\n  var template  = _.template('<p class=\"CDB-Text CDB-Size-medium u-altTextColor\">\"<%= quote %>\"</p><% if (author) { %><p class=\"CDB-Text CDB-Size-medium u-altTextColor u-tSpace\"><em>– <%- author %></em></p><% } %>');\n\n  var quotes = [\n    { quote: \"Geographers never get lost. They just do accidental field work.\", author: \"Nicholas Chrisman\" },\n    { quote: \"Geography is just physics slowed down, with a couple of trees stuck in it.\", author: \"Terry Pratchett\" },\n    { quote: \"Not all those who wander are lost.\", author: \"J. R. R. Tolkien\" },\n    { quote: \"In that Empire, the Art of Cartography attained such Perfection that the map of a single Province occupied the entirety of a City.\", author: \"Jorge Luis Borges\" },\n    { quote: \"X marks the spot\", author: \"Indiana Jones\" },\n    { quote: \"It's turtles all the way down.\", author: null },\n    { quote: \"Remember: no matter where you go, there you are.\", author: null },\n    { quote: \"Without geography, you're nowhere!\", author: \"Jimmy Buffett\" },\n    { quote: \"our earth is a globe / whose surface we probe /<br />no map can replace her / but just try to trace her\", author: \"Steve Waterman\" },\n    { quote: \"Everything happens somewhere.\", author: \"Doctor Who\" },\n    { quote: \"A map is the greatest of all epic poems. Its lines and colors show the realization of great dreams.\", author: \"Gilbert H. Grosvenor\" },\n    { quote: \"Everything is related to everything else,<br />but near things are more related than distant things.\", author: \"Tobler's first law of geography\" },\n    { quote: \"Hic Sunt Dracones\", author: null },\n    { quote: \"Here be dragons\", author: null },\n    { quote: \"Stand in the place where you live / Now face North /<br/>Think about direction / Wonder why you haven't before\", author: \"R.E.M\" },\n    { quote: \"The virtue of maps, they show what can be done with limited space, they foresee that everything can happen therein.\", author: \"José Saramago\" }\n  ];\n\n  var r = Math.round(Math.random() * (quotes.length - 1));\n\n  return template(quotes[r]);\n};\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\nvar BaseDialog = cdb.ui.common.Dialog;\n\n/**\n * Abstract view for a dialog, a kind of view that takes up the full screen overlaying any previous content.\n *\n * To be extended for a specific use-case.\n * It inherits from CartoDB.js' Dialog view so has some particular behavior/convention of how to be used, see example\n *\n * Example of how to use:\n *   // Extend this view\n *   var MyDialog = BaseDialog.extend({\n *     render_content: function() {\n *       return 'Hello world!';\n *     }\n *   });\n *\n *   // Create instance object.\n *   var dialog = new MyDialog();\n *\n *   // To render & show initially (only to be called once):\n *   dialog.appendToBody();\n */\nmodule.exports = BaseDialog.extend({\n\n  className: 'Dialog is-opening',\n\n  overrideDefaults: {\n    template_name: 'common/views/base_dialog/template',\n    triggerDialogEvents: true\n  },\n\n  initialize: function() {\n    // Override defaults of parent\n    _.defaults(this.options, this.overrideDefaults);\n    this.elder('initialize');\n    this.bind('show', this._setBodyForDialogMode.bind(this, 'add'));\n    this.bind('hide', this._setBodyForDialogMode.bind(this, 'remove'));\n  },\n\n  show: function() {\n    BaseDialog.prototype.show.apply(this, arguments);\n    this.trigger('show');\n    if (this.options.triggerDialogEvents) {\n      cdb.god.trigger('dialogOpened');\n    }\n    this.$el.removeClass('is-closing');\n\n    // Blur current element (e.g. a <a> tag that was clicked to open this window)\n    if (document.activeElement) {\n      document.activeElement.blur();\n    }\n  },\n\n  render: function() {\n    BaseDialog.prototype.render.apply(this, arguments);\n    this.$('.content').addClass('is-newContent');\n\n    if (this._isSticky()) {\n      this.$el.addClass('is-sticky');\n    }\n\n    this.show();\n    return this;\n  },\n\n  _isSticky: function() {\n    return this.options && this.options.sticky;\n  },\n\n  close: function() {\n    this._cancel(undefined, true);\n  },\n\n  /**\n   * @override cdb.ui.common.Dialog.prototype.open for animated opening\n   */\n  open: function() {\n    BaseDialog.prototype.open.apply(this, arguments);\n    this.show();\n  },\n\n  /**\n   * @override cdb.ui.common.Dialog.prototype.hide to implement animation\n   */\n  hide: function() {\n    BaseDialog.prototype.hide.apply(this, arguments);\n    this.trigger('hide');\n  },\n\n  /**\n   * @override cdb.ui.common.Dialog.prototype._cancel to implement animation upon closing the dialog and to handle hide event.\n   */\n  _cancel: function(ev, skipCancelCallback) {\n    if (ev) this.killEvent(ev);\n\n    if (this._isSticky()) {\n      return;\n    }\n\n    this.$el.removeClass('is-opening').addClass('is-closing');\n\n    // Use timeout instead of event listener on animation since the event triggered differs depending on browser\n    // Timing won't perhaps be 100% accurate but it's good enough\n    // The timeout should match the .Dialog.is-closing animation duration.\n    var self = this;\n    setTimeout(function() {\n      // from original _cancel\n      if (self.cancel && !skipCancelCallback) {\n        self.cancel();\n      }\n      BaseDialog.prototype.hide.call(self);\n    }, 80); //ms\n\n    // Trigger events immediately, don't wait for the timeout above\n    this.trigger('hide');\n    if (this.options.triggerDialogEvents) {\n      cdb.god.trigger('dialogClosed');\n    }\n  },\n\n  /**\n   * @override cdb.ui.common.Dialog.prototype._ok to not hide dialog by default if there's an ok method defined.\n   */\n  _ok: function(ev) {\n    this.killEvent(ev);\n    if (this.ok) {\n      this.ok();\n    } else {\n      this.close();\n    }\n  },\n\n  _setBodyForDialogMode: function(action) {\n    $('body')[action + 'Class']('is-inDialog');\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n/**\n * Creates a default fallback map, to be used when an user don't have any own map visualizations.\n *\n * @param opts {Object} config\n *   el: {String,HTMLElement} id to element where to render map (w/o '#' prefix) or a HTMLElement node\n *   baselayer: {Object} as an item defined in app_config.yml (basemaps key)\n * @returns {Object} a new created Leaflet map\n */\nmodule.exports = function(opts) {\n  var provider = 'leaflet';\n  var type = 'tiled';\n  if (!opts.baselayer.url) {\n    provider = 'googlemaps';\n    type = 'GMapsBase';\n  } else {\n    opts.baselayer.urlTemplate = opts.baselayer.url;\n  }\n  var map = cdb.createVis(opts.el, {\n    'version': '0.1.0',\n    'title': 'default',\n    'scrollwheel': opts.scrollwheel !== undefined ? opts.scrollwheel : false,\n    'zoom': 6,\n    map_provider: provider,\n    center: [40.7127837, -74.0059413], // NY\n    layers: [ _.extend({ type: type }, opts.baselayer) ]\n  });\n\n  return map;\n};\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar navigateThroughRouter = require('../../../view_helpers/navigate_through_router');\n\n/**\n * The content of the dropdown menu opened by the link at the end of the breadcrumbs menu, e.g.\n *   username > [Maps]\n *          ______/\\____\n *         |            |\n *         |    this    |\n *         |____________|\n */\nmodule.exports = cdb.admin.DropdownMenu.extend({\n  className: 'Dropdown BreadcrumbsDropdown',\n\n  events: {\n    'click a':  '_navigateToLinksHref'\n  },\n\n  initialize: function() {\n    this.elder('initialize');\n    if (!this.options.viewModel) {\n      throw new Error('viewModel must be provided');\n    }\n    this.viewModel = this.options.viewModel;\n    // Optional\n    this.router = this.options.router;\n  },\n\n  render: function() {\n    var dashboardUrl = this.model.viewUrl().dashboard();\n    var datasetsUrl = dashboardUrl.datasets();\n    var deepInsightsUrl = dashboardUrl.deepInsights();\n    var mapsUrl = dashboardUrl.maps();\n\n    this.$el.html(this.template_base({\n      avatarUrl: this.model.get('avatar_url'),\n      userName: this.model.get('username'),\n      mapsUrl: mapsUrl,\n      datasetsUrl: datasetsUrl,\n      deepInsightsUrl: deepInsightsUrl,\n      lockedDatasetsUrl: datasetsUrl.lockedItems(),\n      lockedMapsUrl: mapsUrl.lockedItems(),\n      isDeepInsights: this.viewModel.isDisplayingDeepInsights(),\n      isDatasets: this.viewModel.isDisplayingDatasets(),\n      isMaps: this.viewModel.isDisplayingMaps(),\n      isLocked: this.viewModel.isDisplayingLockedItems()\n    }));\n\n    // Necessary to hide dialog on click outside popup, for example.\n    cdb.god.bind('closeDialogs', this.hide, this);\n\n    // TODO: taken from existing code, how should dropdowns really be added to the DOM?\n    $('body').append(this.el);\n\n    return this;\n  },\n\n  _navigateToLinksHref: function() {\n    this.hide(); //hide must be called before routing for proper deconstruct of dropdown\n    if (this.options.router) {\n      navigateThroughRouter.apply(this, arguments);\n    }\n  },\n\n  clean: function() {\n    // Until https://github.com/CartoDB/cartodb.js/issues/238 is resolved:\n    $(this.options.target).unbind(\"click\", this._handleClick);\n    this.constructor.__super__.clean.apply(this);\n  }\n});\n",
    "\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar UserNotificationModel = require('./model');\nvar UserOrganizationNotificationModel = require('./organization-model');\n\n/**\n *  User notification default collection, it will\n *  require the user notification model\n */\n\nmodule.exports = Backbone.Collection.extend({\n\n  model: function(attrs, options) {\n    if (attrs.type === 'org_notification') {\n      return new UserOrganizationNotificationModel(attrs, options);\n    } else {\n      return new UserNotificationModel(attrs);\n    }\n  }\n\n});",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar ScrollView = require('../../../scroll/scroll-view');\nvar ViewFactory = require('../../../../common/view_factory');\n\n/**\n * User notifications dropdown, rendering notifications\n * from the collection\n */\n\nmodule.exports = cdb.admin.DropdownMenu.extend({\n  className: 'Dropdown',\n\n  initialize: function() {\n    cdb.admin.DropdownMenu.prototype.initialize.apply(this, arguments);\n    this._initBinds();\n  },\n\n  render: function () {\n    this.clearSubViews();\n    this.$el.html(this.template_base());\n    this._renderDropdown();\n    this._checkScroll();\n\n    $('body').append(this.el);\n\n    return this;\n  },\n\n  _renderDropdown: function () {\n    this.dropdown_content = ViewFactory.createByTemplate('common/views/dashboard_header/notifications/templates/dropdown_content', {\n      items: this.collection.toJSON(),\n      unreadItems: this.collection.filter(function(item){ return !item.get('opened') }).length\n    });\n    this.addView(this.dropdown_content);\n\n    this.$('.js-content').html(this.dropdown_content.render().el);\n  },\n\n  _checkScroll: function() {\n    // we need to wait until dropdown has appeared,\n    // then if it is taller than 300px we wrap the content in a ScrollView,\n    // this is a fix for IE11, which needs a fixed height when using flex in a child element\n    setTimeout(function () {\n      if (this.$el.height() >= 300) {\n        var view = new ScrollView({\n          createContentView: function () {\n            return this.dropdown_content;\n          }.bind(this)\n        });\n        this.addView(view);\n\n        this.$el.addClass('Dropdown--withScroll');\n        this.$('.js-content').html(view.render().el);\n      }\n    }.bind(this), 301);\n  },\n\n  _initBinds: function() {\n    cdb.god.bind('closeDialogs', this.hide, this);\n    this.add_related_model(cdb.god);\n  }\n});\n",
    "\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\n/**\n *  User notification default model\n */\n\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    type:     '',\n    message:  '',\n    opened:   false\n  }\n\n});",
    "var UserNotificationModel = require('./model');\n\n/**\n *  User notification default model\n */\n\nmodule.exports = UserNotificationModel.extend({\n  url: function (method) {\n    return '/api/v3/users/' + this._userId + '/notifications/' + this.id + '?api_key=' + this._apiKey;\n  },\n\n  initialize: function (attrs, opts) {\n    if (!opts.userId) {\n      throw new Error('user Id is required');\n    }\n\n    if (!opts.apiKey) {\n      throw new Error('apiKey is required');\n    }\n\n    this._userId = opts.userId;\n    this._apiKey = opts.apiKey;\n  },\n\n  markAsRead: function () {\n    this.save({\n      notification: {\n        read_at: new Date()\n      }\n    });\n  }\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar UserNotificationsCollection = require('./collection');\nvar NotificationsDropdown = require('./dropdown_view');\n\n\n/**\n *  User notifactions view used to show alerts from the application\n *\n *  In storage we will check these attributes, managed by a collection:\n *\n *  try_trial       -> trial_end_at is null && user is not paid user\n *  limits_exceeded -> check table quota size\n *  close_limits    -> check table quota size < 80%\n *  upgraded        -> check upgraded_at less than one week\n *  trial_ends_soon -> trial_end_at is not null and it is close to be finished\n *  new_dashboard   -> new dashboard\n *  notification    -> check notification\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  attributes: {\n    href: '#/notifications'\n  },\n\n  tagName: 'a',\n  className: 'UserNotifications',\n\n  events: {\n    'click': '_openNotifications'\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.localStorage = this.options.localStorage;\n    this.template = cdb.templates.getTemplate('common/views/dashboard_header/notifications/templates/user_notifications');\n    this.collection = new UserNotificationsCollection();\n    this.collection.reset(this._generateCollection(), {\n      userId: this.user.get('id'),\n      apiKey: this.user.get('api_key'),\n      silent: true\n    });\n\n    this._initBinds();\n  },\n\n  render: function() {\n    var notificationsCount = this.collection.filter(function(item) { return !item.get('opened') }).length;\n\n    this.$el.html(\n      this.template({\n        notificationsCount: notificationsCount\n      })\n    );\n\n    // has alerts?\n    this.$el.toggleClass('has--alerts', notificationsCount > 0);\n\n    return this;\n  },\n\n  _initBinds: function() {\n    // Make it live\n    this.user.bind('change', this._onUserChange, this);\n    this.collection.bind('reset', this.render, this);\n    this.collection.bind('remove', this.render, this);\n    this.add_related_model(this.user);\n    this.add_related_model(this.collection);\n  },\n\n  _onUserChange: function() {\n    // When api is ready, we will make a valid fetch :)\n    this.collection.reset(this._generateCollection(), {\n      userId: this.user.get('id'),\n      apiKey: this.user.get('api_key')\n    });\n    this.render();\n  },\n\n  // This method will check notifications and create a collection with them\n  // Also it will check if those have been opened or not with Local Storage.\n  _generateCollection: function() {\n    var arr = [];\n    var d = {}; // data\n    var userUrl = this.user.viewUrl();\n\n    d.isInsideOrg = this.user.isInsideOrg();\n    d.isOrgOwner = this.user.isOrgOwner();\n    d.accountType = this.user.get(\"account_type\").toLowerCase();\n    d.remainingQuota = this.user.get('remaining_byte_quota');\n    d.publicProfileUrl = userUrl.publicProfile();\n    d.bytesQuota = this.user.get('quota_in_bytes');\n    d.userType = 'regular';\n    d.upgradeUrl = window.upgrade_url || '';\n    d.upgradeContactEmail = this.user.upgradeContactEmail();\n    d.trialEnd = this.user.get('trial_ends_at') && moment(this.user.get('trial_ends_at')).format(\"YYYY-MM-DD\");\n    d.userName = this.user.get('name') || this.user.get('username');\n\n\n    // Get user type\n    if (d.isInsideOrg && !d.isOrgOwner) {\n      d.userType = 'org';\n    } else if (d.isOrgOwner) {\n      d.userType = 'admin';\n    } else if (d.accountType === \"internal\" || d.accountType === \"partner\" || d.accountType === \"ambassador\") {\n      d.userType = 'internal'\n    }\n\n    // try_trial -> trial_end_at is null && user is not paid user\n    if (!d.isInsideOrg && d.accountType === 'free' && this.user.get(\"table_count\") > 0) {\n      arr.push({\n        iconFont: 'CDB-IconFont-gift',\n        severity: 'NotificationsDropdown-itemIcon--positive',\n        type:   'try_trial',\n        msg:    cdb.templates.getTemplate('common/views/dashboard_header/notifications/templates/try_trial')(d),\n        opened: this.localStorage.get('notification.try_trial')\n      })\n    } else {\n      this.localStorage.remove('notification.try_trial')\n    }\n\n    // limits_exceeded -> check table quota size\n    if (d.remainingQuota <= 0) {\n      arr.push({\n        iconFont: 'CDB-IconFont-barometer',\n        severity: 'NotificationsDropdown-itemIcon--negative',\n        type:   'limits_exceeded',\n        msg:    cdb.templates.getTemplate('common/views/dashboard_header/notifications/templates/limits_exceeded')(d),\n        opened: this.localStorage.get('notification.limits_exceeded')\n      });\n    } else {\n      this.localStorage.remove('notification.limits_exceeded')\n    }\n\n    // close_limits -> check table quota size < 80%\n    if ((( d.remainingQuota * 100 ) / d.bytesQuota ) < 20) {\n      arr.push({\n        iconFont: 'CDB-IconFont-barometer',\n        severity: 'NotificationsDropdown-itemIcon--alert',\n        type:   'close_limits',\n        msg:    cdb.templates.getTemplate('common/views/dashboard_header/notifications/templates/close_limits')(d),\n        opened: this.localStorage.get('notification.close_limits')\n      });\n    } else {\n      this.localStorage.remove('notification.close_limits')\n    }\n\n    // upgraded -> check upgraded_at less than ... one week?\n    if (this.user.get(\"show_upgraded_message\")) {\n      arr.push({\n        iconFont: 'CDB-IconFont-heartFill',\n        severity: 'NotificationsDropdown-itemIcon--positive',\n        type:   'upgraded_message',\n        msg:    cdb.templates.getTemplate('common/views/dashboard_header/notifications/templates/upgraded_message')(d),\n        opened: this.localStorage.get('notification.upgraded_message')\n      });\n    } else {\n      this.localStorage.remove('notification.upgraded_message')\n    }\n\n    // trial_ends_soon -> show_trial_reminder flag\n    if (this.user.get(\"show_trial_reminder\")) {\n      arr.push({\n        iconFont: 'CDB-IconFont-clock',\n        severity: 'NotificationsDropdown-itemIcon--alert',\n        type:   'trial_ends_soon',\n        msg:    cdb.templates.getTemplate('common/views/dashboard_header/notifications/templates/trial_ends_soon')(d),\n        opened: this.localStorage.get('notification.trial_ends_soon')\n      });\n    } else {\n      this.localStorage.remove('notification.trial_ends_soon')\n    }\n\n    if (window.organization_notifications) {\n      for (var n = 0; n < window.organization_notifications.length; n++) {\n        var notification = window.organization_notifications[n];\n        var icon = notification.icon ? ('CDB-IconFont-' + notification.icon) : 'CDB-IconFont-alert';\n\n        arr.push({\n          iconFont: icon,\n          severity: 'NotificationsDropdown-itemIcon--alert',\n          id: notification.id,\n          msg: notification.html_body,\n          read_at: notification.read_at,\n          type: 'org_notification'\n        });\n      }\n    }\n\n    return arr;\n  },\n\n  _openNotifications: function(e) {\n    if (e) this.killEvent(e);\n\n    if (this.notification) {\n      this.notification.hide();\n      delete this.notification;\n      return this;\n    }\n\n    var view = this.notification = new NotificationsDropdown({\n      target:             this.$el,\n      collection:         this.collection,\n      horizontal_offset:  5,\n      vertical_offset:    -5,\n      template_base:      'common/views/dashboard_header/notifications/templates/dropdown'\n    });\n\n    $(view.options.target).unbind('click', view._handleClick);\n    this._closeAnyOtherOpenDialogs();\n\n    view.on('onDropdownHidden', function() {\n      this._onDropdownHidden(view);\n    }, this);\n\n    view.render();\n    view.open();\n\n    this.addView(view);\n  },\n\n  _onDropdownHidden: function(view) {\n    var self = this;\n\n    // All notifications have been seen, opened -> true\n    this.collection.each(function(i){\n      if (i.get('type') === 'org_notification') {\n        i.markAsRead();\n      } else if (i.get('type')) {\n        i.set('opened', true);\n        var d = {};\n        d['notification.' + i.get('type')] = true;\n        self.localStorage.set(d);\n      }\n    });\n\n    // Clean collection because all notifications should\n    // removed from the collection\n    this.collection.reset();\n\n    // Clean dropdown\n    view.clean();\n    // Remove it from subviews\n    this.removeView(view);\n    // Remove count\n    this.$el.removeClass('has--alerts');\n    // No local notification set\n    delete this.notification;\n  },\n\n  _closeAnyOtherOpenDialogs: function() {\n    cdb.god.trigger(\"closeDialogs\");\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar bytesToSize = require('../../view_helpers/bytes_to_size');\n\n/**\n * The content of the dropdown menu opened by the user avatar in the top-right of the header, e.g.:\n *   Explore, Learn, ♞\n *             ______/\\____\n *            |            |\n *            |    this    |\n *            |____________|\n */\nmodule.exports = cdb.admin.DropdownMenu.extend({\n  className: 'Dropdown',\n\n  initialize: function() {\n    this.elder('initialize');\n    if (!this.model) {\n      throw new Error('model is required');\n    }\n    this.template_base = cdb.templates.getTemplate('common/views/dashboard_header/settings_dropdown');\n  },\n\n  shortDisplayName: function(user) {\n    // This changes should also be done in Central, ./app/assets/javascripts/dashboard/users/views/user_avatar.js\n    var accountTypeDisplayName = user.get('account_type_display_name');\n    var displayName = _.isUndefined(accountTypeDisplayName) ? user.get('account_type') : accountTypeDisplayName;\n\n    if(_.isUndefined(displayName)) {\n      return displayName;\n    }\n\n    displayName = displayName.toLowerCase();\n\n    if (displayName === 'organization user') {\n      return 'org. user';\n    } else {\n      return displayName.replace(/lump-sum/gi, '- A')\n                        .replace(/academic/gi, 'aca.')\n                        .replace(/ - Monthly/i, ' - M')\n                        .replace(/ - Annual/i, ' - A')\n                        .replace(/Non-Profit/i, 'NP')\n                        .replace(/On-premises/i, 'OP')\n                        .replace(/Internal use engine/i, 'engine')\n                        .replace(/Lite/i, 'L')\n                        .replace(/Cloud Engine &/i, 'C. Engine &')\n                        .replace(/& Enterprise Builder/i, '& E. Builder')\n                        .replace(/CARTO for /i, '')\n                        .replace(/CARTO /i, '');\n    }\n  },\n\n  render: function() {\n    var user = this.model;\n    var usedDataBytes = user.get('db_size_in_bytes');\n    var quotaInBytes = user.get('quota_in_bytes');\n    var usedDataPct = Math.round(usedDataBytes / quotaInBytes * 100);\n    var progressBarClass = '';\n\n    if (usedDataPct > 80 && usedDataPct < 90) {\n      progressBarClass = 'is--inAlert';\n    } else if (usedDataPct > 89) {\n      progressBarClass = 'is--inDanger';\n    }\n\n    var accountType = this.shortDisplayName(user);\n\n    var userUrl = this.model.viewUrl();\n    var upgradeUrl = window.upgrade_url || cdb.config.get('upgrade_url') || '';\n\n    this.$el.html(this.template_base({\n      name:         user.get('name') || user.get('username'),\n      email:        user.get('email'),\n      accountType:  accountType,\n      isOrgAdmin:   user.isOrgAdmin(),\n      usedDataStr:      bytesToSize(usedDataBytes).toString(2),\n      usedDataPct:      usedDataPct,\n      progressBarClass: progressBarClass,\n      availableDataStr: bytesToSize(quotaInBytes).toString(2),\n      showUpgradeLink:    upgradeUrl && (user.isOrgOwner() || !user.isInsideOrg()) && !cdb.config.get('cartodb_com_hosted'),\n      upgradeUrl:         upgradeUrl,\n      publicProfileUrl:   userUrl.publicProfile(),\n      apiKeysUrl:         userUrl.apiKeys(),\n      organizationUrl:    userUrl.organization(),\n      accountSettingsUrl: userUrl.accountSettings(),\n      logoutUrl:          userUrl.logout(),\n      isViewer:           user.isViewer(),\n      isBuilder:          user.isBuilder(),\n      orgDisplayEmail:    user.isInsideOrg() ? user.organization.display_email : null,\n      engineEnabled:      user.get('actions').engine_enabled,\n      mobileAppsEnabled:  user.get('actions').mobile_sdk_enabled\n    }));\n\n    // Necessary to hide dialog on click outside popup, for example.\n    cdb.god.bind('closeDialogs', this.hide, this);\n\n    // TODO: taken from existing code, how should dropdowns really be added to the DOM?\n    $('body').append(this.el);\n\n    return this;\n  },\n\n  clean: function() {\n    // Until https://github.com/CartoDB/cartodb.js/issues/238 is resolved:\n    $(this.options.target).unbind('click', this._handleClick);\n    this.constructor.__super__.clean.apply(this);\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\n/**\n * View to render the user support link in the header.\n * Expected to be created from existing DOM element.\n */\nmodule.exports = cdb.core.View.extend({\n\n  initialize: function() {\n    this.user = this.model;\n    this.template_base = cdb.templates.getTemplate('common/views/dashboard_header/user_support_template');\n  },\n\n  render: function() {\n    this.$el.html(\n      this.template_base({\n        userType: this._getUserType()\n      })\n    )\n\n    return this;\n  },\n\n  _getUserType: function() {\n    var accountType = this.user.get('account_type').toLowerCase();\n\n    // Get user type\n    if (this.user.isInsideOrg()) {\n      return 'org';\n    } else if (accountType === \"internal\" || accountType === \"partner\" || accountType === \"ambassador\") {\n      return 'internal'\n    } else if (accountType !== \"free\") {\n      return 'client';\n    } else {\n      return 'regular'\n    }\n  }\n\n});\n",
    "var $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar SettingsDropdown = require('./dashboard_header/settings_dropdown_view');\nvar BreadcrumbsDropdown = require('./dashboard_header/breadcrumbs/dropdown_view');\nvar UserNotifications = require('./dashboard_header/notifications/view');\nvar UserSupportView = require('./dashboard_header/user_support_view');\n\n/**\n * Responsible for the header part of the layout.\n * It's currently pre-rendered server-side, why the header element is required to be given when instantiating the view.\n */\nmodule.exports = cdb.core.View.extend({\n  events: {\n    'click .js-breadcrumb-dropdown': '_createBreadcrumbsDropdown',\n    'click .js-settings-dropdown': '_createSettingsDropdown'\n  },\n\n  initialize: function() {\n    if (!this.options.el) {\n      throw new Error('el element is required');\n    }\n    if (!this.options.viewModel) {\n      throw new Error('viewModel is required');\n    }\n\n    this._viewModel = this.options.viewModel;\n    this.router = this.options.router;\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n\n    this._renderBreadcrumbsDropdownLink();\n    this._renderSupportLink();\n    this._renderNotifications();\n    this._renderLogoLink();\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this._viewModel.bind('change', this._renderBreadcrumbsDropdownLink, this);\n    if (this.router) {\n      this.router.model.bind('change', this._onRouterChange, this);\n      this.add_related_model(this.router.model);\n    }\n    if (this.collection) {\n      this.collection.bind('reset', this._stopLogoAnimation, this);\n      this.collection.bind('error', this._onCollectionError, this);\n      this.add_related_model(this.collection);\n    }\n    this.add_related_model(this._viewModel);\n  },\n\n  _onCollectionError: function(col, e, opts) {\n    // Old requests can be stopped, so aborted requests are not\n    // considered as an error\n    if (!e || (e && e.statusText !== \"abort\")) {\n      this._stopLogoAnimation()\n    }\n  },\n\n  _onRouterChange: function(m, c) {\n    if (c && c.changes && !c.changes.content_type && this.collection.total_user_entries > 0) {\n      this._startLogoAnimation(); \n    }\n  },\n\n  _startLogoAnimation: function() {\n    this.$('.Logo').addClass('is-loading');\n  },\n\n  _stopLogoAnimation: function() {\n    this.$('.Logo').removeClass('is-loading');\n  },\n\n  _renderBreadcrumbsDropdownLink: function() {\n    this.$('.js-breadcrumb-dropdown').html(\n      cdb.templates.getTemplate('common/views/dashboard_header/breadcrumbs/dropdown_link')({\n        title: this._viewModel.breadcrumbTitle(),\n        dropdownEnabled: this._viewModel.isBreadcrumbDropdownEnabled()\n      })\n    )\n  },\n\n  _renderNotifications: function() {\n    var userNotifications = new UserNotifications({\n      user: this.model,\n      localStorage: this.options.localStorage\n    });\n\n    this.$('.js-user-notifications').html(userNotifications.render().el);\n    this.addView(userNotifications);\n  },\n\n  _renderSupportLink: function() {\n    var userSupportView = new UserSupportView({\n      el: $('.js-user-support'),\n      model: this.model\n    });\n    userSupportView.render();\n  },\n\n  _renderLogoLink: function() {\n    var template = cdb.templates.getTemplate('common/views/dashboard_header/logo');\n    this.$('.js-logo').html(\n      template({\n        homeUrl: this.model.viewUrl().dashboard(),\n        googleEnabled: this.model.featureEnabled('google_maps')\n      })\n    );\n  },\n\n  _createSettingsDropdown: function(ev) {\n    this.killEvent(ev);\n\n    this._setupDropdown(new SettingsDropdown({\n      target: $(ev.target),\n      model: this.model, // a user model\n      horizontal_offset: 18\n    }));\n  },\n\n  _createBreadcrumbsDropdown: function(ev) {\n    if (this._viewModel.isBreadcrumbDropdownEnabled()) {\n      this.killEvent(ev);\n      this._setupDropdown(new BreadcrumbsDropdown({\n        target: $(ev.target),\n        model: this.model,\n        viewModel: this._viewModel,\n        router: this.router, // optional\n        horizontal_offset: -110,\n        tick: 'center',\n        template_base: 'common/views/dashboard_header/breadcrumbs/dropdown'\n      }));\n    }\n  },\n\n  _setupDropdown: function(dropdownView) {\n    this._closeAnyOtherOpenDialogs();\n    this.addView(dropdownView);\n\n    dropdownView.on('onDropdownHidden', function() {\n      dropdownView.clean();\n    }, this);\n\n    dropdownView.render();\n    dropdownView.open();\n  },\n\n  _closeAnyOtherOpenDialogs: function() {\n    cdb.god.trigger(\"closeDialogs\");\n  }\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar moment = (typeof window !== \"undefined\" ? window['moment'] : typeof global !== \"undefined\" ? global['moment'] : null);\nvar Spinner = require('../../forms/spinner');\n\n/**\n * Custom picer for a dates range.\n */\nmodule.exports = cdb.core.View.extend({\n\n  _MAX_RANGE: 30,\n\n  className: 'DatePicker',\n\n  options: {\n    flat: true,\n    date: ['2008-07-31', '2008-07-31'],\n    current: '2008-07-31',\n    calendars: 2,\n    mode: 'range',\n    starts: 1\n  },\n\n  events: {\n    'click .js-dates': '_toggleCalendar',\n    'click .js-fourHours': '_setLastFourHours',\n    'click .js-oneDay': '_setLastDay',\n    'click .js-oneWeek': '_setLastWeek'\n  },\n\n  initialize: function() {\n    // Generate model\n    this.model = new cdb.core.Model({\n      fromDate: '',\n      fromHour: 0,\n      fromMin:  0,\n      toDate: '',\n      toHour: 23,\n      toMin:  59,\n      user_timezone: 0 // Explained as GMT+0\n    });\n\n    this.template = this.options.template || cdb.templates.getTemplate('common/views/date_pickers/dates_range');\n\n    // Init binds\n    this._initBinds();\n\n    // Set default dates\n    this._setToday();\n  },\n\n  render: function() {\n    var self = this;\n\n    this.clearSubViews();\n\n    this.$el.append(\n      this.template(\n        _.extend(\n          this.model.attributes,\n          { max_days: this._MAX_RANGE }\n        )\n      )\n    );\n\n    setTimeout(function() {\n      self._initCalendar();\n      self._hideCalendar();\n      self._initTimers();\n    }, 100);\n\n    return this;\n  },\n\n  _initBinds: function() {\n    _.bindAll(this, '_onDatesChange', '_onDocumentClick');\n\n    this.model.bind('change', this._setValues,      this);\n    this.model.bind('change', this._onValuesChange, this);\n\n    // Outside click\n    $(document).bind('click', this._onDocumentClick);\n  },\n\n  _destroyBinds: function() {\n    $(document).unbind('click', this._onDocumentClick);\n  },\n\n  _setValues: function(m, c) {\n    var text = 'Choose your dates';\n    var data = this.model.attributes;\n\n    if (data.fromDate && data.toDate) {\n      text =\n        'From ' +\n        '<strong>' +\n        this.model.get('fromDate') + ' ' +\n        (cdb.Utils.pad(this.model.get('fromHour'),2) + ':' + cdb.Utils.pad(this.model.get('fromMin'),2)) +\n        '</strong>' +\n        ' to ' +\n        '<strong>' +\n        this.model.get('toDate') + ' ' +\n        (cdb.Utils.pad(this.model.get('toHour'),2) + ':' + cdb.Utils.pad(this.model.get('toMin'),2)) +\n        '</strong>' +\n        '<i class=\"CDB-IconFont CDB-IconFont-calendar DatePicker-datesIcon\"></i>';\n    }\n\n    this.$('.DatePicker-dates').html(text);\n  },\n\n  _setToday: function() {\n    var datesUTC = this.model.get('user_timezone');\n    var today = moment().utc(datesUTC);\n    var previous = moment().utc(datesUTC).subtract((this._MAX_RANGE - 1), 'days');\n    this.options.date = [previous.format(\"YYYY-MM-DD\"), today.format(\"YYYY-MM-DD\")];\n    this.options.current = today.format(\"YYYY-MM-DD\");\n    this._setModelFromPrevious(previous);\n  },\n\n  _initCalendar: function() {\n    var selector = '.DatePicker-calendar';\n\n    // Can't initialize calendar if not already present in document... avoid errors being thrown\n    if (!document.body.contains(this.$(selector)[0])) return;\n\n    this.calendar = this.$(selector).DatePicker(\n      _.extend(this.options, {\n        onChange: this._onDatesChange,\n        onRender: function(d) { // Disable future dates and dates < 30 days ago\n\n          var date = d.valueOf();\n          var now = new Date();\n\n          var thirtyDaysAgo = new Date();\n          thirtyDaysAgo.setDate(now.getDate() - 30);\n\n          return (date < thirtyDaysAgo) || (date > now) ? { disabled: true } : ''\n\n        }\n      })\n    );\n  },\n\n  _onDatesChange: function(formatted, dates) {\n\n    // Check if selected dates have more than 30 days\n    var start = moment(formatted[0]);\n    var end = moment(formatted[1]);\n\n    if (Math.abs(start.diff(end, 'days')) > this._MAX_RANGE) {\n      formatted[1] = moment(formatted[0]).add('days', this._MAX_RANGE).format(\"YYYY-MM-DD\");\n      this.$('.DatePicker-calendar').DatePickerSetDate([formatted[0], formatted[1]]);\n    }\n\n    this.model.set({\n      fromDate: formatted[0],\n      toDate:   formatted[1]\n    })\n  },\n\n  _hideCalendar: function(e) {\n    if (e) this.killEvent(e);\n    this.$('.DatePicker-dropdown').hide();\n  },\n\n  _toggleCalendar: function(ev) {\n    if (ev) this.killEvent(ev);\n    this.$('.DatePicker-dropdown').toggle();\n  },\n\n  _setLastFourHours: function() {\n    var previous = moment().utc(0).subtract(4, 'hours');\n    this._setModelFromPrevious(previous);\n    this._setDatepickerFromPrevious(previous);\n    this.closeCalendar();\n  },\n\n  _setLastDay: function() {\n    var previous = moment().utc(0).subtract(1, 'day');\n    this._setModelFromPrevious(previous);\n    this._setDatepickerFromPrevious(previous);\n    this.closeCalendar();\n  },\n\n  _setLastWeek: function() {\n    var previous = moment().utc(0).subtract(1, 'week');\n    this._setModelFromPrevious(previous);\n    this._setDatepickerFromPrevious(previous);\n    this.closeCalendar();\n  },\n\n  _setModelFromPrevious: function(previous) {\n    var today = moment().utc(0);\n\n    this.model.set({\n      fromDate: previous.format('YYYY-MM-DD'),\n      fromHour: parseInt(previous.format('H')),\n      fromMin:  parseInt(previous.format('m')),\n      toDate: today.format('YYYY-MM-DD'),\n      toHour: parseInt(today.format('H')),\n      toMin:  parseInt(today.format('m'))\n    });\n  },\n\n  _setDatepickerFromPrevious: function(previous) {\n    var today = moment().utc(0);    \n    this.$('.DatePicker-calendar').DatePickerSetDate([ previous.format('YYYY-MM-DD') , today.format('YYYY-MM-DD') ]);\n  },\n\n  _initTimers: function() {\n    // 'From' div\n    var $from = this.$('.DatePicker-timersFrom');\n\n    // From hour\n    var fromHour = new Spinner({\n      model:    this.model,\n      property: 'fromHour',\n      min:      0,\n      max:      23,\n      inc:      1,\n      width:    15,\n      pattern:  /^([12]?\\d{0,1}|3[01]{0,2})$/,\n      debounce_time: 0\n    });\n\n    $from.find('.DatePicker-timersHour').append(fromHour.render().el);\n    this.addView(fromHour);\n\n    // From min\n    var fromMin = new Spinner({\n      model:    this.model,\n      property: 'fromMin',\n      min:      0,\n      max:      59,\n      inc:      1,\n      width:    15,\n      pattern:  /^([12345]?\\d{0,1})$/,\n      debounce_time: 0\n    });\n\n    $from.find('.DatePicker-timersMin').append(fromMin.render().el);\n    this.addView(fromMin);\n\n\n    // 'To' div\n    var $to = this.$('.DatePicker-timersTo');\n\n    // To hour\n    var toHour = new Spinner({\n      model:    this.model,\n      property: 'toHour',\n      min:      0,\n      max:      23,\n      inc:      1,\n      width:    15,\n      pattern:  /^([12]?\\d{0,1}|3[01]{0,2})$/,\n      debounce_time: 0\n    });\n\n    $to.find('.DatePicker-timersHour').append(toHour.render().el);\n    this.addView(toHour);\n\n    // To min\n    var toMin = new Spinner({\n      model:    this.model,\n      property: 'toMin',\n      min:      0,\n      max:      59,\n      inc:      1,\n      width:    15,\n      pattern:  /^([12345]?\\d{0,1})$/,\n      debounce_time: 0\n    });\n\n    $to.find('.DatePicker-timersMin').append(toMin.render().el);\n    this.addView(toMin);\n  },\n\n  _onValuesChange: function() {\n    this.trigger('changeDate', this.model.toJSON(), this);\n  },\n\n  getDates: function() {\n    return this.model.toJSON();\n  },\n\n  closeCalendar: function() {\n    this.$('.DatePicker-dropdown').hide();\n  },\n\n  _onDocumentClick: function(e) {\n    var $el = $(e.target);\n\n    if ($el.closest('.DatePicker').length === 0) {\n      this.closeCalendar();\n    }\n  },\n\n  clean: function() {\n    this._destroyBinds();\n    this.closeCalendar();\n    this.$('.DatePicker-calendar').DatePickerHide();\n    cdb.core.View.prototype.clean.call(this);\n  }\n\n})\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * Error details view, to be used together with an error object from an import model.\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  _TEMPLATES: {\n    8001: 'common/views/size_error_details_upgrade_template',\n    8005: 'common/views/layers_error_details_upgrade_template',\n    default: 'common/views/error_details'\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.err = this.options.err;\n  },\n\n  render: function() {\n    // Preventing problems checking if the error_code is a number or a string\n    // we make the comparision with only double =.\n    var errorCode = this.err.error_code && parseInt(this.err.error_code);\n    var upgradeUrl = cdb.config.get('upgrade_url');\n    var userCanUpgrade = upgradeUrl && !cdb.config.get('cartodb_com_hosted') && (!this.user.isInsideOrg() || this.user.isOrgOwner());\n    var templatePath = this._TEMPLATES['default'];\n    var originalUrl = this.err.original_url;\n    var httpResponseCode = this.err.http_response_code;\n    var httpResponseCodeMessage = this.err.http_response_code_message;\n\n    if (userCanUpgrade && this._TEMPLATES[errorCode]) {\n      templatePath = this._TEMPLATES[errorCode];\n    }\n\n    var template = cdb.templates.getTemplate(templatePath);\n\n    this.$el.html(\n      template({\n        errorCode: errorCode,\n        title: this.err.title,\n        text: this.err.what_about,\n        itemQueueId: this.err.item_queue_id,\n        originalUrl: originalUrl,\n        httpResponseCode: httpResponseCode,\n        httpResponseCodeMessage: httpResponseCodeMessage,\n        userCanUpgrade: userCanUpgrade,\n        showTrial: this.user.canStartTrial(),\n        upgradeUrl: upgradeUrl\n      })\n    );\n\n    return this;\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * Responsible for likes (♥ 123) and its toggling behaviour.\n */\nmodule.exports = cdb.core.View.extend({\n  tagName: 'a',\n\n  events: {\n    'click': '_toggleLike'\n  },\n\n  initialize: function() {\n    this.template = cdb.templates.getTemplate('common/views/likes/template');\n    this.model.bind('change:likeable change:liked change:likes error', this.render, this);\n  },\n\n  render: function() {\n    this.$el.html(\n      this.template({\n        likes: this.model.get(\"likes\"),\n        size: this.model.get(\"size\"),\n        show_count: this.model.get(\"show_count\"),\n        show_label: this.model.get(\"show_label\")\n      })\n    )\n    .attr({\n      class: this._classNames(),\n      href: this._hrefLocation()\n    });\n\n    return this;\n  },\n\n  _hrefLocation: function() {\n    var href = \"#/like\";\n\n    if (!this.model.get('likeable')) {\n      href = window.login_url;\n    }\n\n    return href;\n  },\n\n  _classNames: function() {\n    var classNames = ['LikesIndicator'];\n\n    if (this.model.get('likeable')) {\n      classNames.push('is-likeable');\n    }\n\n    if (this.model.get('liked')) {\n      classNames.push('is-liked');\n    }\n\n    if (this._animate) {\n      classNames.push('is-animated');\n      this.$el.one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function() {\n        // unset animate and force re-render to avoid race conditions\n        this._animate = false;\n        this.render();\n      }.bind(this));\n    }\n\n    return classNames.join(' ');\n  },\n\n  _toggleLike: function(ev) {\n    if (this.model.get('likeable')) {\n      this.killEvent(ev);\n\n      this._animate = true;\n      this.model.toggleLiked();\n    }\n  }\n});\n",
    "var $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n/**\n *  MapCard previews\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  options: {\n    width: 300,\n    height: 170,\n    privacy: 'PUBLIC',\n    username: '',\n    visId: '',\n    mapsApiResource: '',\n    className: '',\n    authTokens: []\n  },\n\n  _TEMPLATES: {\n    // Using <%= %> instead of <%- %> because if not / characters (for example) will be escaped\n    regular: '<%- protocol %>://<%= mapsApiResource %>/api/v1/map/static/named/<%- tpl %>/<%- width %>/<%- height %>.png<%= authTokens %>',\n    cdn: '<%- protocol %>://<%- cdn %>/<%- username %>/api/v1/map/static/named/<%- tpl %>/<%- width %>/<%- height %>.png<%= authTokens %>'\n  },\n\n  initialize: function() {\n    _.each(['visId', 'mapsApiResource', 'username'], function(name) {\n      if (!this.options[name]) {\n        console.log(name + ' is required for Static Map instantiation');\n      }\n    }, this);\n  },\n\n  load: function() {\n    this._startLoader();\n    this._loadFromVisId();\n\n    return this;\n  },\n\n  _generateImageTemplate: function() {\n    return 'tpl_' + this.options.visId.replace(/-/g, '_');\n  },\n\n  _loadFromVisId: function() {\n    var protocol = this._isHTTPS() ? 'https': 'http';\n    var cdnConfig = cdb.config.get('cdn_url');\n    var template = _.template(cdnConfig ? this._TEMPLATES['cdn'] : this._TEMPLATES['regular']);\n\n    var options = {\n      protocol: protocol,\n      username: this.options.username,\n      mapsApiResource: this.options.mapsApiResource,\n      tpl: this._generateImageTemplate(),\n      width: this.options.width,\n      height: this.options.height,\n      authTokens: this._generateAuthTokensParams()\n    };\n\n    if (cdnConfig) {\n      options = _.extend(options, { cdn: cdnConfig[protocol] });\n    }\n\n    var url = template(options);\n\n    this._loadImage({}, url);\n  },\n\n  _generateAuthTokensParams: function () {\n    var authTokens = this.options.authTokens;\n    if (authTokens && authTokens.length > 0) {\n      return '?' + _.map(authTokens, function (t) { return 'auth_token=' + t; }).join('&');\n    } else {\n      return '';\n    }\n  },\n\n  _isHTTPS: function() {\n    return location.protocol.indexOf(\"https\") === 0;\n  },\n\n  loadURL: function(url) {\n    var $img = $('<img class=\"MapCard-preview\" src=\"' + url + '\" />');\n    this.$el.append($img);\n\n    if (this.options.className) {\n      $img.addClass(this.options.className);\n    }\n\n    $img.fadeIn(250);\n  },\n\n  showError: function() {\n    this._onError();\n  },\n\n  _startLoader: function() {\n    this.$el.addClass(\"is-loading\");\n  },\n\n  _stopLoader: function() {\n    this.$el.removeClass(\"is-loading\");\n  },\n\n  _onSuccess: function(url) {\n    this._stopLoader();\n    this.loadURL(url);\n    this.trigger(\"loaded\", url);\n  },\n\n  _onError: function(error) {\n    this._stopLoader();\n    this.$el.addClass(\"has-error\");\n    var $error = $('<div class=\"MapCard-error\" />');\n    this.$el.append($error);\n    $error.fadeIn(250);\n    this.trigger(\"error\");\n  },\n\n  _loadImage: function(error, url) {\n    var self = this;\n    var img  = new Image();\n\n    img.onerror = function() {\n      self._onError(error);\n    };\n\n    img.onload = function() {\n      self._onSuccess(url);\n    };\n\n    try {\n      img.src = url;\n    } catch(err) {\n      this._onError(err);\n    }\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\nvar PaginationModel = require('../pagination/model');\nvar randomQuote = require('../../view_helpers/random_quote');\nvar ViewFactory = require('../../view_factory');\nvar PaginationView = require('../pagination/view');\n\n/**\n * View to render a searchable/pageable collection.\n * Also allows to filter/search list.\n * Set {isUsedInDialog: true} in view opts if intended to be used in a dialog, to have proper classes to position views\n * properly.\n *\n * - collection is a collection which has a PagedSearchModel.\n */\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-search-link': '_onSearchClick',\n    'click .js-clean-search': '_onCleanSearchClick',\n    'keydown .js-search-input': '_onKeyDown',\n    'submit .js-search-form': 'killEvent'\n  },\n\n  initialize: function() {\n    _.each(['collection', 'pagedSearchModel', 'createListView'], function(name) {\n      if (!this.options[name]) throw new Error(name + ' is required');\n    }, this);\n    this.collection = this.options.collection;\n    this.options.noResults = this.options.noResults || {}\n\n    var params = this.options.pagedSearchModel;\n    this.paginationModel = new PaginationModel({\n      current_page: params.get('page'),\n      total_count: this.collection.totalCount() || 0,\n      per_page: params.get('per_page')\n    });\n\n    this.elder('initialize');\n    this._initBinds();\n    this.options.pagedSearchModel.fetch(this.collection);\n  },\n\n  render: function() {\n    this.clearSubViews();\n\n    this._renderContent(\n      this.getTemplate('common/views/paged_search/paged_search')({\n        thinFilters: this.options.thinFilters,\n        q: this.options.pagedSearchModel.get('q')\n      })\n    );\n\n    this._initViews();\n    this._$cleanSearchBtn().hide();\n    this._renderExtraFilters();\n\n    return this;\n  },\n\n  _renderExtraFilters: function() {\n    if (this.options.filtersExtrasView && this.options.filtersExtrasView) {\n      this.$('.js-filters').append(this.options.filtersExtrasView.render().el);\n    }\n  },\n\n  _renderContent: function(html) {\n    if (this.options.isUsedInDialog) {\n      html = this.getTemplate('common/views/paged_search/paged_search_dialog_wrapper')({\n        htmlToWrap: html\n      })\n    }\n    this.$el.html(html);\n\n    // Needs to be called after $el html changed:\n    if (this.options.isUsedInDialog) {\n      this.$el.addClass('Dialog-expandedSubContent');\n      this._$tabPane().addClass('Dialog-bodyInnerExpandedWithSubFooter');\n    }\n  },\n\n  _initBinds: function() {\n    this.collection.bind('fetching', function() {\n      this._toggleCleanSearchBtn();\n      this._activatePane('loading');\n    }, this);\n\n    this.collection.bind('error', function(e) {\n      // Old requests can be stopped, so aborted requests are not\n      // considered as an error\n      if (!e || (e && e.statusText !== \"abort\")) {\n        this._activatePane('error');\n      }\n      this._toggleCleanSearchBtn();\n    }, this);\n\n    this.collection.bind('reset', function(collection) {\n      this.paginationModel.set({\n        total_count: this.collection.totalCount(),\n        current_page: this.options.pagedSearchModel.get('page')\n      });\n      this._activatePane(this.collection.totalCount() > 0 ? 'list' : 'no_results');\n      this._toggleCleanSearchBtn();\n    }, this);\n\n    this.paginationModel.bind('change:current_page', function(mdl, newPage) {\n      this.options.pagedSearchModel.set('page', newPage);\n      this.options.pagedSearchModel.fetch(this.collection);\n    }, this);\n\n    this.add_related_model(this.options.pagedSearchModel);\n    this.add_related_model(this.collection);\n    this.add_related_model(this.paginationModel);\n  },\n\n  _toggleCleanSearchBtn: function() {\n    this._$cleanSearchBtn().toggle(!!this.options.pagedSearchModel.get('q'))\n  },\n\n  _initViews: function() {\n    this._panes = new cdb.ui.common.TabPane({\n      el: this._$tabPane()\n    });\n    this.addView(this._panes);\n\n    this._panes.addTab('list',\n      ViewFactory.createByList([\n        this._createListView(),\n        new PaginationView({\n          className: 'CDB-Text CDB-Size-medium Pagination Pagination--shareList',\n          model: this.paginationModel\n        })\n      ])\n    );\n\n    this._panes.addTab('error',\n      ViewFactory.createByTemplate('common/templates/fail', {\n        msg: ''\n      })\n    );\n\n    this._panes.addTab('no_results',\n      ViewFactory.createByTemplate('common/templates/no_results', {\n        icon: this.options.noResults.icon || 'CDB-IconFont-defaultUser',\n        title: this.options.noResults.title || 'Oh! No results',\n        msg: this.options.noResults.msg || 'Unfortunately we could not find anything with these parameters'\n      })\n    );\n\n    this._panes.addTab('loading',\n      ViewFactory.createByTemplate('common/templates/loading', {\n        title: 'Searching',\n        quote: randomQuote()\n      })\n    );\n\n    if (this.options.pagedSearchModel.get('q')) {\n      this._focusSearchInput();\n    }\n\n    this._activatePane(this._chooseActivePaneName(this.collection.totalCount()));\n  },\n\n  _createListView: function() {\n    var view = this.options.createListView();\n    if (view instanceof cdb.core.View) {\n      return view;\n    } else {\n      cdb.log.error('createListView function must return a view');\n      // fallback for view to not fail miserably\n      return new cdb.core.View();\n    }\n  },\n\n  _activatePane: function(name) {\n    // Only change active pane if the panes is actually initialized\n    if (this._panes && this._panes.size() > 0) {\n      // explicit render required, since tabpane doesn't do it\n      this._panes.active(name).render();\n    }\n  },\n\n  _chooseActivePaneName: function(totalCount) {\n    if (totalCount === 0) {\n      return 'no_results';\n    } else if (totalCount > 0) {\n      return 'list';\n    } else {\n      return 'loading';\n    }\n  },\n\n  _focusSearchInput: function() {\n    // also selects the current search str on the focus\n    this._$searchInput().focus().val(this._$searchInput().val());\n  },\n\n  _onSearchClick: function(ev) {\n    this.killEvent(ev);\n    this._$searchInput().focus();\n  },\n\n  _onCleanSearchClick: function(ev) {\n    this.killEvent(ev);\n    this._cleanSearch();\n  },\n\n  _onKeyDown: function(ev) {\n    var enterPressed = (ev.keyCode == $.ui.keyCode.ENTER);\n    var escapePressed = (ev.keyCode == $.ui.keyCode.ESCAPE);\n    if (enterPressed) {\n      this.killEvent(ev);\n      this._submitSearch();\n    } else if (escapePressed) {\n      this.killEvent(ev);\n      if (this.options.pagedSearchModel.get('q')) {\n        this._cleanSearch();\n      }\n    }\n  },\n\n  _submitSearch: function(e) {\n    this._makeNewSearch(Utils.stripHTML(this._$searchInput().val().trim()));\n  },\n\n  _cleanSearch: function() {\n    this._$searchInput().val('');\n    this._makeNewSearch();\n  },\n\n  _makeNewSearch: function(query) {\n    this.options.pagedSearchModel.set({\n      q: query,\n      page: 1\n    });\n    this.options.pagedSearchModel.fetch(this.collection);\n  },\n\n  _$searchInput: function() {\n    return this.$('.js-search-input');\n  },\n\n  _$cleanSearchBtn: function() {\n    return this.$('.js-clean-search');\n  },\n\n  _$tabPane: function() {\n    return this.$('.js-tab-pane');\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n/**\n * View model intended to be responsible for pagination logic, and to be used in conjunction with a Pagination view.\n */\nmodule.exports = cdb.core.Model.extend({\n  defaults: {\n    total_count:          0,\n    per_page:             10,\n    current_page:         1,\n    display_count:        5,\n    extras_display_count: 1,\n    url_to:               undefined\n  },\n\n  pagesCount: function() {\n    return Math.max(\n        Math.ceil(\n          this.get('total_count') / this.get('per_page')\n        ), 1);\n  },\n\n  isCurrentPage: function(page) {\n    return this.get('current_page') === page;\n  },\n\n  shouldBeVisible: function() {\n    var pagesCount = this.pagesCount();\n    return this.get('total_count') > 0 && pagesCount > 1 && this.get('current_page') <= pagesCount;\n  },\n\n  urlTo: function(page) {\n    if (this.hasUrl()) {\n      return this.get('url_to')(page);\n    }\n  },\n\n  hasUrl: function() {\n    return typeof this.get('url_to') === 'function';\n  },\n\n  /**\n   * Get the pages that are expected to be displayed.\n   * The current page will be in the middle of the returned sequence.\n   *\n   * @returns {number[]} a sequence of Numbers\n   */\n  pagesToDisplay: function() {\n    var rangeStart;\n\n    if (this._inLowRange()) {\n      rangeStart = 1;\n    } else if (this._inHighRange()) {\n      rangeStart = this.get('current_page') - this._startOffset();\n    } else {\n      // Somewhere between the low and high boundary\n      rangeStart = this.pagesCount() - this.get('display_count') + 1;\n    }\n    rangeStart = Math.max(rangeStart, 1);\n\n    return this._withExtraPages(\n      _.range(rangeStart, this._rangeEnd(rangeStart))\n    );\n  },\n\n  _withExtraPages: function(pagesRelativeToCurrentPage) {\n    var lastPage = this.pagesCount();\n    var extraCount = this.get('extras_display_count');\n    var extraStartPages = _.range(1, extraCount + 1);\n    var extraEndPages = _.range(lastPage - extraCount + 1, lastPage + 1);\n\n    var startPagesDiff = pagesRelativeToCurrentPage[0] - extraStartPages.slice(-1)[0];\n    if (startPagesDiff === 2) {\n      // There is only one missing page in the gap, so add it\n      extraStartPages.push(pagesRelativeToCurrentPage[0] - 1);\n    } else if (startPagesDiff > 2) {\n      // There are more hidden pages at low range, add padding at end\n      extraStartPages.push(-1);\n    }\n\n    var endPagesDiff = extraEndPages[0] - pagesRelativeToCurrentPage.slice(-1);\n    if (endPagesDiff === 2) {\n      // There is only one missing page in the gap, so add it\n      extraEndPages.unshift(extraEndPages[0] - 1);\n    } if (endPagesDiff > 2) {\n      // There are more hidden pages at high range, add padding at beginning\n      extraEndPages.unshift(-2);\n    }\n\n    return _.union(extraStartPages, pagesRelativeToCurrentPage, extraEndPages);\n  },\n\n  _inLowRange: function() {\n    return this.get('current_page') < this._startOffset();\n  },\n\n  _inHighRange: function() {\n    return this.get('current_page') < this._highBoundary();\n  },\n\n  _highBoundary: function() {\n    return this.pagesCount() - this._startOffset();\n  },\n\n  _startOffset: function() {\n    return Math.floor(this.get('display_count') / 2);\n  },\n\n  _rangeEnd: function(rangeStart) {\n    // If we are too close to the range end then cap to the pages count.\n    return Math.min(rangeStart + this.get('display_count'), this.pagesCount() + 1);\n  }\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar navigateThroughRouter = require('../../view_helpers/navigate_through_router');\n\n/**\n * Responsible for pagination.\n *\n * Expected to be created with a pagination model, see the model for available params, here we create w/ the minimum:\n *   new PaginationView({\n *     model: new PaginationModel({\n *       // Compulsory:\n *       urlTo:  function(page) { return '/?page='+ page },\n\n         // Optional, to router clicks on <a> tags through router.navigate by default\n *       router: new Router(...)\n *     })\n *   });\n */\nmodule.exports = cdb.core.View.extend({\n\n  className: 'Pagination CDB-Text CDB-Size-medium',\n\n  events: {\n    'click a': '_paginate'\n  },\n\n  initialize: function() {\n    this.template = cdb.templates.getTemplate('common/views/pagination/template');\n    this.router = this.options.router;\n\n    if (this.router && !this.model.hasUrl()) {\n      throw new Error('since router is set the model must have a url method set too');\n    }\n\n    this.model.bind('change', this.render, this);\n  },\n\n  render: function() {\n    if (this.model.shouldBeVisible()) {\n      this.$el.html(\n        this.template({\n          m: this.model,\n          pagesCount: this.model.pagesCount(),\n          currentPage: this.model.get('current_page')\n        })\n      );\n      this.$el.addClass(this.className);\n      this.delegateEvents();\n    } else {\n      this.$el.html('');\n    }\n\n    return this;\n  },\n\n  _paginate: function(ev) {\n    if (this.router) {\n      navigateThroughRouter.apply(this, arguments);\n    } else if (!this.model.hasUrl()) {\n      this.killEvent(ev);\n    }\n\n    var page = $(ev.target).data('page');\n    this.model.set('current_page', page);\n  }\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * Error details view, to be used together with an error object from an import model.\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n  _TEMPLATES: {\n    'partial_import': 'common/views/partial_import_details',\n    'too_many_files': 'common/views/too_many_files_details',\n    'too_many_rows_connection': 'common/views/too_many_rows_connection_details'\n  },\n\n  initialize: function() {\n    this.warnings = this.options.warnings;\n  },\n\n  render: function() {\n    var warnings = this.warnings;\n\n    var template_file_key = this._getTemplateKey(warnings);\n    var template = cdb.templates.getTemplate(this._TEMPLATES[template_file_key]);\n\n    this.$el.html(\n      template({\n        warnings: warnings\n      })\n    );\n\n    return this;\n  },\n\n  _getTemplateKey: function(warnings) {\n    // We have warnings precedence between max layers an max tables per import.\n    // For example, one import could reach the limit of layers an tables at the\n    // same time.\n    if (warnings.user_max_layers && warnings.max_tables_per_import) {\n      return (warnings.user_max_layers < warnings.max_tables_per_import) ? 'partial_import' : 'too_many_files'\n    } else if (warnings.user_max_layers) {\n      return 'partial_import';\n    } else if (warnings.max_tables_per_import) {\n      return 'too_many_files';\n    } else if (warnings.max_rows_per_connection) {\n      return 'too_many_rows_connection';\n    }\n  }\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * Model that encapsulates params for fetching data in a cdb.admin.Visualizations collection.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    content_type:   '',\n    page:           1,\n    q:              '',\n    tag:            '',\n    category:       '',\n    shared:         'no',\n    locked:         false,\n    liked:          false,\n    library:        false,\n    order:          'updated_at',\n    deepInsights:   false\n  },\n\n  isSearching: function() {\n    return this.get('q') || this.get('tag');\n  },\n\n  isDatasets: function() {\n    return this.get('content_type') === 'datasets';\n  },\n\n  isMaps: function() {\n    return this.get('content_type') === 'maps';\n  },\n\n  isDeepInsights: function() {\n    return this.isMaps() && this.get('deepInsights');\n  }\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BackgroundPollingModel = require('../common/background_polling/background_polling_model');\n\n/**\n *  Background polling model for the dashboard context.\n */\n\nmodule.exports = BackgroundPollingModel.extend({\n\n  _onImportsStateChange: function(importsModel) {\n    // Redirect to dataset/map url?\n    if (( this.importsCollection.size() - this.importsCollection.failedItems().length ) === 1 &&\n        importsModel.hasCompleted() &&\n        importsModel.imp.get('tables_created_count') === 1 &&\n        importsModel.imp.get('service_name') !== 'twitter_search') {\n      var vis = importsModel.importedVis();\n      if (vis) {\n        this._redirectTo(encodeURI(vis.viewUrl(this.user).edit()));\n        return;\n      }\n    }\n\n    if (importsModel.hasCompleted()) {\n      this.trigger('importCompleted', importsModel, this);\n    }\n  },\n\n  _redirectTo: function(url) {\n    window.location = url;\n  }\n\n});\n",
    "var $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\n\nvar FiltersView = require('./filters_view');\nvar ListView = require('./list_view');\nvar ContentResult = require('./content_result_view');\nvar OnboardingView = require('./onboarding_view');\nvar ContentFooterView = require('./content_footer/view');\nvar LoadingLibraryView = require('./datasets/loading_library_view');\n\nmodule.exports = cdb.core.View.extend({\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.router = this.options.router;\n    this.localStorage = this.options.localStorage;\n\n    this._initViews();\n    this._initBindings();\n  },\n\n  _initBindings: function() {\n    this.router.model.bind('change', this._onRouterChange, this);\n    this.collection.bind('reset', this._onDataFetched, this);\n    this.collection.bind('loading', this._onDataLoading, this);\n    this.collection.bind('add', this._onDataChange, this);\n    this.collection.bind('error', function(col, e, opts) {\n      // Old requests can be stopped, so aborted requests are not\n      // considered as an error\n      if (!e || (e && e.statusText !== \"abort\")) {\n        this._onDataError()\n      }\n    }, this);\n\n    // Binding window scroll :(\n    $(window).bind('scroll', this._onWindowScroll);\n\n    this.add_related_model(this.router.model);\n    this.add_related_model(this.collection);\n  },\n\n  _initViews: function() {\n    this.controlledViews = {};  // All available views\n    this.enabledViews = [];     // Visible views\n\n    var onboardingView = new OnboardingView({\n      user: this.user\n    });\n    this.controlledViews['onboarding'] = onboardingView;\n    this.$el.prepend(onboardingView.render().el);\n    this.addView(onboardingView);\n\n    var filtersView = new FiltersView({\n      el:           this.$('.Filters'),\n      headerHeight: this.options.headerHeight,\n      user:         this.user,\n      router:       this.router,\n      collection:   this.collection,\n      localStorage: this.localStorage\n    });\n\n    this.controlledViews['filters'] = filtersView;\n    filtersView.render();\n    this.addView(filtersView);\n\n    var noDatasetsView = new ContentResult({\n      className:  'ContentResult no-datasets',\n      user:       this.user,\n      router:     this.router,\n      collection: this.collection,\n      template:   'dashboard/views/content_no_datasets'\n    });\n    noDatasetsView.bind('connectDataset', function() {\n      if (this.user && this.user.canCreateDatasets()) {\n        cdb.god.trigger(\n          'openCreateDialog',\n          {\n            type: 'dataset'\n          }\n        );\n      }\n    }, this);\n\n    this.controlledViews['no_datasets'] = noDatasetsView;\n    this.$('.NoDatasets').append(noDatasetsView.render().el);\n    this.addView(noDatasetsView);\n\n    var listView = new ListView({\n      user:         this.user,\n      router:       this.router,\n      collection:   this.collection\n    });\n\n    var self = this;\n\n    cdb.god.bind('onTemplateSelected', function(id) {\n      if (self.player) {\n        self.player.close();\n      }\n    });\n\n    cdb.god.bind('startTutorial', function(id) {\n      self._addVideoPlayer(id);\n    });\n\n    this._addVideoPlayer();\n\n    this.controlledViews['list'] = listView;\n    this.$('#content-list').append(listView.render().el);\n    this.addView(listView);\n\n    var noResultsView = new ContentResult({\n      router:     this.router,\n      collection: this.collection,\n      template:   'dashboard/views/content_no_results',\n    });\n\n    this.controlledViews['no_results'] = noResultsView;\n    this.$el.append(noResultsView.render().el);\n    this.addView(noResultsView);\n\n    var errorView = new ContentResult({\n      router:     this.router,\n      collection: this.collection,\n      template:   'dashboard/views/content_error'\n    });\n\n    var loadingLibrary = new LoadingLibraryView();\n    this.controlledViews['loading_library'] = loadingLibrary;\n    this.$el.append(loadingLibrary.render().el);\n    this.addView(loadingLibrary);\n\n    this.controlledViews['error'] = errorView;\n    this.$el.append(errorView.render().el);\n    this.addView(errorView);\n\n    var mainLoaderView = new ContentResult({\n      router:     this.router,\n      collection: this.collection,\n      template:   'dashboard/views/content_loader'\n    });\n\n    this.controlledViews['main_loader'] = mainLoaderView;\n    this.$el.append(mainLoaderView.render().el);\n    this.addView(mainLoaderView);\n\n    // No need to call render, will render itself upon initial collection fetch\n    var contentFooter = new ContentFooterView({\n      el:         this.$('#content-footer'),\n      model:      this.user,\n      router:     this.router,\n      collection: this.collection\n    });\n\n    this.controlledViews['content_footer'] = contentFooter;\n    // Move element to end of the parent, if not paginator will appear\n    // before other elements\n    this.$('#content-footer').appendTo(this.$el);\n    this.addView(contentFooter);\n  },\n\n  _onRouterChange: function(m, c) {\n    var blocks = [];\n\n    if (c && c.changes && c.changes.content_type) {\n      // If it changes to a different type (or tables or visualizations)\n      // Show the main loader\n      blocks = [ 'filters', 'main_loader' ];\n    } else {\n      blocks = ['filters'];\n\n      if (this._isBlockEnabled('list') && this.collection.total_user_entries > 0) {\n        // If list was enabled, keep it visible\n        blocks.push('list', 'content_footer');\n      } else {\n        blocks.push('main_loader');\n      }\n\n      // If no_results was enabled, keep it visible\n      if (this._isBlockEnabled('no_results') || this._isBlockEnabled('error')) {\n        if (!_.contains(blocks, 'main_loader')) {\n          blocks.push('main_loader');\n        }\n      }\n    }\n\n    this._hideBlocks();\n    this._showBlocks(blocks);\n    this._scrollToTop();\n  },\n\n  _onDataLoading: function() {\n    this.$el.removeClass('on-boarding');\n  },\n\n  /**\n   * Arguments may vary, depending on if it's the collection or a model that triggers the event callback.\n   * @private\n   */\n  _onDataFetched: function() {\n    var activeViews = [ 'filters', 'content_footer' ];\n    var tag = this.router.model.get('tag');\n    var q = this.router.model.get('q');\n    var shared = this.router.model.get('shared');\n    var liked = this.router.model.get('liked');\n    var locked = this.router.model.get('locked');\n    var library = this.router.model.get('library');\n\n    if (library && this.collection.total_user_entries === 0) {\n      activeViews.push('no_datasets');\n    }\n\n    if (this.collection.size() === 0) {\n      if (!tag && !q && shared === \"no\" && !locked && !liked) {\n\n        if (this.router.model.get('content_type') === \"maps\") {\n          // If there are no maps, let's show onboarding\n          if (this.collection.total_shared > 0) {\n            this.router.navigate(this.user.viewUrl().dashboard().maps().urlToPath('shared'), { trigger: true });\n            return;\n          } else {\n            this.$el.addClass('on-boarding');\n            activeViews = ['onboarding', 'filters'];\n          }\n        } else if (library) {\n          // Library is loaded async on 1st visit by user, so this code path is only reached until the library has been\n          // stocked up. Show an intermediate loading info, and retry fetching data until while user stays here.\n          // See https://github.com/CartoDB/cartodb/pull/2741 for more details.\n          activeViews.push('loading_library');\n          this.controlledViews['loading_library'].retrySoonAgainOrAbortIfLeavingLibrary(this.collection, this.router.model);\n        } else if (!library && this.router.model.get('content_type') === \"datasets\") {\n          if (this.collection.total_shared > 0) {\n            this.router.navigate(this.user.viewUrl().dashboard().datasets().urlToPath('shared'), { trigger: true });\n            return;\n          } else if (this.user.hasCreateDatasetsFeature() && cdb.config.get('data_library_enabled')) {\n            this.router.navigate(this.user.viewUrl().dashboard().datasets().dataLibrary(), { trigger: true });\n            return;\n          } else {\n            activeViews.push('no_results');\n          }\n        } else {\n\n          // None of the rest, no-results\n          activeViews.push('no_results');\n        }\n\n      } else {\n        activeViews.push('no_results');\n      }\n    } else {\n      activeViews.push('list');\n    }\n\n    this._hideBlocks();\n    this._showBlocks(activeViews);\n  },\n\n  _onDataChange: function() {\n    // Fetch collection again to check if current\n    // view has suffered a change\n    this.collection.fetch();\n  },\n\n  _onDataError: function(e) {\n    this._hideBlocks();\n    this._showBlocks([ 'filters', 'error' ]);\n  },\n\n  _showBlocks: function(views) {\n    var self = this;\n    if (views) {\n      _.each(views, function(v){\n        self.controlledViews[v].show();\n        self.enabledViews.push(v);\n      })\n    } else {\n      self.enabledViews = [];\n      _.each(this.controlledViews, function(v){\n        v.show();\n        self.enabledViews.push(v);\n      })\n    }\n  },\n\n  _hideBlocks: function(views) {\n    var self = this;\n    if (views) {\n      _.each(views, function(v){\n        self.controlledViews[v].hide();\n        self.enabledViews = _.without(self.enabledViews, v);\n      })\n    } else {\n      _.each(this.controlledViews, function(v){\n        v.hide();\n      });\n      self.enabledViews = [];\n    }\n  },\n\n  _isBlockEnabled: function(name) {\n    if (name) {\n      return _.contains(this.enabledViews, name);\n    }\n    return false\n  },\n\n  _scrollToTop: function() {\n    $('body').animate({ scrollTop: 0 }, 550);\n  },\n\n\n  _addVideoPlayer: function(id) {\n    var opts = { id: id };\n\n    this.player = new cdb.admin.VideoPlayer(opts);\n\n    if (this.player.hasVideoData()) {\n      this.$el.append(this.player.render().$el);\n    }\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar PaginationModel = require('../../common/views/pagination/model');\nvar PaginationView = require('../../common/views/pagination/view');\nvar pluralizeString = require('../../common/view_helpers/pluralize_string');\nvar navigateThroughRouter = require('../../common/view_helpers/navigate_through_router');\n\nvar filterShortcutId = 'filter-shortcut';\nvar events = {};\nevents['click #' + filterShortcutId + ' a'] = navigateThroughRouter;\n\n/**\n * Responsible for the content footer of the layout.\n *  ___________________________________________________________________________\n * |                                                                           |\n * | [show your locked datasets/maps]           Page 2 of 42 [1] 2 [3][4][5]  |\n * |___________________________________________________________________________|\n *\n */\nmodule.exports = cdb.core.View.extend({\n\n  events: events,\n\n  initialize: function(args) {\n    if (!args.el) throw new Error('The root element must be provided from parent view');\n\n    this.collection = args.collection;\n    this.router = args.router;\n    this.router.model.bind('change', this.render, this);\n    this.add_related_model(this.router.model);\n\n    this._createPaginationView(this.collection, this.router);\n    this._setupFilterShortcut(this.collection, this.router);\n  },\n\n  render: function() {\n    this.clearSubViews();\n\n    this._renderFilterShortcut();\n    this._renderPaginationView();\n\n    return this;\n  },\n\n  _createPaginationView: function(collection, router) {\n    var model = new PaginationModel({\n      current_page: router.model.get('page'),\n      url_to: function(page) { return router.currentUrl({ page: page }) }\n    });\n\n    // Some properties (e.g. total_entries) cannot be observed, so listen to all changes and update model accordingly\n    collection.bind('all', _.partial(this._updatePaginationModelByCollection, model, collection));\n    router.model.bind('change', _.partial(this._updatePaginationModelByRouter, model, router.model));\n\n    this.paginationView = new PaginationView({\n      model:  model,\n      router: this.router\n    });\n    this.addView(this.paginationView);\n  },\n\n  _updatePaginationModelByCollection: function(model, collection) {\n    model.set({\n      per_page:    collection.options.get('per_page'),\n      total_count: collection.total_entries\n    });\n  },\n\n  _updatePaginationModelByRouter: function(model, routerModel) {\n    model.set('current_page', routerModel.get('page'));\n  },\n\n  _renderFilterShortcut: function() {\n    // Create DOM placeholder for first render..\n    this.$el.append('<div id=\"' + filterShortcutId + '\"></div>');\n\n    // ..for subsequent render simply replace the placeholder's content (by overriding this fn to):\n    this._renderFilterShortcut = function() {\n      var html = '';\n\n      var rModel = this.router.model;\n      var currentUrl = this.router.currentDashboardUrl();\n      var totalCount = this.filterShortcutVis.total_entries;\n      var d = {\n        totalCount:         totalCount,\n        pluralizedContents: this._pluralizedContentType(totalCount),\n        url:                rModel.get('locked') ? currentUrl : currentUrl.lockedItems()\n      };\n\n      if (rModel.get('locked')) {\n        html = this.filterShortcutNonLockedTemplate(d);\n      } else if (totalCount > 0 && this._isLockInfoNeeded()) {\n        html = this.filterShortcutLockedTemplate(d);\n      }\n\n      this.$('#'+ filterShortcutId).html(html);\n    }\n  },\n\n  _pluralizedContentType: function(totalCount) {\n    var contentTypeWithoutTrailingS = this.router.model.get('content_type').slice(0, -1);\n    return pluralizeString(contentTypeWithoutTrailingS, totalCount);\n  },\n\n  _setupFilterShortcut: function(collection, router) {\n    this.filterShortcutLockedTemplate =    cdb.templates.getTemplate('dashboard/content_footer/filter_shortcut/locked_template');\n    this.filterShortcutNonLockedTemplate = cdb.templates.getTemplate('dashboard/content_footer/filter_shortcut/non_locked_template');\n    this.filterShortcutVis = new cdb.admin.Visualizations();\n    collection.bind('loaded', this._updateFilterShortcut, this);\n    this.add_related_model(collection);\n  },\n\n  _isLockInfoNeeded: function() {\n    return this.router.model.get('shared') === 'no' &&\n      !this.router.model.get('library') &&\n      !this.router.model.isSearching();\n  },\n\n  _updateFilterShortcut: function() {\n    if (this._isLockInfoNeeded()) {\n      this.filterShortcutVis.options.set({\n        locked:         !this.router.model.get('locked'),\n        shared:         'no',\n        page:           1,\n        per_page:       1,\n        only_liked:     this.router.model.get('liked'),\n        q:              this.router.model.get('q'),\n        tag:            this.router.model.get('tags'),\n        type:           this.router.model.get('content_type') === 'datasets' ? 'table' : 'derived'\n      });\n\n      var self = this;\n      this.filterShortcutVis.fetch({\n        success: function(c) {\n          self.render();\n        }\n      });\n    } else {\n      this.render();\n    }\n  },\n\n  _renderPaginationView: function() {\n    this.paginationView.render();\n    this.$el.append(this.paginationView.el);\n  }\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar navigateThroughRouter = require('../common/view_helpers/navigate_through_router');\nvar randomQuote = require('../common/view_helpers/random_quote');\n\n/*\n *  Content result default view\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-mail-link': '_onMailClick',\n    'click .js-link': navigateThroughRouter,\n    'click .js-connect': '_onConnectClick'\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.router = this.options.router;\n    this.template = cdb.templates.getTemplate(this.options.template);\n\n    this._initBinds();\n  },\n\n  render: function() {\n    this.$el.html(this.template({\n      defaultUrl:     this.router.currentDashboardUrl(),\n      page:           this.router.model.get('page'),\n      tag:            this.router.model.get('tag'),\n      q:              this.router.model.get('q'),\n      shared:         this.router.model.get('shared'),\n      liked:          this.router.model.get('liked'),\n      locked:         this.router.model.get('locked'),\n      library:        this.router.model.get('library'),\n      isSearching:    this.router.model.isSearching(),\n      quote:          randomQuote(),\n      type:           this.router.model.get('content_type'),\n      totalItems:     this.collection.size(),\n      totalEntries:   this.collection.total_entries\n    }));\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.router.model.bind('change', this.render, this);\n    this.collection.bind('remove add reset', this.render, this);\n    this.add_related_model(this.router.model);\n    this.add_related_model(this.collection);\n  },\n\n  _onMailClick: function(e) {\n    if (e) {\n      e.stopPropagation();\n    }\n  },\n\n  _onConnectClick: function(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    this.trigger('connectDataset', this);\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar moment = (typeof window !== \"undefined\" ? window['moment'] : typeof global !== \"undefined\" ? global['moment'] : null);\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\nvar navigateThroughRouter = require('../../common/view_helpers/navigate_through_router');\nvar pluralizeString = require('../../common/view_helpers/pluralize_string');\nvar LikesView = require('../../common/views/likes/view');\nvar EditableDescription = require('../../dashboard/editable_fields/editable_description');\nvar EditableTags = require('../../dashboard/editable_fields/editable_tags');\nvar SyncView = require('../../common/dialogs/sync_dataset/sync_dataset_view');\n\n/**\n * View representing an item in the list under datasets route.\n */\nmodule.exports = cdb.core.View.extend({\n\n  tagName: 'li',\n  className: 'DatasetsList-item DatasetsList-item--selectable',\n\n  events: {\n    'click .js-tag-link': navigateThroughRouter,\n    'click .js-privacy': '_openPrivacyDialog',\n    'click .js-sync': '_openSyncDialog',\n    'click': '_selectDataset'\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.router = this.options.router;\n    this.template = cdb.templates.getTemplate('dashboard/views/datasets_item');\n\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    var vis = this.model;\n    var table = vis.tableMetadata();\n    var tags = vis.get('tags') || [];\n\n    var url = vis.viewUrl(this.user);\n    url = (this.router.model.get('liked') && !vis.permission.hasAccess(this.user)) ? url.public() : url.edit();\n\n    var d = {\n      isRaster:                vis.get('kind') === 'raster',\n      geometryType:            table.statsGeomColumnTypes().length > 0 ? table.statsGeomColumnTypes()[0] : '',\n      title:                   vis.get('name'),\n      datasetUrl:              encodeURI(url),\n      isOwner:                 vis.permission.isOwner(this.user),\n      owner:                   vis.permission.owner.renderData(this.user),\n      showPermissionIndicator: !vis.permission.hasWriteAccess(this.user),\n      privacy:                 vis.get('privacy').toLowerCase(),\n      likes:                   vis.get('likes') || 0,\n      timeDiff:                moment(vis.get('updated_at')).fromNow(),\n      tags:                    tags,\n      tagsCount:               tags.length,\n      router:                  this.router,\n      maxTagsToShow:           3,\n      rowCount:                undefined,\n      datasetSize:             undefined,\n      syncStatus:              undefined,\n      syncRanAt:               undefined,\n      fromExternalSource:      \"\"\n    };\n\n    var rowCount = table.get('row_count');\n    if (rowCount >= 0) {\n      d.rowCount = ( rowCount < 10000 ? Utils.formatNumber(rowCount) : Utils.readizableNumber(rowCount) );\n      d.pluralizedRows = pluralizeString('Row', rowCount);\n    }\n\n    if (!_.isEmpty(vis.get(\"synchronization\"))) {\n      d.fromExternalSource = vis.get(\"synchronization\").from_external_source;\n    }\n\n    var datasetSize = table.get('size');\n    if (datasetSize >= 0) {\n      d.datasetSize = Utils.readablizeBytes(datasetSize, true);\n    }\n\n    if (!_.isEmpty(vis.get(\"synchronization\"))) {\n      d.syncRanAt = moment(vis.get(\"synchronization\").ran_at || new Date()).fromNow();\n      d.syncStatus = vis.get(\"synchronization\").state;\n    }\n\n    this.$el.html(this.template(d));\n\n    this._renderDescription();\n    this._renderTags();\n    this._renderLikesIndicator();\n    this._renderTooltips();\n\n    // Item selected?\n    this.$el[ vis.get('selected') ? 'addClass' : 'removeClass' ]('is--selected');\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.on('change', this.render, this);\n  },\n\n  _renderDescription: function() {\n    var isOwner = this.model.permission.isOwner(this.user);\n    var view = new EditableDescription({\n      el: this.$('.js-item-description'),\n      model: this.model,\n      editable: isOwner && this.user.hasCreateDatasetsFeature()\n    });\n    this.addView(view.render());\n  },\n\n  _renderTags: function() {\n    var isOwner = this.model.permission.isOwner(this.user);\n    var view = new EditableTags({\n      el: this.$('.js-item-tags'),\n      model: this.model,\n      router: this.router,\n      editable: isOwner && this.user.hasCreateDatasetsFeature()\n    });\n    this.addView(view.render());\n  },\n\n  _renderLikesIndicator: function() {\n    var view = new LikesView({\n      model: this.model.like\n    });\n    this.$('.js-likes-indicator').replaceWith(view.render().el);\n    this.addView(view);\n  },\n\n  _renderTooltips: function() {\n    var synchronization = this.model.get(\"synchronization\");\n\n    if (!_.isEmpty(synchronization)) {\n      this.addView(\n        new cdb.common.TipsyTooltip({\n          el: this.$('.js-syncInfo'),\n          title: function(e) {\n            return $(this).attr('data-title')\n          }\n        })\n      )\n    }\n\n    if (!this.model.permission.isOwner(this.user)) {\n      this.addView(\n        new cdb.common.TipsyTooltip({\n          el: this.$('.UserAvatar'),\n          title: function(e) {\n            return $(this).attr('data-title')\n          }\n        })\n      )\n    }\n\n    if (!_.isEmpty(synchronization) && synchronization.from_external_source) {\n      this.addView(\n        new cdb.common.TipsyTooltip({\n          el: this.$('.js-public'),\n          title: function(e) {\n            return $(this).attr('data-title')\n          }\n        })\n      )\n    }\n  },\n\n  _openPrivacyDialog: function(ev) {\n    this.killEvent(ev);\n    cdb.god.trigger('openPrivacyDialog', this.model);\n  },\n\n  _openSyncDialog: function(ev) {\n    this.killEvent(ev);\n    var view = new SyncView({\n      clean_on_hide: true,\n      enter_to_confirm: true,\n      table: this.model.tableMetadata()\n    });\n\n    // Force render of this item after changing sync settings\n    var self = this;\n    var originalOK = view.ok;\n    view.ok = function() {\n      originalOK.apply(view, arguments);\n      self.model.fetch(); // to force a re-render due to possible changed sync settings\n    };\n\n    view.appendToBody();\n  },\n\n  _selectDataset: function(ev) {\n    // Let links use default behaviour\n    if (ev.target.tagName !== 'A') {\n      this.killEvent(ev);\n      this.model.set('selected', !this.model.get('selected'));\n    }\n  }\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * Data library loading view, since data library is loaded async.\n */\nmodule.exports = cdb.core.View.extend({\n\n  render: function() {\n    this.$el.html(\n      cdb.templates.getTemplate('common/templates/loading')({\n        title: 'Your Data library is being stocked up',\n        quote: 'Please wait while we load the list of Datasets in the Data library for you.'\n      })\n    );\n\n    return this;\n  },\n\n  retrySoonAgainOrAbortIfLeavingLibrary: function(collection, routerModel) {\n    var timeout;\n\n    var abort = function() {\n      clearTimeout(timeout);\n      routerModel.unbind('all', abort);\n      collection.unbind('reset', abort);\n    };\n\n    var retry = function() {\n      timeout = setTimeout(function() {\n        collection.bind('reset', abort);\n        collection.fetch();\n      }, 10000);\n    };\n\n    routerModel.bind('all', abort);\n    retry();\n  }\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar DatasetsItem = require('../../dashboard/datasets/datasets_item');\nvar navigateThroughRouter = require('../../common/view_helpers/navigate_through_router');\nvar UploadConfig = require('../../common/background_polling/models/upload_config');\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\nvar pluralizeString = require('../../common/view_helpers/pluralize_string');\n\n/**\n *  Remote dataset item view\n *\n */\n\nmodule.exports = DatasetsItem.extend({\n\n  tagName: 'li',\n  className: 'DatasetsList-item',\n\n  events: {\n    'click .js-tag-link': navigateThroughRouter,\n    'click': '_selectDataset'\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.router = this.options.router;\n    this.template = cdb.templates.getTemplate('dashboard/views/remote_datasets_item');\n    this.table = new cdb.admin.CartoDBTableMetadata(this.model.get('external_source'));\n\n    this._initBinds();\n  },\n\n  render: function() {\n    var vis = this.model;\n    var table = this.table;\n    var tags = vis.get('tags') || [];\n    var description = vis.get('description') && Utils.stripHTML(markdown.toHTML(vis.get('description'))) || '';\n    var source = vis.get('source') && markdown.toHTML(vis.get('source')) || '';\n\n    var d = {\n      isRaster:                vis.get('kind') === 'raster',\n      geometryType:            table.statsGeomColumnTypes().length > 0 ? table.statsGeomColumnTypes()[0] : '',\n      title:                   vis.get('display_name') || vis.get('name'),\n      source:                  source,\n      description:             description,\n      timeDiff:                moment(vis.get('updated_at')).fromNow(),\n      tags:                    tags,\n      tagsCount:               tags.length,\n      router:                  this.router,\n      maxTagsToShow:           3,\n      canImportDataset:        this._canImportDataset(),\n      rowCount:                undefined,\n      datasetSize:             undefined,\n      fromExternalSource:      \"\"\n    };\n\n    var rowCount = table.get('row_count');\n    if (rowCount >= 0) {\n      d.rowCount = ( rowCount < 10000 ? Utils.formatNumber(rowCount) : Utils.readizableNumber(rowCount) );\n      d.pluralizedRows = pluralizeString('Row', rowCount);\n    }\n\n    if (!_.isEmpty(vis.get(\"synchronization\"))) {\n      d.fromExternalSource = vis.get(\"synchronization\").from_external_source;\n    }\n\n    var datasetSize = table.get('size');\n    if (datasetSize >= 0) {\n      d.datasetSize = Utils.readablizeBytes(\n        datasetSize,\n        datasetSize.toString().length > 9 ? false : true\n      );\n    }\n\n    this.$el.html(this.template(d));\n    this._setItemClasses();\n    this._renderTooltips();\n\n    return this;\n  },\n\n  _renderTooltips: function() {\n    this.addView(\n      new cdb.common.TipsyTooltip({\n        el: this.$('.DatasetsList-itemStatus'),\n        title: function(e) {\n          return $(this).attr('data-title')\n        }\n      })\n    )\n  },\n\n  _setItemClasses: function() {\n    // Item selected?\n    this.$el[ this.model.get('selected') ? 'addClass' : 'removeClass' ]('is--selected');\n    // Check if it is selectable\n    this.$el[ this._canImportDataset() ? 'addClass' : 'removeClass' ]('DatasetsList-item--selectable');\n    // Check if it is importable\n    this.$el[ this._canImportDataset() ? 'removeClass' : 'addClass' ]('DatasetsList-item--banned');\n  },\n\n  _canImportDataset: function() {\n    var table_size = this.table.get('size') || 0;\n    return (\n        this.user.get('remaining_byte_quota') * UploadConfig.fileTimesBigger >= table_size &&\n        this.user.get('limits')['import_file_size'] > table_size\n      );\n  },\n\n  _selectDataset: function(ev) {\n    if (ev.target.tagName !== 'A') {\n      // If it fits on user quota, user can select it\n      if (this._canImportDataset()) {\n        this.killEvent(ev);\n        this.model.set('selected', !this.model.get('selected'));\n      }\n    }\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n *  Editable description\n */\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    \"click .js-add-btn\": \"_edit\",\n    \"click .js-field-input\": \"killEvent\",\n    \"blur .js-field-input\": \"_cancelEditing\",\n    \"keydown .js-field-input\": \"_keyPressed\"\n  },\n\n  options: {\n    editable: true,\n    maxLength: 200\n  },\n\n  initialize: function() {\n    this.template = cdb.templates.getTemplate('dashboard/editable_fields/editable_description');\n\n    // Backbone's className won't work here because we are providing an el\n    this.$el.addClass('EditableField');\n  },\n\n  render: function() {\n    var safeHTML = cdb.core.sanitize.html(markdown.toHTML(this.model.get('description') || ''))\n    var value = {\n      safeHTML: safeHTML,\n      clean: cdb.Utils.stripHTML(safeHTML)\n    };\n    this.$el.html(this.template({\n      value: value,\n      editable: this.options.editable,\n      maxLength: this.options.maxLength\n    }));\n\n    return this;\n  },\n\n  _edit: function(ev) {\n    this.killEvent(ev);\n\n    this.$el.addClass('is-editing');\n    this.$('.js-field-input').val('').focus();\n  },\n\n  _keyPressed: function(ev) {\n    var escPressed = (ev.keyCode == $.ui.keyCode.ESCAPE);\n    var cmdEnterPressed = ((ev.metaKey || ev.ctrlKey) &&  ev.keyCode == $.ui.keyCode.ENTER);\n    var enterPressed = (ev.keyCode == $.ui.keyCode.ENTER);\n    var currentText = this.$('.js-field-input').val();\n\n    if (cmdEnterPressed) {\n      ev.preventDefault();\n      this._addNewLine();\n    } else if (enterPressed && currentText.trim() != '') {\n      ev.preventDefault();\n      this._save();\n    } else if (escPressed) {\n      this._cancelEditing();\n    }\n  },\n\n  _addNewLine: function() {\n    var $input = this.$('.js-field-input');\n    $input.val($input.val() + \"\\n\");\n\n    // Scroll to bottom of the textarea\n    $input[0].scrollTop = $input[0].scrollHeight;\n  },\n\n  _save: function() {\n    var attributes = {\n      description: this.$('.js-field-input').val()\n    };\n    this.model.save(attributes);\n    this.$el.removeClass('is-editing');\n    this.render();\n  },\n\n  _cancelEditing: function() {\n    this.$el.removeClass('is-editing');\n  }\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n *  Editable tags\n */\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    \"click .js-add-btn\": \"_edit\",\n    \"click .js-field-input\": \"killEvent\",\n    \"keydown .js-field-input\": \"_keyPressed\",\n    \"blur .js-field-input\": \"_cancelEditing\"\n  },\n\n  initialize: function() {\n    this.template = cdb.templates.getTemplate('dashboard/editable_fields/editable_tags');\n    this.editable = this.options.editable;\n\n    // Backbone's className won't work here because we are providing an el\n    this.$el.addClass('EditableField');\n  },\n\n  render: function() {\n    var self = this;\n    var tags = this.model.get('tags') || [];\n    this.$el.html(this.template({\n      tags: _.compact(tags),\n      tagsCount: tags.length,\n      editable: this.editable,\n      router: this.options.router\n    }));\n\n    return this;\n  },\n\n  _edit: function(ev) {\n    this.killEvent(ev);\n    this.$el.addClass('is-editing');\n    this.$('.js-field-input').val('').focus();\n  },\n\n  _keyPressed: function(ev) {\n    var enterPressed = (ev.keyCode == $.ui.keyCode.ENTER);\n    var escapePressed = (ev.keyCode == $.ui.keyCode.ESCAPE);\n    if (enterPressed) {\n      this._save();\n    } else if (escapePressed) {\n      this._cancelEditing();\n    }\n  },\n\n  _save: function() {\n    var tags = this.$('.js-field-input').val().split(',').map(function(tag){\n      return cdb.Utils.stripHTML(tag.trim());\n    })\n    tags = _.chain(tags).compact().uniq().value();\n    this.model.save({\n      tags: tags\n    });\n    this.$el.removeClass('is-editing');\n    this.render();\n  },\n\n  _cancelEditing: function(ev) {\n    this.$el.removeClass('is-editing');\n  }\n});\n",
    "var $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar Router = require('./router');\nvar MainView = require('./main_view');\nvar ChangePrivacyDialog = require('../common/dialogs/change_privacy/change_privacy_view');\nvar CreateDialog = require('../common/dialogs/create/create_view');\nvar CreateDatasetModel = require('../common/dialogs/create/create_dataset_model');\nvar CreateMapModel = require('../common/dialogs/create/create_map_model');\nvar VideoTutorialView = require('../common/dialogs/video_tutorial/video_tutorial_view');\nvar UserNotificationView = require('../common/user_notification/user_notification_view');\nvar UserNotificationModel = require('../common/user_notification/user_notification_model');\nvar DEFAULT_VIS_NAME = 'Untitled map';\n\nif (window.trackJs) {\n  window.trackJs.configure({\n    userId: window.user_data.username\n  });\n}\n\n/**\n * Entry point for the new dashboard, bootstraps all dependency models and application.\n */\n$(function() {\n  cdb.init(function() {\n    cdb.templates.namespace = 'cartodb/';\n    cdb.config.set('url_prefix', user_data.base_url);\n    cdb.config.set('default_fallback_basemap', window.default_fallback_basemap);\n\n    // TODO: This is still necessary implicitly, for the Backbone.sync method to work (set in app.js)\n    //       once that case is removed we could skip cdb.config completely.\n    cdb.config.set(window.config); // import config\n\n    var currentUser = new cdb.admin.User(window.user_data);\n\n    cdb.config.set('user', currentUser);\n    var router = new Router({\n      dashboardUrl: currentUser.viewUrl().dashboard()\n    });\n\n    if (!cdb.config.get('cartodb_com_hosted')) {\n      if (currentUser.get('actions').builder_enabled && currentUser.get('show_builder_activated_message') &&\n          _.isEmpty(window.dashboard_notifications)) {\n        var userNotificationModel = new UserNotificationModel(window.dashboard_notifications, {\n          key: 'dashboard',\n          configModel: cdb.config\n        });\n\n        var dashboardNotification = new UserNotificationView({\n          notification: userNotificationModel\n        });\n\n        window.dashboardNotification = dashboardNotification;\n      }\n    }\n\n    // Why not have only one collection?\n    var collection =  new cdb.admin.Visualizations();\n\n    var dashboard = new MainView({\n      el: document.body,\n      collection: collection,\n      user: currentUser,\n      config: window.config,\n      router: router\n    });\n    window.dashboard = dashboard;\n\n    router.enableAfterMainView();\n\n    var metrics = new cdb.admin.Metrics();\n\n    // Event tracking \"Visited Dashboard\"\n    cdb.god.trigger('metrics', 'visited_dashboard', {\n      email: window.user_data.email\n    });\n\n    if (window.isJustLoggedIn) {\n      // Event tracking \"Logged in\"\n      cdb.god.trigger('metrics', 'logged_in', {\n        email: window.user_data.email\n      });\n    }\n\n    if (window.isFirstTimeViewingDashboard) {\n      // Event tracking \"Visited Dashboard for the first time\"\n      cdb.god.trigger('metrics', 'visited_dashboard_first_time', {\n        email: window.user_data.email\n      });\n    }\n\n    cdb.god.bind('openPrivacyDialog', function(vis) {\n      if (vis.isOwnedByUser(currentUser) && currentUser.hasCreateDatasetsFeature()) {\n        var dialog = new ChangePrivacyDialog({\n          vis: vis,\n          user: currentUser,\n          enter_to_confirm: true,\n          clean_on_hide: true\n        });\n        dialog.appendToBody();\n      }\n    });\n\n    cdb.god.bind('openCreateDialog', function(d) {\n      var createModel;\n      d = d || {};\n      if (d.type === 'dataset') {\n        createModel = new CreateDatasetModel({}, {\n          user: currentUser\n        });\n      } else {\n        createModel = new CreateMapModel({}, _.extend({\n          user: currentUser\n        }, d));\n      }\n\n      var createDialog = new CreateDialog({\n        model: createModel,\n        user: currentUser,\n        clean_on_hide: true\n      });\n\n      createModel.bind('startTutorial', function() {\n        createDialog.close();\n\n        var dlg = new VideoTutorialView({\n          clean_on_hide: true,\n          enter_to_confirm: false\n        })\n        cdb.god.trigger(\"onTemplateSelected\", this);\n        dlg.appendToBody();\n      });\n\n      createModel.bind('datasetCreated', function(tableMetadata) {\n        if (router.model.isDatasets()) {\n          var vis = new cdb.admin.Visualization({ type: 'table' });\n          vis.permission.owner = currentUser;\n          vis.set('table', tableMetadata.toJSON());\n          window.location = vis.viewUrl(currentUser).edit();\n        } else {\n          var vis = new cdb.admin.Visualization({ name: DEFAULT_VIS_NAME });\n          vis.save({\n            tables: [ tableMetadata.get('id') ]\n          },{\n            success: function(m) {\n              window.location = vis.viewUrl(currentUser).edit();\n            },\n            error: function(e) {\n              createDialog.close();\n              collection.trigger('error');\n            }\n          });\n        }\n      }, this);\n\n      createDialog.appendToBody();\n      createModel.viewsReady();\n    });\n  });\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\nvar navigateThroughRouter = require('../common/view_helpers/navigate_through_router');\nvar pluralizeString = require('../common/view_helpers/pluralize_string');\nvar DuplicateMap = require('../common/dialogs/duplicate_vis_view');\nvar DeleteItemsDialog = require('../common/dialogs/delete_items_view');\nvar ChangeLockDialog = require('../common/dialogs/change_lock/change_lock_view');\nvar ChangeLockViewModel = require('../common/dialogs/change_lock/change_lock_view_model');\nvar DeleteItemsViewModel = require('../common/dialogs/delete_items_view_model');\n\n/**\n *  Dashboard filters.\n *\n *  - 'Order by' (time,likes,etc) collection.\n *  - 'Filter by' collection.\n *  - 'Search' any pattern within collection.\n *\n */\nmodule.exports = cdb.core.View.extend({\n\n  _TOOLTIPS: ['js-likes', 'js-mapviews', 'js-updated_at', 'js-size'],\n\n  events: {\n    'submit .js-search-form':   '_submitSearch',\n    'keydown .js-search-form':  '_onSearchKeyDown',\n    'click .js-search-form':    'killEvent',\n    'click .js-search-link':    '_onSearchClick',\n    'click .js-clean-search':   '_onCleanSearchClick',\n    'click .js-deselect_all':   '_unselectAll',\n    'click .js-select_all':     '_selectAll',\n    'click .js-order-link':     '_changeOrder',\n    'click .js-delete':         '_openDeleteItemsDialog',\n    'click .js-create_map':     '_createMap',\n    'click .js-import_remote':  '_importRemote',\n    'click .js-new_dataset':    '_connectDataset',\n    'click .js-duplicate_dataset': '_duplicateDataset',\n    'click .js-duplicate_map':  '_duplicateMap',\n    'click .js-new_map':        '_newMap',\n    'click .js-lock':           '_openChangeLockDialog',\n    'click .js-privacy':        '_openPrivacyDialog',\n    'click .js-link':           navigateThroughRouter\n  },\n\n  initialize: function() {\n    this.router = this.options.router;\n    this.user = this.options.user;\n    this.localStorage = this.options.localStorage;\n    this.model = new cdb.core.Model();\n    this._preRender();\n    this._initBinds();\n  },\n\n  // It is necessary to add two static elements because\n  // they can't be removed/replaced using render method\n  // each time a change (in a model or a collection) happens.\n  // This is due to the behaviour of the CSS animations.\n  _preRender: function() {\n    var $uInner = $('<div>').addClass('u-inner');\n    var $filtersInner = $('<div>').addClass('Filters-inner js-skip-unselect-all');\n    this.$el.append($uInner.append($filtersInner));\n  },\n\n  render: function(m, c) {\n    this.clearSubViews();\n\n    var selectedItemsCount = this._selectedItems().length;\n    // If a change is made from content type we have to know\n    // preventing show wrong data about total items\n    var changedContentType = c && c.changes && c.changes.content_type;\n    var routerContentType = this.router.model.get('content_type');\n    var isDeepInsights = this.router.model.isDeepInsights();\n    var contentType = isDeepInsights ? 'dashboard' : routerContentType.slice(0, -1);\n\n    var template = cdb.templates.getTemplate(\n      isDeepInsights ? 'dashboard/views/filters_deep_insights' : 'dashboard/views/filters'\n    );\n\n    var pluralizedContentType = pluralizeString(\n      contentType,\n      changedContentType ? 0 : this.collection.total_user_entries\n    );\n\n    var pluralizedContentTypeSelected = pluralizeString(contentType, selectedItemsCount)\n\n    this.$('.Filters-inner').html(\n      template(\n        _.extend({\n            canCreateDatasets: this.user.canCreateDatasets(),\n            hasCreateMapsFeature: this.user.hasCreateMapsFeature(),\n            hasCreateDatasetsFeature: this.user.hasCreateDatasetsFeature(),\n            canDeleteItems: this._canDeleteSelectedItems(),\n            order: this.localStorage.get('dashboard.order'),\n            isInsideOrg: this.user.isInsideOrg(),\n            isMaps: this.router.model.isMaps(),\n            selectedItemsCount: selectedItemsCount,\n            isSelectedItemLibrary: this._isSelectedItemLibrary(),\n            maxLayersByMap: this.user.getMaxLayers(),\n            totalShared: changedContentType ? 0 : this.collection.total_shared,\n            totalLiked: changedContentType ? 0 : this.collection.total_likes,\n            totalItems: changedContentType ? 0 : this.collection.total_user_entries,\n            pageItems: this.collection.size(),\n            router: this.router,\n            currentDashboardUrl: this.router.currentDashboardUrl(),\n            pluralizedContentType: pluralizedContentType,\n            pluralizedContentTypeSelected: pluralizedContentTypeSelected\n          },\n          this.router.model.attributes\n        )\n      )\n    );\n\n    this._initViews();\n    this._checkScroll();\n    this._animate();\n\n    if (this.router.model.isSearching()) {\n      this._focusSearchInput();\n    }\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.on('change:isSearchEnabled', this._onChangeIsSearchEnabled, this);\n    this.router.model.bind('change', this.render, this);\n    this.collection.bind('loading', function() {\n      this.$el.removeClass('is-relative');\n    }, this);\n    this.collection.bind('add remove change reset', this.render, this);\n    this.user.bind('change:remaining_byte_quota', this.render, this);\n    cdb.god.bind('closeDialogs', this._animate, this);\n    cdb.god.bind('unselectAllItems', this._unselectAll, this);\n    _.bindAll(this, '_onWindowScroll');\n\n\n    this.add_related_model(this.collection);\n    this.add_related_model(this.router.model);\n    this.add_related_model(this.user);\n    this.add_related_model(cdb.god);\n  },\n\n  _checkScroll: function() {\n    var content_type = this.router.model.get('content_type');\n    var shared = this.router.model.get('shared');\n    var locked = this.router.model.get('locked');\n    var liked = this.router.model.get('liked');\n    var search = this.router.model.isSearching();\n    var total_entries = this.collection.total_entries;\n\n    // Bind scroll\n    if (total_entries === 0 && content_type === \"maps\" && shared === \"no\" && !locked && !liked && !search) {\n      // If there is no maps, onboarding should appear\n      // and filters block should be after that section\n      this.$el.addClass('is-relative');\n      this._unbindScroll();\n    } else {\n      this.$el.removeClass('is-relative');\n      this._bindScroll();\n    }\n  },\n\n  _bindScroll: function() {\n    this._unbindScroll();\n    $(window).bind('scroll', this._onWindowScroll);\n  },\n\n  _unbindScroll: function() {\n    $(window).unbind('scroll', this._onWindowScroll);\n  },\n\n  _initViews: function() {\n    // Tipsys?\n    var self = this;\n    _.each(this._TOOLTIPS, function(el) {\n      self.addView(\n        new cdb.common.TipsyTooltip({\n          el: self.$('.' + el),\n          title: function() {\n            var isFixed = self.$el.hasClass('is-fixed');\n            return isFixed ? '' : 'Order by ' + $(this).attr('data-title');\n          }\n        })\n      )\n    });\n  },\n\n  _selectedItems: function() {\n    return this.collection.where({ selected: true });\n  },\n\n  _animate: function() {\n    this.$('.Filters-inner').toggleClass('show-second-row', this._selectedItems().length > 0);\n    this._enableSearchUI(!!this.router.model.isSearching());\n  },\n\n  _selectAll: function(e) {\n    this._select(e, true);\n  },\n\n  _unselectAll: function(e) {\n    this._select(e, false);\n  },\n\n  _select: function(e, val) {\n    this.killEvent(e);\n    var user = this.user;\n    this.collection.each(function(vis) {\n      vis.set('selected', val);\n    });\n  },\n\n  _openDeleteItemsDialog: function(e) {\n    e.preventDefault();\n\n    var viewModel = new DeleteItemsViewModel(this._selectedItems(), {\n      contentType: this.router.model.get('content_type')\n    });\n\n    viewModel.bind('DeleteItemsDone', function() {\n      this.user.fetch(); // needed in order to keep the \"quota\" synchronized\n      this.collection.fetch();\n    }, this);\n\n    var view = new DeleteItemsDialog({\n      viewModel: viewModel,\n      user: this.user,\n      clean_on_hide: true,\n      enter_to_confirm: true\n    });\n\n    view.appendToBody();\n  },\n\n  _openChangeLockDialog: function(e) {\n    e.preventDefault();\n\n    var viewModel = new ChangeLockViewModel({\n      items: this._selectedItems(),\n      contentType: this.router.model.get('content_type')\n    });\n    viewModel.bind('change:state', function() {\n      if (viewModel.get('state') === 'ProcessItemsDone') {\n        this.collection.fetch();\n      }\n    }, this);\n\n    var view = new ChangeLockDialog({\n      model: viewModel,\n      clean_on_hide: true,\n      enter_to_confirm: true\n    });\n\n    view.appendToBody();\n  },\n\n  _openPrivacyDialog: function(e) {\n    e.preventDefault();\n    cdb.god.trigger('openPrivacyDialog', this._selectedItems()[0]);\n  },\n\n  _onSearchClick: function(e) {\n    this.killEvent(e);\n    this.model.set('isSearchEnabled', !this.model.get('isSearchEnabled'));\n  },\n\n  _onChangeIsSearchEnabled: function(model, isSearchEnabled) {\n    this._enableSearchUI(isSearchEnabled);\n\n    if (this.router.model.isSearching()) {\n      this._cleanSearch();\n    } else if (isSearchEnabled) {\n      this._$searchInput().val('');\n      this._focusSearchInput();\n    }\n  },\n\n  _$searchInput: function() {\n    return this.$('.js-search-input')\n  },\n\n  _focusSearchInput: function() {\n    this._$searchInput().select();\n    this._$searchInput().focus();\n  },\n\n  _enableSearchUI: function(enable) {\n    this.$('.js-search-field').toggle(enable);\n    this.$('.js-links-list').toggle(!enable);\n    this.$('.js-order-list').toggle(!enable);\n  },\n\n  _onSearchKeyDown: function(e) {\n    // ESC\n    if (e.keyCode === 27) {\n      this._cleanSearch();\n    }\n  },\n\n  // Creation actions\n\n  _createMap: function(e) {\n    if (e) e.preventDefault();\n    this._openCreateDialog('map', true);\n  },\n\n  _newMap: function(e) {\n    if (e) e.preventDefault();\n\n    // Event tracking \"Opened Create new map\"\n    cdb.god.trigger('metrics', 'create_map', {\n      email: window.user_data.email\n    });\n\n    this._openCreateDialog('map');\n  },\n\n  _connectDataset: function(e) {\n    if (e) e.preventDefault();\n\n    // Event tracking \"Opened Connect new dataset\"\n    cdb.god.trigger('metrics', 'connect_dataset', {\n      email: window.user_data.email\n    });\n\n    if (this.user.canCreateDatasets()) {\n      this._openCreateDialog('dataset');\n    }\n  },\n\n  _duplicateDataset: function(e) {\n    if (e) this.killEvent(e);\n    var selectedDatasets = this._selectedItems();\n\n    if (selectedDatasets.length === 1) {\n      var m = selectedDatasets[0];\n      var table = m.tableMetadata();\n      var tableName = table.get('name');\n\n      cdb.god.trigger('importByUploadData', {\n        type: 'duplication',\n        table_name: table.getUnqualifiedName() + '_copy',\n        value: tableName,\n        create_vis: false\n      });\n    }\n  },\n\n  _duplicateMap: function(e) {\n    if (e) {\n      this.killEvent(e);\n    }\n\n    var selectedDatasets = this._selectedItems();\n\n    if (selectedDatasets.length === 1) {\n      var m = selectedDatasets[0];\n      var table = m.tableMetadata();\n\n      new DuplicateMap({\n        model: m,\n        table: table,\n        user: this.user,\n        clean_on_hide: true\n      }).appendToBody();\n    }\n  },\n\n  _importRemote: function(e) {\n    if (e) this.killEvent(e);\n\n    var selectedItems = this._selectedItems();\n    if (selectedItems.length !== 1) {\n      return;\n    }\n\n    var remoteItem = selectedItems[0];\n    var remoteItemTable = remoteItem.get('table');\n\n    var d = {\n      type: 'remote',\n      value: remoteItem.get('name'),\n      remote_visualization_id: remoteItem.get('id'),\n      size: remoteItemTable && remoteItemTable.size,\n      create_vis: false\n    };\n\n    cdb.god.trigger('importByUploadData', d, this);\n\n    this._select(false);\n  },\n\n  _openCreateDialog: function(type, selectedItems) {\n    cdb.god.trigger(\n      'openCreateDialog',\n      {\n        type: type,\n        selectedItems: selectedItems ? this._selectedItems() : []\n      }\n    );\n  },\n\n  // Filter actions\n\n  _onCleanSearchClick: function(e) {\n    this.killEvent(e);\n    this._cleanSearch();\n  },\n\n  _submitSearch: function(e) {\n    this.killEvent(e);\n    this._navigateToUrl({\n      search: Utils.stripHTML(this.$('.js-search-input').val().trim(),''),\n      page: 1,\n      liked: false,\n      shared: 'no',\n      library: false,\n      locked: false\n    });\n  },\n\n  _cleanSearch: function() {\n    this._navigateToUrl({\n      search: '',\n      liked: false,\n      library: false,\n      shared: 'no'\n    });\n    this.model.set('isSearchEnabled', false);\n  },\n\n  _navigateToUrl: function(opts) {\n    this.router.navigate(this.router.currentUrl(opts), { trigger: true });\n  },\n\n  _changeOrder: function(e) {\n    if (e) e.preventDefault();\n\n    var $el = $(e.target).closest('.js-order-link');\n    var order = 'updated_at';\n\n    if ($el.hasClass('js-mapviews')) order = 'mapviews';\n    if ($el.hasClass('js-likes')) order = 'likes';\n    if ($el.hasClass('js-size')) order = 'size';\n\n    // Order change?\n    if (this.router.model.get('order') !== order) {\n      this.localStorage.set({ 'dashboard.order': order });\n      this.router.model.set('order', order);\n    }\n  },\n\n  _onWindowScroll: function() {\n    var offset = $(window).scrollTop();\n    var anchorPoint = this.options.headerHeight + ( this.user.get('notification') ? this.options.headerHeight : 0 );\n    this.$el[ offset > anchorPoint ? 'addClass' : 'removeClass' ]('is-fixed with-long-separator');\n  },\n\n  _canDeleteSelectedItems: function() {\n    var self = this;\n    return !_.find(this._selectedItems(), function(m) {\n      return !m.permission.isOwner(self.user) || m.get('type') === \"remote\"\n    });\n  },\n\n  _isSelectedItemLibrary: function() {\n    var selectedItems = this._selectedItems();\n    if (selectedItems.length === 1 && selectedItems[0].get('type') === \"remote\") {\n      return true;\n    } else {\n      return false;\n    }\n  },\n\n  clean: function() {\n    this._unbindScroll();\n    cdb.core.View.prototype.clean.call(this);\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * Header view model to handle state for dashboard header view.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  initialize: function(router) {\n    this.router = router;\n    this.router.model.bind('change', this.trigger.bind(this, 'change')); // simple re-trigger\n  },\n\n  breadcrumbTitle: function() {\n    var contentType = this.router.model.get('content_type');\n    if (this.isDisplayingLockedItems()) {\n      return 'Locked ' + contentType;\n    } else if (this.isDisplayingDeepInsights()) {\n      return 'Deep insights';\n    } else {\n      // Capitalize string\n      return contentType && contentType[0].toUpperCase() + contentType.slice(1);\n    }\n  },\n\n  isBreadcrumbDropdownEnabled: function() {\n    return true;\n  },\n\n  isDisplayingDatasets: function() {\n    return this.router.model.get('content_type') === 'datasets';\n  },\n\n  isDisplayingMaps: function() {\n    return this.router.model.get('content_type') === 'maps';\n  },\n\n  isDisplayingLockedItems: function() {\n    return !!this.router.model.get('locked');\n  },\n\n  isDisplayingDeepInsights: function() {\n    var routerModel = this.router.model;\n    return routerModel.isDeepInsights();\n  }\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar DatasetsItem = require('./datasets/datasets_item');\nvar MapsItem = require('./maps/maps_item');\nvar DeepInsightsItem = require('./maps/deep_insights_item');\nvar PlaceholderItem = require('./maps/placeholder_item_view');\nvar RemoteDatasetsItem = require('./datasets/remote_datasets_item');\nvar MapTemplates = require('../common/map_templates');\nvar MAP_CARDS_PER_ROW = 3;\n\n/**\n *  View representing the list of items\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  tagName: 'ul',\n\n  events: {},\n\n  _ITEMS: {\n    'remotes': RemoteDatasetsItem,\n    'datasets': DatasetsItem,\n    'deepInsights': DeepInsightsItem,\n    'maps': MapsItem\n  },\n\n  initialize: function() {\n    this.router = this.options.router;\n    this.user = this.options.user;\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.$el.attr('class', this.router.model.isDatasets() ? 'DatasetsList' : 'MapsList');\n    this.collection.each(this._addItem, this);\n\n    if (this.router.model.isMaps() && this.collection.size() > 0) {\n      this._fillEmptySlotsWithPlaceholderItems();\n    }\n\n    return this;\n  },\n\n  show: function() {\n    this.$el.removeClass('is-hidden');\n  },\n\n  hide: function() {\n    this.$el.addClass('is-hidden');\n  },\n\n  _addItem: function(m) {\n    var type = this.router.model.get('content_type');\n\n    if (m.get('type') === \"remote\" && this.router.model.isDatasets()) {\n      type = \"remotes\";\n    }\n\n    if (this.router.model.isDeepInsights()) {\n      type = \"deepInsights\";\n    }\n\n    var item = new this._ITEMS[type]({\n      model:  m,\n      router: this.router,\n      user:   this.user\n    });\n\n    this.addView(item);\n    this.$el.append(item.render().el);\n  },\n\n  _initBinds: function() {\n    this.collection.bind('loading', this._onItemsLoading, this);\n    this.collection.bind('reset', this.render, this);\n    this.add_related_model(this.collection);\n  },\n\n  _onItemsLoading: function() {\n    this.$el.addClass('is-loading');\n  },\n\n  _fillEmptySlotsWithPlaceholderItems: function() {\n    var mapTemplates = _.shuffle(MapTemplates);\n    _.times(this._emptySlotsCount(), function(i) {\n      var d = mapTemplates[i];\n      if (d) {\n        var m = new cdb.core.Model(d);\n        var view = new PlaceholderItem({\n          model: m,\n          collection: this.collection\n        });\n        this.$el.append(view.render().el);\n        this.addView(view);\n      }\n    }, this);\n  },\n\n  _emptySlotsCount: function() {\n    return (this.collection._ITEMS_PER_PAGE - this.collection.size()) % MAP_CARDS_PER_ROW;\n  }\n\n});\n",
    "var $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar LocalStorage = require('../common/local_storage');\nvar HeaderView = require('../common/views/dashboard_header_view');\nvar SupportView = require('../common/support_view');\nvar MamufasImportView = require('../common/mamufas_import/mamufas_import_view');\nvar BackgroundPollingView = require('../common/background_polling/background_polling_view');\nvar DashboardBackgroundPollingModel = require('./background_polling_model');\nvar ContentControllerView = require('./content_controller_view');\nvar HeaderViewModel = require('./header_view_model');\n\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click': '_onClick'\n  },\n\n  initialize: function() {\n    this._initModels();\n    this._initViews();\n    this._initBindings();\n  },\n\n  _initBindings: function() {\n    this.router.model.bind('change', this._onRouterChange, this);\n    this.add_related_model(this.router.model);\n  },\n\n  _initModels: function() {\n    this.user = this.options.user;\n    this.router = this.options.router;\n    this.localStorage = new LocalStorage();\n\n    // Update order and category attribute to router model\n    this.router.model.set('order',    this.localStorage.get('dashboard.order'), { silent: true });\n    this.router.model.set('category', this.localStorage.get('dashboard.category'), { silent: true });\n  },\n\n  _onRouterChange: function(m, changes) {\n    this._fetchCollection(m, changes);\n\n    // Only create a visualization from an import if user is in maps section\n    this._backgroundPollingView.createVis = this.router.model.isMaps();\n  },\n\n  _fetchCollection: function(m, changes) {\n    var params = this.router.model.attributes;\n\n    // Get order from localStorage if it is not defined or\n    // come from other type (tables or visualizations)\n    var order = this.localStorage.get(\"dashboard.order\") || 'updated_at';\n    // Maps doesn't have size order, so if that order is set\n    // in maps section we will show with 'updated_at' order\n    if (params.content_type === \"maps\" && order === \"size\") {\n      order = 'updated_at'\n    }\n\n    var types = params.content_type === \"datasets\" ? 'table' : 'derived';\n\n    // Requesting data library items?\n    if (params.library) {\n      types = 'remote';\n    }\n\n    // Supporting search in data library and user datasets at the same time\n    if ((params.q || params.tag) && params.content_type === \"datasets\") {\n      types = 'table,remote';\n    }\n\n    // TODO: review, should collection params really be set here?\n    this.collection.options.set({\n      q:              params.q,\n      page:           params.page || 1,\n      tags:           params.tag,\n      per_page:       this.collection[ \"_\" + ( params.content_type === \"datasets\" ? 'TABLES' : 'ITEMS') + '_PER_PAGE'],\n      shared:         params.shared,\n      locked:         params.liked ? '' : params.locked, // If not locked liked items are not rendered\n      only_liked:     params.liked,\n      order:          order,\n      types:          types,\n      type:           '',\n      deepInsights:   !!params.deepInsights\n    });\n\n    this.collection.fetch();\n  },\n\n  _initViews: function() {\n    var backgroundPollingModel = new DashboardBackgroundPollingModel({\n      showGeocodingDatasetURLButton: true,\n      geocodingsPolling: true,\n      importsPolling: true\n    }, {\n      user: this.user\n    });\n\n    this._backgroundPollingView = new BackgroundPollingView({\n      model: backgroundPollingModel,\n      // Only create a visualization from an import if user is in maps section\n      createVis: this.router.model.isMaps(),\n      user: this.user\n    });\n    backgroundPollingModel.bind('importCompleted', function() {\n      this.collection.fetch();\n      this.user.fetch();\n    }, this);\n    this.$el.append(this._backgroundPollingView.render().el);\n\n    this.addView(this._backgroundPollingView);\n\n    var mamufasView = new MamufasImportView({\n      el: this.$el,\n      user: this.user\n    });\n\n    cdb.god.bind('dialogOpened', function() {\n      mamufasView.disable();\n      backgroundPollingModel.stopPollings();\n    }, this);\n    cdb.god.bind('dialogClosed', function() {\n      mamufasView.enable();\n      backgroundPollingModel.startPollings();\n    }, this);\n\n    mamufasView.render();\n    mamufasView.enable();\n\n    var headerView = new HeaderView({\n      el:             this.$('#header'), //pre-rendered in DOM by Rails app\n      model:          this.user,\n      viewModel:      new HeaderViewModel(this.router),\n      router:         this.router,\n      collection:     this.collection,\n      localStorage:   this.localStorage\n    });\n    headerView.render();\n\n    this.controllerView = new ContentControllerView({\n      el:           this.$('#content-controller'),\n      // Pass the whole element for only calculating\n      // the height is not \"fair\"\n      headerHeight: this.$('#header').height(),\n      user:         this.user,\n      router:       this.router,\n      collection:   this.collection,\n      localStorage: this.localStorage\n    });\n\n    this.controllerView.render();\n\n    var supportView = new SupportView({\n      el: this.$('#support-banner'),\n      user: this.user\n    });\n\n    supportView.render();\n  },\n\n  _onClick: function(e) {\n    // Clicks outside of any dialog \"body\" will fire a closeDialogs event\n    if (this._isEventTriggeredOutsideOf(e, '.Dialog')) {\n      cdb.god.trigger('closeDialogs');\n\n      // If click outside the filters view should also unselect any selected items\n      if (this._isEventTriggeredOutsideOf(e, '.js-skip-unselect-all')) {\n        cdb.god.trigger('unselectAllItems');\n      }\n    }\n  },\n\n  _isEventTriggeredOutsideOf: function(ev, selector) {\n    return $(ev.target).closest(selector).length === 0;\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar moment = (typeof window !== \"undefined\" ? window['moment'] : typeof global !== \"undefined\" ? global['moment'] : null);\nvar navigateThroughRouter = require('../../common/view_helpers/navigate_through_router');\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\n\n/**\n * Represents a map card on dashboard.\n */\nmodule.exports = cdb.core.View.extend({\n\n  className: 'MapsList-item',\n  tagName: 'li',\n\n  initialize: function() {\n    this.router = this.options.router;\n    this.user = this.options.user;\n    this.template = cdb.templates.getTemplate('dashboard/views/deep_insights_item');\n  },\n\n  render: function() {\n    this.clearSubViews();\n    var url = this.model.deepInsightsUrl(this.user);\n\n    this.$el.html(\n      this.template({\n        url: url,\n        title: this.model.get('title'),\n        description: this.model.get('description'),\n        timeDiff: moment(this.model.get('updated_at')).fromNow(),\n      })\n    );\n\n    return this;\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar moment = (typeof window !== \"undefined\" ? window['moment'] : typeof global !== \"undefined\" ? global['moment'] : null);\nvar navigateThroughRouter = require('../../common/view_helpers/navigate_through_router');\nvar MapviewsGraph = require('../../dashboard/mapviews_graph');\nvar MapCardPreview = require('../../common/views/mapcard_preview');\nvar LikesView = require('../../common/views/likes/view');\nvar EditableDescription= require('../../dashboard/editable_fields/editable_description');\nvar EditableTags = require('../../dashboard/editable_fields/editable_tags');\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\n\n/**\n * Represents a map card on dashboard.\n */\nmodule.exports = cdb.core.View.extend({\n\n  className: 'MapsList-item',\n  tagName: 'li',\n\n  events: {\n    'click tag-link': navigateThroughRouter,\n    'click .js-privacy': '_openPrivacyDialog',\n    'click':          '_onCardClick'\n  },\n\n  initialize: function() {\n    this.router = this.options.router;\n    this.user = this.options.user;\n    this.template = cdb.templates.getTemplate('dashboard/views/maps_item');\n\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n\n    var url = this.model.viewUrl(this.user);\n    url = this.router.model.get('liked') && !this.model.permission.hasAccess(this.user) ? url.public() : url.edit();\n\n    this.$el.html(\n      this.template({\n        url:                     url,\n        name:                    this.model.get('name'),\n        privacy:                 this.model.get('privacy').toLowerCase(),\n        isOwner:                 this.model.permission.isOwner(this.user),\n        owner:                   this.model.permission.owner.renderData(this.user),\n        showPermissionIndicator: !this.model.permission.hasWriteAccess(this.user),\n        timeDiff:                moment(this.model.get('updated_at')).fromNow(),\n        likes:                   this.model.get('likes') || 0,\n        liked:                   this.model.get('liked') || false\n      })\n    );\n\n    this._renderDescription();\n    this._renderTags();\n    this._renderMapviewsGraph();\n    this._renderLikesIndicator();\n    this._renderMapThumbnail();\n    this._renderTooltips();\n    this._checkSelected();\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.on('change:selected', this._checkSelected, this);\n    this.model.on('change:privacy', this.render, this);\n  },\n\n  _renderDescription: function() {\n    var isOwner = this.model.permission.isOwner(this.user);\n    var view = new EditableDescription({\n      el: this.$('.js-item-description'),\n      model: this.model,\n      editable: isOwner && this.user.hasCreateMapsFeature()\n    });\n    this.addView(view.render());\n  },\n\n  _renderTags: function() {\n    var isOwner = this.model.permission.isOwner(this.user);\n    var view = new EditableTags({\n      el: this.$('.js-item-tags'),\n      model: this.model,\n      router: this.router,\n      editable: isOwner && this.user.hasCreateMapsFeature()\n    });\n    this.addView(view.render());\n  },\n\n  _renderLikesIndicator: function() {\n    var view = new LikesView({\n      model: this.model.like\n    });\n    this.$('.js-likes-indicator').replaceWith(view.render().el);\n    this.addView(view);\n  },\n\n  _renderMapviewsGraph: function() {\n    var graph = new MapviewsGraph({\n      el:     this.$('.js-header-graph'),\n      stats:  this.model.get('stats')\n    });\n    this.addView(graph.render());\n  },\n\n  _renderTooltips: function() {\n    // Owner\n    if (!this.model.permission.isOwner(this.user)) {\n      this.addView(\n        new cdb.common.TipsyTooltip({\n          el: this.$('.UserAvatar'),\n          title: function(e) {\n            return $(this).attr('data-title')\n          }\n        })\n      )\n    }\n  },\n\n  _renderMapThumbnail: function() {\n    var zoom = this.model.get(\"zoom\");\n    var owner = this.model.permission.owner;\n    var ownerUsername = owner.get('username');\n    var previewZoom = (zoom + 2 <= this.model.map.get(\"maxZoom\")) ? zoom + 2 : zoom;\n\n    var mapCardPreview = new MapCardPreview({\n      el: this.$('.js-header'),\n      privacy: this.model.get(\"privacy\"),\n      mapsApiResource: cdb.config.getMapsResourceName(ownerUsername),\n      username: ownerUsername,\n      visId: this.model.get('id'),\n      authTokens: this.model.get('auth_tokens')\n    });\n\n    if (this.imageURL) {\n      mapCardPreview.loadURL(this.imageURL);\n    } else {\n      mapCardPreview.load();\n    }\n\n    mapCardPreview.bind(\"loaded\", function(url) {\n      this.imageURL = url;\n    }, this);\n\n    this.addView(mapCardPreview);\n  },\n\n  _checkSelected: function() {\n    this.$(\".MapCard\")[this.model.get(\"selected\") ? \"addClass\" : \"removeClass\"](\"is-selected\");\n  },\n\n  _openPrivacyDialog: function(ev) {\n    this.killEvent(ev);\n    cdb.god.trigger('openPrivacyDialog', this.model);\n  },\n\n  _onCardClick: function(ev) {\n    // Let links use default behaviour\n    if (!$(ev.target).closest('a')[0]) {\n      this.killEvent(ev);\n      var isOwner = this.model.permission.isOwner(this.user);\n      if (isOwner) {\n        this.model.set('selected', !this.model.get('selected'));\n      }\n    }\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar CreateDialog = require('../../common/dialogs/create/create_view');\nvar VideoTutorialView = require('../../common/dialogs/video_tutorial/video_tutorial_view');\n\n/**\n * Represents a map card on dashboard.\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'MapsList-item',\n  tagName: 'li',\n\n  events: {\n    'click .js-open': '_openVideoTutorialDialog'\n  },\n\n  initialize: function() {\n    this.template = cdb.templates.getTemplate('dashboard/maps/placeholder_item');\n  },\n\n  render: function() {\n    this.clearSubViews();\n\n    this.$el.html(\n      this.template({\n        desc: this.model.get('short_description'),\n        icon: this.model.get('icon')\n      })\n    );\n\n    return this;\n  },\n\n  _openVideoTutorialDialog: function() {\n    var dlg = new VideoTutorialView({\n      videoId: this.model.get('videoId'),\n      clean_on_hide: true,\n      enter_to_confirm: false\n    })\n    cdb.god.trigger(\"onTemplateSelected\", this);\n    dlg.appendToBody();\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar pluralizeString = require('../common/view_helpers/pluralize_string');\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n\n/**\n *  Visualization mapviews graph\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  options: {\n    stats:        [],\n    width:        127,\n    height:       22\n  },\n\n  initialize: function() {\n    this.options.stats = _.map(\n      this.options.stats,\n      function(val, date) {\n        return {\n          mapviews: val,\n          when: date,\n          today: moment(new Date(date)).format('DD/MM/YYYY') == moment(new Date()).format('DD/MM/YYYY')\n        }\n      }\n    );\n  },\n\n  render: function() {\n    var self = this;\n    var width = this.options.width;\n    var height = this.options.height;\n    var data = this.options.stats;\n    var minHeight = 2;\n\n    var x = d3.scale.ordinal()\n        .rangeRoundBands([0, width], .1);\n\n    var y = d3.scale.linear()\n        .range([height, 0]);\n\n    var xAxis = d3.svg.axis()\n        .scale(x)\n        .orient(\"bottom\");\n\n    var svg = d3.select(this.$el[0]).append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n      .append(\"g\");\n\n    \n    x.domain(data.map(function(d) { return d.when; }));\n    y.domain([0, d3.max(data, function(d) { return d.mapviews; })]);\n\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    svg.selectAll(\".bar\")\n        .data(data)\n      .enter().append(\"rect\")\n        .attr(\"class\", \"MapviewsGraph-bar\")\n        .attr('data-title', function(d) {\n          return Utils.formatNumber(d.mapviews) + ' ' + pluralizeString('mapview', d.mapviews) + ( d.today ? (' today') : (' on ' + d.when) )\n        })\n        .attr(\"x\", function(d) { return x(d.when); })\n        .attr(\"width\", 3)\n        .attr(\"y\", function(d) {\n          var value = height - y(d.mapviews);\n          var yPos = y(d.mapviews);\n          return value < minHeight ? (height - minHeight) : yPos;\n        })\n        .attr(\"height\", function(d) {\n          var value = height - y(d.mapviews);\n          return value < minHeight ? minHeight : value;\n        })\n        .on('mouseover', function(d) {\n          if (d.mapviews > 0) {\n            var $el = $(d3.select(this)[0]);\n            self.addView(\n              new cdb.common.TipsyTooltip({\n                el: $el,\n                className: 'MapviewsGraph-tooltip',\n                html: true,\n                trigger: 'manual',\n                title: function(e) { return $(this).attr('data-title') }\n              })\n            );\n            $el.tipsy('show');  \n          }\n        })\n        .on('mouseout', function(d) {\n          if (d.mapviews > 0) {\n            var $el = $(d3.select(this)[0]);\n            // Eliminating tipsy thing from the single graph bar\n            $el.tipsy('hide');\n            $el.unbind('mouseleave mouseenter');\n          }\n        });\n\n    return this;\n  }\n\n});\n",
    "'use strict';\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar createDefaultFallbackMap = require('../common/views/create_default_fallback_map');\n\n/**\n *  Onboarding view\n *\n *  It includes:\n *  - onboard map (rendered when element is visible)\n *  - welcome text (visible checking local storage)\n *\n */\n\n\nmodule.exports = cdb.core.View.extend({\n\n  tagName: 'div',\n  className: 'OnBoarding',\n\n  events: {\n    'click .js-createMap': '_createMap'\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.template = cdb.templates.getTemplate('dashboard/views/onboarding');\n    this._resizeMap();\n    this._initBindings();\n  },\n\n  render: function() {\n    this.$el.html(\n      this.template({\n        username: this.user.get('name') || this.user.get('username'),\n        hasCreateMapsFeature: this.user.hasCreateMapsFeature()\n      })\n    );\n\n    return this;\n  },\n\n  _renderMap: function() {\n    if (this.map) {\n      return;\n    }\n\n    this.map = createDefaultFallbackMap({\n      el: this.$('.js-onboarding-map'),\n      baselayer: cdb.config.get('default_fallback_basemap'),\n      scrollwheel: false\n    });\n  },\n\n  _createMap: function() {\n    cdb.god.trigger('openCreateDialog', { type: 'map' });\n  },\n\n  _destroyMap: function() {\n    if (this.map) {\n      this.map.remove();\n    }\n  },\n\n  _initBindings: function() {\n    _.bindAll(this, '_resizeMap');\n    $(window).on('resize', this._resizeMap);\n  },\n\n  _destroyBindings: function() {\n    $(window).off('resize', this._resizeMap);\n  },\n\n  _resizeMap: function() {\n    // 71px is the height of the main header\n    this.$el.height( window.innerHeight - 71 );\n  },\n\n  show: function() {\n    this.$el.show();\n    // We need to have element visible in order\n    // to render leaflet map properly\n    this._renderMap();\n  },\n\n  hide: function() {\n    this.$el.hide();\n  },\n\n  clean: function() {\n    this._destroyMap();\n    this._destroyBindings();\n    cdb.core.View.prototype.clean.call(this);\n  }\n\n});\n",
    "var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar Router = require('../common/router');\nvar VisFetchModel = require('../common/visualizations_fetch_model');\nvar CurrentUrlModel = require('./router/current_url_model');\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\n\n/**\n *  Backbone router for dashboard urls.\n *  Actual URLs can be retrieved from router.model.toXXX-methods.\n *\n *  - Manage all available urls\n *    · Organization\n *    · Shared\n *    · Pretty urls\n *    · ...\n */\nmodule.exports = Router.extend({\n\n  routes: {\n\n    // Index\n    '':                                              '_changeRouteToMaps',\n    '?:queries':                                     '_changeRouteToMaps',\n\n    // If URL is lacking the trailing slash (e.g. 'http://username.carto.com/dashboard'), treat it like index\n    'dashboard':                                     '_changeRouteToMaps',\n    'dashboard?:queries':                            '_changeRouteToMaps',\n    '*prefix/dashboard':                             '_changeRouteToMaps',\n    '*prefix/dashboard?:queries':                    '_changeRouteToMaps',\n\n    // Supporting old tables/vis urls\n    'tables':                                        '_changeRouteToDatasets',\n    'tables/:whatever':                              '_changeRouteToDatasets',\n    'visualizations':                                '_changeRouteToMaps',\n    'visualizations/:whatever':                      '_changeRouteToMaps',\n\n    // Search\n    ':content_type/search/:q':                       '_changeRouteToSearch',\n    ':content_type/search/:q/:page':                 '_changeRouteToSearch',\n\n    // Tags only in shared datasets/maps\n    ':content_type/shared/tag/:tag':                 '_changeRouteToTag',\n    ':content_type/shared/tag/:tag/:page':           '_changeRouteToTag',\n\n    // Tags only in liked datasets/maps\n    ':content_type/liked/tag/:tag':                  '_changeRouteToTag',\n    ':content_type/liked/tag/:tag/:page':            '_changeRouteToTag',\n\n    // Tags in my locked datasets/maps\n    ':content_type/locked/tag/:tag':                 '_changeRouteToTag',\n    ':content_type/locked/tag/:tag/:page':           '_changeRouteToTag',\n\n    // Tags in library datasets/maps\n    ':content_type/library/tag/:tag':                '_changeRouteToTag',\n    ':content_type/library/tag/:tag/:page':          '_changeRouteToTag',\n\n    // Tags\n    ':content_type/tag/:tag':                        '_changeRouteToTag',\n    ':content_type/tag/:tag/:page':                  '_changeRouteToTag',\n\n    // Liked datasets\n    'datasets/liked':                         '_changeRouteToDatasets',\n    'datasets/liked/':                        '_changeRouteToDatasets',\n    'datasets/liked?:q':                      '_changeRouteToDatasets',\n    'datasets/liked/:page':                   '_changeRouteToDatasets',\n    'datasets/liked/:page?:q':                '_changeRouteToDatasets',\n\n\n    // Shared datasets\n    'datasets/shared':                        '_changeRouteToDatasets',\n    'datasets/shared/':                       '_changeRouteToDatasets',\n    'datasets/shared?:q':                     '_changeRouteToDatasets',\n    'datasets/shared/:page':                  '_changeRouteToDatasets',\n    'datasets/shared/:page?:q':               '_changeRouteToDatasets',\n\n    // Datasets locked\n    'datasets/locked':                        '_changeRouteToDatasets',\n    'datasets/locked/':                       '_changeRouteToDatasets',\n    'datasets/locked?:q':                     '_changeRouteToDatasets',\n    'datasets/locked/:page':                  '_changeRouteToDatasets',\n    'datasets/locked/:page?:q':               '_changeRouteToDatasets',\n\n    // Library datasets\n    'datasets/library':                       '_changeRouteToDatasets',\n    'datasets/library/':                      '_changeRouteToDatasets',\n    'datasets/library?:q':                    '_changeRouteToDatasets',\n    'datasets/library/:page':                 '_changeRouteToDatasets',\n    'datasets/library/:page?:q':              '_changeRouteToDatasets',\n\n    // Datasets\n    'datasets':                               '_changeRouteToDatasets',\n    'datasets/':                              '_changeRouteToDatasets',\n    'datasets?:q':                            '_changeRouteToDatasets',\n    'datasets/:page':                         '_changeRouteToDatasets',\n    'datasets/:page?:q':                      '_changeRouteToDatasets',\n\n    // My shared maps\n    'maps/shared':                            '_changeRouteToMaps',\n    'maps/shared/':                           '_changeRouteToMaps',\n    'maps/shared?:q':                         '_changeRouteToMaps',\n    'maps/shared/:page':                      '_changeRouteToMaps',\n    'maps/shared/:page?:q':                   '_changeRouteToMaps',\n\n    // Locked maps\n    'maps/locked':                            '_changeRouteToMaps',\n    'maps/locked/':                           '_changeRouteToMaps',\n    'maps/locked?:q':                         '_changeRouteToMaps',\n    'maps/locked/:page':                      '_changeRouteToMaps',\n    'maps/locked/:page?:q':                   '_changeRouteToMaps',\n\n    // Shared locked maps\n    'maps/shared/locked':                     '_changeRouteToMaps',\n    'maps/shared/locked/':                    '_changeRouteToMaps',\n    'maps/shared/locked?:q':                  '_changeRouteToMaps',\n    'maps/shared/locked/:page':               '_changeRouteToMaps',\n    'maps/shared/locked/:page?:q':            '_changeRouteToMaps',\n\n    // Liked maps\n    'maps/liked':                             '_changeRouteToMaps',\n    'maps/liked/':                            '_changeRouteToMaps',\n    'maps/liked?:q':                          '_changeRouteToMaps',\n    'maps/liked/:page':                       '_changeRouteToMaps',\n    'maps/liked/:page?:q':                    '_changeRouteToMaps',\n\n    // Maps\n    'maps':                                   '_changeRouteToMaps',\n    'maps/':                                  '_changeRouteToMaps',\n    'maps?:q':                                '_changeRouteToMaps',\n    'maps/:page':                             '_changeRouteToMaps',\n    'maps/:page?:q':                          '_changeRouteToMaps',\n\n    // Deep insights\n    'deep-insights':                           '_changeRouteToDeepInsights',\n    'deep-insights/':                          '_changeRouteToDeepInsights',\n    'deep-insights?:q':                        '_changeRouteToDeepInsights',\n    'deep-insights/:page':                     '_changeRouteToDeepInsights',\n    'deep-insights/:page?:q':                  '_changeRouteToDeepInsights'\n  },\n\n  initialize: function(opts) {\n    this._dashboardUrl = opts.dashboardUrl;\n    this._rootPath = this._dashboardUrl.pathname();\n\n    this.model = new VisFetchModel({\n      // Attributes will be set by one of the route handlers below, upon router.enableAfterMainView()\n    });\n    this._currentUrl = new CurrentUrlModel({\n      visFetchModel: this.model,\n      dashboardUrl: this._dashboardUrl\n    });\n  },\n\n  rootPath: function() {\n    return this._rootPath;\n  },\n\n  normalizeFragmentOrUrl: function(fragmentOrUrl) {\n    return fragmentOrUrl && fragmentOrUrl.toString().replace(this._dashboardUrl, '') || this.currentDashboardUrl().toString();\n  },\n\n  /**\n   * Get current dashboard URL (i.e. datasets or maps).\n   * @return {Object} instance of cdb.common.DashboardVisUrl\n   */\n  currentDashboardUrl: function() {\n    return this._currentUrl.forCurrentContentType();\n  },\n\n  /**\n   * Get a URL based on current state.\n   * @params {Object} override hash of keys to override, see Router.model.forCurrentState for alternatives.\n   */\n  currentUrl: function(override) {\n    return this._currentUrl.forCurrentState(override);\n  },\n\n  _changeRouteToSearch: function(contentType, q, page) {\n    page = this._getPage(page);\n\n    this.model.set({\n      action:         'search',\n      content_type:   contentType,\n      q:              Utils.stripHTML(decodeURIComponent(q),''),\n      tag:            '',\n      page:           page,\n      shared:         'yes',\n      locked:         null,\n      liked:          null,\n      library:        null,\n      deepInsights:   false\n    });\n  },\n\n  _changeRouteToTag: function(contentType, tag, page) {\n    page = this._getPage(page);\n\n    this.model.set({\n      action:         'tag',\n      content_type:   contentType,\n      tag:            Utils.stripHTML(decodeURIComponent(tag),''),\n      q:              '',\n      page:           page,\n      shared:         'yes',\n      locked:         null,\n      liked:          null,\n      library:        null,\n      deepInsights:   false\n    });\n  },\n\n  _changeRouteToDatasets: function(page) {\n    page = this._getPage(page);\n    var shared = this._doesCurrentUrlContain('datasets/shared');\n    var locked = this._doesCurrentUrlContain('datasets/locked') || this._doesCurrentUrlContain('shared/locked');\n    var liked = this._doesCurrentUrlContain('datasets/liked');\n    var library = this._doesCurrentUrlContain('datasets/library');\n\n    this.model.set({\n      content_type:   'datasets',\n      page:           page,\n      q:              '',\n      tag:            '',\n      shared:         shared ? 'only' : 'no',\n      locked:         locked,\n      liked:          liked,\n      library:        library,\n      deepInsights:   false\n    });\n  },\n\n  _changeRouteToMaps: function(page) {\n    page = this._getPage(page);\n    var shared = this._doesCurrentUrlContain('maps/shared');\n    var locked = this._doesCurrentUrlContain('maps/locked') || this._doesCurrentUrlContain('shared/locked');\n    var liked = this._doesCurrentUrlContain('maps/liked');\n\n    this.model.set({\n      content_type:   'maps',\n      page:           page,\n      q:              '',\n      tag:            '',\n      shared:         shared ? 'only' : 'no',\n      locked:         locked,\n      liked:          liked,\n      library:        false,\n      deepInsights:   false\n    });\n  },\n\n  _changeRouteToDeepInsights: function(page) {\n    page = this._getPage(page);\n    this.model.set({\n      content_type:   'maps',\n      page:           page,\n      q:              '',\n      tag:            '',\n      shared:         'no',\n      locked:         false,\n      liked:          false,\n      library:        false,\n      deepInsights:   true\n    });\n  },\n\n  _doesCurrentUrlContain: function(uri) {\n    return Backbone.history.fragment.search(uri) !== -1;\n  },\n\n  _getPage: function(page) {\n    page = parseInt(page);\n    return page && _.isNumber(page) ? page : 1;\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n/**\n * Model that holds the dashboard state.\n * Expected to be used with the dashboard Router.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    dashboardUrl: undefined, // cdb.common.DashboardUrl\n    visFetchModel: undefined // common/visualizations_fetch_model\n  },\n\n  initialize: function() {\n    // Methods used in _compose need to have the model's context bound to be able to access internal attrs.\n    _.bindAll(this, '_appendPage', '_appendSearch', '_appendLocked', '_appendLibrary', '_appendSharedOrLiked');\n    if (!this.get('dashboardUrl')) {\n      throw new Error('dashboardUrl is required');\n    }\n    if (!this.get('visFetchModel')) {\n      throw new Error('visFetchModel is required');\n    }\n  },\n\n  forCurrentContentType: function() {\n    var contentType = this.get('visFetchModel').get('content_type') || 'datasets';\n    // This might get called upon page initializatioin w/o any content_type set, fallback on datasets\n    return this.get('dashboardUrl')[\n      !this.isDeepInsights() ? contentType : 'deepInsights'\n    ]();\n  },\n\n  /**\n   * Get the URL based on current state.\n   * Provide a hash to override current state's values for the returned URL.\n   *\n   * @param {Object} override hash that allows the following, optional keys:\n   *   search: {String,undefined} E.g. 'foobar', ':tag'\n   *   page:   {Number,String,undefined} E.g. 24, '42'\n   *   locked: {Boolean,undefined}\n   * @returns {Object} instance of cdb.common.Url\n   */\n  forCurrentState: function(override) {\n    // Since JS is an object we can add the options directly on the start value and let each compose method attach its\n    // path based on given options.\n    var array = _.extend([ this.forCurrentContentType() ], override);\n\n    var baseUrl = _.compose(\n      this._appendPage,\n      this._appendSearch,\n      this._appendLocked,\n      this._appendLibrary,\n      this._appendSharedOrLiked\n    )(array)\n      .join('/');\n\n    return new cdb.common.Url({\n      base_url: baseUrl\n    });\n  },\n\n  isSearching: function() {\n    var visFetchModel = this.get('visFetchModel');\n    return visFetchModel.get('q') || visFetchModel.get('tag');\n  },\n\n  isDeepInsights: function() {\n    var visFetchModel = this.get('visFetchModel');\n    return this.isMaps() && visFetchModel.get('deepInsights');\n  },\n\n  isDatasets: function() {\n    return this.get('visFetchModel').get('content_type') === 'datasets';\n  },\n\n  isMaps: function() {\n    return this.get('visFetchModel').get('content_type') === 'maps';\n  },\n\n  /**\n   * Append pagination page item to given array.\n   */\n  _appendPage: function(array) {\n    var value = array.page;\n\n    if (_.isUndefined(value)) {\n      value = this.get('visFetchModel').get('page');\n    }\n\n    // Ommit page if is first page\n    if (value > 1) {\n      array.push(encodeURIComponent(value));\n    }\n\n    return array;\n  },\n\n  /**\n   * Append search items to given array.\n   * Can be either a search by string ['search', 'foboar'], or a tag, ['tag', 'baz'].\n   *\n   * @param obj {Object}\n   * @returns {Object}\n   * @private\n   */\n  _appendSearch: function(array) {\n    var items = [];\n    var value = array.search;\n\n    if (_.isUndefined(value)) {\n      var visFetchModel = this.get('visFetchModel');\n      var tag = visFetchModel.get('tag');\n      var q = visFetchModel.get('q');\n      if (tag) {\n        items = this._keyValueItems('tag', tag);\n      } else if (q) {\n        items = this._keyValueItems('search', q);\n      }\n    } else {\n      if (value.search(':') === 0) {\n        items = this._keyValueItems('tag', value.replace(':', ''));\n      } else if (!_.isEmpty(value)) {\n        items = this._keyValueItems('search', value);\n      }\n    }\n\n    // If used Array.prototype.concat would loose any properties array holds, since concat creates a copy of values only\n    array.push.apply(array, items);\n    return array;\n  },\n\n  _keyValueItems: function(key, value) {\n    return [ key, encodeURIComponent(value) ];\n  },\n\n  _appendLocked: function(array) {\n    var value = array.locked;\n\n    if ((_.isUndefined(value) && this.get('visFetchModel').get('locked')) || value) {\n      array.push('locked');\n    }\n\n    return array;\n  },\n\n  _appendLibrary: function(array) {\n    var value = array.library;\n\n    if ((_.isUndefined(value) && this.get('visFetchModel').get('library')) || value) {\n      array.push('library');\n    }\n\n    return array;\n  },\n\n  _appendSharedOrLiked: function(array) {\n    var shared = array.shared;\n    var liked = array.liked;\n\n    if ((_.isUndefined(shared) && this.get('visFetchModel').get('shared') === 'only') || shared === 'only') {\n      array.push('shared');\n    } else if ((_.isUndefined(liked) && this.get('visFetchModel').get('liked')) || liked) {\n      array.push('liked');\n    }\n\n    return array;\n  }\n});\n",
    "var geoAttr = require('./cartocss/get-geo-attr');\nvar getDefaultCSSForGeometryType = require('./cartocss/get-default-css-for-geometry-type');\nvar ramps = require('./cartocss/color-ramps');\n\nmodule.exports = {\n  choropleth: function(quartiles, tableName, prop, geometryType, ramp) {\n    var attr = geoAttr(geometryType);\n    var tableID = '#' + tableName;\n\n    var defaultCSS = getDefaultCSSForGeometryType(geometryType);\n    var css = \"/** choropleth visualization */\\n\\n\" + tableID + \" {\\n  \" + attr + \": \" + ramp[0] + \";\\n\" + defaultCSS.join(\"\\n\") + \"\\n}\\n\";\n\n    for (var i = quartiles.length - 1; i >= 0; --i) {\n      if (quartiles[i] !== undefined && quartiles[i] != null) {\n        css += \"\\n\" + tableID + \"[\" + prop + \" <= \" + quartiles[i] + \"] {\\n\";\n        css += '  ' + attr  + ':' + ramp[i] + \";\\n}\"\n      }\n    }\n    return css;\n  },\n\n  categoryMetadata: function(cats, options) {\n    var metadata = [];\n\n    var ramp = (options && options.ramp) ? options.ramp : ramps.category;\n    var type = options && options.type ? options.type : 'string';\n\n    for (var i = 0; i < cats.length; i++) {\n      var cat = cats[i];\n      if (i < 10 && cat !== undefined && ((type === 'string' && cat != null) || (type !== 'string'))) {\n        metadata.push({\n          title: cat,\n          title_type: type,\n          value_type: 'color',\n          color: ramp[i]\n        });\n      }\n    }\n\n    if (cats.length > 10) {\n      metadata.push({\n        title: 'Others',\n        value_type: 'color',\n        default: true,\n        color: ramp[ramp.length - 1]\n      });\n    }\n\n    return metadata;\n  },\n\n  category: function(cats, tableName, prop, geometryType, options) {\n    var attr = geoAttr(geometryType);\n    var tableID = '#' + tableName;\n    var ramp = ramps.category;\n    var name, value;\n\n    var type = options && options.type ? options.type : 'string';\n    var ramp = (options && options.ramp) ? options.ramp : ramps.category;\n\n    var defaultCSS = getDefaultCSSForGeometryType(geometryType);\n\n    var css = \"/** category visualization */\\n\\n\" + tableID + \" {\\n  \" + attr + \": \" + ramp[0] + \";\\n\" + defaultCSS.join(\"\\n\") + \"\\n}\\n\";\n\n    for (var i = 0; i < cats.length; i++) {\n\n      var cat = cats[i];\n\n      if (type === 'string') {\n        name = cat.replace(/\\n/g,'\\\\n').replace(/\\\"/g, \"\\\\\\\"\");\n        value = \"\\\"\" + name + \"\\\"\";\n      } else {\n        value = cat;\n      }\n\n      if (i < 10 && cat !== undefined && ((type === 'string' && cat != null) || (type !== 'string'))) {\n        css += \"\\n\" + tableID + '[' + prop + '=' + value + \"] {\\n\";\n        css += '  ' + attr  + ':' + ramp[i] + \";\\n}\"\n      }\n    }\n\n    if (cats.length > 10) {\n      css += \"\\n\" + tableID + \"{\\n\";\n      css += '  ' + attr  + ': ' + ramp[ramp.length - 1]+ \";\\n}\"\n    }\n\n    return css;\n  },\n\n  torque: function(stats, tableName, options){\n    var tableID = '#' + tableName;\n    var aggFunction = 'count(cartodb_id)';\n    var css = [\n        '/** torque visualization */',\n        'Map {',\n        '  -torque-time-attribute: ' + stats.column + ';',\n        '  -torque-aggregation-function: \"count(cartodb_id)\";',\n        '  -torque-frame-count: ' + stats.steps + ';',\n        '  -torque-animation-duration: 10;',\n        '  -torque-resolution: 2;',\n        '}',\n        tableID + ' {',\n        '  marker-width: 3;',\n        '  marker-fill-opacity: 0.8;',\n        '  marker-fill: #0F3B82; ',\n        '  comp-op: \"lighten\"; ',\n        '  [frame-offset = 1] { marker-width: 10; marker-fill-opacity: 0.05;}',\n        '  [frame-offset = 2] { marker-width: 15; marker-fill-opacity: 0.02;}',\n        '}'\n    ];\n    css = css.join(\"\\n\");\n\n    return css;\n\n  },\n\n  bubble: function(quartiles, tableName, prop) {\n    var tableID = '#' + tableName;\n    var css = \"/** bubble visualization */\\n\\n\" + tableID + \" {\\n\";\n    css += getDefaultCSSForGeometryType('point').join(\"\\n\");\n    css += \"\\nmarker-fill: #FF5C00;\";\n    css += \"\\n}\\n\\n\";\n\n    var min = 10;\n    var max = 30;\n\n    var values = [];\n\n    var NPOINS = 10;\n    for(var i = 0; i < NPOINS; ++i) {\n      var t = i/(NPOINS-1);\n      values.push(min + t*(max - min));\n    }\n\n    // generate carto\n    for(var i = NPOINS - 1; i >= 0; --i) {\n      if(quartiles[i] !== undefined && quartiles[i] != null) {\n        css += \"\\n#\" + tableName + ' [ ' + prop + ' <= ' + quartiles[i] + \"] {\\n\"\n        css += '   marker-width: ' + values[i].toFixed(1) + \";\\n}\"\n      }\n    }\n    return css;\n  },\n\n  heatmap: function(stats, tableName, options){\n    var tableID = '#' + tableName;\n    var css = [\n        '/** heatmap visualization */',\n        'Map {',\n        '  -torque-time-attribute: \"cartodb_id\";',\n        '  -torque-aggregation-function: \"count(cartodb_id)\";',\n        '  -torque-frame-count: 1;',\n        '  -torque-animation-duration: 10;',\n        '  -torque-resolution: 2;',\n        '}',\n        tableID + ' {',\n        '  marker-width: 10;',\n        '  marker-fill-opacity: 0.4;',\n        '  marker-fill: #0F3B82; ',\n        '  comp-op: \"lighten\"; ',\n        '  image-filters: colorize-alpha(blue, cyan, lightgreen, yellow , orange, red);',\n        '  marker-file: url(http://s3.amazonaws.com/com.cartodb.assets.static/alphamarker.png);',\n        '}'\n    ];\n    css = css.join(\"\\n\");\n    return css;\n  }\n};\n",
    "module.exports = {\n  bool: ['#229A00', '#F84F40', '#DDDDDD'],\n  green:  ['#EDF8FB', '#D7FAF4', '#CCECE6', '#66C2A4', '#41AE76', '#238B45', '#005824'],\n  blue:  ['#FFFFCC', '#C7E9B4', '#7FCDBB', '#41B6C4', '#1D91C0', '#225EA8', '#0C2C84'],\n  pink: ['#F1EEF6', '#D4B9DA', '#C994C7', '#DF65B0', '#E7298A', '#CE1256', '#91003F'],\n  black:  ['#F7F7F7', '#D9D9D9', '#BDBDBD', '#969696', '#737373', '#525252', '#252525'],\n  red:  ['#FFFFB2', '#FED976', '#FEB24C', '#FD8D3C', '#FC4E2A', '#E31A1C', '#B10026'],\n  category: ['#A6CEE3', '#1F78B4', '#B2DF8A', '#33A02C', '#FB9A99', '#E31A1C', '#FDBF6F', '#FF7F00', '#CAB2D6', '#6A3D9A', '#DDDDDD'],\n  divergent: ['#0080FF', '#40A0FF', '#7FBFFF', '#FFF2CC', '#FFA6A6', '#FF7A7A', '#FF4D4D']\n};\n",
    "module.exports = function(geometryType) {\n  if (geometryType === 'polygon') {\n    return [\n      'polygon-opacity: 0.7;',\n      'line-color: #FFF;',\n      'line-width: 0.5;',\n      'line-opacity: 1;'\n    ];\n  } else if (geometryType === 'line') {\n    return [\n      'line-width: 2;',\n      'line-opacity: 0.7;'\n    ];\n  } else {\n    return [\n      'marker-fill-opacity: 0.9;',\n      'marker-line-color: #FFF;',\n      'marker-line-width: 1;',\n      'marker-line-opacity: 1;',\n      'marker-placement: point;',\n      'marker-type: ellipse;',\n      'marker-width: 10;',\n      'marker-allow-overlap: true;'\n    ];\n  }\n};\n",
    "module.exports = function(geometryType) {\n  return {\n    \"line\": 'line-color',\n    'polygon': \"polygon-fill\",\n    'point': \"marker-fill\"\n  }[geometryType];\n};\n",
    "\n/**\n * Like _.defaults, but also applies to deep object structure.\n *\n * @param {Object} customs\n * @param {Object} defaults\n * @return {Object}\n */\nvar deepDefaults = function(customs, defaults) {\n  var memo = {};\n\n  for (var key in defaults) {\n    if (defaults.hasOwnProperty(key)) {\n      var defaultsItem = defaults[key];\n      var customsItem;\n\n      if (typeof customs === 'object') {\n        customsItem = customs[key];\n      }\n\n      if (typeof defaultsItem === 'object' && typeof customsItem === 'object') {\n        // both defaultsItem and customsItem are objecs, go down one level, set returned result as value for key\n        memo[key] = deepDefaults(customsItem, defaultsItem);\n      } else if (typeof defaultsItem !== 'object' && customsItem !== undefined) {\n        memo[key] = customsItem;\n      } else {\n        memo[key] = defaultsItem;\n      }\n    }\n  }\n\n  return memo || {};\n};\n\nmodule.exports = deepDefaults;\n",
    "var ramps = require('./cartocss/color-ramps.js');\n\n// TODO: only require the necessary params\nmodule.exports = function(stats) {\n  var method;\n  var ramp = ramps.blue;\n  var name = 'blue';\n\n  if (['A','U'].indexOf(stats.dist_type) != -1) { // apply divergent scheme\n    method = stats.jenks;\n\n    if (stats.min < 0 && stats.max > 0){\n      ramp = ramps.divergent;\n      name = 'spectrum2';\n    }\n  } else if (stats.dist_type === 'F') {\n    method = stats.equalint;\n    ramp = ramps.red;\n    name = 'red';\n  } else if (stats.dist_type === 'J') {\n    method = stats.headtails;\n    ramp = ramps.blue;\n    name = 'blue';\n  } else {\n    method = stats.headtails;\n    ramp = ramps.red;\n    name = 'red';\n  }\n\n  return {\n    name: name,\n    ramp: ramp,\n    method: method\n  };\n};\n",
    "module.exports = function(distType) {\n  return {\n    U: 0.9,\n    A: 0.9,\n    L: 0.7,\n    J: 0.7,\n    S: 0.5,\n    F: 0.3\n  }[distType];\n};\n",
    "var ramps = require('./cartocss/color-ramps');\nvar getWeightFromShape = require('./get-weight-from-shape');\nvar getMethodProperties = require('./get-method-properties');\nvar deepDefaults = require('./deep-defaults');\nvar CSS = require('./cartocss');\n\n/**\n * Get metadata to render a CartoDB map (visualization) from a set of given table and column data, see params.\n *\n * @param {Object} opts hash with following keys:\n *   - tableName: {String}\n *   - column: {Object} hash with following keys:\n *     - stats: {Object} stats as given from a describe call on a SQL API.\n *     - geometryType: {String} e.g. 'points', 'polygon' or similar.\n *     - bbox: {Array[Array]} e.g. [[0.0, 0.1], [1.0, 1.1]]\n *   - dependencies: {Object} hash with following keys:\n *     - underscore: {Object} only used for some column types though, e.g. number, string\n *   - thresholds: {Object} See list in code\n * @return {Object}\n */\nmodule.exports = function(opts) {\n  var _ = opts.dependencies.underscore;\n  var tableName = opts.tableName;\n\n  var thresholds = deepDefaults(opts.thresholds, {\n    number: {\n      forBubbleMap: {\n        minCalcWeight: 0.5,\n        maxStatsCount: 200\n      },\n      forCategoryOrBubbleMap: {\n        minStatsWeight: 0.5,\n        distinctPercentage: 25,\n        forCategory: {\n          maxDistinctPercentage: 1\n        },\n        forBubble: {\n          minDistinctPercentage: 1\n        }\n      }\n    }\n  });\n\n  var column = opts.column;\n  var geometryType = column.geometryType;\n  var stats = column.stats;\n  var columnName = stats.column;\n\n  var visualizationType = 'choropleth';\n  var css = null;\n  var type = stats.type;\n  var metadata = [];\n  var distinctPercentage = (stats.distinct / stats.count) * 100;\n\n  if (type === 'number') {\n    var calcWeight = (stats.weight + getWeightFromShape(stats.dist_type)) / 2;\n\n    if (calcWeight >= thresholds.number.forBubbleMap.minCalcWeight) {\n      var visFunction = CSS.choropleth;\n      var properties = getMethodProperties(stats);\n\n      if (stats.count < thresholds.number.forBubbleMap.maxStatsCount && geometryType === 'point'){\n        visualizationType = 'bubble';\n        visFunction = CSS.bubble;\n      }\n\n      css = visFunction(properties.method, tableName, columnName, geometryType, properties.ramp);\n\n    } else if (stats.weight > thresholds.number.forCategoryOrBubbleMap.minStatsWeight || distinctPercentage < thresholds.number.forCategoryOrBubbleMap.maxDistinctPercentage) {\n      if (distinctPercentage < thresholds.number.forCategoryOrBubbleMap.forCategory.maxDistinctPercentage) {\n        visualizationType = 'category';\n\n        var cats = stats.cat_hist;\n        cats = _.sortBy(cats, function(cat) { return cat[1]; }).reverse().slice(0, ramps.category.length);\n        cats = _.sortBy(cats, function(cat) { return cat[0]; });\n        cats = cats.map(function(r) { return r[0]; });\n\n        css = CSS.category(cats, tableName, columnName, geometryType, { type: type });\n        metadata = CSS.categoryMetadata(cats, { type: type });\n\n      } else if (distinctPercentage >= thresholds.number.forCategoryOrBubbleMap.forBubble.minDistinctPercentage) {\n\n        var visFunction = CSS.choropleth;\n\n        if (geometryType === 'point'){\n          visualizationType = 'bubble';\n          visFunction = CSS.bubble;\n        }\n\n        var properties = getMethodProperties(stats);\n        css = visFunction(properties.method, tableName, columnName, geometryType, properties.ramp);\n      }\n    }\n\n  } else if (type === 'string') {\n    visualizationType = 'category';\n\n    var cats = stats.hist;\n    cats = _.sortBy(cats, function(cat) { return cat[1]; }).reverse().slice(0, ramps.category.length);\n    cats = _.sortBy(cats, function(cat) { return cat[0]; });\n    cats = cats.map(function(r) { return r[0]; });\n\n    css = CSS.category(cats, tableName, columnName, geometryType);\n    metadata = CSS.categoryMetadata(cats);\n\n  } else if (type === 'date') {\n    visualizationType = 'torque';\n    css = CSS.torque(stats, tableName);\n\n  } else if (type === 'boolean') {\n    visualizationType = 'category';\n    var ramp = ramps.bool;\n    var cats = ['true', 'false', null];\n    var options = { type: type, ramp: ramp };\n    css = CSS.category(cats, tableName, columnName, geometryType, options);\n    metadata = CSS.categoryMetadata(cats, options);\n\n  } else if (stats.type === 'geom') {\n    visualizationType = 'heatmap';\n    css = CSS.heatmap(stats, tableName, options);\n  }\n\n  var properties = {\n    geometryType: geometryType,\n    column: columnName,\n    bbox: column.bbox,\n    type: type,\n    visualizationType: visualizationType\n  };\n\n  if (css) {\n    properties.css = css;\n  } else {\n    properties.css = null;\n    properties.weight = -100;\n  }\n\n  if (stats) {\n    properties.stats = stats;\n  }\n\n  if (metadata) {\n    properties.metadata = metadata;\n  }\n\n  return properties;\n};\n",
    "var getWeightFromShape = require('./get-weight-from-shape');\nvar deepDefaults = require('./deep-defaults');\n\nvar analyzeMethods = {\n  geom: function(data) {\n    var stats = data.stats;\n    return data.isPointGeometryType && stats.cluster_rate * stats.density >= data.thresholds.geom.minStatsDensity;\n  },\n\n  string: function(data) {\n    return data.stats.weight >= data.thresholds.string.minWeight;\n  },\n\n  number: function(data) {\n    var stats = data.stats;\n    var distinctPercentage = (stats.distinct / stats.count) * 100;\n    var calcWeight = (stats.weight + getWeightFromShape(stats.dist_type)) / 2;\n    return stats.weight >= data.thresholds.number.minWeight &&\n      (\n        calcWeight >= data.thresholds.number.minCalcWeight ||\n        stats.weight > data.thresholds.number.minWeightIfNoOtherApplies ||\n        distinctPercentage < data.thresholds.number.maxDistinctPercentage\n      );\n  },\n\n  boolean: function(data) {\n    return data.stats.null_ratio <= data.thresholds.boolean.maxNullRatio;\n  },\n\n  date: function(data) {\n    return data.isPointGeometryType && data.stats.null_ratio <= data.thresholds.date.maxNullRatio;\n  }\n};\n\n/**\n * Check wether the given stats is enough to make guesses for pecan maps.\n * @param {Object} stats Results from a describe call on a table column.\n *   A stats object that lacks any relevant statistics will most likely yield a false.\n * @return {Boolean} true if good enough\n */\nmodule.exports = function(data) {\n  var isGoodEnough = false;\n  var data = data || {};\n\n  data.thresholds = deepDefaults(data.thresholds, {\n    geom: {\n      minStatsDensity: 0.1\n    },\n    string: {\n      minWeight: 0.8\n    },\n    number: {\n      minWeight: 0.1,\n      minCalcWeight: 0.5,\n      maxDistinctPercentage: 25,\n      minWeightIfNoOtherApplies: 0.5\n    },\n    boolean: {\n      maxNullRatio: 0.75\n    },\n    date: {\n      maxNullRatio: 0.75\n    }\n  });\n\n  if (data && data.stats) {\n    var method = analyzeMethods[data.stats.type];\n    if (typeof method === 'function') {\n      isGoodEnough = method.call(this, data);\n    }\n  }\n\n  return isGoodEnough;\n};\n",
    "module.exports = {\n  hasEnoughToGuess: require('./has-enough-to-guess'),\n  guessMap: require('./guess-map'),\n  getWeightFromShape: require('./get-weight-from-shape'),\n  getMethodProperties: require('./get-method-properties')\n};\n",
    "'use strict';\n\nmodule.exports = require('./src/js/main');\n",
    "'use strict';\n\nfunction oldAdd(element, className) {\n  var classes = element.className.split(' ');\n  if (classes.indexOf(className) < 0) {\n    classes.push(className);\n  }\n  element.className = classes.join(' ');\n}\n\nfunction oldRemove(element, className) {\n  var classes = element.className.split(' ');\n  var idx = classes.indexOf(className);\n  if (idx >= 0) {\n    classes.splice(idx, 1);\n  }\n  element.className = classes.join(' ');\n}\n\nexports.add = function (element, className) {\n  if (element.classList) {\n    element.classList.add(className);\n  } else {\n    oldAdd(element, className);\n  }\n};\n\nexports.remove = function (element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else {\n    oldRemove(element, className);\n  }\n};\n\nexports.list = function (element) {\n  if (element.classList) {\n    return Array.prototype.slice.apply(element.classList);\n  } else {\n    return element.className.split(' ');\n  }\n};\n",
    "'use strict';\n\nvar DOM = {};\n\nDOM.e = function (tagName, className) {\n  var element = document.createElement(tagName);\n  element.className = className;\n  return element;\n};\n\nDOM.appendTo = function (child, parent) {\n  parent.appendChild(child);\n  return child;\n};\n\nfunction cssGet(element, styleName) {\n  return window.getComputedStyle(element)[styleName];\n}\n\nfunction cssSet(element, styleName, styleValue) {\n  if (typeof styleValue === 'number') {\n    styleValue = styleValue.toString() + 'px';\n  }\n  element.style[styleName] = styleValue;\n  return element;\n}\n\nfunction cssMultiSet(element, obj) {\n  for (var key in obj) {\n    var val = obj[key];\n    if (typeof val === 'number') {\n      val = val.toString() + 'px';\n    }\n    element.style[key] = val;\n  }\n  return element;\n}\n\nDOM.css = function (element, styleNameOrObject, styleValue) {\n  if (typeof styleNameOrObject === 'object') {\n    // multiple set with object\n    return cssMultiSet(element, styleNameOrObject);\n  } else {\n    if (typeof styleValue === 'undefined') {\n      return cssGet(element, styleNameOrObject);\n    } else {\n      return cssSet(element, styleNameOrObject, styleValue);\n    }\n  }\n};\n\nDOM.matches = function (element, query) {\n  if (typeof element.matches !== 'undefined') {\n    return element.matches(query);\n  } else {\n    if (typeof element.matchesSelector !== 'undefined') {\n      return element.matchesSelector(query);\n    } else if (typeof element.webkitMatchesSelector !== 'undefined') {\n      return element.webkitMatchesSelector(query);\n    } else if (typeof element.mozMatchesSelector !== 'undefined') {\n      return element.mozMatchesSelector(query);\n    } else if (typeof element.msMatchesSelector !== 'undefined') {\n      return element.msMatchesSelector(query);\n    }\n  }\n};\n\nDOM.remove = function (element) {\n  if (typeof element.remove !== 'undefined') {\n    element.remove();\n  } else {\n    if (element.parentNode) {\n      element.parentNode.removeChild(element);\n    }\n  }\n};\n\nDOM.queryChildren = function (element, selector) {\n  return Array.prototype.filter.call(element.childNodes, function (child) {\n    return DOM.matches(child, selector);\n  });\n};\n\nmodule.exports = DOM;\n",
    "'use strict';\n\nvar EventElement = function (element) {\n  this.element = element;\n  this.events = {};\n};\n\nEventElement.prototype.bind = function (eventName, handler) {\n  if (typeof this.events[eventName] === 'undefined') {\n    this.events[eventName] = [];\n  }\n  this.events[eventName].push(handler);\n  this.element.addEventListener(eventName, handler, false);\n};\n\nEventElement.prototype.unbind = function (eventName, handler) {\n  var isHandlerProvided = (typeof handler !== 'undefined');\n  this.events[eventName] = this.events[eventName].filter(function (hdlr) {\n    if (isHandlerProvided && hdlr !== handler) {\n      return true;\n    }\n    this.element.removeEventListener(eventName, hdlr, false);\n    return false;\n  }, this);\n};\n\nEventElement.prototype.unbindAll = function () {\n  for (var name in this.events) {\n    this.unbind(name);\n  }\n};\n\nvar EventManager = function () {\n  this.eventElements = [];\n};\n\nEventManager.prototype.eventElement = function (element) {\n  var ee = this.eventElements.filter(function (eventElement) {\n    return eventElement.element === element;\n  })[0];\n  if (typeof ee === 'undefined') {\n    ee = new EventElement(element);\n    this.eventElements.push(ee);\n  }\n  return ee;\n};\n\nEventManager.prototype.bind = function (element, eventName, handler) {\n  this.eventElement(element).bind(eventName, handler);\n};\n\nEventManager.prototype.unbind = function (element, eventName, handler) {\n  this.eventElement(element).unbind(eventName, handler);\n};\n\nEventManager.prototype.unbindAll = function () {\n  for (var i = 0; i < this.eventElements.length; i++) {\n    this.eventElements[i].unbindAll();\n  }\n};\n\nEventManager.prototype.once = function (element, eventName, handler) {\n  var ee = this.eventElement(element);\n  var onceHandler = function (e) {\n    ee.unbind(eventName, onceHandler);\n    handler(e);\n  };\n  ee.bind(eventName, onceHandler);\n};\n\nmodule.exports = EventManager;\n",
    "'use strict';\n\nmodule.exports = (function () {\n  function s4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n               .toString(16)\n               .substring(1);\n  }\n  return function () {\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n           s4() + '-' + s4() + s4() + s4();\n  };\n})();\n",
    "'use strict';\n\nvar cls = require('./class');\nvar dom = require('./dom');\n\nvar toInt = exports.toInt = function (x) {\n  return parseInt(x, 10) || 0;\n};\n\nvar clone = exports.clone = function (obj) {\n  if (!obj) {\n    return null;\n  } else if (Array.isArray(obj)) {\n    return obj.map(clone);\n  } else if (typeof obj === 'object') {\n    var result = {};\n    for (var key in obj) {\n      result[key] = clone(obj[key]);\n    }\n    return result;\n  } else {\n    return obj;\n  }\n};\n\nexports.debounce = function (func, wait, immediate) {\n  var timeout;\n  return function () {\n    var context = this;\n    var args = arguments;\n    var later = function () {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n};\n\nexports.extend = function (original, source) {\n  var result = clone(original);\n  for (var key in source) {\n    result[key] = clone(source[key]);\n  }\n  return result;\n};\n\nexports.isEditable = function (el) {\n  return dom.matches(el, \"input,[contenteditable]\") ||\n         dom.matches(el, \"select,[contenteditable]\") ||\n         dom.matches(el, \"textarea,[contenteditable]\") ||\n         dom.matches(el, \"button,[contenteditable]\");\n};\n\nexports.removePsClasses = function (element) {\n  var clsList = cls.list(element);\n  for (var i = 0; i < clsList.length; i++) {\n    var className = clsList[i];\n    if (className.indexOf('ps-') === 0) {\n      cls.remove(element, className);\n    }\n  }\n};\n\nexports.outerWidth = function (element) {\n  return toInt(dom.css(element, 'width')) +\n         toInt(dom.css(element, 'paddingLeft')) +\n         toInt(dom.css(element, 'paddingRight')) +\n         toInt(dom.css(element, 'borderLeftWidth')) +\n         toInt(dom.css(element, 'borderRightWidth'));\n};\n\nexports.startScrolling = function (element, axis) {\n  cls.add(element, 'ps-in-scrolling');\n  if (typeof axis !== 'undefined') {\n    cls.add(element, 'ps-' + axis);\n  } else {\n    cls.add(element, 'ps-x');\n    cls.add(element, 'ps-y');\n  }\n};\n\nexports.stopScrolling = function (element, axis) {\n  cls.remove(element, 'ps-in-scrolling');\n  if (typeof axis !== 'undefined') {\n    cls.remove(element, 'ps-' + axis);\n  } else {\n    cls.remove(element, 'ps-x');\n    cls.remove(element, 'ps-y');\n  }\n};\n\nexports.env = {\n  isWebKit: 'WebkitAppearance' in document.documentElement.style,\n  supportsTouch: (('ontouchstart' in window) || window.DocumentTouch && document instanceof window.DocumentTouch),\n  supportsIePointer: window.navigator.msMaxTouchPoints !== null\n};\n",
    "'use strict';\n\nvar destroy = require('./plugin/destroy');\nvar initialize = require('./plugin/initialize');\nvar update = require('./plugin/update');\n\nmodule.exports = {\n  initialize: initialize,\n  update: update,\n  destroy: destroy\n};\n",
    "'use strict';\n\nvar update = require('./update');\nvar MutationObserver = window.MutationObserver;\nvar instances = require('./instances');\n\nvar createDOMEvent = function (name) {\n  var event = document.createEvent('Event');\n  event.initEvent(name, true, true);\n  return event;\n};\n\nmodule.exports = function (element) {\n  if (MutationObserver === null || MutationObserver === undefined) {\n    // MutationObserver is not supported\n    return;\n  }\n\n  var i = instances.get(element);\n  var onMutationObserver = function () {\n    update(element);\n    element.dispatchEvent(createDOMEvent('ps-dom-change'));\n  };\n\n  i.observer = new MutationObserver(onMutationObserver);\n  onMutationObserver();\n\n  var config = { childList: true, subtree: true };\n  i.observer.observe(element, config);\n};\n",
    "'use strict';\n\nmodule.exports = {\n  handlers: ['click-rail', 'drag-scrollbar', 'keyboard', 'wheel', 'touch'],\n  maxScrollbarLength: null,\n  minScrollbarLength: null,\n  scrollXMarginOffset: 0,\n  scrollYMarginOffset: 0,\n  suppressScrollX: false,\n  suppressScrollY: false,\n  swipePropagation: true,\n  useBothWheelAxes: false,\n  wheelPropagation: false,\n  wheelSpeed: 1,\n  theme: 'default',\n  autoupdate: true\n};\n",
    "'use strict';\n\nvar _ = require('../lib/helper');\nvar dom = require('../lib/dom');\nvar instances = require('./instances');\n\nmodule.exports = function (element) {\n  var i = instances.get(element);\n\n  if (!i) {\n    return;\n  }\n\n  if (i.observer) {\n    i.observer.disconnect();\n  }\n\n  i.event.unbindAll();\n  dom.remove(i.scrollbarX);\n  dom.remove(i.scrollbarY);\n  dom.remove(i.scrollbarXRail);\n  dom.remove(i.scrollbarYRail);\n  _.removePsClasses(element);\n\n  instances.remove(element);\n};\n",
    "'use strict';\n\nvar instances = require('../instances');\nvar updateGeometry = require('../update-geometry');\nvar updateScroll = require('../update-scroll');\n\nfunction bindClickRailHandler(element, i) {\n  function pageOffset(el) {\n    return el.getBoundingClientRect();\n  }\n  var stopPropagation = function (e) { e.stopPropagation(); };\n\n  i.event.bind(i.scrollbarY, 'click', stopPropagation);\n  i.event.bind(i.scrollbarYRail, 'click', function (e) {\n    var positionTop = e.pageY - window.pageYOffset - pageOffset(i.scrollbarYRail).top;\n    var direction = positionTop > i.scrollbarYTop ? 1 : -1;\n\n    updateScroll(element, 'top', element.scrollTop + direction * i.containerHeight);\n    updateGeometry(element);\n\n    e.stopPropagation();\n  });\n\n  i.event.bind(i.scrollbarX, 'click', stopPropagation);\n  i.event.bind(i.scrollbarXRail, 'click', function (e) {\n    var positionLeft = e.pageX - window.pageXOffset - pageOffset(i.scrollbarXRail).left;\n    var direction = positionLeft > i.scrollbarXLeft ? 1 : -1;\n\n    updateScroll(element, 'left', element.scrollLeft + direction * i.containerWidth);\n    updateGeometry(element);\n\n    e.stopPropagation();\n  });\n}\n\nmodule.exports = function (element) {\n  var i = instances.get(element);\n  bindClickRailHandler(element, i);\n};\n",
    "'use strict';\n\nvar _ = require('../../lib/helper');\nvar dom = require('../../lib/dom');\nvar instances = require('../instances');\nvar updateGeometry = require('../update-geometry');\nvar updateScroll = require('../update-scroll');\n\nfunction bindMouseScrollXHandler(element, i) {\n  var currentLeft = null;\n  var currentPageX = null;\n\n  function updateScrollLeft(deltaX) {\n    var newLeft = currentLeft + (deltaX * i.railXRatio);\n    var maxLeft = Math.max(0, i.scrollbarXRail.getBoundingClientRect().left) + (i.railXRatio * (i.railXWidth - i.scrollbarXWidth));\n\n    if (newLeft < 0) {\n      i.scrollbarXLeft = 0;\n    } else if (newLeft > maxLeft) {\n      i.scrollbarXLeft = maxLeft;\n    } else {\n      i.scrollbarXLeft = newLeft;\n    }\n\n    var scrollLeft = _.toInt(i.scrollbarXLeft * (i.contentWidth - i.containerWidth) / (i.containerWidth - (i.railXRatio * i.scrollbarXWidth))) - i.negativeScrollAdjustment;\n    updateScroll(element, 'left', scrollLeft);\n  }\n\n  var mouseMoveHandler = function (e) {\n    updateScrollLeft(e.pageX - currentPageX);\n    updateGeometry(element);\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  var mouseUpHandler = function () {\n    _.stopScrolling(element, 'x');\n    i.event.unbind(i.ownerDocument, 'mousemove', mouseMoveHandler);\n  };\n\n  i.event.bind(i.scrollbarX, 'mousedown', function (e) {\n    currentPageX = e.pageX;\n    currentLeft = _.toInt(dom.css(i.scrollbarX, 'left')) * i.railXRatio;\n    _.startScrolling(element, 'x');\n\n    i.event.bind(i.ownerDocument, 'mousemove', mouseMoveHandler);\n    i.event.once(i.ownerDocument, 'mouseup', mouseUpHandler);\n\n    e.stopPropagation();\n    e.preventDefault();\n  });\n}\n\nfunction bindMouseScrollYHandler(element, i) {\n  var currentTop = null;\n  var currentPageY = null;\n\n  function updateScrollTop(deltaY) {\n    var newTop = currentTop + (deltaY * i.railYRatio);\n    var maxTop = Math.max(0, i.scrollbarYRail.getBoundingClientRect().top) + (i.railYRatio * (i.railYHeight - i.scrollbarYHeight));\n\n    if (newTop < 0) {\n      i.scrollbarYTop = 0;\n    } else if (newTop > maxTop) {\n      i.scrollbarYTop = maxTop;\n    } else {\n      i.scrollbarYTop = newTop;\n    }\n\n    var scrollTop = _.toInt(i.scrollbarYTop * (i.contentHeight - i.containerHeight) / (i.containerHeight - (i.railYRatio * i.scrollbarYHeight)));\n    updateScroll(element, 'top', scrollTop);\n  }\n\n  var mouseMoveHandler = function (e) {\n    updateScrollTop(e.pageY - currentPageY);\n    updateGeometry(element);\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  var mouseUpHandler = function () {\n    _.stopScrolling(element, 'y');\n    i.event.unbind(i.ownerDocument, 'mousemove', mouseMoveHandler);\n  };\n\n  i.event.bind(i.scrollbarY, 'mousedown', function (e) {\n    currentPageY = e.pageY;\n    currentTop = _.toInt(dom.css(i.scrollbarY, 'top')) * i.railYRatio;\n    _.startScrolling(element, 'y');\n\n    i.event.bind(i.ownerDocument, 'mousemove', mouseMoveHandler);\n    i.event.once(i.ownerDocument, 'mouseup', mouseUpHandler);\n\n    e.stopPropagation();\n    e.preventDefault();\n  });\n}\n\nmodule.exports = function (element) {\n  var i = instances.get(element);\n  bindMouseScrollXHandler(element, i);\n  bindMouseScrollYHandler(element, i);\n};\n",
    "'use strict';\n\nvar _ = require('../../lib/helper');\nvar dom = require('../../lib/dom');\nvar instances = require('../instances');\nvar updateGeometry = require('../update-geometry');\nvar updateScroll = require('../update-scroll');\n\nfunction bindKeyboardHandler(element, i) {\n  var hovered = false;\n  i.event.bind(element, 'mouseenter', function () {\n    hovered = true;\n  });\n  i.event.bind(element, 'mouseleave', function () {\n    hovered = false;\n  });\n\n  var shouldPrevent = false;\n  function shouldPreventDefault(deltaX, deltaY) {\n    var scrollTop = element.scrollTop;\n    if (deltaX === 0) {\n      if (!i.scrollbarYActive) {\n        return false;\n      }\n      if ((scrollTop === 0 && deltaY > 0) || (scrollTop >= i.contentHeight - i.containerHeight && deltaY < 0)) {\n        return !i.settings.wheelPropagation;\n      }\n    }\n\n    var scrollLeft = element.scrollLeft;\n    if (deltaY === 0) {\n      if (!i.scrollbarXActive) {\n        return false;\n      }\n      if ((scrollLeft === 0 && deltaX < 0) || (scrollLeft >= i.contentWidth - i.containerWidth && deltaX > 0)) {\n        return !i.settings.wheelPropagation;\n      }\n    }\n    return true;\n  }\n\n  i.event.bind(i.ownerDocument, 'keydown', function (e) {\n    if ((e.isDefaultPrevented && e.isDefaultPrevented()) || e.defaultPrevented) {\n      return;\n    }\n\n    var focused = dom.matches(i.scrollbarX, ':focus') ||\n                  dom.matches(i.scrollbarY, ':focus');\n\n    if (!hovered && !focused) {\n      return;\n    }\n\n    var activeElement = document.activeElement ? document.activeElement : i.ownerDocument.activeElement;\n    if (activeElement) {\n      if (activeElement.tagName === 'IFRAME') {\n        activeElement = activeElement.contentDocument.activeElement;\n      } else {\n        // go deeper if element is a webcomponent\n        while (activeElement.shadowRoot) {\n          activeElement = activeElement.shadowRoot.activeElement;\n        }\n      }\n      if (_.isEditable(activeElement)) {\n        return;\n      }\n    }\n\n    var deltaX = 0;\n    var deltaY = 0;\n\n    switch (e.which) {\n    case 37: // left\n      if (e.metaKey) {\n        deltaX = -i.contentWidth;\n      } else if (e.altKey) {\n        deltaX = -i.containerWidth;\n      } else {\n        deltaX = -30;\n      }\n      break;\n    case 38: // up\n      if (e.metaKey) {\n        deltaY = i.contentHeight;\n      } else if (e.altKey) {\n        deltaY = i.containerHeight;\n      } else {\n        deltaY = 30;\n      }\n      break;\n    case 39: // right\n      if (e.metaKey) {\n        deltaX = i.contentWidth;\n      } else if (e.altKey) {\n        deltaX = i.containerWidth;\n      } else {\n        deltaX = 30;\n      }\n      break;\n    case 40: // down\n      if (e.metaKey) {\n        deltaY = -i.contentHeight;\n      } else if (e.altKey) {\n        deltaY = -i.containerHeight;\n      } else {\n        deltaY = -30;\n      }\n      break;\n    case 33: // page up\n      deltaY = 90;\n      break;\n    case 32: // space bar\n      if (e.shiftKey) {\n        deltaY = 90;\n      } else {\n        deltaY = -90;\n      }\n      break;\n    case 34: // page down\n      deltaY = -90;\n      break;\n    case 35: // end\n      if (e.ctrlKey) {\n        deltaY = -i.contentHeight;\n      } else {\n        deltaY = -i.containerHeight;\n      }\n      break;\n    case 36: // home\n      if (e.ctrlKey) {\n        deltaY = element.scrollTop;\n      } else {\n        deltaY = i.containerHeight;\n      }\n      break;\n    default:\n      return;\n    }\n\n    updateScroll(element, 'top', element.scrollTop - deltaY);\n    updateScroll(element, 'left', element.scrollLeft + deltaX);\n    updateGeometry(element);\n\n    shouldPrevent = shouldPreventDefault(deltaX, deltaY);\n    if (shouldPrevent) {\n      e.preventDefault();\n    }\n  });\n}\n\nmodule.exports = function (element) {\n  var i = instances.get(element);\n  bindKeyboardHandler(element, i);\n};\n",
    "'use strict';\n\nvar instances = require('../instances');\nvar updateGeometry = require('../update-geometry');\nvar updateScroll = require('../update-scroll');\n\nfunction bindMouseWheelHandler(element, i) {\n  var shouldPrevent = false;\n\n  function shouldPreventDefault(deltaX, deltaY) {\n    var scrollTop = element.scrollTop;\n    if (deltaX === 0) {\n      if (!i.scrollbarYActive) {\n        return false;\n      }\n      if ((scrollTop === 0 && deltaY > 0) || (scrollTop >= i.contentHeight - i.containerHeight && deltaY < 0)) {\n        return !i.settings.wheelPropagation;\n      }\n    }\n\n    var scrollLeft = element.scrollLeft;\n    if (deltaY === 0) {\n      if (!i.scrollbarXActive) {\n        return false;\n      }\n      if ((scrollLeft === 0 && deltaX < 0) || (scrollLeft >= i.contentWidth - i.containerWidth && deltaX > 0)) {\n        return !i.settings.wheelPropagation;\n      }\n    }\n    return true;\n  }\n\n  function getDeltaFromEvent(e) {\n    var deltaX = e.deltaX;\n    var deltaY = -1 * e.deltaY;\n\n    if (typeof deltaX === \"undefined\" || typeof deltaY === \"undefined\") {\n      // OS X Safari\n      deltaX = -1 * e.wheelDeltaX / 6;\n      deltaY = e.wheelDeltaY / 6;\n    }\n\n    if (e.deltaMode && e.deltaMode === 1) {\n      // Firefox in deltaMode 1: Line scrolling\n      deltaX *= 10;\n      deltaY *= 10;\n    }\n\n    if (deltaX !== deltaX && deltaY !== deltaY/* NaN checks */) {\n      // IE in some mouse drivers\n      deltaX = 0;\n      deltaY = e.wheelDelta;\n    }\n\n    if (e.shiftKey) {\n      // reverse axis with shift key\n      return [-deltaY, -deltaX];\n    }\n    return [deltaX, deltaY];\n  }\n\n  function shouldBeConsumedByChild(deltaX, deltaY) {\n    var child = element.querySelector('textarea:hover, select[multiple]:hover, .ps-child:hover');\n    if (child) {\n      if (!window.getComputedStyle(child).overflow.match(/(scroll|auto)/)) {\n        // if not scrollable\n        return false;\n      }\n\n      var maxScrollTop = child.scrollHeight - child.clientHeight;\n      if (maxScrollTop > 0) {\n        if (!(child.scrollTop === 0 && deltaY > 0) && !(child.scrollTop === maxScrollTop && deltaY < 0)) {\n          return true;\n        }\n      }\n      var maxScrollLeft = child.scrollLeft - child.clientWidth;\n      if (maxScrollLeft > 0) {\n        if (!(child.scrollLeft === 0 && deltaX < 0) && !(child.scrollLeft === maxScrollLeft && deltaX > 0)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  function mousewheelHandler(e) {\n    var delta = getDeltaFromEvent(e);\n\n    var deltaX = delta[0];\n    var deltaY = delta[1];\n\n    if (shouldBeConsumedByChild(deltaX, deltaY)) {\n      return;\n    }\n\n    shouldPrevent = false;\n    if (!i.settings.useBothWheelAxes) {\n      // deltaX will only be used for horizontal scrolling and deltaY will\n      // only be used for vertical scrolling - this is the default\n      updateScroll(element, 'top', element.scrollTop - (deltaY * i.settings.wheelSpeed));\n      updateScroll(element, 'left', element.scrollLeft + (deltaX * i.settings.wheelSpeed));\n    } else if (i.scrollbarYActive && !i.scrollbarXActive) {\n      // only vertical scrollbar is active and useBothWheelAxes option is\n      // active, so let's scroll vertical bar using both mouse wheel axes\n      if (deltaY) {\n        updateScroll(element, 'top', element.scrollTop - (deltaY * i.settings.wheelSpeed));\n      } else {\n        updateScroll(element, 'top', element.scrollTop + (deltaX * i.settings.wheelSpeed));\n      }\n      shouldPrevent = true;\n    } else if (i.scrollbarXActive && !i.scrollbarYActive) {\n      // useBothWheelAxes and only horizontal bar is active, so use both\n      // wheel axes for horizontal bar\n      if (deltaX) {\n        updateScroll(element, 'left', element.scrollLeft + (deltaX * i.settings.wheelSpeed));\n      } else {\n        updateScroll(element, 'left', element.scrollLeft - (deltaY * i.settings.wheelSpeed));\n      }\n      shouldPrevent = true;\n    }\n\n    updateGeometry(element);\n\n    shouldPrevent = (shouldPrevent || shouldPreventDefault(deltaX, deltaY));\n    if (shouldPrevent) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n\n  if (typeof window.onwheel !== \"undefined\") {\n    i.event.bind(element, 'wheel', mousewheelHandler);\n  } else if (typeof window.onmousewheel !== \"undefined\") {\n    i.event.bind(element, 'mousewheel', mousewheelHandler);\n  }\n}\n\nmodule.exports = function (element) {\n  var i = instances.get(element);\n  bindMouseWheelHandler(element, i);\n};\n",
    "'use strict';\n\nvar instances = require('../instances');\nvar updateGeometry = require('../update-geometry');\n\nfunction bindNativeScrollHandler(element, i) {\n  i.event.bind(element, 'scroll', function () {\n    updateGeometry(element);\n  });\n}\n\nmodule.exports = function (element) {\n  var i = instances.get(element);\n  bindNativeScrollHandler(element, i);\n};\n",
    "'use strict';\n\nvar _ = require('../../lib/helper');\nvar instances = require('../instances');\nvar updateGeometry = require('../update-geometry');\nvar updateScroll = require('../update-scroll');\n\nfunction bindSelectionHandler(element, i) {\n  function getRangeNode() {\n    var selection = window.getSelection ? window.getSelection() :\n                    document.getSelection ? document.getSelection() : '';\n    if (selection.toString().length === 0) {\n      return null;\n    } else {\n      return selection.getRangeAt(0).commonAncestorContainer;\n    }\n  }\n\n  var scrollingLoop = null;\n  var scrollDiff = {top: 0, left: 0};\n  function startScrolling() {\n    if (!scrollingLoop) {\n      scrollingLoop = setInterval(function () {\n        if (!instances.get(element)) {\n          clearInterval(scrollingLoop);\n          return;\n        }\n\n        updateScroll(element, 'top', element.scrollTop + scrollDiff.top);\n        updateScroll(element, 'left', element.scrollLeft + scrollDiff.left);\n        updateGeometry(element);\n      }, 50); // every .1 sec\n    }\n  }\n  function stopScrolling() {\n    if (scrollingLoop) {\n      clearInterval(scrollingLoop);\n      scrollingLoop = null;\n    }\n    _.stopScrolling(element);\n  }\n\n  var isSelected = false;\n  i.event.bind(i.ownerDocument, 'selectionchange', function () {\n    if (element.contains(getRangeNode())) {\n      isSelected = true;\n    } else {\n      isSelected = false;\n      stopScrolling();\n    }\n  });\n  i.event.bind(window, 'mouseup', function () {\n    if (isSelected) {\n      isSelected = false;\n      stopScrolling();\n    }\n  });\n  i.event.bind(window, 'keyup', function () {\n    if (isSelected) {\n      isSelected = false;\n      stopScrolling();\n    }\n  });\n\n  i.event.bind(window, 'mousemove', function (e) {\n    if (isSelected) {\n      var mousePosition = {x: e.pageX, y: e.pageY};\n      var containerGeometry = {\n        left: element.offsetLeft,\n        right: element.offsetLeft + element.offsetWidth,\n        top: element.offsetTop,\n        bottom: element.offsetTop + element.offsetHeight\n      };\n\n      if (mousePosition.x < containerGeometry.left + 3) {\n        scrollDiff.left = -5;\n        _.startScrolling(element, 'x');\n      } else if (mousePosition.x > containerGeometry.right - 3) {\n        scrollDiff.left = 5;\n        _.startScrolling(element, 'x');\n      } else {\n        scrollDiff.left = 0;\n      }\n\n      if (mousePosition.y < containerGeometry.top + 3) {\n        if (containerGeometry.top + 3 - mousePosition.y < 5) {\n          scrollDiff.top = -5;\n        } else {\n          scrollDiff.top = -20;\n        }\n        _.startScrolling(element, 'y');\n      } else if (mousePosition.y > containerGeometry.bottom - 3) {\n        if (mousePosition.y - containerGeometry.bottom + 3 < 5) {\n          scrollDiff.top = 5;\n        } else {\n          scrollDiff.top = 20;\n        }\n        _.startScrolling(element, 'y');\n      } else {\n        scrollDiff.top = 0;\n      }\n\n      if (scrollDiff.top === 0 && scrollDiff.left === 0) {\n        stopScrolling();\n      } else {\n        startScrolling();\n      }\n    }\n  });\n}\n\nmodule.exports = function (element) {\n  var i = instances.get(element);\n  bindSelectionHandler(element, i);\n};\n",
    "'use strict';\n\nvar _ = require('../../lib/helper');\nvar instances = require('../instances');\nvar updateGeometry = require('../update-geometry');\nvar updateScroll = require('../update-scroll');\n\nfunction bindTouchHandler(element, i, supportsTouch, supportsIePointer) {\n  function shouldPreventDefault(deltaX, deltaY) {\n    var scrollTop = element.scrollTop;\n    var scrollLeft = element.scrollLeft;\n    var magnitudeX = Math.abs(deltaX);\n    var magnitudeY = Math.abs(deltaY);\n\n    if (magnitudeY > magnitudeX) {\n      // user is perhaps trying to swipe up/down the page\n\n      if (((deltaY < 0) && (scrollTop === i.contentHeight - i.containerHeight)) ||\n          ((deltaY > 0) && (scrollTop === 0))) {\n        return !i.settings.swipePropagation;\n      }\n    } else if (magnitudeX > magnitudeY) {\n      // user is perhaps trying to swipe left/right across the page\n\n      if (((deltaX < 0) && (scrollLeft === i.contentWidth - i.containerWidth)) ||\n          ((deltaX > 0) && (scrollLeft === 0))) {\n        return !i.settings.swipePropagation;\n      }\n    }\n\n    return true;\n  }\n\n  function applyTouchMove(differenceX, differenceY) {\n    updateScroll(element, 'top', element.scrollTop - differenceY);\n    updateScroll(element, 'left', element.scrollLeft - differenceX);\n\n    updateGeometry(element);\n  }\n\n  var startOffset = {};\n  var startTime = 0;\n  var speed = {};\n  var easingLoop = null;\n  var inGlobalTouch = false;\n  var inLocalTouch = false;\n\n  function globalTouchStart() {\n    inGlobalTouch = true;\n  }\n  function globalTouchEnd() {\n    inGlobalTouch = false;\n  }\n\n  function getTouch(e) {\n    if (e.targetTouches) {\n      return e.targetTouches[0];\n    } else {\n      // Maybe IE pointer\n      return e;\n    }\n  }\n  function shouldHandle(e) {\n    if (e.targetTouches && e.targetTouches.length === 1) {\n      return true;\n    }\n    if (e.pointerType && e.pointerType !== 'mouse' && e.pointerType !== e.MSPOINTER_TYPE_MOUSE) {\n      return true;\n    }\n    return false;\n  }\n  function touchStart(e) {\n    if (shouldHandle(e)) {\n      inLocalTouch = true;\n\n      var touch = getTouch(e);\n\n      startOffset.pageX = touch.pageX;\n      startOffset.pageY = touch.pageY;\n\n      startTime = (new Date()).getTime();\n\n      if (easingLoop !== null) {\n        clearInterval(easingLoop);\n      }\n\n      e.stopPropagation();\n    }\n  }\n  function touchMove(e) {\n    var target = e.target;\n    var className = target && target.getAttribute && target.getAttribute('class') || '';\n\n    if (!className.match(/ps-prevent-touchmove/)) {\n      if (!inLocalTouch && i.settings.swipePropagation) {\n        touchStart(e);\n      }\n      if (!inGlobalTouch && inLocalTouch && shouldHandle(e)) {\n        var touch = getTouch(e);\n\n        var currentOffset = {pageX: touch.pageX, pageY: touch.pageY};\n\n        var differenceX = currentOffset.pageX - startOffset.pageX;\n        var differenceY = currentOffset.pageY - startOffset.pageY;\n\n        applyTouchMove(differenceX, differenceY);\n        startOffset = currentOffset;\n\n        var currentTime = (new Date()).getTime();\n\n        var timeGap = currentTime - startTime;\n        if (timeGap > 0) {\n          speed.x = differenceX / timeGap;\n          speed.y = differenceY / timeGap;\n          startTime = currentTime;\n        }\n\n        if (shouldPreventDefault(differenceX, differenceY)) {\n          e.stopPropagation();\n          e.preventDefault();\n        }\n      }\n    }\n  }\n  function touchEnd() {\n    if (!inGlobalTouch && inLocalTouch) {\n      inLocalTouch = false;\n\n      clearInterval(easingLoop);\n      easingLoop = setInterval(function () {\n        if (!instances.get(element)) {\n          clearInterval(easingLoop);\n          return;\n        }\n\n        if (!speed.x && !speed.y) {\n          clearInterval(easingLoop);\n          return;\n        }\n\n        if (Math.abs(speed.x) < 0.01 && Math.abs(speed.y) < 0.01) {\n          clearInterval(easingLoop);\n          return;\n        }\n\n        applyTouchMove(speed.x * 30, speed.y * 30);\n\n        speed.x *= 0.8;\n        speed.y *= 0.8;\n      }, 10);\n    }\n  }\n\n  if (supportsTouch) {\n    i.event.bind(window, 'touchstart', globalTouchStart);\n    i.event.bind(window, 'touchend', globalTouchEnd);\n    i.event.bind(element, 'touchstart', touchStart);\n    i.event.bind(element, 'touchmove', touchMove);\n    i.event.bind(element, 'touchend', touchEnd);\n  } else if (supportsIePointer) {\n    if (window.PointerEvent) {\n      i.event.bind(window, 'pointerdown', globalTouchStart);\n      i.event.bind(window, 'pointerup', globalTouchEnd);\n      i.event.bind(element, 'pointerdown', touchStart);\n      i.event.bind(element, 'pointermove', touchMove);\n      i.event.bind(element, 'pointerup', touchEnd);\n    } else if (window.MSPointerEvent) {\n      i.event.bind(window, 'MSPointerDown', globalTouchStart);\n      i.event.bind(window, 'MSPointerUp', globalTouchEnd);\n      i.event.bind(element, 'MSPointerDown', touchStart);\n      i.event.bind(element, 'MSPointerMove', touchMove);\n      i.event.bind(element, 'MSPointerUp', touchEnd);\n    }\n  }\n}\n\nmodule.exports = function (element) {\n  if (!_.env.supportsTouch && !_.env.supportsIePointer) {\n    return;\n  }\n\n  var i = instances.get(element);\n  bindTouchHandler(element, i, _.env.supportsTouch, _.env.supportsIePointer);\n};\n",
    "'use strict';\n\nvar _ = require('../lib/helper');\nvar cls = require('../lib/class');\nvar instances = require('./instances');\nvar updateGeometry = require('./update-geometry');\nvar autoupdate = require('./autoupdate');\nvar resizer = require('./resizer');\n\n// Handlers\nvar handlers = {\n  'click-rail': require('./handler/click-rail'),\n  'drag-scrollbar': require('./handler/drag-scrollbar'),\n  'keyboard': require('./handler/keyboard'),\n  'wheel': require('./handler/mouse-wheel'),\n  'touch': require('./handler/touch'),\n  'selection': require('./handler/selection')\n};\nvar nativeScrollHandler = require('./handler/native-scroll');\n\nmodule.exports = function (element, userSettings) {\n  userSettings = typeof userSettings === 'object' ? userSettings : {};\n\n  cls.add(element, 'ps-container');\n\n  // Create a plugin instance.\n  var i = instances.add(element);\n\n  i.settings = _.extend(i.settings, userSettings);\n  cls.add(element, 'ps-theme-' + i.settings.theme);\n\n  i.settings.handlers.forEach(function (handlerName) {\n    handlers[handlerName](element);\n  });\n\n  nativeScrollHandler(element);\n\n  updateGeometry(element);\n\n  if (i.settings.autoupdate) {\n    autoupdate(element);\n    resizer(element);\n  }\n};\n",
    "'use strict';\n\nvar _ = require('../lib/helper');\nvar cls = require('../lib/class');\nvar defaultSettings = require('./default-setting');\nvar dom = require('../lib/dom');\nvar EventManager = require('../lib/event-manager');\nvar guid = require('../lib/guid');\n\nvar instances = {};\n\nfunction Instance(element) {\n  var i = this;\n\n  i.settings = _.clone(defaultSettings);\n  i.containerWidth = null;\n  i.containerHeight = null;\n  i.contentWidth = null;\n  i.contentHeight = null;\n\n  i.isRtl = dom.css(element, 'direction') === \"rtl\";\n  i.isNegativeScroll = (function () {\n    var originalScrollLeft = element.scrollLeft;\n    var result = null;\n    element.scrollLeft = -1;\n    result = element.scrollLeft < 0;\n    element.scrollLeft = originalScrollLeft;\n    return result;\n  })();\n  i.negativeScrollAdjustment = i.isNegativeScroll ? element.scrollWidth - element.clientWidth : 0;\n  i.event = new EventManager();\n  i.ownerDocument = element.ownerDocument || document;\n\n  function focus() {\n    cls.add(element, 'ps-focus');\n  }\n\n  function blur() {\n    cls.remove(element, 'ps-focus');\n  }\n\n  i.scrollbarXRail = dom.appendTo(dom.e('div', 'ps-scrollbar-x-rail'), element);\n  i.scrollbarX = dom.appendTo(dom.e('div', 'ps-scrollbar-x'), i.scrollbarXRail);\n  i.scrollbarX.setAttribute('tabindex', 0);\n  i.event.bind(i.scrollbarX, 'focus', focus);\n  i.event.bind(i.scrollbarX, 'blur', blur);\n  i.scrollbarXActive = null;\n  i.scrollbarXWidth = null;\n  i.scrollbarXLeft = null;\n  i.scrollbarXBottom = _.toInt(dom.css(i.scrollbarXRail, 'bottom'));\n  i.isScrollbarXUsingBottom = i.scrollbarXBottom === i.scrollbarXBottom; // !isNaN\n  i.scrollbarXTop = i.isScrollbarXUsingBottom ? null : _.toInt(dom.css(i.scrollbarXRail, 'top'));\n  i.railBorderXWidth = _.toInt(dom.css(i.scrollbarXRail, 'borderLeftWidth')) + _.toInt(dom.css(i.scrollbarXRail, 'borderRightWidth'));\n  // Set rail to display:block to calculate margins\n  dom.css(i.scrollbarXRail, 'display', 'block');\n  i.railXMarginWidth = _.toInt(dom.css(i.scrollbarXRail, 'marginLeft')) + _.toInt(dom.css(i.scrollbarXRail, 'marginRight'));\n  dom.css(i.scrollbarXRail, 'display', '');\n  i.railXWidth = null;\n  i.railXRatio = null;\n\n  i.scrollbarYRail = dom.appendTo(dom.e('div', 'ps-scrollbar-y-rail'), element);\n  i.scrollbarY = dom.appendTo(dom.e('div', 'ps-scrollbar-y'), i.scrollbarYRail);\n  i.scrollbarY.setAttribute('tabindex', 0);\n  i.event.bind(i.scrollbarY, 'focus', focus);\n  i.event.bind(i.scrollbarY, 'blur', blur);\n  i.scrollbarYActive = null;\n  i.scrollbarYHeight = null;\n  i.scrollbarYTop = null;\n  i.scrollbarYRight = _.toInt(dom.css(i.scrollbarYRail, 'right'));\n  i.isScrollbarYUsingRight = i.scrollbarYRight === i.scrollbarYRight; // !isNaN\n  i.scrollbarYLeft = i.isScrollbarYUsingRight ? null : _.toInt(dom.css(i.scrollbarYRail, 'left'));\n  i.scrollbarYOuterWidth = i.isRtl ? _.outerWidth(i.scrollbarY) : null;\n  i.railBorderYWidth = _.toInt(dom.css(i.scrollbarYRail, 'borderTopWidth')) + _.toInt(dom.css(i.scrollbarYRail, 'borderBottomWidth'));\n  dom.css(i.scrollbarYRail, 'display', 'block');\n  i.railYMarginHeight = _.toInt(dom.css(i.scrollbarYRail, 'marginTop')) + _.toInt(dom.css(i.scrollbarYRail, 'marginBottom'));\n  dom.css(i.scrollbarYRail, 'display', '');\n  i.railYHeight = null;\n  i.railYRatio = null;\n}\n\nfunction getId(element) {\n  return element.getAttribute('data-ps-id');\n}\n\nfunction setId(element, id) {\n  element.setAttribute('data-ps-id', id);\n}\n\nfunction removeId(element) {\n  element.removeAttribute('data-ps-id');\n}\n\nexports.add = function (element) {\n  var newId = guid();\n  setId(element, newId);\n  instances[newId] = new Instance(element);\n  return instances[newId];\n};\n\nexports.remove = function (element) {\n  delete instances[getId(element)];\n  removeId(element);\n};\n\nexports.get = function (element) {\n  return instances[getId(element)];\n};\n",
    "'use strict';\n\nvar update = require('./update');\nvar instances = require('./instances');\nvar _ = require('../lib/helper');\n\nmodule.exports = function (element) {\n  var i = instances.get(element);\n\n  var onResize = function () {\n    update(element);\n  };\n\n  i.event.bind(window, 'resize', _.debounce(onResize, 60));\n};\n",
    "'use strict';\n\nvar _ = require('../lib/helper');\nvar cls = require('../lib/class');\nvar dom = require('../lib/dom');\nvar instances = require('./instances');\nvar updateScroll = require('./update-scroll');\n\nfunction getThumbSize(i, thumbSize) {\n  if (i.settings.minScrollbarLength) {\n    thumbSize = Math.max(thumbSize, i.settings.minScrollbarLength);\n  }\n  if (i.settings.maxScrollbarLength) {\n    thumbSize = Math.min(thumbSize, i.settings.maxScrollbarLength);\n  }\n  return thumbSize;\n}\n\nfunction updateCss(element, i) {\n  var xRailOffset = {width: i.railXWidth};\n  if (i.isRtl) {\n    xRailOffset.left = i.negativeScrollAdjustment + element.scrollLeft + i.containerWidth - i.contentWidth;\n  } else {\n    xRailOffset.left = element.scrollLeft;\n  }\n  if (i.isScrollbarXUsingBottom) {\n    xRailOffset.bottom = i.scrollbarXBottom - element.scrollTop;\n  } else {\n    xRailOffset.top = i.scrollbarXTop + element.scrollTop;\n  }\n  dom.css(i.scrollbarXRail, xRailOffset);\n\n  var yRailOffset = {top: element.scrollTop, height: i.railYHeight};\n  if (i.isScrollbarYUsingRight) {\n    if (i.isRtl) {\n      yRailOffset.right = i.contentWidth - (i.negativeScrollAdjustment + element.scrollLeft) - i.scrollbarYRight - i.scrollbarYOuterWidth;\n    } else {\n      yRailOffset.right = i.scrollbarYRight - element.scrollLeft;\n    }\n  } else {\n    if (i.isRtl) {\n      yRailOffset.left = i.negativeScrollAdjustment + element.scrollLeft + i.containerWidth * 2 - i.contentWidth - i.scrollbarYLeft - i.scrollbarYOuterWidth;\n    } else {\n      yRailOffset.left = i.scrollbarYLeft + element.scrollLeft;\n    }\n  }\n  dom.css(i.scrollbarYRail, yRailOffset);\n\n  dom.css(i.scrollbarX, {left: i.scrollbarXLeft, width: i.scrollbarXWidth - i.railBorderXWidth});\n  dom.css(i.scrollbarY, {top: i.scrollbarYTop, height: i.scrollbarYHeight - i.railBorderYWidth});\n}\n\nmodule.exports = function (element) {\n  var i = instances.get(element);\n\n  i.containerWidth = element.clientWidth;\n  i.containerHeight = element.clientHeight;\n  i.contentWidth = element.scrollWidth;\n  i.contentHeight = element.scrollHeight;\n\n  var existingRails;\n  if (!element.contains(i.scrollbarXRail)) {\n    existingRails = dom.queryChildren(element, '.ps-scrollbar-x-rail');\n    if (existingRails.length > 0) {\n      existingRails.forEach(function (rail) {\n        dom.remove(rail);\n      });\n    }\n    dom.appendTo(i.scrollbarXRail, element);\n  }\n  if (!element.contains(i.scrollbarYRail)) {\n    existingRails = dom.queryChildren(element, '.ps-scrollbar-y-rail');\n    if (existingRails.length > 0) {\n      existingRails.forEach(function (rail) {\n        dom.remove(rail);\n      });\n    }\n    dom.appendTo(i.scrollbarYRail, element);\n  }\n\n  if (!i.settings.suppressScrollX && i.containerWidth + i.settings.scrollXMarginOffset < i.contentWidth) {\n    i.scrollbarXActive = true;\n    i.railXWidth = i.containerWidth - i.railXMarginWidth;\n    i.railXRatio = i.containerWidth / i.railXWidth;\n    i.scrollbarXWidth = getThumbSize(i, _.toInt(i.railXWidth * i.containerWidth / i.contentWidth));\n    i.scrollbarXLeft = _.toInt((i.negativeScrollAdjustment + element.scrollLeft) * (i.railXWidth - i.scrollbarXWidth) / (i.contentWidth - i.containerWidth));\n  } else {\n    i.scrollbarXActive = false;\n  }\n\n  if (!i.settings.suppressScrollY && i.containerHeight + i.settings.scrollYMarginOffset < i.contentHeight) {\n    i.scrollbarYActive = true;\n    i.railYHeight = i.containerHeight - i.railYMarginHeight;\n    i.railYRatio = i.containerHeight / i.railYHeight;\n    i.scrollbarYHeight = getThumbSize(i, _.toInt(i.railYHeight * i.containerHeight / i.contentHeight));\n    i.scrollbarYTop = _.toInt(element.scrollTop * (i.railYHeight - i.scrollbarYHeight) / (i.contentHeight - i.containerHeight));\n  } else {\n    i.scrollbarYActive = false;\n  }\n\n  if (i.scrollbarXLeft >= i.railXWidth - i.scrollbarXWidth) {\n    i.scrollbarXLeft = i.railXWidth - i.scrollbarXWidth;\n  }\n  if (i.scrollbarYTop >= i.railYHeight - i.scrollbarYHeight) {\n    i.scrollbarYTop = i.railYHeight - i.scrollbarYHeight;\n  }\n\n  updateCss(element, i);\n\n  if (i.scrollbarXActive) {\n    cls.add(element, 'ps-active-x');\n  } else {\n    cls.remove(element, 'ps-active-x');\n    i.scrollbarXWidth = 0;\n    i.scrollbarXLeft = 0;\n    updateScroll(element, 'left', 0);\n  }\n  if (i.scrollbarYActive) {\n    cls.add(element, 'ps-active-y');\n  } else {\n    cls.remove(element, 'ps-active-y');\n    i.scrollbarYHeight = 0;\n    i.scrollbarYTop = 0;\n    updateScroll(element, 'top', 0);\n  }\n};\n",
    "'use strict';\n\nvar instances = require('./instances');\n\nvar lastTop;\nvar lastLeft;\n\nvar createDOMEvent = function (name) {\n  var event = document.createEvent(\"Event\");\n  event.initEvent(name, true, true);\n  return event;\n};\n\nmodule.exports = function (element, axis, value) {\n  if (typeof element === 'undefined') {\n    throw 'You must provide an element to the update-scroll function';\n  }\n\n  if (typeof axis === 'undefined') {\n    throw 'You must provide an axis to the update-scroll function';\n  }\n\n  if (typeof value === 'undefined') {\n    throw 'You must provide a value to the update-scroll function';\n  }\n\n  if (axis === 'top' && value <= 0) {\n    element.scrollTop = value = 0; // don't allow negative scroll\n    element.dispatchEvent(createDOMEvent('ps-y-reach-start'));\n  }\n\n  if (axis === 'left' && value <= 0) {\n    element.scrollLeft = value = 0; // don't allow negative scroll\n    element.dispatchEvent(createDOMEvent('ps-x-reach-start'));\n  }\n\n  var i = instances.get(element);\n\n  if (axis === 'top' && value >= i.contentHeight - i.containerHeight) {\n    // don't allow scroll past container\n    value = i.contentHeight - i.containerHeight;\n    if (value - element.scrollTop <= 1) {\n      // mitigates rounding errors on non-subpixel scroll values\n      value = element.scrollTop;\n    } else {\n      element.scrollTop = value;\n    }\n    element.dispatchEvent(createDOMEvent('ps-y-reach-end'));\n  }\n\n  if (axis === 'left' && value >= i.contentWidth - i.containerWidth) {\n    // don't allow scroll past container\n    value = i.contentWidth - i.containerWidth;\n    if (value - element.scrollLeft <= 1) {\n      // mitigates rounding errors on non-subpixel scroll values\n      value = element.scrollLeft;\n    } else {\n      element.scrollLeft = value;\n    }\n    element.dispatchEvent(createDOMEvent('ps-x-reach-end'));\n  }\n\n  if (!lastTop) {\n    lastTop = element.scrollTop;\n  }\n\n  if (!lastLeft) {\n    lastLeft = element.scrollLeft;\n  }\n\n  if (axis === 'top' && value < lastTop) {\n    element.dispatchEvent(createDOMEvent('ps-scroll-up'));\n  }\n\n  if (axis === 'top' && value > lastTop) {\n    element.dispatchEvent(createDOMEvent('ps-scroll-down'));\n  }\n\n  if (axis === 'left' && value < lastLeft) {\n    element.dispatchEvent(createDOMEvent('ps-scroll-left'));\n  }\n\n  if (axis === 'left' && value > lastLeft) {\n    element.dispatchEvent(createDOMEvent('ps-scroll-right'));\n  }\n\n  if (axis === 'top') {\n    element.scrollTop = lastTop = value;\n    element.dispatchEvent(createDOMEvent('ps-scroll-y'));\n  }\n\n  if (axis === 'left') {\n    element.scrollLeft = lastLeft = value;\n    element.dispatchEvent(createDOMEvent('ps-scroll-x'));\n  }\n\n};\n",
    "'use strict';\n\nvar _ = require('../lib/helper');\nvar dom = require('../lib/dom');\nvar instances = require('./instances');\nvar updateGeometry = require('./update-geometry');\nvar updateScroll = require('./update-scroll');\n\nmodule.exports = function (element) {\n  var i = instances.get(element);\n\n  if (!i) {\n    return;\n  }\n\n  // Recalcuate negative scrollLeft adjustment\n  i.negativeScrollAdjustment = i.isNegativeScroll ? element.scrollWidth - element.clientWidth : 0;\n\n  // Recalculate rail margins\n  dom.css(i.scrollbarXRail, 'display', 'block');\n  dom.css(i.scrollbarYRail, 'display', 'block');\n  i.railXMarginWidth = _.toInt(dom.css(i.scrollbarXRail, 'marginLeft')) + _.toInt(dom.css(i.scrollbarXRail, 'marginRight'));\n  i.railYMarginHeight = _.toInt(dom.css(i.scrollbarYRail, 'marginTop')) + _.toInt(dom.css(i.scrollbarYRail, 'marginBottom'));\n\n  // Hide scrollbars not to affect scrollWidth and scrollHeight\n  dom.css(i.scrollbarXRail, 'display', 'none');\n  dom.css(i.scrollbarYRail, 'display', 'none');\n\n  updateGeometry(element);\n\n  // Update top/left scroll to trigger events\n  updateScroll(element, 'top', element.scrollTop);\n  updateScroll(element, 'left', element.scrollLeft);\n\n  dom.css(i.scrollbarXRail, 'display', '');\n  dom.css(i.scrollbarYRail, 'display', '');\n};\n",
    "(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define('queue', factory) :\n  (global.queue = factory());\n}(this, function () { 'use strict';\n\n  var slice = [].slice;\n\n  function noop() {}\n\n  var noabort = {};\n  var success = [null];\n  function newQueue(concurrency) {\n    if (!(concurrency >= 1)) throw new Error;\n\n    var q,\n        tasks = [],\n        results = [],\n        waiting = 0,\n        active = 0,\n        ended = 0,\n        starting, // inside a synchronous task callback?\n        error,\n        callback = noop,\n        callbackAll = true;\n\n    function start() {\n      if (starting) return; // let the current task complete\n      while (starting = waiting && active < concurrency) {\n        var i = ended + active,\n            t = tasks[i],\n            j = t.length - 1,\n            c = t[j];\n        t[j] = end(i);\n        --waiting, ++active, tasks[i] = c.apply(null, t) || noabort;\n      }\n    }\n\n    function end(i) {\n      return function(e, r) {\n        if (!tasks[i]) throw new Error; // detect multiple callbacks\n        --active, ++ended, tasks[i] = null;\n        if (error != null) return; // only report the first error\n        if (e != null) {\n          abort(e);\n        } else {\n          results[i] = r;\n          if (waiting) start();\n          else if (!active) notify();\n        }\n      };\n    }\n\n    function abort(e) {\n      error = e; // ignore new tasks and squelch active callbacks\n      waiting = NaN; // stop queued tasks from starting\n      notify();\n    }\n\n    function notify() {\n      if (error != null) callback(error);\n      else if (callbackAll) callback(null, results);\n      else callback.apply(null, success.concat(results));\n    }\n\n    return q = {\n      defer: function(f) {\n        if (callback !== noop) throw new Error;\n        var t = slice.call(arguments, 1);\n        t.push(f);\n        ++waiting, tasks.push(t);\n        start();\n        return q;\n      },\n      abort: function() {\n        if (error == null) {\n          var i = ended + active, t;\n          while (--i >= 0) (t = tasks[i]) && t.abort && t.abort();\n          abort(new Error(\"abort\"));\n        }\n        return q;\n      },\n      await: function(f) {\n        if (callback !== noop) throw new Error;\n        callback = f, callbackAll = false;\n        if (!waiting && !active) notify();\n        return q;\n      },\n      awaitAll: function(f) {\n        if (callback !== noop) throw new Error;\n        callback = f, callbackAll = true;\n        if (!waiting && !active) notify();\n        return q;\n      }\n    };\n  }\n\n  function queue(concurrency) {\n    return newQueue(arguments.length ? +concurrency : Infinity);\n  }\n\n  queue.version = \"1.2.1\";\n\n  return queue;\n\n}));",
    "//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n"
  ]
}
{"version":3,"sources":["node_modules/browser-pack/_prelude.js","lib/assets/javascripts/cartodb/common/view_factory.js","lib/assets/javascripts/cartodb/common/view_helpers/random_quote.js","lib/assets/javascripts/cartodb/common/views/base_dialog/view.js","lib/assets/javascripts/cartodb/common/views/create_default_fallback_map.js","lib/assets/javascripts/cartodb/common/views/likes/view.js","lib/assets/javascripts/cartodb/common/views/mapcard_preview.js","lib/assets/javascripts/cartodb/common/views/scrollable_header.js","lib/assets/javascripts/cartodb/explore/dropdown.js","lib/assets/javascripts/cartodb/explore/entry.js","lib/assets/javascripts/cartodb/explore/feed_collection.js","lib/assets/javascripts/cartodb/explore/model.js","lib/assets/javascripts/cartodb/explore/view.js","lib/assets/javascripts/cartodb/public_common/user_industries/dropdown_view.js","lib/assets/javascripts/cartodb/public_common/user_industries_view.js","lib/assets/javascripts/cartodb/public_common/user_settings/dropdown_view.js","lib/assets/javascripts/cartodb/public_common/user_settings_view.js","lib/assets/javascripts/cartodb/public_dashboard/fav_map_view.js","lib/assets/javascripts/cartodb/user_feed/feed_collection.js","lib/assets/javascripts/cartodb/user_feed/view.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_","window","global","cdb","BaseDialog","createDialogByTemplate","templateOrStr","templateData","dialogOptions","this","createDialogByView","createByTemplate","viewOpts","template","isString","templates","getTemplate","view","core","View","render","$el","html","createByList","views","listView","clearSubViews","each","addView","append","contentView","options","extend","clean_on_hide","enter_to_confirm","initialize","elder","render_content","el","quotes","quote","author","Math","round","random","$","ui","common","Dialog","className","overrideDefaults","template_name","triggerDialogEvents","defaults","bind","_setBodyForDialogMode","show","prototype","apply","arguments","trigger","god","removeClass","document","activeElement","blur","addClass","_isSticky","sticky","close","_cancel","undefined","open","hide","ev","skipCancelCallback","killEvent","self","setTimeout","cancel","_ok","ok","action","opts","provider","type","baselayer","url","urlTemplate","map","createVis","version","title","scrollwheel","zoom","map_provider","center","layers","tagName","events","click","model","likes","get","size","show_count","show_label","attr","class","_classNames","href","_hrefLocation","login_url","classNames","push","_animate","one","join","_toggleLike","toggleLiked","width","height","privacy","username","visId","mapsApiResource","authTokens","_TEMPLATES","regular","cdn","name","console","log","load","_startLoader","_loadFromVisId","_generateImageTemplate","replace","protocol","_isHTTPS","cdnConfig","config","tpl","_generateAuthTokensParams","_loadImage","location","indexOf","loadURL","$img","fadeIn","showError","_onError","_stopLoader","_onSuccess","error","$error","img","Image","onerror","onload","src","err","bindAll","_bindScroll","_onWindowScroll","toggleClass","scrollTop","anchorPoint","_unbindScroll","unbind","clean","admin","DropdownMenu","click .js-maps","click .js-datasets","click .js-both","template_base","_onClickBoth","set","_onClickDatasets","_onClickMaps","UserSettingsView","UserIndustriesView","FavMapView","Explore","ExploreModel","init","namespace","base_url","body","exploreModel","onSuccess","visURL","text","favMapView","annotation","fetch","success","authenticatedUser","AuthenticatedUser","host","sync","Backbone","withCORS","user","User","attributes","userSettingsView","userDashboardUrl","viewUrl","dashboard","wrap","feed","Collection","_SORT","updated_at","mapviews","parse","models","rows","query","_generateQuery","orderBy","page","limit","q","reset","data","fields","queryTemplate","table","order_by","where","offset","Model","callback","MapCardPreview","ScrollableHeader","VisualizationDropdown","Visualizations","Feed","_LIMIT","_SMALL_WIDTH","_MEDIUM_WIDTH","_CARD_HEIGHT","_LOADER_TITLE","_DROPDOWN_TEXT","null","derived","click .js-more","click .js-likes","click .js-updated_at","click .js-mapviews","click .js-maps-datasets","maps","_initTemplates","_initModels","_initBindings","_fetchItems","_renderLoader","_setupVisualizationDropdown","_setupScrollableHeader","scrollableHeader","visualizationDropdown","target","horizontal_position","horizontal_offset","tick","position","vertical_offset","add_related_model","_onWindowResize","_renderStaticMaps","mapTemplate","datasetTemplate","loaderTemplatePath","wWidth","rendered_big","rendered_medium","rendered_small","collection","_renderVisualizations","_onChangeShowMore","_onChangeShowLoader","_onChangeShowFilters","_onChangeShowMast","_onChangeOrderBy","_onChangeType","_getGeometryType","geomTypes","types","geomType","find","toLowerCase","_getDatasetSize","item","Utils","readablizeBytes","split","show_loader","show_more","show_filters","show_mast","vis","date","datasetSize","account_host","$item","_renderStaticMap","_initLike","getMapsResourceName","_getLikesEndpoint","_selectType","what","animate","duration","complete","_sort","method","empty","_onClickMore","_onClickLikes","_onClickUpdatedAt","_onClickMapViews","_onClickMapsAndDatasets","_handleClick","constructor","__super__","IndustriesDropdown","click .js-dropdown-target","_createDropdown","on","userUrl","email","isOrgOwner","dashboardUrl","publicProfileUrl","publicProfile","accountSettingsUrl","accountSettings","logoutUrl","logout","SettingsDropdown","datasetsUrl","datasets","mapsUrl","avatarUrl","createDefaultFallbackMap","promise","_createVisMap","_createFallbackMap","done","remove","header","description","search","layer_selector","image","shareable","cartodb_logo","mobile_layout","slides_controller","legends","time_slider","loader","fullscreen","no_cdn","fallbackBaselayer","fn","total_entries","visualizations","ViewFactory","randomQuote","LikeView","_PAGE","_ITEMS_PER_PAGE","emptyTemplatePath","errorTemplatePath","vis_count","_onChangeVisCount","_renderError","_renderEmpty","user_name","geometry_types","owner","avatar_url","table_count","maps_count","likeable","likeModel","Like","newByVisData","vis_id","_fetchLike","likeView","params","exclude_shared","per_page","order","_onFetchError"],"mappings":"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","file":"explore.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BaseDialog = require('./views/base_dialog/view');\n\n/**\n * Convenient factory to create views without having to create new files.\n */\nmodule.exports = {\n\n  createDialogByTemplate: function(templateOrStr, templateData, dialogOptions) {\n    return this.createDialogByView(this.createByTemplate(templateOrStr, templateData), dialogOptions);\n  },\n\n  /**\n   * @return {Object} instance of cdb.core.View, which takes two params of template and templateData\n   */\n  createByTemplate: function(templateOrStr, templateData, viewOpts) {\n    var template = _.isString(templateOrStr) ? cdb.templates.getTemplate(templateOrStr) : templateOrStr;\n\n    var view = new cdb.core.View(viewOpts);\n    view.render = function() {\n      this.$el.html(\n        template(templateData)\n      );\n      return this;\n    };\n\n    return view;\n  },\n\n  /**\n   * Creates a view that holds a list of views to be rendered.\n   * @param {Array} list of View object, i.e. have a render method, $el, and clean method.\n   * @param {Object,undefined} viewOpts view options, .e.g {className: 'Whatever'}\n   * @return {Object} A view\n   */\n  createByList: function(views, viewOpts) {\n    var listView = new cdb.core.View(viewOpts);\n    listView.render = function() {\n      this.clearSubViews();\n      _.each(views, function(view) {\n        this.addView(view);\n        this.$el.append(view.render().$el);\n      }, this);\n      return this;\n    };\n    return listView;\n  },\n\n  createDialogByView: function(contentView, dialogOptions) {\n\n    var options = _.extend({ clean_on_hide: true, enter_to_confirm: true }, dialogOptions);\n\n    return new (BaseDialog.extend({\n      initialize: function() {\n        this.elder('initialize');\n        this.addView(contentView);\n      },\n\n      render_content: function() {\n        return contentView.render().el;\n      }\n    }))(options);\n  }\n};\n","/**\n * Random quote\n */\nmodule.exports = function() {\n\n  var template  = _.template('<p class=\"CDB-Text CDB-Size-medium u-altTextColor\">\"<%= quote %>\"</p><% if (author) { %><p class=\"CDB-Text CDB-Size-medium u-altTextColor u-tSpace\"><em>– <%- author %></em></p><% } %>');\n\n  var quotes = [\n    { quote: \"Geographers never get lost. They just do accidental field work.\", author: \"Nicholas Chrisman\" },\n    { quote: \"Geography is just physics slowed down, with a couple of trees stuck in it.\", author: \"Terry Pratchett\" },\n    { quote: \"Not all those who wander are lost.\", author: \"J. R. R. Tolkien\" },\n    { quote: \"In that Empire, the Art of Cartography attained such Perfection that the map of a single Province occupied the entirety of a City.\", author: \"Jorge Luis Borges\" },\n    { quote: \"X marks the spot\", author: \"Indiana Jones\" },\n    { quote: \"It's turtles all the way down.\", author: null },\n    { quote: \"Remember: no matter where you go, there you are.\", author: null },\n    { quote: \"Without geography, you're nowhere!\", author: \"Jimmy Buffett\" },\n    { quote: \"our earth is a globe / whose surface we probe /<br />no map can replace her / but just try to trace her\", author: \"Steve Waterman\" },\n    { quote: \"Everything happens somewhere.\", author: \"Doctor Who\" },\n    { quote: \"A map is the greatest of all epic poems. Its lines and colors show the realization of great dreams.\", author: \"Gilbert H. Grosvenor\" },\n    { quote: \"Everything is related to everything else,<br />but near things are more related than distant things.\", author: \"Tobler's first law of geography\" },\n    { quote: \"Hic Sunt Dracones\", author: null },\n    { quote: \"Here be dragons\", author: null },\n    { quote: \"Stand in the place where you live / Now face North /<br/>Think about direction / Wonder why you haven't before\", author: \"R.E.M\" },\n    { quote: \"The virtue of maps, they show what can be done with limited space, they foresee that everything can happen therein.\", author: \"José Saramago\" }\n  ];\n\n  var r = Math.round(Math.random() * (quotes.length - 1));\n\n  return template(quotes[r]);\n};\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\nvar BaseDialog = cdb.ui.common.Dialog;\n\n/**\n * Abstract view for a dialog, a kind of view that takes up the full screen overlaying any previous content.\n *\n * To be extended for a specific use-case.\n * It inherits from CartoDB.js' Dialog view so has some particular behavior/convention of how to be used, see example\n *\n * Example of how to use:\n *   // Extend this view\n *   var MyDialog = BaseDialog.extend({\n *     render_content: function() {\n *       return 'Hello world!';\n *     }\n *   });\n *\n *   // Create instance object.\n *   var dialog = new MyDialog();\n *\n *   // To render & show initially (only to be called once):\n *   dialog.appendToBody();\n */\nmodule.exports = BaseDialog.extend({\n\n  className: 'Dialog is-opening',\n\n  overrideDefaults: {\n    template_name: 'common/views/base_dialog/template',\n    triggerDialogEvents: true\n  },\n\n  initialize: function() {\n    // Override defaults of parent\n    _.defaults(this.options, this.overrideDefaults);\n    this.elder('initialize');\n    this.bind('show', this._setBodyForDialogMode.bind(this, 'add'));\n    this.bind('hide', this._setBodyForDialogMode.bind(this, 'remove'));\n  },\n\n  show: function() {\n    BaseDialog.prototype.show.apply(this, arguments);\n    this.trigger('show');\n    if (this.options.triggerDialogEvents) {\n      cdb.god.trigger('dialogOpened');\n    }\n    this.$el.removeClass('is-closing');\n\n    // Blur current element (e.g. a <a> tag that was clicked to open this window)\n    if (document.activeElement) {\n      document.activeElement.blur();\n    }\n  },\n\n  render: function() {\n    BaseDialog.prototype.render.apply(this, arguments);\n    this.$('.content').addClass('is-newContent');\n\n    if (this._isSticky()) {\n      this.$el.addClass('is-sticky');\n    }\n\n    this.show();\n    return this;\n  },\n\n  _isSticky: function() {\n    return this.options && this.options.sticky;\n  },\n\n  close: function() {\n    this._cancel(undefined, true);\n  },\n\n  /**\n   * @override cdb.ui.common.Dialog.prototype.open for animated opening\n   */\n  open: function() {\n    BaseDialog.prototype.open.apply(this, arguments);\n    this.show();\n  },\n\n  /**\n   * @override cdb.ui.common.Dialog.prototype.hide to implement animation\n   */\n  hide: function() {\n    BaseDialog.prototype.hide.apply(this, arguments);\n    this.trigger('hide');\n  },\n\n  /**\n   * @override cdb.ui.common.Dialog.prototype._cancel to implement animation upon closing the dialog and to handle hide event.\n   */\n  _cancel: function(ev, skipCancelCallback) {\n    if (ev) this.killEvent(ev);\n\n    if (this._isSticky()) {\n      return;\n    }\n\n    this.$el.removeClass('is-opening').addClass('is-closing');\n\n    // Use timeout instead of event listener on animation since the event triggered differs depending on browser\n    // Timing won't perhaps be 100% accurate but it's good enough\n    // The timeout should match the .Dialog.is-closing animation duration.\n    var self = this;\n    setTimeout(function() {\n      // from original _cancel\n      if (self.cancel && !skipCancelCallback) {\n        self.cancel();\n      }\n      BaseDialog.prototype.hide.call(self);\n    }, 80); //ms\n\n    // Trigger events immediately, don't wait for the timeout above\n    this.trigger('hide');\n    if (this.options.triggerDialogEvents) {\n      cdb.god.trigger('dialogClosed');\n    }\n  },\n\n  /**\n   * @override cdb.ui.common.Dialog.prototype._ok to not hide dialog by default if there's an ok method defined.\n   */\n  _ok: function(ev) {\n    this.killEvent(ev);\n    if (this.ok) {\n      this.ok();\n    } else {\n      this.close();\n    }\n  },\n\n  _setBodyForDialogMode: function(action) {\n    $('body')[action + 'Class']('is-inDialog');\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n/**\n * Creates a default fallback map, to be used when an user don't have any own map visualizations.\n *\n * @param opts {Object} config\n *   el: {String,HTMLElement} id to element where to render map (w/o '#' prefix) or a HTMLElement node\n *   baselayer: {Object} as an item defined in app_config.yml (basemaps key)\n * @returns {Object} a new created Leaflet map\n */\nmodule.exports = function(opts) {\n  var provider = 'leaflet';\n  var type = 'tiled';\n  if (!opts.baselayer.url) {\n    provider = 'googlemaps';\n    type = 'GMapsBase';\n  } else {\n    opts.baselayer.urlTemplate = opts.baselayer.url;\n  }\n  var map = cdb.createVis(opts.el, {\n    'version': '0.1.0',\n    'title': 'default',\n    'scrollwheel': opts.scrollwheel !== undefined ? opts.scrollwheel : false,\n    'zoom': 6,\n    map_provider: provider,\n    center: [40.7127837, -74.0059413], // NY\n    layers: [ _.extend({ type: type }, opts.baselayer) ]\n  });\n\n  return map;\n};\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * Responsible for likes (♥ 123) and its toggling behaviour.\n */\nmodule.exports = cdb.core.View.extend({\n  tagName: 'a',\n\n  events: {\n    'click': '_toggleLike'\n  },\n\n  initialize: function() {\n    this.template = cdb.templates.getTemplate('common/views/likes/template');\n    this.model.bind('change:likeable change:liked change:likes error', this.render, this);\n  },\n\n  render: function() {\n    this.$el.html(\n      this.template({\n        likes: this.model.get(\"likes\"),\n        size: this.model.get(\"size\"),\n        show_count: this.model.get(\"show_count\"),\n        show_label: this.model.get(\"show_label\")\n      })\n    )\n    .attr({\n      class: this._classNames(),\n      href: this._hrefLocation()\n    });\n\n    return this;\n  },\n\n  _hrefLocation: function() {\n    var href = \"#/like\";\n\n    if (!this.model.get('likeable')) {\n      href = window.login_url;\n    }\n\n    return href;\n  },\n\n  _classNames: function() {\n    var classNames = ['LikesIndicator'];\n\n    if (this.model.get('likeable')) {\n      classNames.push('is-likeable');\n    }\n\n    if (this.model.get('liked')) {\n      classNames.push('is-liked');\n    }\n\n    if (this._animate) {\n      classNames.push('is-animated');\n      this.$el.one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function() {\n        // unset animate and force re-render to avoid race conditions\n        this._animate = false;\n        this.render();\n      }.bind(this));\n    }\n\n    return classNames.join(' ');\n  },\n\n  _toggleLike: function(ev) {\n    if (this.model.get('likeable')) {\n      this.killEvent(ev);\n\n      this._animate = true;\n      this.model.toggleLiked();\n    }\n  }\n});\n","var $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n/**\n *  MapCard previews\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  options: {\n    width: 300,\n    height: 170,\n    privacy: 'PUBLIC',\n    username: '',\n    visId: '',\n    mapsApiResource: '',\n    className: '',\n    authTokens: []\n  },\n\n  _TEMPLATES: {\n    // Using <%= %> instead of <%- %> because if not / characters (for example) will be escaped\n    regular: '<%- protocol %>://<%= mapsApiResource %>/api/v1/map/static/named/<%- tpl %>/<%- width %>/<%- height %>.png<%= authTokens %>',\n    cdn: '<%- protocol %>://<%- cdn %>/<%- username %>/api/v1/map/static/named/<%- tpl %>/<%- width %>/<%- height %>.png<%= authTokens %>'\n  },\n\n  initialize: function() {\n    _.each(['visId', 'mapsApiResource', 'username'], function(name) {\n      if (!this.options[name]) {\n        console.log(name + ' is required for Static Map instantiation');\n      }\n    }, this);\n  },\n\n  load: function() {\n    this._startLoader();\n    this._loadFromVisId();\n\n    return this;\n  },\n\n  _generateImageTemplate: function() {\n    return 'tpl_' + this.options.visId.replace(/-/g, '_');\n  },\n\n  _loadFromVisId: function() {\n    var protocol = this._isHTTPS() ? 'https': 'http';\n    var cdnConfig = cdb.config.get('cdn_url');\n    var template = _.template(cdnConfig ? this._TEMPLATES['cdn'] : this._TEMPLATES['regular']);\n\n    var options = {\n      protocol: protocol,\n      username: this.options.username,\n      mapsApiResource: this.options.mapsApiResource,\n      tpl: this._generateImageTemplate(),\n      width: this.options.width,\n      height: this.options.height,\n      authTokens: this._generateAuthTokensParams()\n    };\n\n    if (cdnConfig) {\n      options = _.extend(options, { cdn: cdnConfig[protocol] });\n    }\n\n    var url = template(options);\n\n    this._loadImage({}, url);\n  },\n\n  _generateAuthTokensParams: function () {\n    var authTokens = this.options.authTokens;\n    if (authTokens && authTokens.length > 0) {\n      return '?' + _.map(authTokens, function (t) { return 'auth_token=' + t; }).join('&');\n    } else {\n      return '';\n    }\n  },\n\n  _isHTTPS: function() {\n    return location.protocol.indexOf(\"https\") === 0;\n  },\n\n  loadURL: function(url) {\n    var $img = $('<img class=\"MapCard-preview\" src=\"' + url + '\" />');\n    this.$el.append($img);\n\n    if (this.options.className) {\n      $img.addClass(this.options.className);\n    }\n\n    $img.fadeIn(250);\n  },\n\n  showError: function() {\n    this._onError();\n  },\n\n  _startLoader: function() {\n    this.$el.addClass(\"is-loading\");\n  },\n\n  _stopLoader: function() {\n    this.$el.removeClass(\"is-loading\");\n  },\n\n  _onSuccess: function(url) {\n    this._stopLoader();\n    this.loadURL(url);\n    this.trigger(\"loaded\", url);\n  },\n\n  _onError: function(error) {\n    this._stopLoader();\n    this.$el.addClass(\"has-error\");\n    var $error = $('<div class=\"MapCard-error\" />');\n    this.$el.append($error);\n    $error.fadeIn(250);\n    this.trigger(\"error\");\n  },\n\n  _loadImage: function(error, url) {\n    var self = this;\n    var img  = new Image();\n\n    img.onerror = function() {\n      self._onError(error);\n    };\n\n    img.onload = function() {\n      self._onSuccess(url);\n    };\n\n    try {\n      img.src = url;\n    } catch(err) {\n      this._onError(err);\n    }\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\nmodule.exports = cdb.core.View.extend({\n\n  initialize: function() {\n    _.bindAll(this, '_onWindowScroll');\n    this._bindScroll();\n  },\n\n  _onWindowScroll: function() {\n    this.$el.toggleClass('is-fixed', $(window).scrollTop() > this.options.anchorPoint);\n  },\n\n  _unbindScroll: function() {\n    $(window).unbind('scroll', this._onWindowScroll);\n  },\n\n  _bindScroll: function() {\n    this._unbindScroll();\n    $(window).bind('scroll', this._onWindowScroll);\n  },\n\n  clean: function() {\n    this._unbindScroll();\n    this.elder('clean');\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\n/**\n * The content of the dropdown menu opened by the user avatar in the top-right of the header, e.g.:\n *   Explore, Learn, ♞\n *             ______/\\____\n *            |            |\n *            |    this    |\n *            |____________|\n */\nmodule.exports = cdb.admin.DropdownMenu.extend({\n  className: 'Dropdown',\n\n  events: {\n    'click': 'killEvent',\n    'click .js-maps': '_onClickMaps',\n    'click .js-datasets': '_onClickDatasets',\n    'click .js-both': '_onClickBoth'\n  },\n\n  initialize: function() {\n    this.elder('initialize');\n    this.template_base = cdb.templates.getTemplate('explore/dropdown_template');\n\n    // Necessary to hide dialog on click outside popup, for example.\n    cdb.god.bind('closeDialogs', this.hide, this);\n  },\n\n  _onClickBoth: function(e) {\n    this.model.set('type', null);\n    this.hide();\n  },\n\n  _onClickDatasets: function(e) {\n    this.model.set('type', 'table');\n    this.hide();\n  },\n\n  _onClickMaps: function(e) {\n    this.model.set('type', 'derived');\n    this.hide();\n  },\n\n  render: function() {\n    this.$el.html(this.template_base({ }));\n\n    // TODO: taken from existing code, how should dropdowns really be added to the DOM?\n    $('body').append(this.el);\n\n    return this;\n  },\n\n  clean: function() {\n    this.elder('clean');\n  }\n\n});\n","var $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar UserSettingsView = require('../public_common/user_settings_view');\nvar UserIndustriesView = require('../public_common/user_industries_view');\nvar FavMapView = require('../public_dashboard/fav_map_view');\nvar Explore = require('./view');\nvar ExploreModel = require('./model');\n\n/**\n * Entry point for the user feed, bootstraps all dependency models and application.\n */\n$(function() {\n  cdb.init(function() {\n    cdb.templates.namespace = 'cartodb/';\n    cdb.config.set(window.config);\n    cdb.config.set('url_prefix', window.base_url);\n    cdb.config.set('login_url', window.login_url);\n\n    var userIndustriesView = new UserIndustriesView({\n      el: $('.js-user-industries')\n    });\n\n    // Sets default login URL in the header\n    $('.js-login a').attr('href', cdb.config.get('login_url'));\n\n    $(document.body).bind('click', function() {\n      cdb.god.trigger('closeDialogs');\n    });\n\n    this.exploreModel = new ExploreModel();\n\n    var self = this;\n\n    var onSuccess = function(model) {\n      if (!model) {\n        return;\n      }\n\n      var visURL = '//' + model.get('username') + '.' + cdb.config.get('account_host') + '/api/v2/viz/' + model.get('id') + '/viz.json';\n\n      var url = '//' + model.get('username') + '.' + cdb.config.get('account_host') + '/viz/' + model.get('id') + '/public_map';\n      self.$('.js-mapTitle').attr('href', url);\n      self.$('.js-mapTitle').text(model.get('name'));\n\n      var favMapView = new FavMapView({\n        el: '#fav-map-container',\n        createVis: {\n          url: visURL,\n          opts: {\n            annotation: true\n          }\n        }\n      });\n\n      favMapView.render();\n      self.$('.js-favMapTitle').removeClass('is-hidden');\n    };\n\n    this.exploreModel.fetch({ success: onSuccess });\n\n    var authenticatedUser = new cdb.open.AuthenticatedUser({ host: cdb.config.get('explore_user') + '.' + cdb.config.get('account_host')});\n\n    authenticatedUser.sync = Backbone.withCORS;\n\n    authenticatedUser.bind('change', function() {\n      if (authenticatedUser.get('username')) {\n        var user = new cdb.admin.User(authenticatedUser.attributes);\n        var userSettingsView = new UserSettingsView({\n          el: $('.js-user-settings'),\n          model: user\n        });\n        userSettingsView.render();\n\n        var userDashboardUrl = user.viewUrl().dashboard();\n        $('.js-user-info .UserAvatar-img').wrap($('<a>', {\n          href: userDashboardUrl\n        }));\n\n        $('.js-login').hide();\n        $('.js-learn').show();\n      }\n    });\n\n    var feed = new Explore({\n      el: $('.js-explore'),\n      authenticatedUser: authenticatedUser\n    });\n\n    feed.render();\n    authenticatedUser.fetch();\n\n  });\n});\n","var Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\n\nmodule.exports = Backbone.Collection.extend({\n  url: function() {\n    return '//' + cdb.config.get('explore_user') + '.' + cdb.config.get('account_host') + '/api/v2/sql';\n  },\n\n  _SORT: {\n    'likes': 'likes_trend',\n    'updated_at': 'visualization_updated_at',\n    'mapviews': 'mapviews_trend'\n  },\n\n  parse: function(models) {\n    return models.rows;\n  },\n\n  fetch: function(opts) {\n\n    var query = this._generateQuery(opts.type, opts.orderBy, opts.page, opts.limit);\n    opts = _.extend({ q: query }, { reset: opts.reset });\n\n    Backbone.Collection.prototype.fetch.call(this, { data: opts });\n  },\n\n  _generateQuery: function(type, orderBy, page, limit) {\n    var fields = [\n      'user_avatar_url AS avatar_url',\n      'user_username AS username',\n      'visualization_geometry_types AS geom_types',\n      'visualization_id AS id',\n      'visualization_likes AS likes',\n      'visualization_mapviews AS mapviews',\n      'visualization_mapviews::numeric / (1.0 + (now()::date - visualization_created_at::date)::numeric)^2 * 100.0 / m.max_views As mapviews_trend',\n      'visualization_likes::numeric / (1.0 + (now()::date - visualization_created_at::date)::numeric)^2 * 100.0 / m.max_likes As likes_trend',\n      'visualization_name AS name',\n      'visualization_map_datasets AS map_datasets',\n      'visualization_table_rows AS rows',\n      'visualization_table_size AS table_size',\n      'visualization_tags AS tags',\n      'visualization_title AS title',\n      'visualization_type AS type',\n      'visualization_created_at AS created_at',\n      'visualization_updated_at AS updated_at'\n    ].join(',');\n\n    var queryTemplate = 'WITH m As (SELECT max(visualization_likes) As max_likes, max(visualization_mapviews) As max_views FROM <%- table %>) SELECT <%= fields %> FROM <%- table %>, m <%= where %> ORDER BY <%- order_by %> DESC, created_at DESC, visualization_id DESC LIMIT <%- limit %> OFFSET <%- offset %>';\n\n    return _.template(queryTemplate, {\n      table: 'visualizations',\n      fields: fields,\n      order_by: this._SORT[orderBy],\n      limit: limit,\n      where: type ? 'WHERE visualization_type = \\'' + type + '\\'' : '',\n      offset: limit * page\n    });\n  }\n});\n","var Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\n\nmodule.exports = Backbone.Model.extend({\n  url: function() {\n    return '//' + cdb.config.get('explore_user') + '.' + cdb.config.get('account_host') + '/api/v2/sql';\n  },\n\n  parse: function(models) {\n    return models.rows[0];\n  },\n\n  fetch: function(callback) {\n    var opts = _.extend({ data: { q: this._generateQuery() } }, callback);\n    Backbone.Model.prototype.fetch.call(this, opts);\n  },\n\n  _generateQuery: function() {\n    var fields = [\n      'visualization_mapviews::numeric/(1.0 + (now()::date - visualization_created_at::date)::numeric)^2 AS mapviews_trend',\n      'visualization_name AS name',\n      'user_username AS username',\n      'visualization_id AS id',\n      'visualization_likes AS likes',\n      'visualization_title AS title'\n    ].join(',');\n\n    var queryTemplate = 'SELECT <%= fields %> FROM visualizations ORDER BY mapviews_trend DESC LIMIT 1';\n\n    return _.template(queryTemplate, {\n      fields: fields\n    });\n  }\n});\n","var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar MapCardPreview = require('../common/views/mapcard_preview');\nvar ScrollableHeader = require('../common/views/scrollable_header');\nvar VisualizationDropdown = require('./dropdown');\nvar Visualizations = require('./feed_collection');\nvar Feed = require('../user_feed/view');\n\nmodule.exports = Feed.extend({\n  tagName: 'div',\n\n  _LIMIT: 8,\n\n  _SMALL_WIDTH: 544,\n  _MEDIUM_WIDTH: 900,\n\n  _CARD_HEIGHT: 220,\n  _LOADER_TITLE: 'Exploring',\n\n  _DROPDOWN_TEXT: {\n    null: 'Maps and datasets',\n    'table': 'Datasets',\n    'derived': 'Maps'\n  },\n\n  events: {\n    'click .js-more': '_onClickMore',\n    'click .js-likes': '_onClickLikes',\n    'click .js-updated_at': '_onClickUpdatedAt',\n    'click .js-mapviews': '_onClickMapViews',\n    'click .js-maps-datasets': '_onClickMapsAndDatasets',\n    'click .js-maps': '_onClickMaps',\n    'click .js-datasets': '_onClickDatasets'\n  },\n\n  initialize: function() {\n    _.bindAll(this, '_initLike', '_fetchLike', '_onWindowResize', '_renderStaticMaps');\n\n    this.maps = [];\n\n    this._initTemplates();\n    this._initModels();\n    this._initBindings();\n    this._fetchItems();\n  },\n\n  render: function() {\n    this.$el.html(this.template());\n    this._renderLoader();\n\n    this._setupVisualizationDropdown();\n    this._setupScrollableHeader();\n\n    return this;\n  },\n\n  _setupScrollableHeader: function() {\n    this.scrollableHeader = new ScrollableHeader({\n      el: $('.js-explore-context-menu'),\n      anchorPoint: $('.Header').height() + $('.FavMap').height()\n    });\n    this.addView(this.scrollableHeader);\n  },\n\n  _setupVisualizationDropdown: function() {\n    this.visualizationDropdown = new VisualizationDropdown({\n      target: this.$('.js-dropdown'),\n      horizontal_position: 'horizontal_left',\n      horizontal_offset: -110,\n      tick: 'center',\n      model: this.model,\n      position: 'offset',\n      vertical_offset: 0\n    });\n\n    this.addView(this.visualizationDropdown);\n    cdb.god.bind('closeDialogs', this.visualizationDropdown.hide, this.visualizationDropdown);\n    this.add_related_model(cdb.god);\n    $('body').append(this.visualizationDropdown.render().el);\n  },\n\n  _onWindowResize: function() {\n    var width = $(window).width();\n\n    if (width <= this._SMALL_WIDTH) {\n      this.model.set('size', 'small');\n    } else if (width <= this._MEDIUM_WIDTH) {\n      this.model.set('size', 'medium');\n    } else {\n      this.model.set('size', 'big');\n    }\n\n    this._renderStaticMaps();\n  },\n\n  _initTemplates: function() {\n    this.template = cdb.templates.getTemplate('explore/template');\n    this.mapTemplate = cdb.templates.getTemplate('explore/map_item_template');\n    this.datasetTemplate = cdb.templates.getTemplate('explore/dataset_item_template');\n    this.loaderTemplatePath = 'explore/loading';\n  },\n\n  _initModels: function() {\n    var size = 'big';\n    var wWidth = $(window).width();\n\n    if (wWidth <= this._SMALL_WIDTH) {\n      size = 'small';\n    } else if (wWidth <= this._MEDIUM_WIDTH) {\n      size = 'medium';\n    }\n\n    this.model = new cdb.core.Model({\n      rendered_big: false,\n      rendered_medium: false,\n      rendered_small: false,\n      type: '',\n      size: size,\n      page: 0,\n      order_by: 'likes'\n    });\n\n    this.collection = new Visualizations();\n\n    this.collection.bind('reset', this._renderVisualizations, this);\n  },\n\n  _initBindings: function() {\n    var self = this;\n\n    this.model.bind('change:show_more', this._onChangeShowMore, this);\n    this.model.bind('change:show_loader', this._onChangeShowLoader, this);\n    this.model.bind('change:show_filters', this._onChangeShowFilters, this);\n    this.model.bind('change:show_mast', this._onChangeShowMast, this);\n    this.model.bind('change:order_by', this._onChangeOrderBy, this);\n    this.model.bind('change:type', this._onChangeType, this);\n\n    this.add_related_model(this.options.authenticatedUser);\n\n    $(window).bind('resize', this._onWindowResize);\n  },\n\n  _getGeometryType: function(geomTypes) {\n    if (geomTypes && geomTypes.length > 0) {\n      var types = ['point', 'polygon', 'line', 'raster'];\n      var geomType = geomTypes[0];\n\n      return _.find(types, function(type) {\n        return geomType.toLowerCase().indexOf(type) !== -1;\n      });\n\n    } else {\n      return null;\n    }\n  },\n\n  _getDatasetSize: function(item) {\n    var size = item.get('table_size');\n    return size ? cdb.Utils.readablizeBytes(size, true).split(' ') : 0;\n  },\n\n  _renderVisualizations: function() {\n\n    this.model.set({ show_loader: false, show_more: true, show_filters: true, show_mast: true });\n\n    this.collection.each(function(item) {\n      var template = item.get('type') === 'derived' ? this.mapTemplate : this.datasetTemplate;\n\n      var el = template({\n        vis: item.attributes,\n        date: this.model.get('order_by') === 'updated_at' ? item.get('updated_at') : item.get('created_at'),\n        datasetSize: this._getDatasetSize(item),\n        geomType: this._getGeometryType(item.get('geom_types')),\n        account_host: cdb.config.get('account_host')\n      });\n\n      this.$('.js-items').append(el);\n\n      var $item = this.$('.js-items').find('[data-vis-id=\"' + item.get('id') + '\"]');\n\n      if (item.get('type') === 'derived') {\n        this.maps.push(item);\n      }\n\n      if (item.get('type') === 'derived' && !item.get('rendered_' + this.model.get('size'))) {\n        this._renderStaticMap(item, $item);\n      }\n\n      this._initLike(item, $item.find('.js-like'));\n\n    }, this);\n\n  },\n\n  _renderStaticMap: function(vis, $el) {\n\n    var visId = vis.get('id');\n    var username = vis.get('username');\n\n    var width = 860;\n\n    if (this.model.get('size') === 'small') {\n      width = 288;\n    } else if (this.model.get('size') === 'medium') {\n      width = 540;\n    }\n\n    var className = 'is-' + this.model.get('size');\n\n    if (visId && username) {\n\n      vis.set('rendered_' + this.model.get('size'), true);\n\n      new MapCardPreview({\n        el: $el.find('.js-header'),\n        width: width,\n        height: this._CARD_HEIGHT,\n        username: username,\n        visId: visId,\n        className: className,\n        mapsApiResource: cdb.config.getMapsResourceName(username)\n      }).load();\n    }\n  },\n\n  _getLikesEndpoint: function(vis) {\n    return '//' + vis.get('username') + '.' + cdb.config.get('account_host') + '/api/v1/viz/' + vis.get('id') + '/like';\n  },\n\n  _selectType: function(what) {\n    var self = this;\n\n    this.model.set({ show_more: false });\n\n    $('body').animate({ scrollTop: 150 }, { duration: 250, complete: function() {\n      self.model.set({ type: what });\n    }});\n  },\n\n  _sort: function(method) {\n    var self = this;\n\n    this.model.set({ show_more: false });\n\n    $('body').animate({ scrollTop: 150 }, { duration: 250, complete: function() {\n      self.model.set({ order_by: method });\n    }});\n  },\n\n  _fetchItems: function(reset) {\n\n    if (reset) {\n      this.model.set({ page: 0, show_more: false, show_loader: true, show_mast: false });\n      this.$('.js-items').empty();\n    }\n\n    var type = this.model.get('type');\n    var orderBy = this.model.get('order_by');\n    var page = this.model.get('page');\n    var limit = this._LIMIT;\n\n    this.collection.fetch({ type: type, orderBy: orderBy, page: page, limit: limit, reset: reset });\n  },\n\n  _onClickMore: function(e) {\n    this.killEvent(e);\n    this.model.set({ page: this.model.get('page') + 1, show_loader: true, show_more: false });\n    this._fetchItems(false);\n  },\n\n  _onChangeType: function() {\n    this.$('.js-dropdownLabel').text(this._DROPDOWN_TEXT[this.model.get('type')]);\n    this._fetchItems(true);\n  },\n\n  _onChangeOrderBy: function() {\n    $('.js-order-link').removeClass('is-selected');\n    $('.js-' + this.model.get('order_by')).addClass('is-selected');\n    this._fetchItems(true);\n  },\n\n  _onChangeShowFilters: function() {\n    this.$('.js-filters').toggleClass('is-hidden', !this.model.get('show_filters'));\n  },\n\n  _onClickLikes: function(e) {\n    this.killEvent(e);\n    this._sort('likes');\n  },\n\n  _onClickUpdatedAt: function(e) {\n    this.killEvent(e);\n    this._sort('updated_at');\n  },\n\n  _onClickMapViews: function(e) {\n    this.killEvent(e);\n    this._sort('mapviews');\n  },\n\n  _onClickMapsAndDatasets: function(e) {\n    this.killEvent(e);\n    this._selectType(null);\n  },\n\n  _onClickMaps: function(e) {\n    this.killEvent(e);\n    this._selectType('derived');\n  },\n\n  _onClickDatasets: function(e) {\n    this.killEvent(e);\n    this._selectType('table');\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\n/**\n * The content of the dropdown menu opened by the industries link in the header, e.g.:\n *   CartoDB, Industries, Explore, Pricing\n *             ______/\\____\n *            |            |\n *            |    this    |\n *            |____________|\n */\nmodule.exports = cdb.admin.DropdownMenu.extend({\n  className: 'CDB-Text Dropdown Dropdown--public',\n\n  initialize: function() {\n    this.elder('initialize');\n    this.template_base = cdb.templates.getTemplate('public_common/user_industries/dropdown_template');\n\n    // Necessary to hide dialog on click outside popup, for example.\n    cdb.god.bind('closeDialogs', this.hide, this);\n  },\n\n  render: function() {\n    this.$el.html(this.template_base());\n\n    // TODO: taken from existing code, how should dropdowns really be added to the DOM?\n    $('body').append(this.el);\n\n    return this;\n  },\n\n  clean: function() {\n    // Until https://github.com/CartoDB/cartodb.js/issues/238 is resolved:\n    $(this.options.target).unbind('click', this._handleClick);\n    this.constructor.__super__.clean.apply(this);\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar IndustriesDropdown = require('./user_industries/dropdown_view');\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\n/**\n * View to render the user industries section in the header.\n * Expected to be created from existing DOM element.\n */\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-dropdown-target': '_createDropdown'\n  },\n\n  _createDropdown: function(ev) {\n    this.killEvent(ev);\n    cdb.god.trigger('closeDialogs');\n\n    var view = new IndustriesDropdown({\n      target: $(ev.target),\n      vertical_offset: -10,\n      horizontal_offset: $(ev.target).width()-100,\n      horizontal_position: 'left',\n      tick: 'center'\n    });\n    view.render();\n\n    view.on('onDropdownHidden', function() {\n      view.clean();\n    }, this);\n\n    view.open();\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\n/**\n * The content of the dropdown menu opened by the user avatar in the top-right of the header, e.g.:\n *   Explore, Learn, ♞\n *             ______/\\____\n *            |            |\n *            |    this    |\n *            |____________|\n */\nmodule.exports = cdb.admin.DropdownMenu.extend({\n  className: 'CDB-Text Dropdown',\n\n  initialize: function() {\n    this.elder('initialize');\n    this.template_base = cdb.templates.getTemplate('public_common/user_settings/dropdown_template');\n\n    // Necessary to hide dialog on click outside popup, for example.\n    cdb.god.bind('closeDialogs', this.hide, this);\n  },\n\n  render: function() {\n    var user = this.model;\n    var userUrl = user.viewUrl();\n\n    this.$el.html(this.template_base({\n      name: user.get('name') || user.get('username'),\n      email: user.get('email'),\n      isOrgOwner: user.isOrgOwner(),\n      dashboardUrl: userUrl.dashboard(),\n      publicProfileUrl: userUrl.publicProfile(),\n      accountSettingsUrl: userUrl.accountSettings(),\n      logoutUrl: userUrl.logout()\n    }));\n\n    // TODO: taken from existing code, how should dropdowns really be added to the DOM?\n    $('body').append(this.el);\n\n    return this;\n  },\n\n  clean: function() {\n    // Until https://github.com/CartoDB/cartodb.js/issues/238 is resolved:\n    $(this.options.target).unbind('click', this._handleClick);\n    this.constructor.__super__.clean.apply(this);\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar SettingsDropdown = require('./user_settings/dropdown_view');\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\n/**\n * View to render the user settings section in the header.\n * Expected to be created from existing DOM element.\n */\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-dropdown-target': '_createDropdown'\n  },\n\n  render: function() {\n    var dashboardUrl = this.model.viewUrl().dashboard();\n    var datasetsUrl = dashboardUrl.datasets();\n    var mapsUrl = dashboardUrl.maps();\n\n    this.$el.html(\n      cdb.templates.getTemplate('public_common/user_settings_template')({\n        avatarUrl: this.model.get('avatar_url'),\n        mapsUrl: mapsUrl,\n        datasetsUrl: datasetsUrl\n      })\n    );\n\n    return this;\n  },\n\n  _createDropdown: function(ev) {\n    this.killEvent(ev);\n    cdb.god.trigger('closeDialogs');\n\n    var view = new SettingsDropdown({\n      target: $(ev.target),\n      model: this.model, // user\n      horizontal_offset: 18\n    });\n    view.render();\n\n    view.on('onDropdownHidden', function() {\n      view.clean();\n    }, this);\n\n    view.open();\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar createDefaultFallbackMap = require('../common/views/create_default_fallback_map');\n\n/**\n * View to render the \"favourite\" map, either a user's map visualization, or a default fallback map.\n */\nmodule.exports = cdb.core.View.extend({\n\n  render: function() {\n    this.$el.removeClass('is-pre-loading').addClass('is-loading');\n\n    var promise;\n    if (this.options.createVis) {\n      promise = this._createVisMap(this.options.createVis);\n    } else {\n      promise = this._createFallbackMap();\n    }\n\n    var self = this;\n    promise.done(function() {\n      self.$el.removeClass('is-loading');\n      self.$('.js-spinner').remove();\n    });\n\n    return this;\n  },\n\n  _createVisMap: function(createVis) {\n    return cdb.createVis(this.el, createVis.url, _.defaults(createVis.opts, {\n      title:             false,\n      header:            false,\n      description:       false,\n      search:            false,\n      layer_selector:    false,\n      text:              false,\n      image:             false,\n      shareable:         false,\n      annotation:        false,\n      zoom:              false,\n      cartodb_logo:      false,\n      scrollwheel:       false,\n      mobile_layout:     true,\n      slides_controller: false,\n      legends:           false,\n      time_slider:       false,\n      loader:            false,\n      fullscreen:        false,\n      no_cdn:            false\n    }));\n  },\n\n  _createFallbackMap: function() {\n    createDefaultFallbackMap({\n      el: this.el,\n      baselayer: this.options.fallbackBaselayer\n    });\n\n    // Fake promise, to keep the render method consistent with how the vis map would have been handled (async)\n    return {\n      done: function(fn) {\n        fn();\n      }\n    };\n  }\n\n});\n","var Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\n\nmodule.exports = Backbone.Collection.extend({\n  url: '/api/v1/viz',\n  parse: function(models) {\n    this.total_entries = models.total_entries;\n    return models.visualizations;\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar ViewFactory = require('../common/view_factory');\nvar randomQuote = require('../common/view_helpers/random_quote');\nvar LikeView = require('../common/views/likes/view');\nvar MapCardPreview = require('../common/views/mapcard_preview');\nvar Visualizations = require('./feed_collection');\n\nmodule.exports = cdb.core.View.extend({\n  tagName: 'div',\n\n  _PAGE: 1,\n  _ITEMS_PER_PAGE: 8,\n\n  _SMALL_WIDTH: 544,\n\n  _CARD_HEIGHT: 170,\n  _LOADER_TITLE: 'Loading visualizations',\n\n  events: {\n    'click .js-more': '_onClickMore'\n  },\n\n  initialize: function() {\n    _.bindAll(this, '_initLike', '_fetchLike', '_onFetchError', '_onWindowResize', '_renderStaticMaps');\n\n    this.maps = [];\n\n    this._initTemplates();\n    this._initModels();\n    this._initBindings();\n  },\n\n  render: function() {\n    this.$el.html(this.template());\n    this._renderLoader();\n    this._fetchItems({ page: this._PAGE });\n\n    return this;\n  },\n\n  _onWindowResize: function() {\n    var width = $(window).width();\n\n    if (width <= this._SMALL_WIDTH) {\n      this.model.set('size', 'small');\n    } else {\n      this.model.set('size', 'big');\n    }\n\n    this._renderStaticMaps();\n  },\n\n  _initTemplates: function() {\n    this.template = cdb.templates.getTemplate('user_feed/template');\n    this.mapTemplate = cdb.templates.getTemplate('user_feed/map_item_template');\n    this.datasetTemplate = cdb.templates.getTemplate('user_feed/dataset_item_template');\n    this.loaderTemplatePath = 'user_feed/loading';\n    this.emptyTemplatePath = 'user_feed/empty';\n    this.errorTemplatePath = 'user_feed/error';\n  },\n\n  _initModels: function() {\n    var size = 'big';\n    var wWidth = $(window).width();\n\n    if (wWidth <= this._SMALL_WIDTH) {\n      size = 'small';\n    }\n\n    this.model = new cdb.core.Model({\n      vis_count: 0,\n      type: '',\n      size: size,\n      page: 0,\n      order_by: 'likes'\n    });\n\n    this.collection = new Visualizations();\n    this.collection.bind('reset', this._renderVisualizations, this);\n  },\n\n  _initBindings: function() {\n    var self = this;\n\n    this.model.bind('change:show_more', this._onChangeShowMore, this);\n    this.model.bind('change:show_loader', this._onChangeShowLoader, this);\n    this.model.bind('change:show_mast', this._onChangeShowMast, this);\n    this.model.bind('change:vis_count', this._onChangeVisCount, this);\n\n    $(window).bind('resize', this._onWindowResize);\n  },\n\n  _onChangeVisCount: function() {\n    if (this.model.get('vis_count') >= this.collection.total_entries) {\n      this.model.set({ show_more: false });\n    } else {\n      this.model.set({ show_more: true });\n    }\n  },\n\n  _onChangeShowMast: function() {\n    if (this.model.get('show_mast')) {\n      this.$('.js-mast').removeClass('is-hidden');\n    } else {\n      this.$('.js-mast').addClass('is-hidden');\n    }\n  },\n\n  _onChangeShowLoader: function() {\n    if (this.model.get('show_loader')) {\n      this.loader.show();\n    } else {\n      this.loader.hide();\n    }\n  },\n\n  _onChangeShowMore: function() {\n    this.$('.js-more').toggleClass('is-hidden', !this.model.get('show_more'));\n  },\n\n  _renderLoader: function() {\n    this.loader = ViewFactory.createByTemplate(this.loaderTemplatePath, {\n      title: this._LOADER_TITLE,\n      quote: randomQuote()\n    });\n\n    this.$el.append(this.loader.render().$el);\n  },\n\n  _renderError: function() {\n    this.error = ViewFactory.createByTemplate(this.errorTemplatePath, {\n    });\n\n    this.$el.append(this.error.render().$el);\n  },\n\n  _renderEmpty: function() {\n    this.empty = ViewFactory.createByTemplate(this.emptyTemplatePath, {\n      name: config.user_name\n    });\n\n    this.$el.append(this.empty.render().$el);\n  },\n\n  _getDatasetSize: function(item) {\n    var size = item.get('table').size;\n    return size ? cdb.Utils.readablizeBytes(size, true).split(' ') : 0;\n  },\n\n  _getGeometryType: function(geomTypes) {\n    if (geomTypes && geomTypes.length > 0) {\n      var types = ['point', 'polygon', 'line', 'raster'];\n      var geomType = geomTypes[0];\n\n      return _.find(types, function(type) {\n        return geomType.toLowerCase().indexOf(type) !== -1;\n      });\n\n    } else {\n      return null;\n    }\n  },\n\n  _renderVisualizations: function() {\n\n    if (this.collection.length === 0) {\n      this.model.set({ show_loader: false });\n      this._renderEmpty();\n      return;\n    }\n\n    this.model.set({ vis_count: this.model.get('vis_count') + this.collection.length, show_loader: false, show_more: true, show_filters: true, show_mast: true });\n\n    this.collection.each(function(item) {\n      var template = item.get('type') === 'derived' ? this.mapTemplate : this.datasetTemplate;\n      var geomType = (item.get('table') && item.get('table').geometry_types) ? this._getGeometryType(item.get('table').geometry_types) : null;\n\n      var owner = item.get('permission').owner;\n\n      var el = template({\n        vis: item.attributes,\n        datasetSize: this._getDatasetSize(item),\n        username: owner.username,\n        avatar_url: owner.avatar_url,\n        table_count: owner.table_count,\n        maps_count: owner.maps_count,\n        geomType: geomType,\n        account_host: config.account_host,\n        base_url: cdb.config.get('url_prefix')\n      });\n\n      this.$('.js-items').append(el);\n\n      var $item = this.$('.js-items').find('[data-vis-id=\"' + item.get('id') + '\"]');\n\n      if (item.get('type') === 'derived') {\n        this.maps.push(item);\n      }\n\n      if (item.get('type') === 'derived' && !item.get('rendered_' + this.model.get('size'))) {\n        this._renderStaticMap(item, $item);\n      }\n\n      this._initLike(item, $item.find('.js-like'));\n\n    }, this);\n\n  },\n\n  _renderStaticMaps: function() {\n    _.each(this.maps, function(item) {\n      if (!item.get('rendered_' + this.model.get('size'))) {\n        var $item = this.$('.js-items').find('[data-vis-id=\"' + item.get('id') + '\"]');\n        this._renderStaticMap(item, $item);\n      }\n    }, this);\n  },\n\n  _renderStaticMap: function(vis, $el) {\n    var visId = vis.get('id');\n    var username = vis.get('permission').owner.username;\n    var width = 540;\n    var className = 'is-' + this.model.get('size');\n\n    if (this.model.get('size') === 'small') {\n      width = 288;\n    }\n\n    if (visId && username) {\n      vis.set('rendered_' + this.model.get('size'), true);\n\n      new MapCardPreview({\n        el: $el.find('.js-header'),\n        width: width,\n        height: this._CARD_HEIGHT,\n        mapsApiResource: cdb.config.getMapsResourceName(username),\n        username: username,\n        visId: visId,\n        className: className\n      }).load();\n    }\n  },\n\n  _getLikesEndpoint: function(vis) {\n    return '/api/v1/viz/' + vis.get('id') + '/like';\n  },\n\n  _initLike: function(vis, $el) {\n    var likeable = this.options.authenticatedUser && this.options.authenticatedUser.get('username');\n\n    var likeModel = cdb.admin.Like.newByVisData({\n      likeable: false,\n      show_label: true,\n      vis_id: vis.get('id'),\n      likes: vis.get('likes')\n    });\n\n    var url = this._getLikesEndpoint(vis);\n\n    if (likeable) {\n      this._fetchLike(likeModel, url);\n    } else {\n      this.options.authenticatedUser.bind('change', function() {\n        this._fetchLike(likeModel, url);\n      }, this);\n    }\n\n    var likeView = new LikeView({\n      el: $el,\n      model: likeModel\n    });\n\n    likeView.render();\n\n  },\n\n  _fetchLike: function(model, url) {\n    if (this.options.authenticatedUser.get('username')) {\n      model.bind('loadModelCompleted', function() {\n        model.set('likeable', true);\n      });\n      model.url = url;\n      model.sync = Backbone.withCORS;\n      model.fetch();\n    }\n  },\n\n  _fetchItems: function(params) {\n    var data = _.extend({\n      types: 'table,derived',\n      privacy: 'public',\n      exclude_shared: 'true',\n      per_page: this._ITEMS_PER_PAGE,\n      order: 'updated_at'\n    }, params);\n\n    this.collection.fetch({\n      data: data,\n      error: this._onFetchError\n    });\n  },\n\n  _onFetchError: function() {\n    this.model.set({ show_loader: false });\n    this._renderError();\n  },\n\n  _onClickMore: function(e) {\n    this.killEvent(e);\n    this.model.set({ show_more: false, show_loader: true });\n    this._fetchItems({ page: ++this._PAGE });\n  }\n});\n"]}
{"version":3,"sources":["node_modules/browser-pack/_prelude.js","lib/assets/javascripts/cartodb/common/background_polling/background_polling_model.js","lib/assets/javascripts/cartodb/common/background_polling/background_polling_view.js","lib/assets/javascripts/cartodb/common/background_polling/models/analysis_collection.js","lib/assets/javascripts/cartodb/common/background_polling/models/geocoding_model.js","lib/assets/javascripts/cartodb/common/background_polling/models/geocoding_model_poller.js","lib/assets/javascripts/cartodb/common/background_polling/models/geocodings_collection.js","lib/assets/javascripts/cartodb/common/background_polling/models/import_model.js","lib/assets/javascripts/cartodb/common/background_polling/models/import_model_poller.js","lib/assets/javascripts/cartodb/common/background_polling/models/imports_collection.js","lib/assets/javascripts/cartodb/common/background_polling/models/imports_model.js","lib/assets/javascripts/cartodb/common/background_polling/models/lon_lat_geocoding_model.js","lib/assets/javascripts/cartodb/common/background_polling/models/pecan_model.js","lib/assets/javascripts/cartodb/common/background_polling/models/poller.js","lib/assets/javascripts/cartodb/common/background_polling/models/upload_config.js","lib/assets/javascripts/cartodb/common/background_polling/models/upload_model.js","lib/assets/javascripts/cartodb/common/background_polling/views/analysis/background_analysis_item_view.js","lib/assets/javascripts/cartodb/common/background_polling/views/background_polling_header_title_view.js","lib/assets/javascripts/cartodb/common/background_polling/views/background_polling_header_view.js","lib/assets/javascripts/cartodb/common/background_polling/views/geocodings/background_geocoding_item_view.js","lib/assets/javascripts/cartodb/common/background_polling/views/geocodings/geocoding_result_details_view.js","lib/assets/javascripts/cartodb/common/background_polling/views/imports/background_import_item_view.js","lib/assets/javascripts/cartodb/common/background_polling/views/imports/background_import_limit_view.js","lib/assets/javascripts/cartodb/common/background_polling/views/imports/twitter_import_details_view.js","lib/assets/javascripts/cartodb/common/batch_process_items.js","lib/assets/javascripts/cartodb/common/dialogs/add_custom_basemap/add_custom_basemap_model.js","lib/assets/javascripts/cartodb/common/dialogs/add_custom_basemap/add_custom_basemap_view.js","lib/assets/javascripts/cartodb/common/dialogs/add_custom_basemap/mapbox/mapbox_model.js","lib/assets/javascripts/cartodb/common/dialogs/add_custom_basemap/mapbox/mapbox_to_tile_layer_factory.js","lib/assets/javascripts/cartodb/common/dialogs/add_custom_basemap/mapbox/mapbox_view.js","lib/assets/javascripts/cartodb/common/dialogs/add_custom_basemap/nasa/nasa_model.js","lib/assets/javascripts/cartodb/common/dialogs/add_custom_basemap/nasa/nasa_view.js","lib/assets/javascripts/cartodb/common/dialogs/add_custom_basemap/tabs_view.js","lib/assets/javascripts/cartodb/common/dialogs/add_custom_basemap/tile_json/tile_json_view.js","lib/assets/javascripts/cartodb/common/dialogs/add_custom_basemap/tile_json/tile_json_view_model.js","lib/assets/javascripts/cartodb/common/dialogs/add_custom_basemap/wms/layer_model.js","lib/assets/javascripts/cartodb/common/dialogs/add_custom_basemap/wms/layer_view.js","lib/assets/javascripts/cartodb/common/dialogs/add_custom_basemap/wms/layers_collection.js","lib/assets/javascripts/cartodb/common/dialogs/add_custom_basemap/wms/select_layer_view.js","lib/assets/javascripts/cartodb/common/dialogs/add_custom_basemap/wms/wms_model.js","lib/assets/javascripts/cartodb/common/dialogs/add_custom_basemap/wms/wms_view.js","lib/assets/javascripts/cartodb/common/dialogs/add_custom_basemap/xyz/xyz_model.js","lib/assets/javascripts/cartodb/common/dialogs/add_custom_basemap/xyz/xyz_view.js","lib/assets/javascripts/cartodb/common/dialogs/builder_features_warning/builder_features_warning_view.js","lib/assets/javascripts/cartodb/common/dialogs/change_lock/change_lock_view.js","lib/assets/javascripts/cartodb/common/dialogs/change_lock/change_lock_view_model.js","lib/assets/javascripts/cartodb/common/dialogs/change_privacy/change_privacy_view.js","lib/assets/javascripts/cartodb/common/dialogs/change_privacy/option_model.js","lib/assets/javascripts/cartodb/common/dialogs/change_privacy/options_collection.js","lib/assets/javascripts/cartodb/common/dialogs/change_privacy/password_option_model.js","lib/assets/javascripts/cartodb/common/dialogs/change_privacy/share/grantables_view.js","lib/assets/javascripts/cartodb/common/dialogs/change_privacy/share/group_details_view.js","lib/assets/javascripts/cartodb/common/dialogs/change_privacy/share/permission_toggler_view.js","lib/assets/javascripts/cartodb/common/dialogs/change_privacy/share/permission_view.js","lib/assets/javascripts/cartodb/common/dialogs/change_privacy/share/share_model.js","lib/assets/javascripts/cartodb/common/dialogs/change_privacy/share/share_view.js","lib/assets/javascripts/cartodb/common/dialogs/change_privacy/share/user_details_view.js","lib/assets/javascripts/cartodb/common/dialogs/change_privacy/start_view.js","lib/assets/javascripts/cartodb/common/dialogs/create/create_listing.js","lib/assets/javascripts/cartodb/common/dialogs/create/footer/guessing_toggler_view.js","lib/assets/javascripts/cartodb/common/dialogs/create/footer/privacy_toggler_view.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/datasets/content_result_view.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/datasets/dataset_item_view.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/datasets/datasets_paginator_view.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/datasets/remote_dataset_item_view.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/datasets_list_view.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/datasets_view.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/import_options.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/data_import/data_form_view.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/data_import/data_header_view.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/import_arcgis_selected_dataset_view.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/import_arcgis_view.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/import_data_view.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/import_default_fallback_view.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/import_default_view.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/import_selected_dataset_view.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/service_import/import_service_view.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/service_import/service_header_view.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/service_import/service_item_description_format.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/service_import/service_item_model.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/service_import/service_items_collection.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/service_import/service_list_item_view.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/service_import/service_list_view.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/service_import/service_loader_view.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/twitter_import/credits_info_view.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/twitter_import/credits_usage_view.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/twitter_import/import_twitter_view.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/twitter_import/twitter_categories/twitter_categories_collection.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/twitter_import/twitter_categories/twitter_categories_view.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/twitter_import/twitter_categories/twitter_category_model.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports/twitter_import/twitter_categories/twitter_category_view.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/imports_view.js","lib/assets/javascripts/cartodb/common/dialogs/create/listing/navigation_view.js","lib/assets/javascripts/cartodb/common/dialogs/create_vis_first/create_vis_first_view.js","lib/assets/javascripts/cartodb/common/dialogs/delete_column/delete_column_view.js","lib/assets/javascripts/cartodb/common/dialogs/delete_items_view.js","lib/assets/javascripts/cartodb/common/dialogs/delete_items_view_model.js","lib/assets/javascripts/cartodb/common/dialogs/delete_layer/delete_layer_view.js","lib/assets/javascripts/cartodb/common/dialogs/delete_row/delete_row_view.js","lib/assets/javascripts/cartodb/common/dialogs/duplicate_dataset_view.js","lib/assets/javascripts/cartodb/common/dialogs/duplicate_vis_view.js","lib/assets/javascripts/cartodb/common/dialogs/edit_vis_metadata/edit_vis_form_view.js","lib/assets/javascripts/cartodb/common/dialogs/edit_vis_metadata/edit_vis_metadata_dialog_model.js","lib/assets/javascripts/cartodb/common/dialogs/edit_vis_metadata/edit_vis_metadata_dialog_view.js","lib/assets/javascripts/cartodb/common/dialogs/export/export_view.js","lib/assets/javascripts/cartodb/common/dialogs/export_map/export_map_view.js","lib/assets/javascripts/cartodb/common/dialogs/feature_data/add_column/add_column_view.js","lib/assets/javascripts/cartodb/common/dialogs/feature_data/feature_data_dialog_view.js","lib/assets/javascripts/cartodb/common/dialogs/feature_data/form_collection.js","lib/assets/javascripts/cartodb/common/dialogs/feature_data/form_field/form_field_view.js","lib/assets/javascripts/cartodb/common/dialogs/feature_data/form_view.js","lib/assets/javascripts/cartodb/common/dialogs/georeference/admin_regions_model.js","lib/assets/javascripts/cartodb/common/dialogs/georeference/choose_geometry_view.js","lib/assets/javascripts/cartodb/common/dialogs/georeference/city_names_model.js","lib/assets/javascripts/cartodb/common/dialogs/georeference/default_footer_view.js","lib/assets/javascripts/cartodb/common/dialogs/georeference/geocode_stuff_model.js","lib/assets/javascripts/cartodb/common/dialogs/georeference/geometry_item_view.js","lib/assets/javascripts/cartodb/common/dialogs/georeference/georeference_model.js","lib/assets/javascripts/cartodb/common/dialogs/georeference/georeference_view.js","lib/assets/javascripts/cartodb/common/dialogs/georeference/ip_addresses_model.js","lib/assets/javascripts/cartodb/common/dialogs/georeference/lon_lat_columns_model.js","lib/assets/javascripts/cartodb/common/dialogs/georeference/postal_codes_model.js","lib/assets/javascripts/cartodb/common/dialogs/georeference/row_model.js","lib/assets/javascripts/cartodb/common/dialogs/georeference/row_view.js","lib/assets/javascripts/cartodb/common/dialogs/georeference/rows_view.js","lib/assets/javascripts/cartodb/common/dialogs/georeference/steps_view.js","lib/assets/javascripts/cartodb/common/dialogs/georeference/street_addresses/estimation_view.js","lib/assets/javascripts/cartodb/common/dialogs/georeference/street_addresses/quota_view.js","lib/assets/javascripts/cartodb/common/dialogs/georeference/street_addresses/street_addresses_model.js","lib/assets/javascripts/cartodb/common/dialogs/georeference/street_addresses/street_addresses_view.js","lib/assets/javascripts/cartodb/common/dialogs/georeference/street_addresses/street_row_model.js","lib/assets/javascripts/cartodb/common/dialogs/georeference/street_addresses/street_row_view.js","lib/assets/javascripts/cartodb/common/dialogs/georeference/tab_item_view.js","lib/assets/javascripts/cartodb/common/dialogs/georeference/user_geocoding_model.js","lib/assets/javascripts/cartodb/common/dialogs/limits_reach/limits_reached_content_view.js","lib/assets/javascripts/cartodb/common/dialogs/limits_reach/limits_reached_view.js","lib/assets/javascripts/cartodb/common/dialogs/limits_reach/user_plan_model.js","lib/assets/javascripts/cartodb/common/dialogs/limits_reach/user_plans_collection.js","lib/assets/javascripts/cartodb/common/dialogs/map/add_layer/footer_view.js","lib/assets/javascripts/cartodb/common/dialogs/map/add_layer_model.js","lib/assets/javascripts/cartodb/common/dialogs/map/add_layer_view.js","lib/assets/javascripts/cartodb/common/dialogs/map/image_picker/assets_item_view.js","lib/assets/javascripts/cartodb/common/dialogs/map/image_picker/assets_view.js","lib/assets/javascripts/cartodb/common/dialogs/map/image_picker/box_view.js","lib/assets/javascripts/cartodb/common/dialogs/map/image_picker/data/maki_icons.js","lib/assets/javascripts/cartodb/common/dialogs/map/image_picker/data/patterns.js","lib/assets/javascripts/cartodb/common/dialogs/map/image_picker/data/pin_maps.js","lib/assets/javascripts/cartodb/common/dialogs/map/image_picker/data/simpleicon.js","lib/assets/javascripts/cartodb/common/dialogs/map/image_picker/dropbox_view.js","lib/assets/javascripts/cartodb/common/dialogs/map/image_picker/file_upload_view.js","lib/assets/javascripts/cartodb/common/dialogs/map/image_picker/footer_view.js","lib/assets/javascripts/cartodb/common/dialogs/map/image_picker/navigation_view.js","lib/assets/javascripts/cartodb/common/dialogs/map/image_picker/static_assets_item_view.js","lib/assets/javascripts/cartodb/common/dialogs/map/image_picker/upload_model.js","lib/assets/javascripts/cartodb/common/dialogs/map/image_picker/user_icons_view.js","lib/assets/javascripts/cartodb/common/dialogs/map/image_picker_view.js","lib/assets/javascripts/cartodb/common/dialogs/map/scratch_view.js","lib/assets/javascripts/cartodb/common/dialogs/merge_datasets/column_merge/choose_key_columns_model.js","lib/assets/javascripts/cartodb/common/dialogs/merge_datasets/column_merge/choose_key_columns_view.js","lib/assets/javascripts/cartodb/common/dialogs/merge_datasets/column_merge/column_merge_model.js","lib/assets/javascripts/cartodb/common/dialogs/merge_datasets/column_merge/footer_info_view.js","lib/assets/javascripts/cartodb/common/dialogs/merge_datasets/column_merge/generate_column_merge_sql.js","lib/assets/javascripts/cartodb/common/dialogs/merge_datasets/column_merge/select_columns_model.js","lib/assets/javascripts/cartodb/common/dialogs/merge_datasets/column_merge/select_columns_view.js","lib/assets/javascripts/cartodb/common/dialogs/merge_datasets/column_selector_view.js","lib/assets/javascripts/cartodb/common/dialogs/merge_datasets/columns_selector_view.js","lib/assets/javascripts/cartodb/common/dialogs/merge_datasets/footer_view.js","lib/assets/javascripts/cartodb/common/dialogs/merge_datasets/merge_datasets_model.js","lib/assets/javascripts/cartodb/common/dialogs/merge_datasets/merge_datasets_view.js","lib/assets/javascripts/cartodb/common/dialogs/merge_datasets/merge_flavor_view.js","lib/assets/javascripts/cartodb/common/dialogs/merge_datasets/merge_step_model.js","lib/assets/javascripts/cartodb/common/dialogs/merge_datasets/merge_step_view.js","lib/assets/javascripts/cartodb/common/dialogs/merge_datasets/spatial_merge/choose_merge_method_model.js","lib/assets/javascripts/cartodb/common/dialogs/merge_datasets/spatial_merge/choose_right_dataset_model.js","lib/assets/javascripts/cartodb/common/dialogs/merge_datasets/spatial_merge/footer_info_view.js","lib/assets/javascripts/cartodb/common/dialogs/merge_datasets/spatial_merge/generate_spatial_merge_sql.js","lib/assets/javascripts/cartodb/common/dialogs/merge_datasets/spatial_merge/merge_method_view.js","lib/assets/javascripts/cartodb/common/dialogs/merge_datasets/spatial_merge/merge_methods/avg_merge_method.js","lib/assets/javascripts/cartodb/common/dialogs/merge_datasets/spatial_merge/merge_methods/count_merge_method.js","lib/assets/javascripts/cartodb/common/dialogs/merge_datasets/spatial_merge/merge_methods/sum_merge_method.js","lib/assets/javascripts/cartodb/common/dialogs/merge_datasets/spatial_merge/spatial_merge_model.js","lib/assets/javascripts/cartodb/common/dialogs/merge_datasets/spatial_merge/spatial_merge_view.js","lib/assets/javascripts/cartodb/common/dialogs/merge_datasets/sticky_header_view.js","lib/assets/javascripts/cartodb/common/dialogs/merge_datasets/tables_selector_view.js","lib/assets/javascripts/cartodb/common/dialogs/pecan/pecan_card.js","lib/assets/javascripts/cartodb/common/dialogs/pecan/pecan_dialog_view.js","lib/assets/javascripts/cartodb/common/dialogs/pecan/pecan_view.js","lib/assets/javascripts/cartodb/common/dialogs/publish/options/view_model.js","lib/assets/javascripts/cartodb/common/dialogs/publish/publish_option_view.js","lib/assets/javascripts/cartodb/common/dialogs/publish/publish_view.js","lib/assets/javascripts/cartodb/common/dialogs/static_image/advanced_export_view.js","lib/assets/javascripts/cartodb/common/dialogs/static_image/export_image_result_view.js","lib/assets/javascripts/cartodb/common/dialogs/sync_dataset/interval_view.js","lib/assets/javascripts/cartodb/common/dialogs/sync_dataset/sync_dataset_view.js","lib/assets/javascripts/cartodb/common/edit_fields/boolean_field/boolean_field_view.js","lib/assets/javascripts/cartodb/common/edit_fields/date_field/date_field_view.js","lib/assets/javascripts/cartodb/common/edit_fields/date_field/date_picker/calendar_dropdown_view.js","lib/assets/javascripts/cartodb/common/edit_fields/date_field/date_picker/date_picker_view.js","lib/assets/javascripts/cartodb/common/edit_fields/date_field/time_input/time_input_view.js","lib/assets/javascripts/cartodb/common/edit_fields/edit_field_model.js","lib/assets/javascripts/cartodb/common/edit_fields/edit_field_view.js","lib/assets/javascripts/cartodb/common/edit_fields/number_field/number_field_view.js","lib/assets/javascripts/cartodb/common/edit_fields/string_field/string_field_view.js","lib/assets/javascripts/cartodb/common/forms/spinner.js","lib/assets/javascripts/cartodb/common/mamufas_import/mamufas_import_dialog_view.js","lib/assets/javascripts/cartodb/common/mamufas_import/mamufas_import_view.js","lib/assets/javascripts/cartodb/common/paged_search_model.js","lib/assets/javascripts/cartodb/common/service_models/service_oauth_model.js","lib/assets/javascripts/cartodb/common/service_models/service_token_model.js","lib/assets/javascripts/cartodb/common/view_factory.js","lib/assets/javascripts/cartodb/common/view_helpers/navigate_through_router.js","lib/assets/javascripts/cartodb/common/view_helpers/pluralize_string.js","lib/assets/javascripts/cartodb/common/view_helpers/random_quote.js","lib/assets/javascripts/cartodb/common/views/base_dialog/view.js","lib/assets/javascripts/cartodb/common/views/date_pickers/dates_range_picker.js","lib/assets/javascripts/cartodb/common/views/error_details_view.js","lib/assets/javascripts/cartodb/common/views/likes/view.js","lib/assets/javascripts/cartodb/common/views/mapcard_preview.js","lib/assets/javascripts/cartodb/common/views/paged_search/paged_search_view.js","lib/assets/javascripts/cartodb/common/views/pagination/model.js","lib/assets/javascripts/cartodb/common/views/pagination/view.js","lib/assets/javascripts/cartodb/common/views/warnings_details_view.js","lib/assets/javascripts/cartodb/common/visualizations_fetch_model.js","lib/assets/javascripts/cartodb/editor.js","lib/assets/javascripts/cartodb/editor/background_polling_model.js","node_modules/cartodb-pecan/src/cartocss.js","node_modules/cartodb-pecan/src/cartocss/color-ramps.js","node_modules/cartodb-pecan/src/cartocss/get-default-css-for-geometry-type.js","node_modules/cartodb-pecan/src/cartocss/get-geo-attr.js","node_modules/cartodb-pecan/src/deep-defaults.js","node_modules/cartodb-pecan/src/get-method-properties.js","node_modules/cartodb-pecan/src/get-weight-from-shape.js","node_modules/cartodb-pecan/src/guess-map.js","node_modules/cartodb-pecan/src/has-enough-to-guess.js","node_modules/cartodb-pecan/src/pecan.js","node_modules/queue-async/build/queue.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","cdb","window","global","ImportsCollection","GeocodingsCollection","AnalysisCollection","pollingsTimer","core","Model","extend","defaults","showGeocodingDatasetURLButton","showSuccessDetailsButton","geocodingsPolling","importsPolling","initialize","attrs","opts","this","user","vis","importsCollection","geocodingsCollection","analysisCollection","anaylysisCollection","_initBinds","startPollings","bind","mdl","trigger","_onImportsStateChange","_onGeocodingsStateChange","size","_onAnalysisStateChange","getTotalFailedItems","failedItems","removeImportItem","remove","addImportItem","add","removeGeocodingItem","canAddImport","addGeocodingItem","canAddGeocoding","removeAnalysis","destroyCheck","reset","addAnalysis","array","canAddAnalysis","canImport","canGeocode","canStartPecan","getTotalImports","getTotalGeocodings","getTotalAnalysis","getTotalPollings","isAnalyzing","stopPollings","get","self","setTimeout","pollCheck","clean","unbind","elder","ImportItemView","AnalysisItemView","GeocodingItemView","ImportLimitItemView","ImportsModel","BackgroundPollingModel","BackgroundPollingHeaderView","View","className","options","createVis","model","template","templates","getTemplate","render","$el","html","_initViews","_addImport","_addGeocoding","_addAnalysis","_checkPollingsSize","god","_addDataset","_onDroppedFile","add_related_model","backgroundPollingHeaderView","prepend","el","addView","show","hide","collection","_analysisItem","$","geocodingItem","enable","m","importItem","d","_addImportsItem","files","type","value","create_vis","uploadData","_addLimitItem","_removeLimitItem","imp","upload","_importLimit","v","removeView","disable","addClass","removeClass","Backbone","_","Pecan","PecanModel","batchAnalysisCount","Collection","mdls","getCompletedAnalysis","_nextAnalysisItems","each","idleItems","first","where","state","featureEnabled","stats","_printStats","isAnalyzed","arePendingAnalysis","find","analysis","getData","name","column","weight","skew","distinct","count","null_ratio","dist_type","calc_weight","getWeightFromShape","distinctPercentage","log","info","toFixed","density","items","getSuccessfullyAnalysedColumns","success","GeocodingModelPoller","startPollingAutomatically","kind","formatter","table_name","url","method","version","config","urlVersion","base","isNew","id","setUrlRoot","urlRoot","poller","_checkModel","_saveModel","save","error","set","title","description","start","stop","getError","hasFailed","hasCompleted","isOngoing","cancelGeocoding","wait","resetGeocoding","Poller","POLLING_INTERVAL","interval","stopWhen","prototype","pollTimer","GeocodingModel","parse","geocodings","data","filter","_checkOngoingGeocoding","models","map","layers","lyr","table","any","fetchGeocodings","fetch","setInterval","clearInterval","item","cdbAdmin","ImportModelPoller","idAttribute","_checkQueueId","createImport","_prepareData","privacy","type_guessing","content_guessing","service","service_name","remote_visualization_id","sql","table_copy","service_item_id","JSON","stringify","user_defined_limits","_createSyncImport","sync","TableSynchronization","item_queue_id","_setErrorState","_createRegularImport","msg","responseText","errors","imports","err","get_error_text","what_about","POLLING_INTERVAL_MULTIPLIER","POLLING_REQUESTS_BEFORE_INTERVAL_CHANGE","numberOfRequests","importQuota","getMaxConcurrentImports","total","finished","ImportModel","UploadModel","step","isEmpty","upl","import","_checkStatus","_onImportChange","_onUploadChange","_onIdChange","_destroyBinds","isValid","toJSON","pause","stopUpload","stopImport","getWarnings","error_code","original_url","data_type","http_response_code","http_response_code_message","importedVis","derived_visualization_id","_getMapVis","_getDatasetVis","derivedVisId","_createVis","tableName","admin","Visualization","permission","owner","setError","stepModel","attr","longitude_column","latitude_column","isBoolean","force_all_rows","_startGeocoding","_changeState","resp","newState","changedStates","reduce","memo","_PRINT_STATS","table_id","bindAll","SQL","query","describe","_onDescribe","properties","hasEnoughToGuess","isPointGeometryType","response","guessMap","geometryType","bbox","dependencies","underscore","overrides","polling","autoStart","timeout","_scheduleFetch","_fetch","_continuePolling","isFunction","clearTimeout","uploadStates","fileExtensions","fileTimesBigger","UploadConfig","Utils","moment","fileAttribute","progress","option","val","_validate","attributes","validate","isValidToUpload","setFresh","omit","clear","unset","silent","ext","substr","lastIndexOf","toLowerCase","contains","isURL","categories","dates","isToDateValid","fromDate","Date","toDate","xhr","filename","message","status","complete","abort","setGuessing","PecanDialog","tagName","events","click .js-abort","click .js-show_dialog","click .js-close","totalItems","totalAnalyzed","totalSuccess","_onChangeState","_removeItem","_showDialog","pecanDialog","clean_on_hide","appendToBody","_skip","layerID","activeLayer","skipPencanDialog","localStorage","totalPollings","BackgroundPollingHeaderTitleView","_updateBadges","headerTitle","append","failed","$span","text","geocodingsCount","isGeocoding","toggleClass","pluralizeString","GeocodingResultDetailsView","click .js-info","processedRows","processableRows","realRows","isLatLngType","canCancel","processableRowsFormatted","formatNumber","realRowsPluralize","realRowsFormatted","processableRowsPluralize","width","_cancelGeocoding","_removeGeocoding","_showDetails","BaseDialog","render_content","datasetURL","price","hasPrice","undefined","googleUser","encodeURI","viewUrl","edit","geometryTypePluralize","remainingQuotaFormatted","blockPrice","block_price","customHosted","errorDescription","ErrorDetailsView","WarningsDetailsView","ViewFactory","TwitterImportDetailsDialog","click .js-show_error","click .js-show_warnings","click .js-show_stats","_showSuccessDetailsButton","completed","warnings","tables_created_count","display_name","indexOf","_showImportStats","_showImportError","dialog","createDialogByView","_showImportWarnings","isUpgradeable","upgradeUrl","upgrade_url","userTwitterValues","availableTweets","quota","monthly_use","mapURL","datasetTotalRows","tweets_georeferenced","datasetTotalRowsFormatted","tweetsCost","tweets_cost","tweetsCostFormatted","availableTweetsFormatted","tweetsOverquota","tweets_overquota","tweetsOverquotaFormatted","blockSizeFormatted","block_size","blockPriceFormatted","queue","q","howManyInParallel","defer","callback","processItem","awaitAll","fail","done","XYZModel","WMSModel","NASAModel","MapboxModel","TileJSONModel","baseLayers","tabs","currentView","currentTab","_initTabs","activeTabModel","canSaveBasemap","_layerToSave","saveBasemap","layer","hasAlreadyAddedLayer","_onLayerSaved","clonedLayer","clone","changeProvider","setBounds","tabModel","randomQuote","ViewModel","TabsView","apply","arguments","contentView","_panes","active","delegateEvents","ok","ui","common","TabPane","addTab","createByTemplate","quote","_onCurrentViewChange","close","MapboxView","MapboxToTileLayerFactory","label","lastErrorMsg","createView","urlTemplate","custom","customLayer","accessToken","mf","createTileLayer","tileLayer","errorMsg","_MAPBOX","https","callbacks","mapbox_id","_lowerXYZ","access_token","subdomains","_getMapBoxMapID","replace","Math","floor","random","match","_fixHTTPS","image","_newTileLayer","tiles","Image","onload","onerror","_errorToMsg","src","params","base_url","tile_url","json_url","errorTimeout","ajax","attribution","minzoom","maxzoom","isArray","TileLayer","maxZoom","minZoom","reg1","reg2","loc","location","protocol","click .js-ok","keydown","keyup","clearSubViews","view","_hasValues","_urlVal","_accessToken","_onClickOK","ev","killEvent","_onKeyDown","stopPropagation","_onKeyUp","NASAView","TYPES","day","limit","default","night","layerType","date","current","format","utc","getTimezoneOffset","today","utcOffset","yesterday","subtract","_onChange","dateStr","DateFieldView","EditFieldModel","dateFormat","click .js-day","click .js-night","dateModel","initialDateStr","_renderDatePicker","dateField","showTime","showGMT","_$datePicker","TipsyTooltip","_onChangeToNight","_onChangeToDay","click .js-tabs button","_createTabContentView","_currentTabView","_onClickTab","target","closest","keydown .js-url","paste .js-url","_lastURL","_update","_debouncedUpdate","debounce","_disableOkBtn","_indicateIsValidating","_urlWithHTTP","_updateError","tileJSON","TileJSON","newTileLayer","indicate","str","TileJSONView","canSave","_shouldBeProxied","_createProxiedLayer","supportedMatrixSets","WMSService","w","wms_url","srs","bounding_boxes","matrix_sets","email","user_data","_setNewTileLayer","byCustomURL","_xyzURLTemplate","click .js-add","_onClickAdd","LayerModel","wmsService","always","pluralizeStr","LayerView","click .js-back","searchQuery","layersFound","getLayers","layersAvailableCount","$list","_renderedLayers","_onClickBack","WMSView","LayersCollection","layersFetched","fetchLayers","difference","pluck","regExp","RegExp","_onLayerStateChange","SelectLayerView","keydown .js-search-input","submit .js-search-form","click .js-fetch-layers","click .js-clean-search","click .js-search-link","focus","_showCleanSearchButton","_hideCleanSearchButton","_onChangeSearchQuery","_enableFetchLayersButton","enterPressed","keyCode","ENTER","_submitSearch","_onCleanSearchClick","_onClickFetchLayers","XYZView","tms","click .js-tms","_lastCallSeq","tooltip","_setTMSCheckbox","_changeTMS","urlErrorMsg","thisCallSeq","validateTemplateURL","_setTMS","$checkbox","_continue","_renderConfirmChangeLock","itemsCount","areLocked","ownerName","isOwner","thisOrTheseStr","itOrThemStr","positiveOrNegativeStr","lockOrUnlockStr","contentTypePluralized","_ok","inverseLock","_renderProcessingItems","lockingOrUnlockingStr","_renderProcessItemsFail","batchProcessItems","initialLockValue","contentType","chain","uniq","trackJs","track","at","toArray","_lockItem","newLockedValue","locked","StartView","PrivacyOptions","ShareView","ChangePrivacyView","_privacyOptions","byVisAndUser","getActivePane","selectedOption","saveToVis","privacyOptions","getPane","_openShareDialog","enter_to_confirm","disabled","selected","password","classNames","compact","join","_attrsToSave","pick","OptionModel","PasswordOptionModel","ALL_OPTIONS","illustrationType","iconFontType","desc","alwaysEnable","_deselectLastSelected","passwordOption","isSelected","canSelectPremiumOptions","isVisualization","currentPrivacy","availableOptions","DEFAULT_FAKE_PASSWORD","PermissionView","UserDetailsView","GroupDetailsView","isUndefined","empty","pagedSearchModel","_renderOrganizationPermissionView","_renderGrantablesViews","on","dependentVisualizations","tableMetadata","grantable","_appendView","entity","isWriteAccessTogglerAvailable","detailsView","_createDetailsView","_detailsViewOpts","avatarUrl","willRevokeAccess","roleLabel","detailsViewOpts","users","reject","_isCurrentUser","grantableEntity","userIds","isUsingVis","userId","_willRevokeAccess","_desc","usersCount","xMembers","prefixWithCount","hasReadAccess","mouseover .js-toggler.is-disabled","mouseout .js-toggler","mouseleave .js-toggler","change .js-input","cid","hasAccess","canChangeAccess","_onChangeInput","toggleAccess","_onHoverDisabledToggler","aclItem","findRepresentableAclItem","isOwn","_tooltipView","showTipsy","_closeTooltip","hideTipsy","_tooltip","_newTooltipView","_inheritedAccessTooltipText","PermissionTogglerview","acl","_renderDetails","_renderAccessTogglers","_renderView","togglers","_newReadToggler","unshift","_newWriteToggler","createByList","p","hasWriteAccess","canChangeWriteAccess","_toggleWrite","canChangeReadAccess","_toggleRead","revokeWriteAccess","grantWriteAccess","revokeAccess","grantReadAccess","organization","PagedSearchModel","PagedSearchView","ShareModel","GrantablesView","extendEvents","_htmlNode","_grantablesView","loadingView","createDialogByTemplate","overwriteAcl","failView","_openChangePrivacy","grantables","per_page","order","isUsedInDialog","createListView","htmlStr","DISABLED_SAVE_CLASS_NAME","SHARED_ENTITIES_SAMPLE_SIZE","click .js-option","click .js-share","keyup .js-password-input","pwdOption","sharedEntities","getUsersWithAnyPermission","saveBtnClassNames","showUpgradeBanner","showTrial","canStartTrial","showShareBanner","sharedEntitiesCount","personOrPeopleStr","sharedEntitiesSampleCount","sharedEntitiesSample","take","sharedWithOrganization","isSharedWithOrganization","_onChangePassword","_onClickOption","_onKeyUpPasswordInput","_onClickShare","DatasetsView","ImportsView","createModel","_onChangeListing","listingPane","datasetsView","defaultUrl","dashboard","datasets","routerModel","visFetchModel","_addListingPane","canCreateDatasets","importsView","click .js-toggle","showGuessingToggler","isGuessingEnabled","importState","getImportState","isUploadValid","_toggle","click","showPrivacyToggler","canChangePrivacy","canCreatePrivateDatasets","nexPrivacy","icon","canUpgrade","isDisabled","nextPrivacy","_onClick","click .js-connect","page","tag","shared","library","totalEntries","total_entries","_onConnectClick","LikesView","click .js-tag-link","CartoDBTableMetadata","tags","stripHTML","markdown","toHTML","isRaster","geomColumnTypes","renderData","showPermissionIndicator","likes","timeDiff","fromNow","tagsCount","maxTagsToShow","rowCount","datasetSize","syncStatus","syncRanAt","readizableNumber","pluralizedRows","readablizeBytes","ran_at","_renderLikesIndicator","_renderTooltips","like","replaceWith","_onTagClick","_toggleSelected","canSelect","PaginationModel","PaginationView","current_page","paginationView","_updatePaginationModelByCollection","_updatePaginationModelByRouterModel","total_count","DatasetItem","source","canImportDataset","_canImportDataset","toString","_setItemClasses","table_size","DatasetsItem","RemoteDatasetsItem","_ITEMS","remotes","_addItem","DatasetsList","ContentResult","DatasetsPaginator","_initBindings","_onRouterChange","_onDataLoading","_onDataFetched","statusText","_onDataError","controlledViews","enabledViews","noDatasetsView","no_datasets","listView","list","noResultsView","no_results","errorView","mainLoaderView","main_loader","datasetsPaginator","content_footer","_hideBlocks","_showBlocks","activeViews","total_user_entries","push","_goToLibrary","views","without","_isBlockEnabled","ImportService","ImportTwitter","ImportDataView","ImportArcGISView","File","enabled","userData","fileEnabled","acceptSync","GDrive","showAvailableFormats","fileAttrs","content","key","Dropbox","separator","Box","fallback","Twitter","twitter","Mailchimp","mailchimp","headerTemplate","itemName","Arcgis","Salesforce","formTemplate","keyup .js-textInput","submit .js-form","_checkVisibility","_onFileChanged","_initDropzone","dragster","Dragster","_showDropzone","_hideDropzone","dropzone","Dropzone","autoProcessQueue","previewsContainer","dataTransfer","_destroyDropzone","removeListeners","destroy","_setValidFileExtensions","_onTextChanged","_hideTextError","_hideFileError","_showFileError","_showTextError","_onSubmitForm","importType","sync_tables","_goToStart","SelectedDataset","_genDescription","getFileExtension","userCanSync","customInstall","importCanSync","_isArcGISLayer","showUpgrade","isInsideOrg","search","FormView","HeaderView","headerView","formView","ImportDefaultView","setOptions","_checkState","_triggerChange","previous","getModelData","_FORMATTERS","number","click .js-interval-0","click .js-interval-1","click .js-interval-2","click .js-interval-3","click .js-interval-4","descriptionOpts","descriptionKeyValue","descriptionStr","_onIntervalZero","_onIntervalHour","_onIntervalDay","_onIntervalWeek","_onIntervalMonth","ServiceHeader","ServiceLoader","ServiceList","ServiceSelectedFile","ServiceToken","ServiceOauth","ServiceCollection","_DATASOURCE_NAME","_WINDOW_INTERVAL","formatDescription","_initModels","token","datasource_name","_onOauthChange","_openWindow","header","loader","_getFiles","open","closed","_goToList","formatSize","checksum","ServiceItem","coll","ServiceUtilsFormat","click .js-choose","_onSelectItem","ServiceListItem","_TEXTS","_t","pluralize","_onSelectedItem","_checkToken","_getOauthURL","twitterData","remaining","per","min","ceil","hardLimit","hard_limit","remainingFormatted","CreditsInfo","_DEFAULT_PER_VALUE","_MIN_PER_VALUE","_setModel","slider","_onValueChange","max","defaultValue","range","orientation","slide","_onSlideChange","change","creditsInfo","getMaxCredits","DatesRangePicker","TwitterCategories","CreditsUsage","datepicker","creditsUsage","_getCategories","getCategories","c","category","terms","_getDates","getDates","_getMaxCredits","maxCredits","twitter_credits_limit","TwitterCategoryModel","TwitterCategoriesCollection","TwitterCategoriesModel","TwitterCategoryView","_MAX_CATEGORIES","_MAX_TERMS","_generateCategory","_addCategory","_manageCategories","_onCategoryChange","collection_size","nonFilled","_subviews","pos","index","_removeCategory","_setCategoryIndex","_onCategorySubmit","_onCategoryLimit","_onCategoryNoLimit","_MAX_COUNTER","_CHAR_MAP"," ","-",".","counter","_setCounter","term","keydown .js-terms","keypress .js-terms","keyup .js-terms","_onInputChange","preventDefault","$input","split","ImportOptions","ImportFallback","_TABS_PER_ROW","_DEFAULT_IMPORT","_IMPORT_OPTIONS","account","limits","credits","click .js-goNext","click .js-goPrev","maxPages","_genTabs","_genTabsNavigation","_genPanes","_setOption","tabTemplate","importTabs","Tabs","slash","numTabs","_checkTabsNavigation","_moveNextTabs","_movePrevTabs","_moveTabsNavigation","rowWidth","css","importPanes","linkToPanel","pane","fn","isEnabled","_setUploadModel","_checkGDriveImport","_setFailedTab","_checkDropboxImport","_checkBoxImport","_checkTwitterImport","_checkInstagramImport","_checkSalesforceImport","_checkMailchimpImport","tab","$tab","getTab","_createTooltip","_onTabChange","_updateImportOption","setActiveImportPane","activeTab","tabName","keydown .js-search-form","click .js-search-form","click .js-shared","click .js-library","click .js-datasets","click .js-create_empty","createFromScratchLabel","dataset","addLayer","_preRender","$uInner","$filtersInner","selectedItemsCount","_selectedItems","changedContentType","changes","content_type","createModelType","canCreateDataset","listing","maxLayersByMap","getMaxLayers","totalShared","total_shared","pageItems","pluralizedContentType","pluralizedContentTypeSelected","_animate","isSearching","_focusSearchInput","_onChangeIsSearchEnabled","isSearchEnabled","_enableSearchUI","_cleanSearch","_$searchInput","select","_onSearchKeyDown","inLibrarySection","inDatasetsSection","hasDatasets","toggle","_onDatasetsClick","_onSharedClick","_onLibraryClick","_onCreateEmptyClick","createFromScratch","_onSearchClick","showLibrary","trim","explanation","router","changeToVisualization","changeToVis","deleteColumn","MapCardPreview","AFFECTED_ENTITIES_SAMPLE_COUNT","AFFECTED_VIS_COUNT","viewModel","TypeError","_viewModel","loadPrerequisites","_loadMapPreviews","_renderLoadingPrerequisites","_pluralizedContentType","_renderLoadPrerequisitesFail","_renderConfirmDeletion","affectedEntities","affectedVisData","firstItemName","_getFirstItemName","selectedCount","isDatasets","isDeletingDatasets","affectedEntitiesCount","affectedEntitiesSample","slice","affectedEntitiesSampleCount","affectedVisCount","pluralizedMaps","affectedVisVisibleCount","visibleAffectedVis","_prepareVisibleAffectedVisForTemplate","visibleAffectedVisData","visData","visId","deleteItems","username","mapCardPreview","height","mapsApiResource","getMapsResourceName","load","_renderDeletingItems","_renderDeleteItemsFail","errorMessage","firstItem","_contentType","_state","_errorMessage","setState","setStateToConfirmDeletion","_loadPrerequisitesForModel","sharedWithEntities","flatten","metadata","concat","_deleteItem","_deletionFailed","no_data_fetch","jqXHR","row","_duplicateDataset","isInSQLView","newName","duplicate","newTable","_redirectTo","_showError","_duplicateMap","copy","newVis","maxLength","keydown .js-name","click .js-privacy","submit","_destroyTags","isDataset","isDataLibraryEnabled","visValue","visDescription","visPrivacy","visSource","visAttributions","visDisplayName","isNameEditable","isMetadataEditable","_setFields","li","sanitize","tagsPlaceholder","tagit","allowSpaces","placeholderText","readOnly","onBlur","onFocus","onSubmitTags","tagList","_onSubmit","_licenseDropdown","forms","Combo","property","extra","_getLicensesForFormsCombo","emptyOption","_showPrivacy","_onNameKeyDown","removeHTMLEvents","attributions","dataLayer","license","validationError","valid","isVisEditable","isAttributeEditable","isReadOnly","EditVisMetadataModel","visType","visTypeCapitalized","charAt","toUpperCase","form","_saveAttributes","newAttrs","oldAttrs","changedAttributes","onDone","onShowPrivacy","_showForm","_CSV_FILTER","_MAX_SQL_GET_LENGTH","click .js-option:not(.is-disabled)","formats","fetcher","geomRequired","illustrationIconModifier","baseUrl","getSqlApiUrl","refresh","getFormat","_export","$button","currentTarget","formatName","getBaseOptions","api_key","getPlainSql","sqlView","getSQL","getGeomFilteredSql","isGeoreferenced","_showElAndHideRest","serialize","_fetchGET","autoClose","showError","json","checkInterval","document","body","textContent","fetchCSV","removeAttr","fetchSVG","preparingDownloadContent","_renderLoadingContent","editor","classNameToShow","forEach","click .js-download","click .js-cancel","loadingTitle","_confirm","requestExport","_download","_abortExport","cancelExport","click .js-addColumn","_addColumn","addColumn","getTime","baseLayer","provider","currentZoom","_template","featureType","getFeatureType","_createPreviewMap","_changeAttributes","_scrollToError","animate","scrollTop","position","top","newData","object","oldData","Row","isReservedColumn","_cancel","div","mapViewClass","LeafletMapView","GoogleMapsMapView","Map","mapView","getBounds","setCenter","setZoom","getInvalid","StringFieldView","NumberFieldView","BooleanFieldView","keydown .js-columnName","focusout .js-columnName","_FIELD_VIEW","string","boolean","timestamp with time zone","timestamp without time zone","columnError","typeError","fieldError","fieldModel","attribute","_onTypeChanged","editorField","fieldTooltip","types","isTypeChangeAllowed","combo","typeTooltip","previousType","previousValue","changeColumnType","_refreshRecordData","blur","_onColNameChange","oldVal","renameColumn","onComplete","newValue","rows","FormFieldView","AddColumnView","FormCollection","click .js-submit","_generateCollection","_newColumn","_renderField","tableSchema","hiddenColumns","pair","_generateModel","before","newColumn","invalid","StepsView","RowModel","DefaultFooterView","TAB_LABEL","KIND","columns","geocodeStuff","columnsNames","_initRows","_setStateForFirstStep","assertIfCanContinue","_columnNameValue","continue","_setStateForSecondStep","_geocode","goBack","availableGeometriesFetchData","_locationValue","_isLocationFreeText","canGoBack","canContinue","hideFooter","invoke","comboViewClass","placeholder","locationValue","isLocationFreeText","geocodingChosenData","isLocationWorld","column_name","geometry_type","_location","last","GeometryItemView","availableGeometries","Geocodings","AvailableGeometries","_fetchAvailableGeometries","_createItemsViews","_createLoadingView","_createItemView","titles","available","unavailable","learnMore","region","_regionValue","region_text","_isRegionFreeText","_region","click .js-force-all-rows","_onChangeCanContinue","_onChangeHideFooter","_geocodeStuff","_onChangeForceAllRows","hasForceAllRows","_onClickForceAllRows","forceAllRows","initialie","free_text","isFreeText","useFallbackIfLocationIsMissing","isLocationMissingAndShouldFallback","isWorld","_onChangeAvailableGeometries","_onChangeGeometryType","isAvailable","_isAvailable","LonLatColumnsModel","CityNamesModel","AdminRegionsModel","PostalCodesModel","IpAddressesModel","StreetAddressesModel","GeocodeStuffModel","UserGeocodingModel","_EXCLUDED_COLUMN_NAMES","_ALLOWED_COLUMN_TYPES","_initGeocodeStuff","_initOptions","changedSelectedTab","newTab","_deselect","_selectedTabModel","_isSelected","_columnsNames","_isAllowedColumnName","_columnName","_filteredColumns","_isAllowedColumnType","_inverColumnRawValues","rawColumn","_columnType","isGoogleMapsUser","_isGmeGeocoderEnabled","userGeocoding","_userGeocoding","lastBillingDate","estimation","Estimation","getUnquotedName","_disableGeorefTabs","_maybeDisabledStreetAddresses","_georefTabs","_disableTab","rest","isGmeGeocoderEnabled","_isGoogleMapsEnabled","_streetAddrTabModel","hasQuota","_hasUserActionEnabled","actionName","GeoreferenceModel","TabItemView","click .js-back:not(.is-disabled)","hasNoGeoferencedData","_renderTabs","_renderTabContent","_tabViews","_createDefaultTabView","$target","_getRenderedElement","_tabContentView","_onChangeSelectedTab","_onChangeCanGoBack","_onChangeGeocodeData","_onGoBack","RowsView","all","longitude","latitude","RowView","_selectView","_onChangeValue","_changeSelection","_renderRows","_createRowView","_appendRowToDOM","ChooseGeometryView","_renderChooseGeometry","_renderHeader","hasHardLimit","hasEstimation","costInCredits","costInDollars","blockPriceInDollars","hasRows","quotaLeft","quotaLeftThisMonth","quotaUsedInPct","quotaUsedThisMonthInPct","StreetAddressesView","StreetRowModel","MAX_STREET_ROWS","mustAgreeToTOS","confirmTOS","hasAgreedToTOS","hasReachedMonthlyQuota","showCostsInfo","getFormatterItemByRow","assertIfCanAddMoreRows","streetRows","_isStreetRow","daysLeftToNextBilling","startOf","diff","_hasAgreedToTOS","canAddRow","EstimationView","QuotaView","_fetchEstimation","_renderEstimation","_renderQuota","_renderFooter","_$rows","cartodb_com_hosted","upgradeURL","_onChangeRows","_onAddRow","_onChangeEstimation","_onEstimationError","_onChangeConfirmTOS","newRow","rowView","children","eq","mayHaveCost","triggerDialogEvents","_onAgreeToTOS","StreetRowView","addRow","newRowModel","constructor","_indexAfterThisModel","click .js-add-row","_initStreetRowBinds","_onChangeCanAddRow","_onClickAddRow","click .js-btn","_onChangeSelected","_onChangeDisabled","_createDisabledTooltip","undelegateEvents","gravity","offset","_maybe","monthlyUse","fallbackVal","click .js-toggler","lumpSum","currentPlan","availablePlans","plan","planName","isUserPlan","lumpSumPrice","privateMaps","removableBrand","itemHighlighted","_getHighlighted","organizationAdmin","isOrgOwner","organizationUser","plans","_onLumpSumClick","UserPlansCollection","LimitsReachedContentView","userPlans","organizationAdminEmail","layersCount","tables_quota","bytes_quota","support","private_tables","removable_brand","max_layers","UserPlanModel","dataType","processData","available_plans","GuessingTogglerView","PrivacyTogglerView","guessingModel","guessing","privacyModel","canFinish","guessingTogglerView","privacyTogglerView","selectedDatasets","contentPane","_finish","finish","VisFetchModel","collectionFetched","activeImportPane","Visualizations","_maybePrefetchDatasets","showDatasets","_addNewLayer","_fetchCollection","changedModel","wasSelected","sameModel","only_liked","liked","exclude_raster","_onCollectionChange","addCartodbLayerFromTable","saveLayers","CreateListing","FooterView","NavigationView","_footerView","_onChangeContentView","_contentPane","_navigationView","_addTab","_SIZE","_MIN_SIZE","click a.delete","_calcBkgImg","img","h","$thumbnail","background-size","background-origin","background-position","background-repeat","_openDropdown","stopImmediatePropagation","dropdown","DropdownMenu","speedIn","speedOut","template_base","vertical_position","horizontal_position","horizontal_offset","tick","_deleteAsset","StaticAssetItemView","_setupAssets","_renderAssets","folder","host","icons","StaticAssets","_selectItem","_unselectItems","click .js-fileButton","_UPLOADER","uploads","maxFileSize","acceptFileTypes","resolution","_setupModel","_onStateUploaded","_onStateError","_onBoxClick","choose","_onDbxChooserSuccess","multiselect","linkType","extensions","link","disclaimer","_onDropboxClick","simple_icons","pin_icons","maki_icons","your_icons","upload_file","dropbox","box","action","_updateFooterInfo","click .js-item","click .js-your-icons","dropbox_enabled","box_enabled","_enableFilter","_onYourIconsClick","_onItemClick","AssetsItemView","AssetsView","ImagePickerNavigationView","UserIconsView","UploadView","DropboxView","BoxView","makiIcons","patterns","pinMaps","simpleicon","submit_enabled","Assets","_onChangePane","_initAssets","_onAssetsFetched","_showLoader","_hideLoader","_showUploadLoader","_hideUploadLoader","_renderContentPane","_renderNavigation","_renderTabPane","_renderLoader","_renderUploadLoader","_renderSimpleiconPane","_renderPinIconsPane","_renderMakisPane","_renderPatternPane","_renderUserIconsPane","_renderFilePane","_renderDropboxPane","_renderBoxPane","tabPane","navigationView","_renderPane","_onFileChosen","_addPane","activePane","click .js-skip","skipDisabled","_onSkipClick","_onOptionClick","ChooseKeyColumnsView","SelectColumns","INSTRUCTIONS_SAFE_HTML","isReadyForNextStep","excludeColumns","leftTable","leftColumns","rightTableData","rightColumns","_initColumns","_resetSorting","changeRightTable","tableData","prefixUrl","_onFetchedColumns","results","filteredColumns","_filterColumns","schema","selectedLeftColumn","selectedItemFor","disableRightColumnsNotMatchingType","leftKeyColumnType","shouldDisable","assertIfReadyForNextStep","isReady","nextStep","leftKeyColumn","rightKeyColumn","collectionName","filteredLeftColumns","columnData","comparator","sort","ColumnsSelectorView","TablesSelectorView","FooterInfoView","leftTableName","_leftTableComboView","_leftColumnsView","_rightTableSelectorView","_rightColumnsView","excludeFilter","_columnsExcludeFilter","selectorType","loading","infoView","_onChangeSelectedLeftColumn","_onChangeSelectedRightColumn","_assertIfReadyForNextStep","rightTablesModel","_onChangeRightTableData","ChooseKeyColumnsModel","ILLUSTRATION_ICON_TYPE","ICON","TITLE","DESC","_columnDataName","_isntTheGeomName","columnName","firstStep","leftKeyColumnName","rightKeyColumnName","_onChangeLeftColumn","_onChangeRightColumn","selectColumn","otherTableName","leftColumnsNames","rightTableName","rightColumnsNames","rightKeyColumnType","selects","colSQL","isColumnPresentInLeftTable","leftColumnName","SelectColumnsView","generateColumnMergeSQL","MergeModel","_resetColumns","onlyAllowOneSelectedTheGeomColumn","leftColumn","_theGeomColumnFor","rightColumn","_selectedColumnsNamesFor","which","eachReset","StickyHeaderView","_stickyHeaderView","_rightTableComboView","onChangeKeyColumnsVisiblity","slideToggle","nextLabel","_onChangeSelectedColumn","mouseenter","mouseleave","columnType","prop","_isDisabled","inverseSelectedVal","_onMouseEnter","_onMouseLeave","ColumnSelectorView","click .js-select-all","showSelectAllToggle","enforceSingleSelected","_addColumnSelectorView","_renderSelectAllToggle","_renderLoading","areAllSelected","_areAllSelected","_unselectAllExcept","exceptionModel","_onClickSelectAll","invertedAllSelected","click .js-next","_onChangeIsReadyForNextStep","_maybeRenderInfoView","_onClickNext","ColumnMergeModel","SpatialMergeModel","mergeFlavors","prevSteps","currentStep","headerSteps","steps","isFinished","isCurrent","gotoNextStep","gotoPrevStep","pop","MergeDatasetsModel","MergeFlavorView","off","_stepView","_areKeyColumnsVisible","areKeyColumnsVisible","defaultTemplate","$step","_$renderedStep","$mergeFlavorsList","_$renderedMergeFlavors","_onChangeSelectedMergeFlavor","_onChangeGotoNextStep","isTrue","_stepModel","_models","_onBackClick","illustrationIconType","MergeStepView","skipDefaultTemplate","_startMerge","_onMergeSuccess","_onMergeError","importation","Import","href","SpatialMergeView","generateSpatialMergeSQL","mergeMethods","isCountMergeMethod","selectedMergeMethod","_isSelectedColumn","selectedRightMergeColumn","changedRightMergeColumn","_updateMergeMethods","changedSelectedMergeMethod","newMergeMethod","_enable","changedMergeColumn","NAME","_sqlForMergeMethod","_disable","mergeMethod","selectedMergeColumn","selectClause","sqlSelectClause","_selectedLeftColumnsNames","intersectType","SumMergeMethod","AVGMergeMethod","CountMergeMethod","ChooseMergeMethod","_initLeftKeyColumn","_initMergeMethods","fetchRightColumns","_onFetchedRightColumns","_rightKeyColumn","_columnDataToColumn","theGeomColumn","_isColumnTheGeom","rightColumnName","_updatePieces","selectedMergMethod","_changeRightPiece","hover","mouseout","_onHover","_onMouseOut","newMergeColumn","ChooseRightDatasetModel","MergeMethodView","hasSelectedRightTable","_hasSelectedRightTable","_renderMergeMethods","_rightTablesSelectorView","isObject","footerInfoView","addRadioPlaceholder","_rightTablesExcludeFilter","initialOption","_mergeMethodViews","_createMergeMethodView","_onChangeSelectedMergeMethod","_$renderedMergeMethodViews","style","leftColumnType","rightColumnType","_initialOptionDataItem","_initVisualizations","_fetchTables","_formatResult","visualizations","table_data","_onChangeOption","_onResetTables","updated_at","filteredVisualizations","_visToComboDataItem","initialItem","updateData","firstFilteredVis","_comboDataItem","obj","_CARD_WIDTH","_CARD_HEIGHT","_GET_BBOX_FROM_THE_GEOM","click ","wizardName","null_count","prettyNullCount","wizard","_addHistogram","sortBy","rampName","getMethodProperties","minHeight","x","d3","scale","ordinal","rangeRoundBands","y","linear","xAxis","svg","axis","orient","domain","selectAll","enter","color_ramps","yPos","PecanCard","_CARD_MARGIN","_STROKE_PX_LIMIT","_DEFAULT_BASEMAP_TEMPLATE","_SUPPORTED_BASEMAPS","_getBBox","_sendOpenStats","_loadCards","_loadCard","_generateThumbnail","_addCard","_sendAppliedStats","_nextPage","_prevPage","_refreshNavigation","_hideNavigation","_setupCSS","row_count","removeStrokeIndex","removeStroke","_setupTemplate","getLayerAt","supportedBasemap","basemap","_generateLayerDefinition","maps_api_template","layerDefinition","user_name","cartocss","cartocss_version","onImageReady","getUrl","zoom","center","card","_onCardClick","_getSuccessColumns","_refreshMapList","_bindDataLayer","wizard_properties","_setWizardProperties","_getProperties","_getWizardName","_getCategoriesProperties","_getChoroplethProperties","_getHeatmapProperties","_getDataLayer","mappings","heatmap","getDataLayers","dist","qfunction","_getQFunction","color_ramp","_keydown","LEFT","RIGHT","cancel","_MAX_ROWS","_MAX_COLS","_EXCLUDED_COLUMNS","_check","geometryTypes","hasGeometries","col_count","query_schema","hasColumns","backgroundPollingModel","_setupColumns","_start","_getSimplifiedGeometryType","g","st_multipolygon","st_polygon","st_multilinestring","st_linestring","st_multipoint","st_point","_getGeometryType","include","click input","_onClickInput","OptionView","click .js-change-privacy","_options","_publicUrlOption","_embedOption","embedURL","vizjsonURL","_updateOptionsWithNewPrivacy","isPrivate","publicURL","_openPrivacyDialog","privacyModal","originalCleanOnHideValue","onClose","_FORMAT","click .js-format","focus .js-textInput","blur .js-textInput","_onChangeFormat","parent","isNumber","_onFocus","_onBlur","_onClickFormat","_getBounds","nw","pixelToLatLon","sw","lat","lng","bounds","click .js-input","click .js-open-image","loadURL","_showResult","displayedLink","_generateImageFilename","nameOrUsername","generateImage","_exportImage","_loadMapImage","mapImage","crossOrigin","_mergeAnnotations","base64Image","base64image","visualization_uuid","imageProxyURL","html2canvas","allowTaint","taintTest","proxy","background","onclone","clonedDom","doc","onrendered","overlaysCanvas","finalCanvas","createElement","ctx","getContext","drawImage","toDataURL","_onInputClick","_onToggleChecked","IntervalView","_INTERVALS","time","if_external_source","_onFetchedTable","_setterForDefaultErrorState","_initIntervals","_serviceName","_serviceURL","synchronization","isString","capitalize","_intervals","fromExternalSource","from_external_source","checked","_onIntervalChecked","_getSelectedInterval","selectedInterval","EditFieldView","click .js-true","click .js-false","click .js-null","_onTrueClick","_onFalseClick","_onNullClick","DatePickerView","TimeInputView","timezone","datePicker","_setDate","timeInput","_setTime","oldDate","newDate","hour","minutes","seconds","month","year","flat","calendars","starts","_initDefaults","_initCalendar","_$calendar","DatePickerHide","DatePicker","onChange","formatted","CalendarDropdown","click .js-date-picker","_onClickDateBtn","_calendar","_destroyCalendarDropdown","_handleClick","keydown .js-input","keyup .js-input","pattern","test","_setFieldStyle","_hasSubmit","ua","navigator","userAgent","isMac","metaKey","ctrlKey","autoResize","keydown .js-textarea","keyup .js-textarea","_resize","$textarea","scrollHeight","inc","debounce_time","click .plus","click .minus","keypress input.value","keydown input.value","keyup input.value","change .value","_fireChange","initValue","_changeValue","_plus","_minus","_checkNumber","_checkInputPress","newChar","String","fromCharCode","charCode","NaN","_checkInputUp","_saveValue","_checkValueChange","baseNumber","overrideDefaults","template_name","_setBodyForDialogMode","MamufasDialog","visible","_createDragster","_destroyDragster","_createDropzone","mamufas","dragleave","removeFile","_removeBinds","templateOrStr","templateData","dialogOptions","viewOpts","isLinuxMiddleOrRightClick","isMacCmdKeyPressed","isCtrlKeyPressed","navigate","singular","plural","quotes","author","round","Dialog","activeElement","_isSticky","sticky","skipCancelCallback","Spinner","_MAX_RANGE","mode","click .js-dates","click .js-fourHours","click .js-oneDay","click .js-oneWeek","fromHour","fromMin","toHour","toMin","user_timezone","_setToday","max_days","_hideCalendar","_initTimers","_setValues","_onValuesChange","_onDocumentClick","pad","datesUTC","_setModelFromPrevious","selector","calendar","_onDatesChange","onRender","valueOf","now","thirtyDaysAgo","setDate","getDate","end","abs","DatePickerSetDate","_toggleCalendar","_setLastFourHours","_setDatepickerFromPrevious","closeCalendar","_setLastDay","_setLastWeek","parseInt","$from","$to","_TEMPLATES","8001","8005","errorCode","userCanUpgrade","templatePath","originalUrl","httpResponseCode","httpResponseCodeMessage","itemQueueId","show_count","show_label","class","_classNames","_hrefLocation","login_url","one","_toggleLike","toggleLiked","authTokens","regular","cdn","console","_startLoader","_loadFromVisId","_generateImageTemplate","_isHTTPS","cdnConfig","tpl","_generateAuthTokensParams","_loadImage","$img","fadeIn","_onError","_stopLoader","_onSuccess","$error","noResults","paginationModel","totalCount","_renderContent","thinFilters","_$cleanSearchBtn","_renderExtraFilters","filtersExtrasView","htmlToWrap","_$tabPane","_toggleCleanSearchBtn","_activatePane","newPage","_createListView","_chooseActivePaneName","escapePressed","ESCAPE","_makeNewSearch","display_count","extras_display_count","url_to","pagesCount","isCurrentPage","shouldBeVisible","urlTo","hasUrl","pagesToDisplay","rangeStart","_inLowRange","_inHighRange","_startOffset","_withExtraPages","_rangeEnd","pagesRelativeToCurrentPage","lastPage","extraCount","extraStartPages","extraEndPages","startPagesDiff","endPagesDiff","union","_highBoundary","navigateThroughRouter","click a","currentPage","_paginate","partial_import","too_many_files","too_many_rows_connection","template_file_key","_getTemplateKey","user_max_layers","max_tables_per_import","max_rows_per_connection","deepInsights","isMaps","isDeepInsights","CreateVisFirstView","LonLatGeocodingModel","ImagePickerView","BackgroundPollingView","AddLayerView","SyncView","ScratchView","AddLayerModel","FeatureDataView","EditVisMetadataView","DeleteItemsView","DeleteItemsViewModel","DeleteLayerView","DeleteColumnView","DeleteRowView","ExportImageResultView","AdvancedExportView","PublishView","ChangeLockViewModel","ChangeLockView","BuilderFeaturesWarningDialog","PecanView","DuplicateVisView","DuplicateDatasetView","ExportView","MergeDatasetsView","GeoreferenceView","LimitsReachView","MamufasImportView","AddCustomBasemapView","ExportMapView","canAddLayerTo","importsModel","serviceName","twitterImport","geocodingModel","geoAttr","getDefaultCSSForGeometryType","ramps","choropleth","quartiles","ramp","tableID","defaultCSS","categoryMetadata","cats","cat","title_type","value_type","color","torque","bubble","values","NPOINS","bool","green","blue","pink","black","red","divergent","line","polygon","point","deepDefaults","customs","hasOwnProperty","customsItem","defaultsItem","jenks","equalint","headtails","distType","U","A","L","J","S","F","CSS","thresholds","forBubbleMap","minCalcWeight","maxStatsCount","forCategoryOrBubbleMap","minStatsWeight","forCategory","maxDistinctPercentage","forBubble","minDistinctPercentage","visualizationType","calcWeight","visFunction","cat_hist","reverse","hist","analyzeMethods","geom","cluster_rate","minStatsDensity","minWeight","minWeightIfNoOtherApplies","maxNullRatio","isGoodEnough","factory","define","amd","noop","newQueue","concurrency","starting","waiting","ended","tasks","j","noabort","notify","callbackAll","await","Infinity"],"mappings":"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,YAGAnwB,KAAA,WACAmxB,MACA,aACA,SACA,WACA,WAEAhB,KAAA,aAGAnwB,KAAA,MACAmxB,MACA,aACA,MACA,SACA,WAEAhB,KAAA,QAGAnwB,KAAA,SACAmxB,MACA,aACA,SACA,OACA,SACA,UAEAhB,KAAA,WAGAnwB,KAAA,WACAmxB,MACA,aACA,WACA,OACA,UACA,OACA,UAEAhB,KAAA,aAGAnwB,KAAA,UACAmxB,MACA,aACA,UACA,UACA,gBACA,OACA,eAEAhB,KAAA,YAGAnwB,KAAA,cACAmxB,MACA,MACA,SACA,SACA,UACA,WACA,aACA,gBACA,UAEAhB,KAAA,gBAGAnwB,KAAA,QACAmxB,MACA,QACA,QACA,WACA,SACA,SAEAhB,KAAA,UAGAnwB,KAAA,SACAmxB,MACA,SACA,UAEAhB,KAAA,WAGAnwB,KAAA,oBACAmxB,MACA,WACA,UAEAhB,KAAA,qBAGAnwB,KAAA,SACAmxB,MACA,SACA,QACA,OACA,UAEAhB,KAAA,WAGAnwB,KAAA,aACAmxB,MACA,aACA,OACA,UAEAhB,KAAA,eAGAnwB,KAAA,WACAmxB,MACA,WACA,WACA,OACA,UAEAhB,KAAA,aAGAnwB,KAAA,OACAmxB,MACA,OACA,SACA,UAEAhB,KAAA,SAGAnwB,KAAA,WACAmxB,MACA,WACA,QACA,OACA,UAEAhB,KAAA,aAGAnwB,KAAA,UACAmxB,MACA,UACA,UAEAhB,KAAA,YAGAnwB,KAAA,SACAmxB,MACA,SACA,SACA,MACA,UAEAhB,KAAA,WAGAnwB,KAAA,SACAmxB,MACA,SACA,aACA,aACA,WACA,UACA,UAEAhB,KAAA,WAGAnwB,KAAA,UACAmxB,MACA,UACA,SACA,UACA,cAEAhB,KAAA,YAGAnwB,KAAA,UACAmxB,MACA,UACA,QACA,WAEAhB,KAAA,YAGAnwB,KAAA,OACAmxB,MACA,OACA,SACA,UACA,OACA,UAEAhB,KAAA,SAGAnwB,KAAA,eACAmxB,MACA,OACA,UACA,WAEAhB,KAAA,iBAGAnwB,KAAA,YACAmxB,MACA,WACA,QACA,WACA,UACA,cAEAhB,KAAA,cAGAnwB,KAAA,SACAmxB,MACA,SACA,OACA,SACA,UACA,WAEAhB,KAAA,WAGAnwB,KAAA,SACAmxB,MACA,SACA,OACA,WAEAhB,KAAA,WAGAnwB,KAAA,UACAmxB,MACA,UACA,YACA,YACA,UACA,QAEAhB,KAAA,YAGAnwB,KAAA,OACAmxB,MACA,MACA,OACA,QACA,aACA,aACA,OAEAhB,KAAA,SAGAnwB,KAAA,aACAmxB,MACA,aACA,cAEAhB,KAAA,eAGAnwB,KAAA,OACAmxB,MACA,OACA,SACA,aACA,OAEAhB,KAAA,SAGAnwB,KAAA,OACAmxB,MACA,OACA,OACA,aACA,SAEAhB,KAAA,SAGAnwB,KAAA,YACAmxB,MACA,OACA,OACA,aACA,SACA,iBAEAhB,KAAA,cAGAnwB,KAAA,MACAmxB,MACA,MACA,QACA,aACA,OACA,UACA,UAEAhB,KAAA,QAGAnwB,KAAA,OACAmxB,MACA,OACA,MACA,aACA,SAEAhB,KAAA,SAGAnwB,KAAA,UACAmxB,MACA,OACA,UACA,aACA,QACA,UAEAhB,KAAA,YAGAnwB,KAAA,SACAmxB,MACA,SACA,UACA,OACA,QACA,aACA,UACA,iBAEAhB,KAAA,WAGAnwB,KAAA,WACAmxB,MACA,WACA,QACA,aACA,SACA,WACA,gBAEAhB,KAAA,aAGAnwB,KAAA,WACAmxB,MACA,WACA,SACA,aACA,SACA,WACA,UACA,UAEAhB,KAAA,aAGAnwB,KAAA,SACAmxB,MACA,YACA,WACA,WACA,YACA,UAEAhB,KAAA,WAGAnwB,KAAA,aACAmxB,MACA,aACA,UACA,WACA,YAEAhB,KAAA,eAGAnwB,KAAA,YACAmxB,MACA,YACA,WACA,UACA,YAEAhB,KAAA,cAGAnwB,KAAA,aACAmxB,MACA,aACA,WACA,WACA,YAEAhB,KAAA,eAGAnwB,KAAA,WACAmxB,MACA,WACA,WACA,YACA,WACA,YAEAhB,KAAA,aAGAnwB,KAAA,mBACAmxB,MACA,WACA,WACA,YACA,oBACA,SACA,UAEAhB,KAAA,qBAGAnwB,KAAA,eACAmxB,MACA,UACA,SACA,QACA,OACA,OACA,OACA,SAEAhB,KAAA,iBAGAnwB,KAAA,UACAmxB,MACA,SACA,WACA,QACA,YAEAhB,KAAA,YAGAnwB,KAAA,WACAmxB,MACA,MACA,UACA,cACA,WACA,aAEAhB,KAAA,aAGAnwB,KAAA,iBACAmxB,MACA,OACA,SACA,OACA,OACA,WACA,aAEAhB,KAAA,mBAGAnwB,KAAA,MACAmxB,MACA,QACA,UACA,QACA,gBACA,SACA,cACA,WACA,aAEAhB,KAAA,QAGAnwB,KAAA,QACAmxB,MACA,QACA,UACA,QACA,OACA,QACA,QACA,aAEAhB,KAAA,UAGAnwB,KAAA,UACAmxB,MACA,QACA,QACA,WAEAhB,KAAA,YAGAnwB,KAAA,aACAmxB,MACA,WACA,aACA,UAEAhB,KAAA,eAGAnwB,KAAA,YACAmxB,MACA,WACA,QAEAhB,KAAA,cAGAnwB,KAAA,sBACAmxB,MACA,WACA,SACA,SACA,QAEAhB,KAAA,wBAGAnwB,KAAA,UACAmxB,MACA,WACA,MACA,QACA,OACA,WACA,YAEAhB,KAAA,YAGAnwB,KAAA,eACAmxB,MACA,QACA,UACA,MACA,WAEAhB,KAAA,iBAGAnwB,KAAA,QACAmxB,MACA,QACA,cACA,OACA,UACA,SAEAhB,KAAA,UAGAnwB,KAAA,WACAmxB,MACA,SACA,QACA,QAEAhB,KAAA,aAGAnwB,KAAA,OACAmxB,MACA,OACA,QACA,QACA,SAEAhB,KAAA,SAGAnwB,KAAA,OACAmxB,MACA,OACA,QACA,QACA,SAEAhB,KAAA,SAGAnwB,KAAA,UACAmxB,MACA,OACA,QACA,QACA,QACA,SAEAhB,KAAA,YAGAnwB,KAAA,OACAmxB,MACA,WACA,UACA,QACA,SACA,cACA,SAEAhB,KAAA,SAGAnwB,KAAA,SACAmxB,MACA,SACA,SACA,YACA,OACA,OACA,SAEAhB,KAAA,WAGAnwB,KAAA,WACAmxB,MACA,MACA,OAEAhB,KAAA,aAGAnwB,KAAA,aACAmxB,MACA,WACA,aACA,WACA,QACA,aAEAhB,KAAA,eAGAnwB,KAAA,iBACAmxB,MACA,WACA,QACA,QAEAhB,KAAA,mBAGAnwB,KAA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AAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,QAAAmwB,KAAA,UACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,QAAAmwB,KAAA,UACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,QAAAmwB,KAAA,UACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,QAAAmwB,KAAA,UACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,SAAAmwB,KAAA,WACAnwB,KAAA,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","file":"editor.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar ImportsCollection = require('./models/imports_collection');\nvar GeocodingsCollection = require('./models/geocodings_collection');\nvar AnalysisCollection = require('./models/analysis_collection');\nvar pollingsTimer = 3000;\n\n/**\n *  Background polling default model\n *\n */\n\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    showGeocodingDatasetURLButton: false,\n    showSuccessDetailsButton: true,\n    geocodingsPolling: false, // enable geocodings polling\n    importsPolling: false // enable imports polling\n  },\n\n  initialize: function(attrs, opts) {\n    this.user = opts.user;\n    this.vis = opts.vis;\n    this.importsCollection = opts.importsCollection || new ImportsCollection(null, { user: this.user });\n    this.geocodingsCollection = opts.geocodingsCollection || new GeocodingsCollection(null, { user: this.user, vis: this.vis });\n    this.analysisCollection = opts.anaylysisCollection || new AnalysisCollection(null, { user: this.user });\n    this._initBinds();\n    this.startPollings();\n  },\n\n  _initBinds: function() {\n    this.importsCollection.bind('change:state', function(mdl) {\n      this.trigger('change', mdl, this);\n      this._onImportsStateChange(mdl)\n    }, this);\n    this.importsCollection.bind('remove', function(mdl) {\n      this.trigger('importRemoved', mdl, this);\n    }, this);\n    this.importsCollection.bind('add', function(mdl) {\n      this.trigger('importAdded', mdl, this);\n    }, this);\n\n    this.geocodingsCollection.bind('change:state', function(mdl) {\n      this.trigger('change', mdl, this);\n      this._onGeocodingsStateChange(mdl);\n    }, this);\n    this.geocodingsCollection.bind('remove', function(mdl) {\n      this.trigger('geocodingRemoved', mdl, this);\n    }, this);\n    this.geocodingsCollection.bind('add', function(mdl) {\n      this.trigger('geocodingAdded', mdl, this);\n    }, this);\n\n    this.analysisCollection.bind('reset', function() {\n      if (this.analysisCollection.size() > 0) {\n        this.trigger('analysisAdded', this.analysisCollection, this);\n      } else {\n        this.trigger('analysisRemoved', this.analysisCollection, this);  \n      }\n    }, this); \n\n    this.analysisCollection.bind('change:state', function(mdl) {\n      this._onAnalysisStateChange(mdl, this.analysisCollection);\n    }, this);\n  },\n\n  // Helper functions\n\n  getTotalFailedItems: function() {\n    return this.importsCollection.failedItems().length + this.geocodingsCollection.failedItems().length;\n  },\n\n  removeImportItem: function(mdl) {\n    if (!mdl) {\n      return false;\n    }\n    this.importsCollection.remove(mdl);\n  },\n\n  addImportItem: function(mdl) {\n    if (!mdl) {\n      return false;\n    }\n    this.importsCollection.add(mdl);\n  },\n\n  removeGeocodingItem: function(mdl) {\n    if (!mdl || !this.canAddImport()) {\n      return false;\n    }\n    this.geocodingsCollection.remove(mdl);\n  },\n\n  addGeocodingItem: function(mdl) {\n    if (!mdl || !this.canAddGeocoding()) {\n      return false;\n    }\n    this.geocodingsCollection.add(mdl);\n  },\n\n  removeAnalysis: function() {\n    this.analysisCollection.destroyCheck();\n    this.analysisCollection.reset();\n  },\n\n  addAnalysis: function(array) {\n    if (!array || !this.canAddAnalysis()) {\n      return false;\n    }\n    this.analysisCollection.reset(array);\n  },\n\n  canAddImport: function() {\n    return this.importsCollection.canImport();\n  },\n\n  canAddGeocoding: function() {\n    return this.geocodingsCollection.canGeocode();\n  },\n\n  canAddAnalysis: function() {\n    return this.analysisCollection.canStartPecan();\n  },\n\n  getTotalImports: function() {\n    return this.importsCollection.size();\n  },\n\n  getTotalGeocodings: function() {\n    return this.geocodingsCollection.size();\n  },\n\n  getTotalAnalysis: function() {\n    return this.analysisCollection.size() > 0 ? 1 : 0;\n  },\n\n  getTotalPollings: function() {\n    return this.importsCollection.size() + this.geocodingsCollection.size() + ( this.analysisCollection.isAnalyzing() ? 1 : 0 );\n  },\n\n  stopPollings: function() {\n    if (this.get('geocodingsPolling')) {\n      this.geocodingsCollection.destroyCheck();\n    }\n    if (this.get('importsPolling')) {\n      this.importsCollection.destroyCheck();\n    }\n  },\n\n  startPollings: function() {\n    var self = this;\n    // Don't start pollings inmediately, \n    // wait some seconds\n    setTimeout(function() {\n      if (self.get('geocodingsPolling')) {\n        self.geocodingsCollection.pollCheck();\n      }\n      if (self.get('importsPolling')) {\n        self.importsCollection.pollCheck();\n      }  \n    }, pollingsTimer);\n  },\n\n  // onChange functions\n  _onImportsStateChange: function() {},\n\n  _onGeocodingsStateChange: function() {},\n\n  _onAnalysisStateChange: function() {},\n\n  clean: function() {\n    this.importsCollection.unbind(null, null, this);\n    this.geocodingsCollection.unbind(null, null, this);\n    this.analysisCollection.unbind(null, null, this);\n    this.elder('clean');\n  }\n\n});\n","var $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar ImportItemView = require('./views/imports/background_import_item_view');\nvar AnalysisItemView = require('./views/analysis/background_analysis_item_view');\nvar GeocodingItemView = require('./views/geocodings/background_geocoding_item_view');\nvar ImportLimitItemView = require('./views/imports/background_import_limit_view');\nvar ImportsModel = require('./models/imports_model');\nvar GeocodingModel = require('./models/geocoding_model');\nvar BackgroundPollingModel = require('./background_polling_model');\nvar BackgroundPollingHeaderView = require('./views/background_polling_header_view');\n\n/**\n *  Background polling view\n *\n *  It will pool all polling operations that happens\n *  in Cartodb, as in imports and geocodings\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'BackgroundPolling',\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.createVis = this.options.createVis;\n    this.vis = this.options.vis;\n    if (!this.model) {\n      this.model = new BackgroundPollingModel({}, {\n        user: this.user\n      });\n    }\n    this.template = cdb.templates.getTemplate('common/background_polling/background_polling');\n    this._initBinds();\n  },\n\n  render: function() {\n    this.$el.html(this.template());\n    this._initViews();\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('importAdded', this._addImport, this);\n    this.model.bind('geocodingAdded', this._addGeocoding, this);\n    this.model.bind('analysisAdded', this._addAnalysis, this);\n    this.model.bind('analysisAdded analysisRemoved importAdded importRemoved geocodingAdded geocodingRemoved', this._checkPollingsSize, this);\n    cdb.god.bind('importByUploadData', this._addDataset, this);\n    cdb.god.bind('fileDropped', this._onDroppedFile, this);\n    this.add_related_model(cdb.god);\n  },\n\n  _initViews: function() {\n    var backgroundPollingHeaderView = new BackgroundPollingHeaderView({\n      model: this.model\n    });\n\n    this.$el.prepend(backgroundPollingHeaderView.render().el);\n    this.addView(backgroundPollingHeaderView);\n  },\n\n  _checkPollingsSize: function() {\n    if (this.model.getTotalPollings() > 0) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  },\n\n  _addAnalysis: function(collection) {\n\n    if (this._analysisItem) {\n      this._analysisItem.clean();\n    }\n\n    this._analysisItem = new AnalysisItemView({\n      collection: collection,\n      vis: this.vis,\n      user: this.user\n    });\n\n    this._analysisItem.bind('remove', function(mdl) {\n      this.model.removeAnalysis();\n    }, this);\n\n    this.$('.js-list').prepend(this._analysisItem.render().el);\n    this.addView(this._analysisItem);\n  },\n\n  _addGeocoding: function(mdl) {\n    var geocodingItem = new GeocodingItemView({\n      showGeocodingDatasetURLButton: this.model.get('showGeocodingDatasetURLButton'),\n      model: mdl,\n      user: this.user\n    });\n\n    geocodingItem.bind('remove', function(mdl) {\n      this.model.removeGeocodingItem(mdl);\n    }, this);\n\n    this.$('.js-list').prepend(geocodingItem.render().el);\n    this.addView(geocodingItem);\n\n    // Enable pollings again\n    this.enable();\n  },\n\n  _addImport: function(m) {\n    var importItem = new ImportItemView({\n      showSuccessDetailsButton: this.model.get('showSuccessDetailsButton'),\n      model: m,\n      user: this.user\n    });\n\n    importItem.bind('remove', function(mdl) {\n      this.model.removeImportItem(mdl);\n    }, this);\n\n    this.$('.js-list').prepend(importItem.render().el);\n    this.addView(importItem);\n\n    this.enable();\n  },\n\n  _addDataset: function(d) {\n    if (d) {\n      this._addImportsItem(d);\n    }\n  },\n\n  _onDroppedFile: function(files) {\n    if (files) {\n      this._addImportsItem({\n        type: 'file',\n        value: files,\n        create_vis: this.createVis\n      });\n    }\n  },\n\n  _addImportsItem: function(uploadData) {\n    if (this.model.canAddImport()) {\n      this._removeLimitItem();\n    } else {\n      this._addLimitItem();\n      return false;\n    }\n\n    var imp = new ImportsModel({}, {\n      upload: uploadData,\n      user: this.user\n    });\n    this.model.addImportItem(imp);\n  },\n\n  // Limits view\n\n  _addLimitItem: function() {\n    if (!this._importLimit) {\n      var v = new ImportLimitItemView({\n        user: this.user\n      });\n      this.$('.js-list').prepend(v.render().el);\n      this.addView(v);\n      this._importLimit = v;\n    }\n  },\n\n  _removeLimitItem: function() {\n    var v = this._importLimit;\n    if (v) {\n      v.clean();\n      this.removeView(v);\n      delete this._importLimit;\n    }\n  },\n\n  // Enable background polling checking\n  // ongoing imports\n  enable: function() {\n    this.model.startPollings();\n  },\n\n  // Disable/stop background pollings\n  disable: function() {\n    this.model.stopPollings();\n  },\n\n  show: function() {\n    this.$el.addClass('is-visible');\n  },\n\n  hide: function() {\n    this.$el.removeClass('is-visible');\n  },\n\n  clean: function() {\n    this.disable();\n    this.elder('clean');\n  }\n\n});\n","var Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar Pecan = require('cartodb-pecan');\nvar PecanModel = require('./pecan_model');\nvar batchAnalysisCount = 5;\n\n/**\n *  Analysis collection\n *\n *  - Get the stats of the current layer\n *\n */\n\nmodule.exports = Backbone.Collection.extend({\n\n  model: PecanModel,\n\n  initialize: function(mdls, opts) {\n    this.user = opts.user;\n    this._initBinds();\n  },\n\n  _initBinds: function() {\n    this.bind('reset', this.pollCheck, this);\n  },\n\n  // Public methods\n\n  canStartPecan: function() {\n    return this.getTotalAnalysis() === this.getCompletedAnalysis()\n  },\n\n  pollCheck: function() {\n    if (this._nextAnalysisItems) {\n      _.each(this._nextAnalysisItems, function(mdl) {\n        mdl.unbind(null, null, this);\n      }, this);\n    }\n\n    var idleItems = _.first(this.where({ state: 'idle' }),batchAnalysisCount);\n\n    if (idleItems.length > 0) {\n      this._nextAnalysisItems = idleItems;\n\n      _.each(this._nextAnalysisItems, function(mdl) {\n        if (this.user.featureEnabled('pecan_debugging')) {\n          mdl.bind('print_stats', function(stats) {\n            this._printStats(stats);\n          }, this);\n        }\n        mdl.bind('change:state', function(mdl, state) {\n          if (mdl.isAnalyzed()) {\n            var arePendingAnalysis = _.find(this._nextAnalysisItems, function(analysis) {\n              return !analysis.isAnalyzed()\n            });\n            if (!arePendingAnalysis) {\n              this.pollCheck();\n            }\n          }\n        }, this);\n        mdl.getData();\n      }, this);\n    }\n  },\n\n  _printStats: function(stats) {\n    var name        = stats.column;\n    var type        = stats.type;\n    var weight      = stats.weight;\n    var skew        = stats.skew;\n    var distinct    = stats.distinct;\n    var count       = stats.count;\n    var null_ratio  = stats.null_ratio;\n    var dist_type   = stats.dist_type;\n    var calc_weight = (weight + Pecan.getWeightFromShape(dist_type)) / 2;\n\n    var distinctPercentage = (distinct / count) * 100;\n\n    cdb.log.info(\"%cAnalyzing %c\" + name, \"text-decoration:underline; font-weight:bold\", \"text-decoration:underline; font-weight:normal\");\n\n    cdb.log.info('%c · %ctype%c = ' + type, 'color:#666;', 'color: #666; font-weight:bold;', \"color: #666; font-weight:normal\");\n    cdb.log.info('%c · %cdistinctPercentage%c = ' + distinctPercentage, 'color:#666;', 'color: #666; font-weight:bold;', \"color: #666; font-weight:normal\");\n    cdb.log.info('%c · %ccount%c = ' + count, 'color:#666;', 'color: #666; font-weight:bold;', 'color: #666; font-weight:normal;');\n    cdb.log.info('%c · %cnull ratio%c = ' + null_ratio, 'color:#666;', 'color: #666; font-weight:bold;', 'color: #666; font-weight:normal;');\n\n    if (dist_type) {\n      cdb.log.info('%c · %cdist_type%c = ' + dist_type, 'color:#666;', 'color: #666; font-weight:bold;', 'color: #666; font-weight:normal;');\n      cdb.log.info('%c · %ccalc_weight%c = ' + calc_weight, 'color:#666;', 'color: #666; font-weight:bold;', 'color: #666; font-weight:normal;');\n    }\n\n    if (skew) {\n      cdb.log.info(\"%c · %cskew%c: \" + skew.toFixed(2), \"color:#666;\", 'color: #666; font-weight:bold;', 'color: #666; font-weight:normal;');\n    }\n\n    if (weight) {\n      cdb.log.info(\"%c · %cweight%c: \" + weight.toFixed(2), \"color: #666;\", \"color:#666; font-weight:bold;\", \"color:#666;font-weight:normal\");\n    }\n\n    if (stats.density) {\n      cdb.log.info(\"%c · %cdensity%c: \" + stats.density, \"color:#666;\", 'color: #666; font-weight:bold;', 'color: #666; font-weight:normal;');\n    }\n\n  },\n\n  destroyCheck: function() {\n    var items = this.where({ state: 'idle' });\n    this.remove(items);\n  },\n\n  failedItems: function() {},\n\n  getTotalAnalysis: function() {\n    return this.size();\n  },\n\n  getSuccessfullyAnalysedColumns: function() {\n    return this.where({ success: true }).length;\n  },\n\n  getCompletedAnalysis: function() {\n    return this.where({ state: 'analyzed' }).length;\n  },\n\n  isAnalyzing: function() {\n    return this.getCompletedAnalysis() !== this.getTotalAnalysis();\n  }\n\n});\n","var Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar GeocodingModelPoller = require('./geocoding_model_poller');\n\n/**\n *  Geocoding model\n *\n */\nmodule.exports = cdb.core.Model.extend({\n\n  options: {\n    startPollingAutomatically: true\n  },\n\n  defaults: {\n    kind: '',\n    formatter: '',\n    table_name: '',\n    state: ''\n  },\n\n  url: function(method) {\n    var version = cdb.config.urlVersion('geocoding', method);\n\n    var base = '/api/' + version + '/geocodings/';\n    if (this.isNew()) {\n      return base;\n    }\n    return base + this.id;\n  },\n\n  setUrlRoot: function(urlRoot) {\n    this.urlRoot = urlRoot;\n  },\n\n  initialize: function(opts) {\n    var self = this;\n    this._initBinds();\n    _.extend(this.options, opts);\n    this.poller = new GeocodingModelPoller(this);\n    if (this.options.startPollingAutomatically) {\n      this._checkModel();\n    };\n  },\n\n  _initBinds: function() {\n    this.bind('change:id', this._checkModel, this);\n  },\n\n  _checkModel: function() {\n    var self = this;\n\n    if (this.get('id')) {\n      this.pollCheck();\n    } else {\n      this._saveModel();\n    }\n  },\n\n  _saveModel: function() {\n    var self = this;\n    if (this.isNew()) {\n      this.save({}, {\n        error: function() {\n          self.set({\n            state: 'failed',\n            error: {\n              title: 'Oops, there was a problem',\n              description: 'Unfortunately there was an error starting the geocoder'\n            }\n          });\n        }\n      });\n    }\n  },\n\n  pollCheck: function() {\n    this.poller.start();\n  },\n\n  destroyCheck: function() {\n    this.poller.stop();\n  },\n\n  getError: function() {\n    return this.get('error');\n  },\n\n  hasFailed: function() {\n    var state = this.get('state');\n    return state === \"failed\" || state === \"reset\" || state === \"cancelled\"\n  },\n\n  hasCompleted: function() {\n    return this.get('state') === \"finished\"\n  },\n\n  isOngoing: function() {\n    return !this.hasCompleted() && !this.hasFailed()\n  },\n\n  cancelGeocoding: function() {\n    this.save({ state: 'cancelled' }, { wait:true });\n  },\n\n  resetGeocoding: function() {\n    this.set('state', 'reset');\n  }\n});\n","var Poller = require('./poller');\n\nvar GeocodingModelPoller = function(model) {\n\n  var POLLING_INTERVAL = 2000;\n\n  var options = {\n    interval: POLLING_INTERVAL,\n    stopWhen: function(model) {\n      return model.hasFailed() || model.hasCompleted();\n    },\n    error: function(model) {\n      model.trigger(\"change\");\n    }\n  };\n\n  Poller.call(this, model, options);\n};\n\nGeocodingModelPoller.prototype = _.extend({}, Poller.prototype);\n\nmodule.exports = GeocodingModelPoller;\n","var Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar pollTimer = 60000;\nvar GeocodingModel = require('./geocoding_model');\n\n/**\n *  Geocodings collection\n *\n *  - Check ongoing geocodings in order to add them\n *  to the collection.\n *\n */\n\nmodule.exports = Backbone.Collection.extend({\n\n  model: GeocodingModel,\n\n  url: function(method) {\n    var version = cdb.config.urlVersion('geocoding', method);\n    return '/api/' + version + '/geocodings';\n  },\n\n  initialize: function(mdls, opts) {\n    this.user = opts.user; \n    this.vis = opts.vis;\n  },\n\n  parse: function(r) {\n    var self = this;\n\n    _.each(r.geocodings, function(data) {\n\n      // Check if that geocoding exists...\n      var geocodings = self.filter(\n        function(mdl) {\n          return mdl.get('id') === data.id\n        }\n      );\n\n      if (geocodings.length === 0) {\n        self._checkOngoingGeocoding(\n          new GeocodingModel(data, { startPollingAutomatically: false })\n        )\n      }\n    });\n\n    return this.models\n  },\n\n  _checkOngoingGeocoding: function(mdl) {\n    if (!this.vis) {\n      // If there is NOT a vis, let's start polling\n      // this geocoding model\n      this.add(mdl);\n      mdl.pollCheck();\n    } else {\n      var self = this;\n      // If there is a vis, let's check if that\n      // geocoding belongs to the visualization\n      this.vis.map.layers.each(function(lyr) {\n        if (lyr.table && lyr.table.id === mdl.get('table_name')) {\n          self.add(mdl);\n          mdl.pollCheck();\n        }\n      })\n    }\n  },\n\n  // Public methods\n\n  canGeocode: function() {\n    return !this.any(function(m) {\n      return m.isOngoing();\n    });\n  },\n\n  fetchGeocodings: function() {\n    var self = this;\n    this.fetch({\n      error: function(e) {\n        self.destroyCheck();\n      }\n    });\n  },\n\n  pollCheck: function(i) {\n    if (this.pollTimer) return;\n\n    var self = this;\n    this.pollTimer = setInterval(function() {\n      self.fetchGeocodings();\n    }, pollTimer);\n\n    this.fetchGeocodings();\n  },\n\n  destroyCheck: function() {\n    clearInterval(this.pollTimer);\n    delete this.pollTimer;\n  },\n\n  failedItems: function() {\n    return this.filter(function(item) {\n      return item.hasFailed();\n    });\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar cdbAdmin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar ImportModelPoller = require('./import_model_poller');\n\n/**\n *  New import model that controls\n *  the state of an import\n *\n */\nmodule.exports = cdb.core.Model.extend({\n\n  url: function(method) {\n    var version = cdb.config.urlVersion('import', method);\n    var base = '/api/' + version + '/imports';\n\n    if (this.isNew()) {\n      return base;\n    }\n    return base + '/' + this.id;\n  },\n\n  idAttribute: 'item_queue_id',\n\n  initialize: function() {\n    this._initBinds();\n    this.poller = new ImportModelPoller(this);\n  },\n\n  _initBinds: function() {\n    this.bind('change:item_queue_id', this._checkQueueId, this);\n  },\n\n  createImport: function(data) {\n    var d = this._prepareData(data);\n    this[d.interval === 0 ? '_createRegularImport' : '_createSyncImport'](d);\n  },\n\n  _checkQueueId: function() {\n    if (this.get('item_queue_id')) {\n      this.pollCheck();\n    }\n  },\n\n  _prepareData: function(data) {\n    var d = {\n      create_vis: data.create_vis,\n      privacy: data.privacy\n    };\n\n    var type = data.type;\n\n    if (type !== 'remote') {\n      _.extend(d, {\n        type_guessing: data.type_guessing,\n        content_guessing: data.content_guessing,\n        interval: data.interval\n      });\n    }\n\n    var service = data.service_name;\n\n    // Url?\n    if (type === \"url\") {\n      _.extend(d, {\n        url: data.value\n      });\n    }\n\n    // Remote?\n    if (type === \"remote\") {\n      _.extend(d, {\n        type: \"remote\",\n        interval: null,\n        remote_visualization_id: data.remote_visualization_id,\n        create_vis: false,\n        value: data.value\n      });\n    }\n\n    // SQL?\n    if (type === \"sql\") {\n      _.extend(d, {\n        table_name: data.table_name,\n        sql: data.value\n      });\n    }\n\n    // Duplicate?\n    if (type === \"duplication\") {\n      _.extend(d, {\n        table_name: data.table_name,\n        table_copy: data.value\n      });\n    }\n\n    // Service?\n    if (type === \"service\") {\n      // If service is Twitter, service_item_id should be\n      // sent stringified\n      var service_item_id = (service === \"twitter_search\")\n          ? JSON.stringify(data.service_item_id)\n          : data.service_item_id;\n\n      // User defined limits?\n      if (data.user_defined_limits) {\n        d.user_defined_limits = data.user_defined_limits;\n      }\n\n      _.extend(d, {\n        value:            data.value,\n        service_name:     data.service_name,\n        service_item_id:  service_item_id\n      });\n    }\n\n    return d;\n  },\n\n  _createSyncImport: function(d) {\n    var self = this;\n    // Create synchronization model\n    var sync = new cdbAdmin.TableSynchronization(d);\n\n    sync.save(null, {\n      success: function(m) {\n        self.set('item_queue_id', m.get('data_import').item_queue_id);\n      },\n      error: function(mdl, r, opts) {\n        self._setErrorState(r);\n      }\n    });\n  },\n\n  _createRegularImport: function(d) {\n    var self = this;\n\n    this.save(d, {\n      error: function(mdl, r, opts) {\n        self._setErrorState(r);\n      }\n    });\n  },\n\n  _setErrorState: function(r) {\n    var msg;\n    try {\n      msg = r && JSON.parse(r.responseText).errors.imports;\n    } catch(err) {\n      // e.g. if responseText is empty (seems to happen when server is down/offline)\n      msg = 'Unfortunately there was an error starting the import';\n    }\n    this.set({\n      state: 'failure',\n      get_error_text: {\n        title: 'There was an error',\n        what_about: msg\n      }\n    });\n  },\n\n  pollCheck: function() {\n    this.poller.start();\n  },\n\n  destroyCheck: function() {\n    this.poller.stop();\n  }\n\n});\n","var Poller = require('./poller');\n\nvar ImportModelPoller = function(model) {\n\n  var POLLING_INTERVAL = 2000; // Interval time between poll checkings\n  var POLLING_INTERVAL_MULTIPLIER = 2.5;  // Multiply interval by this number\n  var POLLING_REQUESTS_BEFORE_INTERVAL_CHANGE = 30; // Max tries until interval change\n\n  var options = {\n    interval: function(numberOfRequests) {\n      if (numberOfRequests >= POLLING_REQUESTS_BEFORE_INTERVAL_CHANGE) {\n        return POLLING_INTERVAL * POLLING_INTERVAL_MULTIPLIER;\n      }\n      return POLLING_INTERVAL;\n    },\n    stopWhen: function(model) {\n      var state = model.get('state');\n      return (state === \"complete\" || state === \"failure\");\n    }\n  };\n\n  Poller.call(this, model, options);\n};\n\nImportModelPoller.prototype = _.extend({}, Poller.prototype);\n\nmodule.exports = ImportModelPoller;\n","var Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar pollTimer = 30000;\nvar ImportsModel = require('./imports_model');\n\n/**\n *  Imports collection\n *\n *  If it is fetched, it will add the import\n *\n */\n\nmodule.exports = Backbone.Collection.extend({\n\n  model: ImportsModel,\n\n  url: function(method) {\n    var version = cdb.config.urlVersion('import', method);\n    return '/api/' + version + '/imports';\n  },\n\n  initialize: function(mdls, opts) {\n    this.user = opts.user;\n  },\n\n  parse: function(r) {\n    var self = this;\n\n    if (r.imports.length === 0) {\n      this.destroyCheck();\n    } else {\n      _.each(r.imports, function(id) {\n\n        // Check if that import exists...\n        var imports = self.filter(function(mdl){ return mdl.imp.get('item_queue_id') === id });\n\n        if (imports.length === 0) {\n          self.add(new ImportsModel({ id: id }, { user: self.user } ));\n        }\n      });\n    }\n\n    return this.models\n  },\n\n  canImport: function() {\n    var importQuota = this.user.getMaxConcurrentImports();\n    var total = this.size();\n    var finished = 0;\n\n    this.each(function(m) {\n      if (m.hasFailed() || m.hasCompleted()) {\n        ++finished;\n      }\n    });\n\n    return (total - finished) < importQuota;\n  },\n\n  pollCheck: function(i) {\n    if (this.pollTimer) return;\n\n    var self = this;\n    this.pollTimer = setInterval(function() {\n      self.fetch();\n    }, pollTimer || 2000);\n\n    // Start doing a fetch\n    this.fetch();\n  },\n\n  destroyCheck: function() {\n    clearInterval(this.pollTimer);\n    delete this.pollTimer;\n  },\n\n  failedItems: function() {\n    return this.filter(function(item) {\n      return item.hasFailed();\n    });\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar ImportModel = require('./import_model');\nvar UploadModel = require('./upload_model');\n\n/**\n *  Upload/import model\n *\n *  It takes the control of the upload and import,\n *  listening the change of any of these steps.\n *\n *  Steps:\n *  - upload\n *  - import\n *\n */\n\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    step: 'upload',\n    state: ''\n  },\n\n  initialize: function(attrs, opts) {\n    if (_.isEmpty(opts)) opts = {};\n    this.user = opts && opts.user;\n    this.upl = new UploadModel(opts.upload, { user: this.user });\n    this.imp = new ImportModel(opts.import);\n    this._initBinds();\n    this._checkStatus();\n  },\n\n  _initBinds: function() {\n    this.bind('change:import',  this._onImportChange, this);\n    this.bind('change:upload',  this._onUploadChange, this);\n    this.bind('change:id',      this._onIdChange, this);\n\n    this.imp.bind('change', function() {\n      this.trigger('change:import');\n      this.trigger('change');\n    }, this);\n    this.upl.bind('change', function() {\n      this.trigger('change:upload');\n      this.trigger('change');\n    }, this)\n  },\n\n  _destroyBinds: function() {\n    this.upl.unbind(null, null, this);\n    this.imp.unbind(null, null, this);\n  },\n\n  _onIdChange: function() {\n    var item_queue_id = this.get('id');\n    if (item_queue_id) this.imp.set('item_queue_id', item_queue_id);\n    this.set('step', 'import');\n  },\n\n  _onUploadChange: function(m, i) {\n    if (this.get('step') === \"upload\") {\n      var item_queue_id = this.upl.get('item_queue_id');\n      var state = this.upl.get('state');\n\n      if (item_queue_id) this.set('id', item_queue_id);\n      if (state) this.set('state', state);\n    }\n  },\n\n  _onImportChange: function() {\n    if (this.get('step') === \"import\") {\n      var state = this.imp.get('state');\n      if (state) this.set('state', state);\n    }\n  },\n\n  _checkStatus: function() {\n    if (!this.get('id') && !this.upl.isValid()) {\n      this.trigger('change:upload');\n      return;\n    }\n\n    if (this.upl.get('type') === 'file') {\n      this.upl.upload();\n    } else if (this.get('id')) {\n      this.set('step', 'import');\n      this.imp.set('item_queue_id', this.get('id'));\n    } else if (!this.imp.get('item_queue_id') && this.upl.get('type') !== \"\") {\n      this.set('step', 'import');\n      this.imp.createImport(this.upl.toJSON());\n    }\n  },\n\n  pause: function() {\n    this.stopUpload();\n    this.stopImport();\n  },\n\n  hasFailed: function() {\n    var state = this.get('state');\n    var step = this.get('step');\n\n    return ( step === 'import' && state === 'failure' ) || ( step === 'upload' && state === 'error' );\n  },\n\n  hasCompleted: function() {\n    return this.get('step') === \"import\" && this.imp && this.imp.get('state') === 'complete'\n  },\n\n  getWarnings: function() {\n    var step = this.get('step');\n\n    return step === 'import' ? this.imp.get('warnings') : '';\n  },\n\n  getError: function() {\n    if (this.hasFailed()) {\n      var step = this.get('step');\n      return _.extend(\n        {\n          error_code: this[step === \"upload\" ? 'upl' : 'imp'].get('error_code'),\n          item_queue_id: step === \"import\" ? this.imp.get('id') : '',\n          original_url: step === \"import\" ? this.imp.get('original_url') : '',\n          data_type: step === \"import\" ? this.imp.get('data_type') : '',\n          http_response_code: step === \"import\" ? this.imp.get('http_response_code') : '',\n          http_response_code_message: step === \"import\" ? this.imp.get('http_response_code_message') : ''\n        }\n        ,\n        this[step === \"upload\" ? 'upl' : 'imp'].get('get_error_text')\n      )\n    }\n\n    return {\n      title: '',\n      what_about: '',\n      error_code: ''\n    }\n  },\n\n  importedVis: function() {\n    if (this.get('import').derived_visualization_id) {\n      return this._getMapVis();\n    } else {\n      return this._getDatasetVis();\n    }\n  },\n\n  _getMapVis: function() {\n    var derivedVisId = this.imp.get('derived_visualization_id');\n\n    if (!derivedVisId) {\n      return false;\n    }\n\n    return this._createVis({\n      type: 'derived',\n      id: derivedVisId\n    });\n  },\n\n  _getDatasetVis: function() {\n    var tableName = this.imp.get('table_name');\n\n    if (!tableName) {\n      return false;\n    }\n\n    return this._createVis({\n      type: 'table',\n      table: {\n        name: tableName\n      }\n    });\n  },\n\n  _createVis: function(attrs) {\n    var vis = new cdb.admin.Visualization(attrs);\n    vis.permission.owner = this.user;\n    return vis;\n  },\n\n  setError: function(opts) {\n    var step = this.get('step');\n    var stepModel = this[ step === \"upload\" ? 'upl' : 'imp' ];\n\n    this.stopUpload();\n    this.stopImport();\n\n    stepModel.set(opts);\n\n    this.set('state', 'error');\n  },\n\n  stopUpload: function() {\n    this.upl.stopUpload();\n  },\n\n  stopImport: function() {\n    this.imp.destroyCheck();\n  },\n\n  get: function (attr) {\n    if (attr === \"upload\") return this.upl.toJSON();\n    if (attr === \"import\") return this.imp.toJSON();\n\n    return cdb.core.Model.prototype.get.call(this, attr);\n  },\n\n  toJSON: function() {\n    return {\n      step: this.get('step'),\n      id: this.get('id'),\n      state: this.get('state'),\n      upload: this.upl.toJSON(),\n      import: this.imp.toJSON()\n    }\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n/**\n * A special case of a geocoding model, since lon/lat geocoding is not actually going through the common async processing\n * as the rest.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  initialize: function(attrs) {\n    if (!attrs.table) throw new Error('table is required');\n    if (!attrs.longitude_column) throw new Error('longitude_column is required');\n    if (!attrs.latitude_column) throw new Error('latitude_column is required');\n    if (!_.isBoolean(attrs.force_all_rows)) throw new Error('force_all_rows is required');\n\n    this.set('table_name', attrs.table.get('name'));\n\n    this._startGeocoding();\n  },\n\n  _startGeocoding: function() {\n    this._changeState('isOngoing');\n\n    var self = this;\n    var table = this.get('table');\n    table.save({\n      longitude_column: this.get('longitude_column'),\n      latitude_column: this.get('latitude_column'),\n      force_all_rows: this.get('force_all_rows')\n    }, {\n      success: function() {\n        // when finish fetch the data again and throw a signal to notify the changes\n        // TODO: this should not exist, geometry_types change should be monitored\n        table.trigger('geolocated');\n        table.data().fetch();\n        self._changeState('hasCompleted');\n      },\n      error: function(msg, resp) {\n        var error;\n        try {\n          error = resp && JSON.parse(resp.responseText).errors[0];\n        } catch(err) {\n          // e.g. if responseText is empty (seems to happen when server is down/offline)\n          error = 'Unknown error';\n        }\n        self.set('error', error);\n        self._changeState('hasFailed');\n      },\n      wait: true // don't update attrs until success is triggered\n    });\n  },\n\n  isOngoing: function() {\n    return this.get('isOngoing');\n  },\n\n  hasCompleted: function() {\n    return this.get('hasCompleted');\n  },\n\n  hasFailed: function() {\n    return this.get('hasFailed');\n  },\n\n  getError: function() {\n    return this.get('error');\n  },\n\n  _changeState: function(newState) {\n    var changedStates = _.reduce(['isOngoing', 'hasCompleted', 'hasFailed'], function(memo, state) {\n      memo[state] = state === newState;\n      return memo;\n    }, {});\n    this.set(changedStates);\n  }\n\n});\n","var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar Pecan = require('cartodb-pecan');\n\n/**\n *  Pecan model\n *\n */\n\nmodule.exports = cdb.core.Model.extend({\n\n  _PRINT_STATS: true,\n\n  defaults: {\n    table_id: '',\n    column: '',\n    state: 'idle'\n  },\n\n  initialize: function() {\n    _.bindAll(this, \"_onDescribe\");\n    this.sql = cdb.admin.SQL();\n    this.query = 'SELECT * FROM ' + this.get(\"table_id\");\n  },\n\n  getData: function() {\n    this.sql.describe(this.query, this.get(\"column\"), {}, this._onDescribe);\n  },\n\n  _onDescribe: function(stats) {\n    var properties = {\n      state: \"analyzed\",\n      success: false\n    };\n\n    if (this._PRINT_STATS) {\n      this.trigger('print_stats', stats, this);\n    }\n\n    var hasEnoughToGuess = Pecan.hasEnoughToGuess({\n      stats: stats,\n      isPointGeometryType: this.get('geometry_type') === 'point'\n    });\n\n    if (hasEnoughToGuess) {\n      var response = Pecan.guessMap({\n        tableName: this.get('table_id'),\n        column: {\n          stats: stats,\n          geometryType: this.get('geometry_type'),\n          bbox: this.get('bbox')\n        },\n        dependencies: {\n          underscore: _\n        }\n      });\n\n      if (response) {\n        var overrides = {\n          sql: this.query,\n          success: true\n        };\n        properties = _.extend(properties, overrides, stats, response);\n      }\n    }\n\n    if (stats.type === 'geom' && stats.bbox) {\n      properties.bbox = stats.bbox;\n    }\n\n    this.set(properties);\n  },\n\n  isAnalyzed: function() {\n    return this.get('state') === 'analyzed';\n  },\n\n  hasFailed: function() {\n    return this.get('state') === 'failed';\n  }\n\n});\n","/*\n * Periodically fetches a model/collection. It waits for ongoing \n * fetch requests before trying to fetch again. A stop condition\n * can be specified.\n *\n * Usage example:\n * \n * var poller = new Poller(model, {\n *   interval: 1000,\n *   stopWhen: function(model) {\n *     return model.get('state') === 'completed';\n *   }\n * });\n * \n * poller.start();\n *\n * // ...\n *\n * poller.stop();\n * \n */\nvar Poller = function(model, options) {\n  this.model = model;\n  this.numberOfRequests = 0;\n  this.polling = false;\n  this.interval = options['interval'];\n  if (typeof this.interval !== \"function\") {\n    this.interval = function() { return options['interval']; };\n  }\n  this.stopWhen = options['stopWhen'];\n  this.error = options['error'];\n  this.autoStart = options['autoStart'];\n\n  if (this.autoStart) {\n    this.start();\n  }\n}\n\nPoller.prototype.start = function() {\n  if (this.timeout) {\n    return;\n  }\n\n  this._scheduleFetch();\n}\n\nPoller.prototype._scheduleFetch = function() {\n  this.timeout = setTimeout(this._fetch.bind(this), this.interval(this.numberOfRequests));\n}\n\nPoller.prototype._fetch = function() {\n  var self = this;\n  if (!self.polling) {\n    self.polling = true;\n    self.model.fetch({\n      success: function() {\n        self.polling = false;\n        self.numberOfRequests++;\n        if (self._continuePolling()) {\n          self._scheduleFetch();\n        }\n      },\n      error: function(e) {\n        _.isFunction(self.error) && self.error(self.model);\n      }\n    })\n  }\n}\n\nPoller.prototype._continuePolling = function() {\n  return !this.stopWhen ||\n    (_.isFunction(this.stopWhen) && !this.stopWhen(this.model));\n}\n\nPoller.prototype.stop = function() {\n  this.polling = false;\n  clearTimeout(this.timeout);\n  delete(this.timeout);\n}\n\nmodule.exports = Poller;\n","\n/**\n *  Default upload config\n *\n */\n\nmodule.exports = {\n  uploadStates: [\n    'enqueued',\n    'pending',\n    'importing',\n    'uploading',\n    'guessing',\n    'unpacking',\n    'getting',\n    'creating',\n    'complete'\n  ],\n  fileExtensions: [\n    'csv',\n    'xls',\n    'xlsx',\n    'zip',\n    'kml',\n    'geojson',\n    'json',\n    'ods',\n    'kmz',\n    'tsv',\n    'gpx',\n    'tar',\n    'gz',\n    'tgz',\n    'osm',\n    'bz2',\n    'tif',\n    'tiff',\n    'txt',\n    'sql',\n    'rar',\n    'carto',\n    'gpkg'\n  ],\n  // How big should file be?\n  fileTimesBigger: 3\n}\n","var Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar UploadConfig = require('./upload_config');\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\nvar moment = (typeof window !== \"undefined\" ? window['moment'] : typeof global !== \"undefined\" ? global['moment'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n/**\n * Model that let user upload files to our endpoints.\n *\n * NOTE: this model extends Backbone.Model instead of cdb.core.Model, because it's required for the\n * vendor/backbone-model-file-upload.\n */\nmodule.exports = Backbone.Model.extend({\n\n  url: '/api/v1/imports',\n\n  fileAttribute: 'filename',\n\n  defaults: {\n    type: '',\n    value: '',\n    interval: 0,\n    privacy: '',\n    progress: 0,\n    state: 'idle',\n    service_item_id: '',\n    service_name: '',\n    option: '',\n    content_guessing: true,\n    type_guessing: true,\n    create_vis: true\n  },\n\n  initialize: function(val, opts) {\n    this.user = opts && opts.user;\n    this._initBinds();\n    // We need to validate entry attributes\n    this._validate(this.attributes, { validate: true});\n  },\n\n  isValidToUpload: function() {\n    return this.get('value') && this.get('state') !== 'error';\n  },\n\n  setFresh: function(d) {\n    if (d && !_.isEmpty(d)) {\n      // Set upload properties except create_vis (defined when created)\n      this.set(_.omit(d, 'create_vis'));\n    } else {\n      this.clear();\n    }\n  },\n\n  _initBinds: function() {\n    this.bind('progress', function(progress) {\n      this.set({\n        progress: progress*100,\n        state: 'uploading'\n      });\n    }, this);\n\n    this.bind('change:value', function() {\n      if (this.get('state') === \"error\") {\n        this.set({ state: 'idle' })\n        this.unset('get_error_text', { silent: true });\n      }\n    }, this);\n\n    this.bind('error invalid', function(m, d) {\n      this.set({\n        state: 'error',\n        error_code: (d && d.error_code) || '',\n        get_error_text: {\n          title: 'Invalid import',\n          what_about: (d && d.msg) || ''\n        }\n      }, { silent: true });\n      // We need this, if not validate will run again and again and again... :(\n      this.trigger('change');\n    }, this);\n  },\n\n  validate: function(attrs) {\n    if (!attrs) return;\n\n    if (attrs.type === \"file\") {\n      // Number of files\n      if (attrs.value && attrs.value.length) {\n        return {\n          msg: \"Unfortunately only one file is allowed per upload\"\n        }\n      }\n\n      // File name\n      var name = attrs.value.name;\n      if (!name) {\n        return {\n          msg: \"File name should be defined\"\n        }\n      }\n\n      // File extension\n      var ext = name.substr(name.lastIndexOf('.') + 1);\n      if (ext) {\n        ext = ext.toLowerCase();\n      }\n      if (!_.contains(UploadConfig.fileExtensions, ext)) {\n        return {\n          msg: \"Unfortunately this file extension is not allowed\"\n        }\n      }\n      // File size\n      if (this.user && ((this.user.get('remaining_byte_quota') * UploadConfig.fileTimesBigger) < attrs.value.size)) {\n        return {\n          msg: \"Unfortunately the size of the file is bigger than your remaining quota\",\n          error_code: 8001\n        }\n      }\n    }\n\n    if (attrs.type === \"remote\") {\n      // Valid remote visualization id?\n      if (!attrs.remote_visualization_id) {\n        return {\n          msg: \"The remote visualization id was not specified\"\n        }\n\n      }\n      // Remote size?\n      if (this.user && attrs.size && ((this.user.get('remaining_byte_quota') * UploadConfig.fileTimesBigger) < attrs.size)) {\n        return {\n          msg: \"Unfortunately the size of the remote dataset is bigger than your remaining quota\",\n          error_code: 8001\n        }\n      }\n    }\n\n    if (attrs.type === \"url\") {\n      // Valid URL?\n      if (!Utils.isURL(attrs.value)) {\n        return {\n          msg: \"Unfortunately the URL provided is not valid\"\n        }\n      }\n    }\n\n    if (attrs.type === \"sql\") {\n      if (!attrs.value) {\n        return {\n          msg: \"Query is not provided\"\n        }\n      }\n    }\n\n    if (attrs.type === \"duplication\") {\n      if (!attrs.value) {\n        return {\n          msg: \"Dataset copy is not defined\"\n        }\n      }\n    }\n\n    if (attrs.type === \"service\" && attrs.service_name === \"twitter_search\") {\n      var service_item_id = attrs.service_item_id;\n\n      // Empty?\n      if (!service_item_id || _.isEmpty(service_item_id)) {\n        return {\n          msg: \"Twitter data is empty\"\n        }\n      }\n\n      // Categories?\n      if (_.isEmpty(service_item_id.categories)) {\n        return {\n          msg: \"Twitter categories are not valid\"\n        }\n      }\n\n      // Dates?\n      var dates = service_item_id.dates;\n      if (!dates || _.isEmpty(dates)) {\n        return {\n          msg: \"Twitter dates are empty\"\n        }\n      }\n      var isToDateValid = moment(dates.fromDate) <= moment(new Date());\n      if (!dates.fromDate || !dates.toDate || !isToDateValid) {\n        return {\n          msg: \"Twitter dates are not valid\"\n        }\n      }\n    }\n  },\n\n  isValid: function() {\n    return this.get('value') && this.get('state') !== \"error\"\n  },\n\n  upload: function() {\n    if (this.get('type') === \"file\") {\n      var self = this;\n      this.xhr = this.save(\n        {\n          filename: this.get('value')\n        },\n        {\n          success: function(m) {\n            m.set('state', 'uploaded');\n          },\n          error: function(m, msg) {\n\n            var message = 'Unfortunately there was a connection error';\n\n            if (msg && msg.status === 429) {\n              var response = JSON.parse(msg.responseText);\n              message = response.errors.imports;\n            }\n\n            self.set({\n              state: 'error',\n              get_error_text: { title: 'There was an error', what_about: message }\n            });\n\n          },\n          complete: function() {\n            delete self.xhr;\n          }\n        }\n      );\n    }\n  },\n\n  stopUpload: function() {\n    if (this.xhr) this.xhr.abort();\n  },\n\n  setGuessing: function(val) {\n    this.set({\n      type_guessing: val,\n      content_guessing: val\n    });\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar ViewFactory = require('../../../view_factory');\nvar PecanDialog = require('../../../dialogs/pecan/pecan_dialog_view');\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'ImportItem',\n  tagName: 'li',\n\n  events: {\n    'click .js-abort':       '_removeItem',\n    'click .js-show_dialog': '_showDialog',\n    'click .js-close':       '_removeItem'\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.vis = this.options.vis;\n    this.template = cdb.templates.getTemplate('common/background_polling/views/analysis/background_analysis_item');\n    this._initBinds();\n  },\n\n  render: function() {\n    var totalItems    = this.collection.getTotalAnalysis();\n    var totalAnalyzed = this.collection.getCompletedAnalysis();\n    var totalSuccess  = this.collection.getSuccessfullyAnalysedColumns();\n\n    var d = {\n      totalSuccess: totalSuccess,\n      totalItems: totalItems,\n      totalAnalyzed: totalAnalyzed,\n      progress: (totalAnalyzed / totalItems) * 100\n    };\n\n    this.$el.html(this.template(d));\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.collection.bind('change:state', this._onChangeState, this);\n    this.add_related_model(this.collection);\n  },\n\n  _onChangeState: function() {\n    var totalItems    = this.collection.getTotalAnalysis();\n    var totalAnalyzed = this.collection.getCompletedAnalysis();\n    var totalSuccess  = this.collection.getSuccessfullyAnalysedColumns();\n\n    this.render();\n\n    if (totalAnalyzed === totalItems && totalSuccess === 0) {\n      this._removeItem();\n    }\n  },\n\n  _showDialog: function() {\n\n    var pecanDialog = new PecanDialog({\n      clean_on_hide: true,\n      vis: this.vis,\n      collection:this.collection,\n      user: this.user\n    });\n\n    pecanDialog.appendToBody();\n  },\n\n  _skip: function() {\n    var layerID = this.vis.get(\"active_layer_id\");\n    var name;\n    var activeLayer  = this.vis.map.layers.where({ id: layerID });\n\n    if (activeLayer) {\n      name = activeLayer[0].table.get(\"name\");\n    }\n\n    var skipPencanDialog = 'pecan_' + this.user.get(\"username\") + \"_\" + name;\n    localStorage[skipPencanDialog] = true;\n  },\n\n  _removeItem: function() {\n    this.trigger('remove', this.collection, this);\n    this._skip();\n    this.clean();\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n *  Background polling header title view\n *\n *  It will contain only the title\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  tagName: 'h3',\n  className: 'CDB-Text CDB-Size-large u-lSpace--xl',\n\n  initialize: function() {\n    this.template = cdb.templates.getTemplate('common/background_polling/views/background_polling_header_title');\n    this._initBinds();\n  },\n\n  render: function() {\n    this.$el.html(\n      this.template({\n        imports: this.model.getTotalImports(),\n        geocodings: this.model.getTotalGeocodings(),\n        analysis: this.model.getTotalAnalysis(),\n        totalPollings: this.model.getTotalPollings()\n      })\n    );\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change analysisAdded analysisRemoved importAdded importRemoved geocodingAdded geocodingRemoved', this.render, this);\n  }\n\n});","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BackgroundPollingHeaderTitleView = require('./background_polling_header_title_view');\n\n/**\n *  Background polling header view\n *\n *  It will contain:\n *  - Badge\n *  - Title\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  className: \"BackgroundPolling-header\",\n\n  initialize: function() {\n    this.template = cdb.templates.getTemplate('common/background_polling/views/background_polling_header');\n    this._initBinds();\n  },\n\n  render: function() {\n    this.$el.html(this.template());\n    this._initViews();\n    this._updateBadges();\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change importAdded importRemoved geocodingAdded geocodingRemoved', this._updateBadges, this);\n  },\n\n  _initViews: function() {\n    var headerTitle = new BackgroundPollingHeaderTitleView({\n      model: this.model\n    });\n    this.$el.append(headerTitle.render().el);\n    this.addView(headerTitle);\n  },\n\n  _updateBadges: function() {\n    var failed = this.model.getTotalFailedItems();\n\n    if (this.$('.BackgroundPolling-headerBadgeCount').length === 0 && failed > 0) {\n      var $span = $('<span>').addClass(\"BackgroundPolling-headerBadgeCount Badge Badge--negative CDB-Text CDB-Size-small\").text(failed);\n      this.$('.BackgroundPolling-headerBadge')\n        .append($span)\n        .addClass('has-failures');\n    } else if (this.$('.BackgroundPolling-headerBadgeCount').length > 0 && failed > 0) {\n      this.$('.BackgroundPolling-headerBadgeCount').text(failed);\n    } else if (failed === 0) {\n      this.$('.BackgroundPolling-headerBadgeCount').remove();\n      this.$('.BackgroundPolling-headerBadge').removeClass('has-failures');\n    }\n\n    // Show geocoding icon if only geocoding\n    var geocodingsCount = this.model.getTotalGeocodings();\n    var isGeocoding = geocodingsCount > 0 && geocodingsCount === this.model.getTotalPollings();\n    this.$('.js-icon').toggleClass('CDB-IconFont-marker', isGeocoding);\n    this.$('.js-icon').toggleClass('CDB-IconFont-cloud', !isGeocoding);\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\nvar pluralizeString = require('../../../view_helpers/pluralize_string');\nvar GeocodingResultDetailsView = require('./geocoding_result_details_view');\n\n/**\n *  Geocoding item within background polling\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'ImportItem',\n  tagName: 'li',\n\n  events: {\n    'click .js-abort': '_cancelGeocoding',\n    'click .js-info': '_showDetails',\n    'click .js-close': '_removeGeocoding'\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.template = cdb.templates.getTemplate('common/background_polling/views/geocodings/background_geocoding_item');\n    this._initBinds();\n  },\n\n  render: function() {\n    var processedRows = this.model.get('processed_rows') || 0;\n    var processableRows = this.model.get('processable_rows') || 0;\n    var realRows = this.model.get('real_rows') || 0;\n    var isLatLngType = this.model.get('latitude_column') && this.model.get('longitude_column');\n\n    var d = {\n      realRows: realRows,\n      tableName: this.model.get('table_name'),\n      canCancel: _.isFunction(this.model.cancelGeocoding),\n      hasFailed: this.model.hasFailed(),\n      hasCompleted: this.model.hasCompleted(),\n      processedRows: processedRows,\n      processableRows: processableRows,\n      processableRowsFormatted: Utils.formatNumber(processableRows),\n      realRowsPluralize: pluralizeString('row', 'rows', this.model.get('real_rows')),\n      realRowsFormatted: Utils.formatNumber(realRows),\n      processableRowsPluralize: pluralizeString('row', 'rows', processableRows),\n      width: realRows > 0 ? (processableRows/realRows) : 100,\n      isLatLngType: isLatLngType\n    }\n    this.$el.html(this.template(d));\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change', this.render, this);\n    this.model.bind('remove', this.clean, this);\n  },\n\n  _cancelGeocoding: function() {\n    this.model.cancelGeocoding();\n  },\n\n  _removeGeocoding: function() {\n    this.trigger('remove', this.model, this);\n    this.clean();\n  },\n\n  _showDetails: function() {\n    new GeocodingResultDetailsView({\n      clean_on_hide: true,\n      user: this.user,\n      model: this.model,\n      showGeocodingDatasetURLButton: this.options.showGeocodingDatasetURLButton\n    }).appendToBody();\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BaseDialog = require('../../../views/base_dialog/view');\nvar pluralizeString = require('../../../view_helpers/pluralize_string');\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\n\n/**\n *  When a geocoding proccess finishes, this dialog displays\n *  all the info about the task (price, rows, errors, etc).\n *\n */\n\nmodule.exports = BaseDialog.extend({\n\n  className: 'Dialog BackgroundPollingDetails is-opening',\n\n  initialize: function() {\n    this.elder('initialize');\n    this.user = this.options.user;\n  },\n\n  render_content: function() {\n    var error = this.model.get('error') || {};\n\n    var processedRows = this.model.get('processed_rows') || 0;\n    var processableRows = this.model.get('processable_rows') || 0;\n    var realRows = this.model.get('real_rows') || 0;\n    var geometryType = this.model.get('geometry_type') || 'point';\n\n    // Related to price and credits\n    var price = this.model.get('price');\n    var hasPrice = price !== undefined && price !== null;\n    var googleUser = this.user.featureEnabled('google_maps');\n\n    var datasetURL;\n    if (this.user && this.model.get('table_name')) {\n      var vis = new cdb.admin.Visualization({\n        type: 'table',\n        table: {\n          name: this.model.get('table_name')\n        }\n      });\n      vis.permission.owner = this.user;\n      datasetURL = encodeURI(vis.viewUrl(this.user).edit());\n    }\n\n    // Select template\n    var template = 'common/background_polling/views/geocodings/';\n    if (this.model.hasCompleted()) {\n      template += realRows === 0 ? 'geocoding_no_result_details' : 'geocoding_success_details';\n    } else {\n      template += 'geocoding_error_details';\n    }\n\n    return cdb.templates.getTemplate(template)({\n      id: this.model.get('id'),\n      geometryTypePluralize: pluralizeString(geometryType, geometryType + 's', processableRows),\n      geometryType: geometryType,\n      remainingQuotaFormatted: Utils.formatNumber(this.model.get('remaining_quota')),\n      googleUser: googleUser,\n      tableName: this.model.get('table_name'),\n      state: this.model.get('state') || '',\n      blockPrice: this.user.get('geocoding').block_price,\n      realRows: realRows,\n      realRowsFormatted: Utils.formatNumber(realRows),\n      processedRows: processedRows,\n      processableRows: processableRows,\n      processableRowsFormatted: Utils.formatNumber(processableRows),\n      hasPrice: hasPrice,\n      price: price,\n      customHosted: cdb.config.get('cartodb_com_hosted'),\n      errorDescription: error.description,\n      showGeocodingDatasetURLButton: this.options.showGeocodingDatasetURLButton && datasetURL,\n      datasetURL: datasetURL\n    });\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar UploadConfig = require('../../models/upload_config');\nvar ErrorDetailsView = require('../../../views/error_details_view');\nvar WarningsDetailsView = require('../../../views/warnings_details_view');\nvar ViewFactory = require('../../../view_factory');\nvar TwitterImportDetailsDialog = require('./twitter_import_details_view');\n\n/**\n *  Import item within background importer\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'ImportItem',\n  tagName: 'li',\n\n  events: {\n    'click .js-abort':      '_removeItem',\n    'click .js-show_error': '_showImportError',\n    'click .js-show_warnings': '_showImportWarnings',\n    'click .js-show_stats': '_showImportStats',\n    'click .js-close':      '_removeItem'\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this._showSuccessDetailsButton = this.options.showSuccessDetailsButton;\n    this.template = cdb.templates.getTemplate('common/background_polling/views/imports/background_import_item');\n    this._initBinds();\n  },\n\n  render: function() {\n    var upload = this.model.get('upload');\n    var imp = this.model.get('import');\n\n    var d = {\n      name: '',\n      state: this.model.get('state'),\n      progress: '',\n      service: '',\n      step: this.model.get('step'),\n      url: '',\n      failed: this.model.hasFailed(),\n      completed: this.model.hasCompleted(),\n      warnings: this.model.getWarnings(),\n      showSuccessDetailsButton: this._showSuccessDetailsButton,\n      tables_created_count: imp.tables_created_count\n    };\n\n    // URL\n    if (d.state === \"complete\") {\n      var vis = this.model.importedVis();\n      if (vis) {\n        d.url = encodeURI(vis.viewUrl(this.user).edit());\n      }\n    }\n\n    // Name\n    if (upload.type) {\n      if (upload.type === \"file\") {\n        if (upload.value.length > 1) {\n          d.name = upload.value.length + ' files';\n        } else {\n          d.name = upload.value.name;\n        }\n      }\n      if (upload.type === \"url\" || upload.type === \"remote\") {\n        d.name = upload.value;\n      }\n      if (upload.type === \"service\") {\n        d.name = upload.value && upload.value.filename || '';\n      }\n      if (upload.service_name === \"twitter_search\") {\n        d.name = 'Twitter import';\n      }\n      if (upload.type === \"sql\") {\n        d.name = 'SQL';\n      }\n      if (upload.type === \"duplication\") {\n        d.name = upload.table_name || upload.value;\n      }\n    } else {\n      d.name = imp.display_name || imp.item_queue_id || 'import';\n    }\n\n    // Service\n    d.service = upload.service_name;\n\n    // Progress\n    if (this.model.get('step') === 'upload') {\n      d.progress = this.model.get('upload').progress;\n    } else {\n      d.progress = (UploadConfig.uploadStates.indexOf(d.state)/UploadConfig.uploadStates.length) * 100;\n    }\n\n    this.$el.html(this.template(d));\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change', this.render, this);\n    this.model.bind('remove', this.clean, this);\n  },\n\n  _removeItem: function() {\n    this.trigger('remove', this.model, this);\n    this.model.pause();\n    this.clean();\n  },\n\n  _showImportStats: function() {\n    (new TwitterImportDetailsDialog({\n      clean_on_hide: true,\n      user: this.user,\n      model: this.model\n    })).appendToBody();\n  },\n\n  _showImportError: function() {\n    var dialog = ViewFactory.createDialogByView(\n      new ErrorDetailsView({\n        err: this.model.getError(),\n        user: this.user\n      })\n    );\n    dialog.appendToBody();\n  },\n\n  _showImportWarnings: function() {\n    var dialog = ViewFactory.createDialogByView(\n      new WarningsDetailsView({\n        warnings: this.model.getWarnings(),\n        user: this.user\n      })\n    );\n    dialog.appendToBody();\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n *  Import limit message within background importer\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'ImportItem ImportItem--sticky',\n  tagName: 'li',\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.template = cdb.templates.getTemplate('common/background_polling/views/imports/background_import_limit');\n  },\n\n  render: function() {\n    var importQuota = this.user.getMaxConcurrentImports();\n    var isUpgradeable = !cdb.config.get('cartodb_com_hosted') && importQuota === 1;\n\n    this.$el.html(\n      this.template({\n        upgradeUrl: window.upgrade_url,\n        isUpgradeable: isUpgradeable,\n        importQuota: importQuota\n      })\n    );\n\n    return this;\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BaseDialog = require('../../../views/base_dialog/view');\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\n\n/**\n *  When a Twitter import finishes, this dialog displays\n *  all the info about the price/cost etc.\n *\n */\n\nmodule.exports = BaseDialog.extend({\n\n  className: 'Dialog TwitterImportDetails is-opening',\n\n  initialize: function() {\n    this.elder('initialize');\n    this.user = this.options.user;\n    this.template = cdb.templates.getTemplate('common/background_polling/views/imports/twitter_import_details');\n  },\n\n  render_content: function() {\n    var imp = this.model.get('import');\n    var userTwitterValues = this.user.get('twitter');\n    var availableTweets = userTwitterValues.quota - userTwitterValues.monthly_use;\n    var vis = this.model.importedVis();\n    var url = vis && encodeURI(vis.viewUrl(this.user).edit()) || '';\n    var d = {\n      type: vis && vis.get('type') === \"table\" ? \"dataset\" : \"map\",\n      mapURL: url,\n      datasetTotalRows: imp.tweets_georeferenced,\n      datasetTotalRowsFormatted: Utils.formatNumber(imp.tweets_georeferenced),\n      tweetsCost: imp.tweets_cost,\n      tweetsCostFormatted: Utils.formatNumber(imp.tweets_cost),\n      availableTweets: availableTweets,\n      availableTweetsFormatted: Utils.formatNumber(availableTweets),\n      tweetsOverquota: imp.tweets_overquota,\n      tweetsOverquotaFormatted: Utils.formatNumber(imp.tweets_overquota),\n      blockSizeFormatted: Utils.formatNumber(userTwitterValues.block_size),\n      blockPriceFormatted: Utils.formatNumber(userTwitterValues.block_price)\n    };\n    return this.template(d);\n  }\n\n});\n","var queue = require('queue-async');\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n/**\n * Convenient object to do async batch processing, and don't continue until all items have successfully finished.\n * In case of error it will fail immediately.\n *\n * Example usage:\n *   var batchProcess = require('../common/batch_process_items');\n *   batchProcess({\n *     items: [ ... ],\n *     done: function() {\n *       this.close();\n *     },\n *     fail: function(jqXHR, errorType, e) {\n *       this._errorMsg = 'Server response: '+ jqXHR.responseText;\n *       this.render();\n *     }\n *   });\n *\n * @param opts {Object}\n *   howManyInParallel: {Number}\n *   items: {Array} each item will be passed to processItem(item, ...\n *   processItem: {Function} given an item and a callback, should call callback() for success case, or callback(error) if something failed.\n *   fail: {Function}\n *   done: {Function} called if all items\n */\nmodule.exports = function(opts) {\n  var q = queue(opts.howManyInParallel);\n  _.each(opts.items, function(item) {\n    q.defer(function(callback) {\n      opts.processItem(item, callback);\n    });\n  });\n\n  q.awaitAll(function(error/*, result1, ..., resultN */) {\n    // error and results contains outcome of the jqXHR requests above, see http://api.jquery.com/jQuery.ajax/#jqXHR\n    if (error) {\n      opts.fail(error);\n    } else {\n      opts.done();\n    }\n  });\n};\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar XYZModel = require('./xyz/xyz_model.js');\nvar WMSModel = require('./wms/wms_model.js');\nvar NASAModel = require('./nasa/nasa_model.js');\nvar MapboxModel = require('./mapbox/mapbox_model.js');\nvar TileJSONModel = require('./tile_json/tile_json_view_model.js');\n\n/**\n * View model for the add-custom-basemap view\n */\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    map: undefined,\n    baseLayers: undefined,\n    tabs: undefined,\n    currentView: 'tabs',\n    currentTab: 'xyz'\n  },\n\n  initialize: function(attrs) {\n    this.elder('initialize');\n    if (!attrs.map) throw new Error('map is required');\n    if (!attrs.baseLayers) throw new Error('baseLayers is required');\n    this._initTabs();\n    this._initBinds();\n  },\n\n  activeTabModel: function() {\n    return this.get('tabs').where({ name: this.get('currentTab') })[0];\n  },\n\n  canSaveBasemap: function() {\n    return this.get('currentView') === 'tabs' && this._layerToSave();\n  },\n\n  saveBasemap: function() {\n    if (!this.canSaveBasemap()) return;\n    this.set('currentView', 'saving');\n\n    var layer = this._layerToSave();\n    if (this.activeTabModel().hasAlreadyAddedLayer(this.get('baseLayers'))) {\n      this._onLayerSaved(layer);\n    } else {\n      // Add to baseLayers collection before saving, so save URL resolves to the expected endpoint.\n      this.get('baseLayers').add(layer);\n\n      var self = this;\n      layer.save()\n      .done(function() {\n        self._onLayerSaved(layer);\n      })\n      .fail(function() {\n        // Cleanup, remove layer it could not be saved!\n        self.get('baseLayers').remove(layer);\n        self.set('currentView', 'saveFail');\n      });\n    }\n  },\n\n  _onLayerSaved: function(layer) {\n    var map = this.get('map');\n\n    var clonedLayer = layer.clone();\n    clonedLayer.unset('id');\n    map.changeProvider('leaflet', clonedLayer);\n\n    var bbox = layer.get('bounding_boxes');\n    if (bbox && bbox.length === 4) {\n      map.setBounds([\n        [bbox[1], bbox[0]],\n        [bbox[3], bbox[2]]\n      ]);\n    }\n\n    this.set('currentView', 'saveDone');\n  },\n\n  _initTabs: function() {\n    var tabs = new Backbone.Collection([\n      new XYZModel(),\n      new WMSModel({\n        baseLayers: this.get('baseLayers')\n      }),\n      new NASAModel(),\n      new MapboxModel(),\n      new TileJSONModel()\n    ]);\n    this.set({\n      tabs: tabs,\n      currentTab: tabs.first().get('name')\n    });\n  },\n\n  _initBinds: function() {\n    this.get('tabs').each(function(tabModel) {\n      tabModel.bind('saveBasemap', this.saveBasemap, this);\n    }, this);\n  },\n\n  _layerToSave: function() {\n    return this.activeTabModel().get('layer');\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar BaseDialog = require('../../views/base_dialog/view.js');\nvar randomQuote = require('../../view_helpers/random_quote.js');\nvar ViewFactory = require('../../view_factory.js');\nvar ViewModel = require('./add_custom_basemap_model.js');\nvar TabsView = require('./tabs_view.js');\n\n/**\n * Dialog to add ¯custom basemap to current map.\n */\nmodule.exports = BaseDialog.extend({\n\n  initialize: function() {\n    this.elder('initialize');\n    this.model = new ViewModel({\n      map: this.options.map,\n      baseLayers: this.options.baseLayers\n    });\n    this._initViews();\n    this._initBinds();\n  },\n\n  /**\n   * @override cdb.ui.common.Dialog.prototype.render\n   */\n  render: function() {\n    BaseDialog.prototype.render.apply(this, arguments);\n    this.$('.content').addClass('Dialog-contentWrapper');\n    return this;\n  },\n\n  /**\n   * @implements cdb.ui.common.Dialog.prototype.render_content\n   */\n  render_content: function() {\n    var contentView = this._panes.active(this.model.get('currentView')).render();\n    contentView.$el.addClass('Dialog-body Dialog-body--expanded Dialog-body--create');\n    contentView.delegateEvents(); // enable events after being added to $el\n    var $el = $(\n      cdb.templates.getTemplate('common/dialogs/add_custom_basemap/add_custom_basemap')({\n        model: this.model\n      })\n    );\n    $el.append(contentView.el);\n    return $el;\n  },\n\n  ok: function() {\n    if (this.model.canSaveBasemap()) {\n      this.model.saveBasemap();\n    }\n  },\n\n  _initViews: function() {\n    this._panes = new cdb.ui.common.TabPane({\n      el: this.el\n    });\n    this.addView(this._panes);\n    this._panes.addTab('tabs',\n      new TabsView({\n        model: this.model\n      })\n    );\n    this._panes.addTab('saving',\n      ViewFactory.createByTemplate('common/templates/loading', {\n        title: 'Setting basemap…',\n        quote: randomQuote()\n      }).render()\n    );\n    this._panes.addTab('saveFail',\n      ViewFactory.createByTemplate('common/templates/fail', {\n        msg: ''\n      }).render()\n    );\n    this._panes.active(this.model.get('currentView'));\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:currentView', this._onCurrentViewChange, this);\n  },\n\n  _onCurrentViewChange: function() {\n    if (this.model.get('currentView') === 'saveDone') {\n      this.close();\n    } else {\n      this.render();\n    }\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar MapboxView = require('./mapbox_view');\nvar MapboxToTileLayerFactory = require('./mapbox_to_tile_layer_factory');\n\n/**\n * View model for XYZ tab content.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    name: 'mapbox',\n    label: 'Mapbox',\n    currentView: 'enterURL', //, validatingInputs, valid\n    lastErrorMsg: '', //set if fails to save\n    layer: undefined // will be set when valid\n  },\n\n  createView: function() {\n    this.set({\n      currentView: 'enterURL',\n      layer: undefined\n    });\n    return new MapboxView({\n      model: this\n    });\n  },\n\n  hasAlreadyAddedLayer: function(baseLayers) {\n    var urlTemplate = this.get('layer').get('urlTemplate');\n    return _.any(baseLayers.custom(), function(customLayer) {\n      return customLayer.get('urlTemplate') === urlTemplate;\n    });\n  },\n\n  save: function(url, accessToken) {\n    this.set({\n      currentView: 'validatingInputs',\n      url: url,\n      accessToken: accessToken\n    });\n\n    var self = this;\n    var mf = new MapboxToTileLayerFactory({\n      url: url,\n      accessToken: accessToken\n    });\n    mf.createTileLayer({\n      success: function(tileLayer) {\n        self.set('layer', tileLayer);\n        self.trigger('saveBasemap');\n      },\n      error: function(errorMsg) {\n        self.set({\n          currentView: 'enterURL',\n          lastErrorMsg: errorMsg\n        });\n      }\n    });\n  }\n});\n","var $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * Factory to create a cdb.admin.TileLayer from a given URL and access token tuple for Mapbox.\n * Extracted from mapbox_basemap_pane to maintain current logic, since it's rather complex…\n */\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    url: '',\n    accessToken: ''\n  },\n\n  _MAPBOX: {\n    version: 4,\n    https: 'https://dnv9my2eseobd.cloudfront.net',\n    base: 'https://a.tiles.mapbox.com/'\n  },\n\n  /**\n   * @param {Object} callbacks\n   *   success {Function} given a new TileLayer object\n   *   error {Function} given an error explanation\n   */\n  createTileLayer: function(callbacks) {\n    var val = this.get('url');\n    var url = this._lowerXYZ(val);\n    var access_token = this.get('accessToken');\n    var type = 'json';\n    var subdomains = ['a', 'b', 'c'];\n    var mapbox_id;\n\n    // Detects the URL's type\n    if (url.indexOf('{x}') < 0 && url.indexOf('tiles.mapbox.com') !== -1) {\n      mapbox_id = this._getMapBoxMapID(url);\n      if (mapbox_id) {\n        type = 'mapbox_id';\n        url = mapbox_id;\n      }\n    } else if (url.indexOf('{x}') !== -1) {\n      type = 'xyz';\n      url = url.replace(/\\{s\\}/g, function() {\n          return subdomains[Math.floor(Math.random() * 3)];\n        })\n        .replace(/\\{x\\}/g, '0')\n        .replace(/\\{y\\}/g, '0')\n        .replace(/\\{z\\}/g, '0');\n    } else if (url && url.indexOf('http') < 0 && url.match(/(.*?)\\.(.*)/) != null && url.match(/(.*?)\\.(.*)/).length === 3) {\n      type = 'mapbox_id';\n      mapbox_id = val;\n    } else { // If not, check https\n      url = this._fixHTTPS(url);\n    }\n\n    var self = this;\n    var image;\n    if (type === 'mapbox') {\n      callbacks.success(this._newTileLayer({ tiles: [url] }));\n    } else if (type === 'xyz') {\n      image = new Image();\n      image.onload = function() {\n        callbacks.success(self._newTileLayer({\n          tiles: [self._lowerXYZ(val)]\n        }));\n      };\n      image.onerror = function() {\n        callbacks.error(self._errorToMsg());\n      };\n      image.src = url;\n    } else if (type === 'mapbox_id') {\n      var params = '?access_token=' + access_token;\n      var base_url = this._MAPBOX.base + 'v' + this._MAPBOX.version + '/' + mapbox_id;\n      var tile_url = base_url + '/{z}/{x}/{y}.png' + params;\n      var json_url = base_url + '.json' + params;\n\n      // JQuery has a faulty implementation of the getJSON method and doesn't return\n      // a 404, so we use a timeout. TODO: replace with CORS\n      var errorTimeout = setTimeout(function() {\n        callbacks.error(self._errorToMsg());\n      }, 5000);\n\n      $.ajax({\n        url: json_url,\n        success: function(data) {\n          clearTimeout(errorTimeout);\n          callbacks.success(self._newTileLayer({\n            tiles: [tile_url],\n            attribution: data.attribution,\n            minzoom: data.minzoom,\n            maxzoom: data.maxzoom,\n            name: data.name\n          }));\n        },\n        error: function(e) {\n          clearTimeout(errorTimeout);\n          callbacks.error(self._errorToMsg(e));\n        }\n      });\n    } else {\n      callbacks.error(this._errorToMsg());\n    }\n  },\n\n  _newTileLayer: function(data) {\n    // Check if the respond is an array\n    // In that case, get only the first\n    if (_.isArray(data) && _.size(data) > 0) {\n      data = _.first(data);\n    }\n\n    return new cdb.admin.TileLayer({\n      urlTemplate: data.tiles[0],\n      attribution: data.attribution || null,\n      maxZoom: data.maxzoom || 21,\n      minZoom: data.minzoom || 0,\n      name: data.name || ''\n    });\n  },\n\n  _errorToMsg: function(error) {\n    if (typeof error === 'object' || !error) {\n      if (error && error.status && error.status === 401) {\n        return 'Error retrieving your basemap. Please, check your access token.';\n      } else {\n        return 'This value is not valid.';\n      }\n    }\n\n    return error;\n  },\n\n  _lowerXYZ: function(url) {\n    return url.replace(/\\{S\\}/g, \"{s}\")\n      .replace(/\\{X\\}/g, \"{x}\")\n      .replace(/\\{Y\\}/g, \"{y}\")\n      .replace(/\\{Z\\}/g, \"{z}\");\n  },\n\n  // Extracts the Mapbox MapId from a Mapbox URL\n  _getMapBoxMapID: function(url) {\n    // http://d.tiles.mapbox.com/v3/{user}.{map}/3/4/3.png\n    // http://a.tiles.mapbox.com/v3/{user}.{map}/page.html\n    // http://a.tiles.mapbox.com/v4/{user}.{map}.*\n    var reg1 = /https?:\\/\\/[a-z]?\\.?tiles\\.mapbox.com\\/v(\\d)\\/([^\\/.]*)\\.([^\\/.]*)/;\n\n    // https://tiles.mapbox.com/{user}/edit/{map}?newmap&preset=Streets#3/0.00/-0.09\n    var reg2 = /https?:\\/\\/tiles\\.mapbox\\.com\\/(.*?)\\/edit\\/(.*?)(\\?|#)/;\n\n    var match = '';\n\n    // Check first expresion\n    match = url.match(reg1);\n\n    if (match && match[1] && match[2]) {\n      return match[2] + \".\" + match[3];\n    }\n\n    // Check second expresion\n    match = url.match(reg2);\n\n    if (match && match[1] && match[2]) {\n      return match[1] + \".\" + match[2];\n    }\n  },\n\n  /**\n   * return a https url if the current application is loaded from https\n   */\n  _fixHTTPS: function(url, loc) {\n    loc = loc || location;\n\n    // fix the url to https or http\n    if (url.indexOf('https') !== 0 && loc.protocol === 'https:') {\n      // search for mapping\n      var i = url.indexOf('mapbox.com');\n      if (i !== -1) {\n        return this._MAPBOX.https + url.substr(i + 'mapbox.com'.length);\n      }\n      return url.replace(/http/, 'https');\n    }\n    return url;\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar ViewFactory = require('../../../view_factory.js');\nvar randomQuote = require('../../../view_helpers/random_quote.js');\n\n\n/**\n * Represents the Mapbox tab content.\n */\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-ok': '_onClickOK',\n    'keydown': '_onKeyDown',\n    'keyup': '_onKeyUp'\n  },\n\n  initialize: function() {\n    this.elder('initialize');\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n\n    var view;\n    switch (this.model.get('currentView')) {\n      case 'validatingInputs':\n        view = ViewFactory.createByTemplate('common/templates/loading', {\n          title: 'Validating…',\n          quote: randomQuote()\n        });\n        break;\n      case 'enterURL':\n      default:\n        view = ViewFactory.createByTemplate('common/dialogs/add_custom_basemap/mapbox/enter_url', {\n          url: this.model.get('url'),\n          accessToken: this.model.get('accessToken'),\n          lastErrorMsg: this.model.get('lastErrorMsg')\n        });\n    }\n    this.addView(view);\n    this.$el.append(view.render().el);\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change', this.render, this);\n  },\n\n  _hasValues: function() {\n    return this._urlVal() && this._accessToken();\n  },\n\n  _urlVal: function() {\n    return this.$('.js-url').val();\n  },\n\n  _accessToken: function() {\n    return this.$('.js-access-token').val();\n  },\n\n  _onClickOK: function(ev) {\n    this.killEvent(ev);\n    if (this._hasValues()) {\n      var url = this._urlVal();\n      var accessToken = this._accessToken();\n      this.model.save(url, accessToken);\n    }\n  },\n\n  _onKeyDown: function(ev) {\n    ev.stopPropagation();\n    this.$('.js-error').removeClass('is-visible');\n  },\n\n  _onKeyUp: function(ev) {\n    ev.stopPropagation();\n    this.$('.js-ok').toggleClass('is-disabled', !this._hasValues());\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar NASAView = require('./nasa_view');\nvar moment = (typeof window !== \"undefined\" ? window['moment'] : typeof global !== \"undefined\" ? global['moment'] : null);\n\nvar TYPES = {\n  day: {\n    url:          'http://map1.vis.earthdata.nasa.gov/wmts-webmerc/MODIS_Terra_CorrectedReflectance_TrueColor/default/<%- date %>/GoogleMapsCompatible_Level9/{z}/{y}/{x}.jpeg',\n    limit:        '2012-05-01',\n    default:      '2012-05-01',\n    attribution:  '<a href=\"http://earthdata.nasa.gov/gibs\" target=\"_blank\">NASA EOSDIS GIBS</a>',\n    name:         'NASA Terra',\n    maxZoom:      9,\n    minZoom:      1\n  },\n\n  night: {\n    url:          'http://map1.vis.earthdata.nasa.gov/wmts-webmerc/VIIRS_CityLights_2012/default/<%- date %>/GoogleMapsCompatible_Level8/{z}/{y}/{x}.jpeg',\n    limit:        '2012-05-01',\n    default:      '2012-05-02',\n    attribution:  '<a href=\"http://earthdata.nasa.gov/gibs\" target=\"_blank\">NASA EOSDIS GIBS</a>',\n    name:         'NASA Earth at night',\n    maxZoom:      8,\n    minZoom:      1\n  }\n};\n\n/**\n * View model for XYZ tab content.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    name: 'nasa',\n    label: 'NASA',\n    layer: undefined, //gets set on dayOrNight/date changes\n    layerType: 'day',\n\n    // for date picker\n    date: undefined,\n    current: undefined,\n    format: 'Y-m-d' // YYYY-MM-DD\n  },\n\n  initialize: function() {\n    this.elder('initialize');\n    this._initBinds();\n  },\n\n  createView: function() {\n    var utc = new Date().getTimezoneOffset();\n    var today = moment(new Date()).utcOffset(utc).format('YYYY-MM-DD');\n    var yesterday = moment(new Date()).utcOffset(utc).subtract(1, 'days').format('YYYY-MM-DD');\n    this.set({\n      current: today,\n      date: yesterday\n    });\n\n    return new NASAView({\n      model: this\n    });\n  },\n\n  hasAlreadyAddedLayer: function(baseLayers) {\n    var urlTemplate = this.get('layer').get('urlTemplate');\n    return _.any(baseLayers.custom(), function(customLayer) {\n      return customLayer.get('urlTemplate') === urlTemplate;\n    });\n  },\n\n  _initBinds: function() {\n    this.bind('change:date change:layerType', this._onChange, this);\n  },\n\n  _onChange: function() {\n    var dateStr = this.get('date');\n    var layerType = this.get('layerType');\n    this.set('layer', new cdb.admin.TileLayer({\n      urlTemplate: _.template(TYPES[layerType].url)({\n        date: dateStr\n      }),\n      attribution: TYPES[layerType].attribution,\n      maxZoom: TYPES[layerType].maxZoom,\n      minZoom: TYPES[layerType].minZoom,\n      name: TYPES[layerType].name + ' ' + dateStr\n    }));\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar moment = (typeof window !== \"undefined\" ? window['moment'] : typeof global !== \"undefined\" ? global['moment'] : null);\nvar DateFieldView = require('../../../edit_fields/date_field/date_field_view');\nvar EditFieldModel = require('../../../edit_fields/edit_field_model');\n\n/**\n * Represents the XYZ tab content.\n */\nmodule.exports = cdb.core.View.extend({\n\n  options: {\n    dateFormat: 'YYYY-MM-DD'\n  },\n\n  events: {\n    'click .js-day': '_onChangeToDay',\n    'click .js-night': '_onChangeToNight'\n  },\n\n  initialize: function() {\n    this.elder('initialize');\n    this.dateModel = new EditFieldModel({\n      value: this.model.get('date'),\n      type: 'date'\n    });\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n\n    this.$el.html(\n      cdb.templates.getTemplate('common/dialogs/add_custom_basemap/nasa/nasa')({\n        layerType: this.model.get('layerType'),\n        initialDateStr: moment(this.dateModel.get('value')).format(this.options.dateFormat)\n      })\n    );\n\n    this._renderDatePicker();\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:layerType', function() {\n      this.dateModel.set('readOnly', this.model.get('layerType') === \"night\");\n      this.render()\n    }, this);\n    this.dateModel.bind('change:value', function() {\n      var date = moment(this.dateModel.get('value')).format(this.options.dateFormat);\n      this.model.set('date', date);\n    }, this);\n    this.add_related_model(this.dateModel);\n  },\n\n  _renderDatePicker: function() {\n    // Date field \n    var dateField = new DateFieldView({\n      model: this.dateModel,\n      showTime: false,\n      showGMT: false\n    });\n    this.addView(dateField);\n    this._$datePicker().append(dateField.render().el);\n\n    // Disabled tooltip\n    if (this.dateModel.get('readOnly')) {\n      this.addView(\n        new cdb.common.TipsyTooltip({\n          el: this._$datePicker(),\n          title: function(e) {\n            return $(this).attr('data-title')\n          }\n        })\n      )\n    }\n  },\n\n  _onChangeToNight: function(ev) {\n    this.model.set('layerType', 'night');\n  },\n\n  _onChangeToDay: function() {\n    this.model.set('layerType', 'day');\n  },\n\n  _$datePicker: function() {\n    return this.$('.js-datePicker');\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\n/**\n * View representing the tabs content of the dialog.\n */\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-tabs button': '_onClickTab'\n  },\n\n  initialize: function() {\n    this.elder('initialize');\n    this._initBinds();\n  },\n\n  render: function() {\n    var $el = $(\n      cdb.templates.getTemplate('common/dialogs/add_custom_basemap/tabs')({\n        model: this.model\n      })\n    );\n    $el.find('.js-tab-content').append(this._createTabContentView().el);\n    this.$el.html($el);\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:currentTab', this.render, this);\n  },\n\n  _createTabContentView: function() {\n    if (this._currentTabView) {\n      this._currentTabView.clean();\n    }\n    this._currentTabView = this.model.activeTabModel().createView();\n    this.addView(this._currentTabView);\n    return this._currentTabView.render();\n  },\n\n  _onClickTab: function(ev) {\n    this.killEvent(ev);\n    var name = $(ev.target).closest('button').data('name');\n    if (name) {\n      this.model.set('currentTab', name);\n    } else {\n      cdb.log.error('tab name was expected but was empty');\n    }\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n/**\n * Represents the TileJSON tab content.\n */\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'keydown .js-url': '_update',\n    'paste .js-url': '_update'\n  },\n\n  initialize: function() {\n    this.elder('initialize');\n    this._lastURL = '';\n  },\n\n  render: function() {\n    this.$el.html(\n      cdb.templates.getTemplate('common/dialogs/add_custom_basemap/tile_json/tile_json')({\n      })\n    );\n\n    return this;\n  },\n\n  _update: function(ev) {\n    ev.stopPropagation();\n    this._debouncedUpdate();\n  },\n\n  _debouncedUpdate: _.debounce(function() {\n    this._disableOkBtn(true);\n    this._indicateIsValidating(true);\n\n    var url = this._urlWithHTTP();\n    if (url === this._lastURL) {\n      // Even if triggered nothing really changed so just update UI and return early\n      this._indicateIsValidating(false);\n      this._updateError();\n      return;\n    }\n\n    this._lastURL = url;\n    this._indicateIsValidating(true);\n    var tileJSON = new cdb.admin.TileJSON({\n      url: url\n    });\n\n    var self = this;\n    tileJSON.fetch({\n      success: function() {\n        if (url === self._lastURL) {\n          self.model.set('layer', tileJSON.newTileLayer());\n          self._disableOkBtn(false);\n          self._indicateIsValidating(false);\n          self._updateError();\n        }\n      },\n      error: function() {\n        if (url === self._lastURL) {\n          self._indicateIsValidating(false);\n          // Note that this text can not be longer, or it will exceed available space of the error label.\n          self._updateError('Invalid URL, please make sure it is correct');\n        }\n      }\n    });\n  }, 150),\n\n  _disableOkBtn: function(disable) {\n    this.$('.ok')[ disable ? 'addClass' : 'removeClass' ]('is-disabled');\n  },\n\n  _updateError: function(msg) {\n    this.$('.js-error').text(msg)[ msg ? 'addClass' : 'removeClass' ]('is-visible');\n  },\n\n  _indicateIsValidating: function(indicate) {\n    if (indicate) {\n      this.$('.js-idle').hide();\n      this.$('.js-validating').show();\n    } else {\n      this.$('.js-validating').hide();\n      this.$('.js-idle').show();\n    }\n  },\n\n  // So don't try to be fetched relatively to current URL path later\n  _urlWithHTTP: function() {\n    var str = this.$('.js-url').val();\n    if (str.indexOf('http://') === -1) {\n      return 'http://' + str;\n    } else {\n      return str;\n    }\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar TileJSONView = require('./tile_json_view');\n\n/**\n * View model for TileJSON tab content.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    name: 'tile_json',\n    label: 'TileJSON',\n    layer: undefined // will be set when valid\n  },\n\n  createView: function() {\n    this.set({\n      layer: undefined\n    });\n    return new TileJSONView({\n      model: this\n    });\n  },\n\n  hasAlreadyAddedLayer: function(baseLayers) {\n    var urlTemplate = this.get('layer').get('urlTemplate');\n    return _.any(baseLayers.custom(), function(customLayer) {\n      return customLayer.get('urlTemplate') === urlTemplate;\n    });\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n/**\n * Model for an individual WMS/WMTS layer.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    state: 'idle', //, saving, saveDone, saveFail\n    layer: undefined // set after saveDone\n  },\n\n  canSave: function(baseLayers) {\n    return !_.any(baseLayers.custom(), function(customLayer) {\n      return customLayer.get('name') === this.get('title');\n    }, this);\n  },\n\n  save: function() {\n    this.set('state', 'saving');\n    this._shouldBeProxied() ? this._createProxiedLayer() : this._newTileLayer();\n  },\n\n  _shouldBeProxied: function() {\n    if (this.get('type') === 'wmts') {\n      var supportedMatrixSets = cdb.admin.WMSService.supportedMatrixSets(this.get('matrix_sets') || []);\n      return supportedMatrixSets.length > 0;\n    }\n    return true;\n  },\n\n  _createProxiedLayer: function() {\n    var self = this;\n    var w = new cdb.admin.WMSService({\n      wms_url: this.url(),\n      title: this.get('title'),\n      name: this.get('name'),\n      layer: this.get('name'),\n      srs: this.get('srs'),\n      bounding_boxes: this.get('llbbox'),\n      type: this.get('type'), // wms/wmts\n      matrix_sets: this.get('matrix_sets')\n    });\n\n    // Event tracking \"WMS layer selected\"\n    cdb.god.trigger('metrics', 'select_wms', {\n      email: window.user_data.email\n    });\n\n    var self = this;\n    w.save({}, {\n      success: function(m) {\n        var tileLayer;\n        try {\n          tileLayer = m.newTileLayer();\n        } catch(e) {\n        }\n        if (tileLayer) {\n          self._setNewTileLayer(tileLayer);\n        } else {\n          self.set('state', 'saveFail');\n        }\n      },\n      error: function() {\n        self.set('state', 'saveFail');\n      }\n    });\n\n    return w;\n  },\n\n  _setNewTileLayer: function(tileLayer) {\n    this.set({\n      state: 'saveDone',\n      tileLayer: tileLayer\n    });\n  },\n\n  _newTileLayer: function() {\n    var tileLayer = cdb.admin.TileLayer.byCustomURL(this._xyzURLTemplate(), false);\n    tileLayer.set({\n      name: this.get('title') || this.get('name'),\n      attribution: this.get('attribution'),\n      bounding_boxes: this.get('llbbox')\n    });\n    this._setNewTileLayer(tileLayer);\n    return tileLayer;\n  },\n\n  _xyzURLTemplate: function() {\n    var urlTemplate = this.get('url_template') || '';\n    // Convert the proxy template variables to XYZ format, http://foo.com/bar/%%(z)s/%%(x)s/%%(y)s.png\"\n    return urlTemplate.replace(/%%\\((\\w)\\)s/g, '{$1}');\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * View for an individual layer item.\n */\nmodule.exports = cdb.core.View.extend({\n\n  tagName: 'li',\n  className: 'List-row',\n\n  events: {\n    'click .js-add': '_onClickAdd'\n  },\n\n  render: function() {\n    this.$el.html(\n      cdb.templates.getTemplate('common/dialogs/add_custom_basemap/wms/layer')({\n        model: this.model,\n        canSave: this.model.canSave(this.options.baseLayers)\n      })\n    );\n    return this;\n  },\n\n  _onClickAdd: function(ev) {\n    this.killEvent(ev);\n    if (this.model.canSave(this.options.baseLayers)) {\n      this.model.save();\n    }\n  }\n\n});\n","var Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar LayerModel = require('./layer_model.js');\n\nmodule.exports = Backbone.Collection.extend({\n\n  model: LayerModel,\n\n  fetch: function(url, callback) {\n    this.url = url;\n\n    var wmsService = new cdb.admin.WMSService({\n      wms_url: url\n    });\n\n    var self = this;\n    wmsService.fetch().always(function() {\n      self.reset(wmsService.get('layers'));\n      self.each(function(model) {\n        model.set('type', wmsService.get('type')); // wms/wmts\n      });\n      callback();\n    });\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar pluralizeStr = require('../../../view_helpers/pluralize_string');\nvar LayerView = require('./layer_view.js');\n\n/**\n * Sub view, to select what layer to use as basemap.\n */\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-back': '_onClickBack'\n  },\n\n  render: function() {\n\n    this.clearSubViews();\n\n    var $el = $(\n      cdb.templates.getTemplate('common/dialogs/add_custom_basemap/wms/select_layer')({\n        searchQuery: this.model.get('searchQuery'),\n        layersFound: this.model.getLayers(),\n        layersAvailableCount: this.model.layersAvailableCount(),\n        pluralizeStr: pluralizeStr\n      })\n    );\n    var $list = $el.find('.js-layers');\n    $list.append.apply($list, this._renderedLayers());\n    this.$el.html($el);\n    return this;\n  },\n\n  _renderedLayers: function() {\n    return this.model.getLayers().map(function(layer) {\n      var view = new LayerView({\n        model: layer,\n        baseLayers: this.model.get('baseLayers')\n      });\n      this.addView(view);\n      return view.render().el;\n    }, this);\n  },\n\n  _onClickBack: function(ev) {\n    this.killEvent(ev);\n    this.model.set('currentView', 'enterURL');\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar WMSView = require('./wms_view.js');\nvar LayersCollection = require('./layers_collection.js');\n\n/**\n * View model for WMS/WMTS tab content.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    name: 'wms',\n    label: 'WMS/WMTS',\n    currentView: 'enterURL', // [fetchingLayers, selectLayer, savingLayer]\n    layersFetched: false,\n    layers: undefined,\n    baseLayers: undefined // expected when instantiated\n  },\n\n  initialize: function() {\n    this.elder('initialize');\n    this.set('layers', new LayersCollection());\n    this._initBinds();\n  },\n\n  createView: function() {\n    this.set({\n      currentView: 'enterURL',\n      layersFetched: false\n    });\n    return new WMSView({\n      model: this\n    });\n  },\n\n  fetchLayers: function(url) {\n    this.set('currentView', 'fetchingLayers');\n    var self = this;\n    this.get('layers').fetch(url, function() {\n      self.set({\n        currentView: self.get('layers').length > 0 ? 'selectLayer' : 'enterURL',\n        layersFetched: true\n      });\n    });\n  },\n\n  layersAvailableCount: function() {\n    return _.difference(\n      this.get('layers').pluck('title'),\n      this.get('baseLayers').pluck('name')\n    ).length;\n  },\n\n  get: function(name) {\n    if (name === 'layer') {\n      return this.get('layers')\n        .find(function(m) {\n          return m.get('state') === 'saveDone';\n        })\n        .get('tileLayer');\n    } else {\n      return cdb.core.Model.prototype.get.apply(this, arguments);\n    }\n  },\n\n  getLayers: function() {\n    if (this.get(\"searchQuery\")) {\n      var regExp = new RegExp(this.get(\"searchQuery\"), 'i');\n      return this.get(\"layers\").filter(function(layer) {\n        return layer.get(\"name\").match(regExp);\n      }, this);\n    } else {\n      return this.get(\"layers\");\n    }\n  },\n\n  hasAlreadyAddedLayer: function() {\n    // Already added layers are disabled to be saved for each layer\n    return false;\n  },\n\n  _initBinds: function() {\n    this.get('layers').bind('change:state', this._onLayerStateChange, this);\n  },\n\n  _onLayerStateChange: function(_, newState) {\n    switch (newState) {\n      case 'saving':\n        this.set('currentView', 'savingLayer');\n        break;\n      case 'saveDone':\n        this.trigger('saveBasemap');\n        break;\n      case 'saveFail':\n      this.set('currentView', 'saveFail');\n        break;\n      default:\n        this.set('currentView', 'selectLayer');\n    }\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar randomQuote = require('../../../view_helpers/random_quote.js');\nvar SelectLayerView = require('./select_layer_view.js');\nvar ViewFactory = require('../../../view_factory.js');\n\n/**\n * Represents the WMS/WMTS tab category.\n * Current state is defined by presence (or lack of) layers\n */\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'keydown .js-search-input': '_onKeyDown',\n    'submit .js-search-form': 'killEvent',\n    'keydown .js-url': '_update',\n    'paste .js-url': '_update',\n    'click .js-fetch-layers': '_onClickFetchLayers',\n    'click .js-clean-search': '_onCleanSearchClick',\n    'click .js-search-link': '_submitSearch'\n  },\n\n  initialize: function() {\n    this.elder('initialize');\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    var view;\n\n    switch (this.model.get('currentView')) {\n      case 'savingLayer':\n        view = ViewFactory.createByTemplate('common/templates/loading', {\n          title: 'Saving layer…',\n          quote: randomQuote()\n        });\n        break;\n      case 'selectLayer':\n        view = new SelectLayerView({\n          model: this.model\n        });\n        break;\n      case 'saveFail':\n        view = ViewFactory.createByTemplate('common/templates/fail', {\n          msg: ''\n        });\n        break;\n      case 'fetchingLayers':\n        view = ViewFactory.createByTemplate('common/templates/loading', {\n          title: 'Fetching layers…',\n          quote: randomQuote()\n        });\n        break;\n      case 'enterURL':\n      default:\n        view = ViewFactory.createByTemplate('common/dialogs/add_custom_basemap/wms/enter_url', {\n          layersFetched: this.model.get('layersFetched'),\n          layers: this.model.get('layers')\n        });\n        break;\n    }\n    this.addView(view);\n    this.$el.append(view.render().el);\n\n    this.$(\".js-search-input\").focus();\n\n    return this;\n  },\n\n  _showCleanSearchButton: function() {\n    this.$('.js-clean-search').show();\n  },\n\n  _hideCleanSearchButton: function() {\n    this.$('.js-clean-search').hide();\n  },\n\n  _initBinds: function() {\n    this.model.bind('change', this.render, this);\n    this.model.bind('change', this._onChangeSearchQuery, this);\n    this.model.get(\"layers\").bind('reset', this.render, this);\n  },\n\n  _update: function(ev) {\n    ev.stopPropagation();\n    this._debouncedUpdate();\n  },\n\n  _debouncedUpdate: _.debounce(function() {\n    this._enableFetchLayersButton(!!this.$('.js-url').val());\n    this.$('.js-error').removeClass('is-visible'); // resets error state when changed\n  }, 100),\n\n  _enableFetchLayersButton: function(enable) {\n    this.$('.js-fetch-layers')[ enable ? 'removeClass' : 'addClass' ]('is-disabled');\n  },\n\n  _onKeyDown: function(ev) {\n    var enterPressed = (ev.keyCode == $.ui.keyCode.ENTER);\n    if (enterPressed) {\n      this.killEvent(ev);\n      this._submitSearch();\n    } \n  },\n\n  _submitSearch: function(ev) {\n    this.killEvent(ev);\n\n    this.model.set(\"searchQuery\", this.$(\".js-search-input\").val());\n  },\n\n  _onChangeSearchQuery: function() {\n\n    var searchQuery = this.model.get(\"searchQuery\");\n\n    if (!searchQuery) {\n      this._hideCleanSearchButton();\n    }\n  \n  },\n\n  _onCleanSearchClick: function(ev) {\n    this.killEvent(ev);\n    this.model.set(\"searchQuery\", \"\");\n  },\n\n  _onClickFetchLayers: function(ev) {\n    this.killEvent(ev);\n    var url = this.$('.js-url').val();\n    if (url) {\n      this.model.fetchLayers(url);\n    }\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar XYZView = require('./xyz_view');\n\n/**\n * View model for XYZ tab content.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    name: 'xyz',\n    label: 'XYZ',\n    tms: false,\n    layer: undefined // will be set when valid\n  },\n\n  createView: function() {\n    return new XYZView({\n      model: this\n    });\n  },\n\n  hasAlreadyAddedLayer: function(baseLayers) {\n    var urlTemplate = this.get('layer').get('urlTemplate');\n    return _.any(baseLayers.custom(), function(customLayer) {\n      return customLayer.get('urlTemplate') === urlTemplate;\n    });\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n/**\n * Represents the XYZ tab content.\n */\nmodule.exports = cdb.core.View.extend({\n\n  className: 'XYZPanel',\n\n  events: {\n    'click .js-tms': '_changeTMS',\n    'keydown .js-url': '_update',\n    'paste .js-url': '_update'\n  },\n\n  initialize: function() {\n    this.elder('initialize');\n    this._lastCallSeq = 0;\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.$el.html(\n      cdb.templates.getTemplate('common/dialogs/add_custom_basemap/xyz/xyz')({\n      })\n    );\n    this._initViews();\n    return this;\n  },\n\n  _initViews: function() {\n    // Add TMS tooltip\n    var tooltip = new cdb.common.TipsyTooltip({\n      el: this.$('.js-tms'),\n      title: function() {\n        return $(this).data('title')\n      }\n    })\n    this.addView(tooltip);\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:tms', this._setTMSCheckbox, this);\n  },\n\n  _update: function(ev) {\n    ev.stopPropagation();\n    this._debouncedUpdate();\n  },\n\n  _changeTMS: function(ev) {\n    this.model.set('tms', !this.model.get('tms'));\n    this._update(ev);\n  },\n\n  _setTMSCheckbox: function(e) {\n    this.$('.js-tms .Checkbox-input')[ this.model.get('tms') ? 'addClass' : 'removeClass' ]('is-checked');\n  },\n\n  _debouncedUpdate: _.debounce(function() {\n    this._disableOkBtn(true);\n    this._indicateIsValidating(true);\n    var layer;\n    var urlErrorMsg;\n\n    var url = this.$('.js-url').val();\n    var tms = this.model.get('tms');\n\n    if (url) {\n      try {\n        layer = cdb.admin.TileLayer.byCustomURL(url, tms);\n      } catch (e) {\n        urlErrorMsg = 'It does not look like a valid XYZ URL';\n      }\n    }\n\n    this.model.set('layer', layer);\n    if (layer) {\n      var self = this;\n      // Make sure only the last call made is the one that defines view change,\n      // avoids laggy responses to indicate wrong state\n      var thisCallSeq = ++this._lastCallSeq;\n      layer.validateTemplateURL({\n        success: function() {\n          if (thisCallSeq === self._lastCallSeq) {\n            self._disableOkBtn(false);\n            self._indicateIsValidating(false);\n            self._updateError();\n          }\n        },\n        error: function() {\n          if (thisCallSeq === self._lastCallSeq) {\n            self._disableOkBtn(false);\n            self._indicateIsValidating(false);\n            // Note that this text can not be longer, or it will exceed available space of the error label.\n            self._updateError(\"We couldn't validate this, if you're sure it contains data click \\\"add basemap\\\"\");\n          }\n        }\n      });\n    } else if (url) {\n      this._indicateIsValidating(false);\n      this._updateError(urlErrorMsg);\n    } else {\n      this._indicateIsValidating(false);\n      this._updateError();\n    }\n  }, 150),\n\n  _setTMS: function(ev) {\n    var $checkbox = $(ev.target).closest('.Checkbox');\n    $checkbox.find('.Checkbox-input').toggleClass('is-checked');\n    this._update(ev);\n  },\n\n  _disableOkBtn: function(disable) {\n    this.$('.ok')[ disable ? 'addClass' : 'removeClass' ]('is-disabled');\n  },\n\n  _updateError: function(msg) {\n    this.$('.js-error').text(msg)[ msg ? 'addClass' : 'removeClass' ]('is-visible');\n  },\n\n  _indicateIsValidating: function(indicate) {\n    if (indicate) {\n      this.$('.js-validating').show();\n    } else {\n      this.$('.js-validating').hide();\n    }\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BaseDialog = require('../../views/base_dialog/view');\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\nmodule.exports = BaseDialog.extend({\n\n  events: function () {\n    return _.extend({}, BaseDialog.prototype.events, {\n      'click .js-ok': '_continue'\n    });\n  },\n\n  initialize: function () {\n    this.elder('initialize');\n    this.template = cdb.templates.getTemplate('common/dialogs/builder_features_warning/template');\n  },\n\n  render_content: function () {\n    return this.template({\n\n    });\n  },\n\n  _continue: function () {\n    this.close();\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar BaseDialog = require('../../views/base_dialog/view');\nvar pluralizeString = require('../../view_helpers/pluralize_string');\nvar randomQuote = require('../../view_helpers/random_quote');\n\n/**\n * Lock/unlock datasets/maps dialog.\n */\nmodule.exports = BaseDialog.extend({\n\n  events: function() {\n    return _.extend({}, BaseDialog.prototype.events, {\n      'click .js-ok': '_ok'\n    });\n  },\n\n  initialize: function() {\n    this.elder('initialize');\n    this.options.template = this.options.template || cdb.templates.getTemplate('common/dialogs/change_lock/templates/dashboard');\n    this.model.bind('change', function() {\n      if (this.model.get('state') === 'ProcessItemsDone') {\n        this.close();\n      } else {\n        this.render();\n      }\n    }, this);\n  },\n\n  /**\n   * @implements cdb.ui.common.Dialog.prototype.render_content\n   */\n  render_content: function() {\n    return this['_render' + this.model.get('state')]();\n  },\n\n  _renderConfirmChangeLock: function() {\n    // An entity can be an User or Organization\n    var itemsCount = this.model.get('items').length;\n    var areLocked = this.model.get('initialLockValue');\n\n    return this.options.template({\n      model: this.model,\n      itemsCount: itemsCount,\n      ownerName: this.options.ownerName,\n      isOwner: this.options.isOwner,\n      thisOrTheseStr: itemsCount === 1 ? 'this' : 'these',\n      itOrThemStr: itemsCount === 1 ? 'it' : 'them',\n      areLocked: areLocked,\n      positiveOrNegativeStr: areLocked ? 'positive' : 'alert',\n      lockOrUnlockStr: areLocked ? 'unlock' : 'lock',\n      contentTypePluralized: pluralizeString(\n        this.model.get('contentType') === 'datasets' ? 'dataset' : 'map', //singular\n        this.model.get('contentType'), // plural\n        itemsCount\n      )\n    });\n  },\n\n  /**\n   * @overrides BaseDialog.prototype._ok\n   */\n  _ok: function(e) {\n    this.killEvent(e);\n    this.model.inverseLock();\n    this.render();\n  },\n\n  _renderProcessingItems: function() {\n    var lockingOrUnlockingStr = this.model.get('initialLockValue') ? 'Unlocking' : 'Locking';\n    return cdb.templates.getTemplate('common/templates/loading')({\n      title: lockingOrUnlockingStr + ' ' + pluralizeString(this.model.get('contentType') === 'datasets' ? 'dataset' : 'map', this.model.get('items').length) + '…',\n      quote: randomQuote()\n    });\n  },\n\n  _renderProcessItemsFail: function() {\n    var lockingOrUnlockingStr = this.model.get('initialLockValue') ? 'unlock' : 'lock';\n    return cdb.templates.getTemplate('common/templates/fail')({\n      msg: 'Failed to ' + lockingOrUnlockingStr + ' all items'\n    });\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar batchProcessItems = require('../../batch_process_items');\n\n/**\n * View model for change lock view.\n * Manages the life cycle states for the change lock view.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    state: 'ConfirmChangeLock',\n    initialLockValue: false,\n    contentType: 'datasets',\n    items: undefined // a Backbone collection\n  },\n\n  initialize: function(attrs) {\n    this.elder('initialize');\n    this.set('items', new Backbone.Collection(attrs.items));\n    if (this.get('items').chain().map(function(item) { return item.get('locked'); }).uniq().value().length > 1) {\n      var errorMsg = 'It is assumed that all items have the same locked state, a user should never be able to ' +\n        'select a mixed item with current UI. If you get an error with this message something is broken';\n      if (window.trackJs && window.trackJs.track) {\n        window.trackJs.track(errorMsg);\n      } else {\n        throw new Error(errorMsg);\n      }\n    }\n\n    this.set('initialLockValue', this.get('items').at(0).get('locked'));\n  },\n\n  inverseLock: function() {\n    this.set('state', 'ProcessingItems');\n\n    batchProcessItems({\n      howManyInParallel: 5,\n      items: this.get('items').toArray(),\n      processItem: this._lockItem.bind(this, !this.get('initialLockValue')),\n      done: this.set.bind(this, 'state', 'ProcessItemsDone'),\n      fail: this.set.bind(this, 'state', 'ProcessItemsFail')\n    });\n  },\n\n  _lockItem: function(newLockedValue, item, callback) {\n    item.save({ locked: newLockedValue })\n      .done(function() {\n        callback();\n      })\n      .fail(function() {\n        callback('something failed');\n      });\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar StartView = require('./start_view');\nvar PrivacyOptions = require('./options_collection');\nvar BaseDialog = require('../../views/base_dialog/view');\nvar randomQuote = require('../../view_helpers/random_quote');\nvar ViewFactory = require('../../view_factory');\nvar ShareView = require('./share/share_view');\n\n/**\n * Change privacy datasets/maps dialog.\n */\nvar ChangePrivacyView = BaseDialog.extend({\n\n  initialize: function() {\n    this.elder('initialize');\n    this._privacyOptions = PrivacyOptions.byVisAndUser(this.options.vis, this.options.user);\n    this._initViews();\n    this._initBinds();\n  },\n\n  /**\n   * @implements cdb.ui.common.Dialog.prototype.render_content\n   */\n  render_content: function() {\n    return this._panes.getActivePane().render().el;\n  },\n\n  ok: function() {\n    var selectedOption = this._privacyOptions.selectedOption();\n    if (!selectedOption.canSave()) {\n      return;\n    }\n\n    var self = this;\n    this._panes.active('saving');\n    selectedOption.saveToVis(this.options.vis, {\n      success: function() {\n        self.close();\n      },\n      error: function() {\n        self._panes.active('saveFail');\n      }\n    });\n  },\n\n  _initViews: function() {\n    this._panes = new cdb.ui.common.TabPane({\n      el: this.el\n    });\n    this.addView(this._panes);\n    this._panes.addTab('start',\n      new StartView({\n        privacyOptions: this._privacyOptions,\n        user: this.options.user,\n        vis: this.options.vis\n      })\n    );\n    this._panes.addTab('saving',\n      ViewFactory.createByTemplate('common/templates/loading', {\n        title: 'Saving privacy…',\n        quote: randomQuote()\n      }).render()\n    );\n    this._panes.addTab('saveFail',\n      ViewFactory.createByTemplate('common/templates/fail', {\n        msg: ''\n      }).render()\n    );\n    this._panes.active('start');\n  },\n\n  _initBinds: function() {\n    this._panes.bind('tabEnabled', this.render, this);\n    this._panes.getPane('start').bind('clickedShare', this._openShareDialog, this);\n  },\n\n  _openShareDialog: function() {\n    var view = new ShareView({\n      clean_on_hide: true,\n      enter_to_confirm: true,\n      user: this.options.user,\n      vis: this.options.vis,\n      ChangePrivacyView: ChangePrivacyView\n    });\n\n    // Order matters, close this dialog before appending the share one, for side-effects to work as expected (body.is-inDialog)\n    this.close();\n    view.appendToBody();\n  }\n});\n\nmodule.exports = ChangePrivacyView;\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n/**\n * Default model for a privacy option.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    privacy: 'PUBLIC',\n    disabled: false,\n    selected: false,\n    password: undefined\n  },\n\n  validate: function(attrs) {\n    if (attrs.disabled && attrs.selected) {\n      return 'Option can not be disabled and selected at the same time';\n    }\n  },\n\n  classNames: function() {\n    return _.chain(['disabled', 'selected'])\n      .map(function(attr) { return !!this.attributes[attr] ? 'is-'+attr : undefined; }, this)\n      .compact().value().join(' ');\n  },\n\n  canSave: function() {\n    return !this.get('disabled');\n  },\n\n  /**\n   * @param vis {Object} instance of cdb.admin.Visualization\n   * @param callbacks {Object}\n   */\n  saveToVis: function(vis, callbacks) {\n    return vis.save(this._attrsToSave(), _.extend({ wait: true }, callbacks));\n  },\n\n  /**\n   * @returns {Object} attrs\n   * @protected\n   */\n  _attrsToSave: function() {\n    return _.pick(this.attributes, 'privacy', 'password');\n  }\n});\n","var Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar OptionModel = require('./option_model');\nvar PasswordOptionModel = require('./password_option_model');\n\n/**\n * type property should match the value given from the API.\n */\nvar ALL_OPTIONS = [{\n  privacy: 'PUBLIC',\n  illustrationType: 'positive',\n  iconFontType: 'unlock',\n  title: 'Public',\n  desc: 'Everyone can view and download it',\n  alwaysEnable: true\n}, {\n  privacy: 'LINK',\n  illustrationType: 'alert',\n  iconFontType: 'unlock',\n  title: 'With link',\n  desc: 'Only the people with the link can view it'\n}, {\n  privacy: 'PASSWORD',\n  illustrationType: 'alert',\n  iconFontType: 'unlockWithEllipsis',\n  title: 'Password protected',\n  desc: 'Only the people with the password can view it'\n}, {\n  privacy: 'PRIVATE',\n  illustrationType: 'negative',\n  iconFontType: 'lock',\n  title: 'Private',\n  desc: 'Only you can access it'\n}];\n\n\n/**\n * Collection that holds the different privacy options.\n */\nmodule.exports = Backbone.Collection.extend({\n\n  model: function(attrs, options) {\n    if (attrs.privacy === 'PASSWORD') {\n      return new PasswordOptionModel(attrs, options);\n    } else {\n      return new OptionModel(attrs, options);\n    }\n  },\n\n  initialize: function() {\n    this.bind('change:selected', this._deselectLastSelected, this)\n  },\n\n  selectedOption: function() {\n    return this.find(function(option) {\n      return option.get('selected');\n    })\n  },\n\n  passwordOption: function() {\n    return this.find(function(option) {\n      return option.get('privacy') === 'PASSWORD';\n    })\n  },\n\n  _deselectLastSelected: function(m, isSelected) {\n    if (isSelected) {\n      this.each(function(option) {\n        if (option !== m) {\n          option.set({selected: false}, {silent: true});\n        }\n      });\n    }\n  }\n\n}, { // Class properties:\n\n  /**\n   * Get a privacy options collection from a Vis model\n   *\n   * Note that since the user's permissions should change very seldom, it's reasonable to assume they will be static for\n   * the collection's lifecycle, so set them on the models attrs when creating the collection.\n   * collection is created.\n   *\n   * @param vis {Object} instance of cdb.admin.Visualization\n   * @param user {Object} instance of cdb.admin.User\n   * @returns {Object} instance of this collection\n   */\n  byVisAndUser: function(vis, user) {\n    var canSelectPremiumOptions = user.get('actions')[ vis.isVisualization() ? 'private_maps' : 'private_tables' ];\n    var currentPrivacy = vis.get('privacy');\n    var availableOptions = vis.privacyOptions();\n\n    return new this(\n      _.chain(ALL_OPTIONS)\n        .filter(function(option) {\n          return _.contains(availableOptions, option.privacy);\n        })\n        .map(function(option) {\n          // Set state that depends on vis and user attrs, they should not vary during the lifecycle of this collection\n          return _.defaults({\n            selected: option.privacy === currentPrivacy,\n            disabled: !(option.alwaysEnable || canSelectPremiumOptions)\n          }, option)\n        })\n        .value()\n    );\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar OptionModel = require('./option_model');\n\n/**\n * View model for the special privacy option representing a password protected map.\n * It handles the logic related to the password that needs to be set for the option.\n */\nvar PasswordOptionModel = OptionModel.extend({\n  \n  initialize: function() {\n    OptionModel.prototype.initialize.apply(this, arguments);\n\n    // Initially a default fake password is set, but if option is selected (like switching option) it's reset\n    this.set('password', PasswordOptionModel.DEFAULT_FAKE_PASSWORD);\n  },\n\n  /**\n   * @override OptionModel.attrsToSave\n   */\n  _attrsToSave: function() {\n    var attrs = OptionModel.prototype._attrsToSave.call(this);\n    \n    if (attrs.password === PasswordOptionModel.DEFAULT_FAKE_PASSWORD) {\n      delete attrs.password;\n    }\n    \n    return attrs;\n  }, \n  \n  canSave: function() {\n    return OptionModel.prototype.canSave.call(this) && !_.isEmpty(this.get('password'));\n  }\n  \n}, {\n  \n  DEFAULT_FAKE_PASSWORD: '!@#!@#'\n  \n});\n\nmodule.exports = PasswordOptionModel;\n","var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar PermissionView = require('./permission_view');\nvar UserDetailsView = require('./user_details_view');\nvar GroupDetailsView = require('./group_details_view');\nvar ViewFactory = require('../../../view_factory');\n\n/**\n * Content view of the share dialog, lists of users to share item with.\n * - model: {Object} the share view model\n * - collection: {cdb.admin.Grantables}\n * - hasSearch: {Boolean}\n */\nmodule.exports = cdb.core.View.extend({\n\n  initialize: function() {\n    _.each(['model', 'collection', 'pagedSearchModel'], function(name) {\n      if (_.isUndefined(this.options[name])) throw new Error(name + ' is required');\n    }, this);\n\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.$el.empty();\n\n    if (!this.options.pagedSearchModel.get('q')) {\n      this._renderOrganizationPermissionView()\n    }\n    this._renderGrantablesViews();\n    return this;\n  },\n\n  _initBinds: function() {\n    this.collection.bind('reset', this.render, this);\n    this.add_related_model(this.collection);\n\n    this.options.pagedSearchModel.on('change:q', this.render, this);\n    this.add_related_model(this.options.pagedSearchModel);\n  },\n\n  _renderGrantablesViews: function() {\n    var dependentVisualizations = this.model.get('vis').tableMetadata().dependentVisualizations();\n    this.collection.each(function(grantable) {\n      this._appendView(\n        new PermissionView({\n          model: grantable.entity,\n          permission: this.model.get('permission'),\n          isWriteAccessTogglerAvailable: this.model.isWriteAccessTogglerAvailable(),\n          detailsView: this._createDetailsView(\n            this._detailsViewOpts.bind(this, dependentVisualizations, grantable.entity),\n            grantable\n          )\n        })\n      )\n    }, this);\n  },\n\n  _renderOrganizationPermissionView: function() {\n    this._appendView(\n      new PermissionView({\n        model: this.model.get('organization'),\n        permission: this.model.get('permission'),\n        isWriteAccessTogglerAvailable: this.model.isWriteAccessTogglerAvailable(),\n        detailsView: ViewFactory.createByTemplate('common/dialogs/change_privacy/share/details', {\n          avatarUrl: false,\n          willRevokeAccess: false,\n          title: 'Default settings for your Organization',\n          desc: 'New users will have this permission',\n          roleLabel: false\n        }, {\n          className: 'ChangePrivacy-shareListItemInfo'\n        })\n      })\n    );\n  },\n\n  _appendView: function(view) {\n    this.$el.append(view.render().el);\n    this.addView(view);\n  },\n\n  _createDetailsView: function(detailsViewOpts, grantable) {\n    var type = grantable.get('type');\n    switch(type) {\n      case 'user':\n        return new UserDetailsView(\n          detailsViewOpts([grantable.id])\n        );\n        break;\n      case 'group':\n        return new GroupDetailsView(\n          detailsViewOpts(\n            grantable.entity.users.chain()\n              .reject(this._isCurrentUser)\n              .pluck('id')\n              .value()\n          )\n        );\n        break;\n      default:\n        cdb.log.error('No details view for grantable model of type ' + type);\n        return new cdb.core.View(detailsViewOpts());\n    }\n  },\n\n  _detailsViewOpts: function(dependentVisualizations, grantableEntity, userIds) {\n    return {\n      className: 'ChangePrivacy-shareListItemInfo',\n      model: grantableEntity,\n      permission: this.model.get('permission'),\n      isUsingVis: _.any(dependentVisualizations, function(vis) {\n        return _.any(userIds, function(userId) {\n          return userId === vis.permission.owner.id;\n        })\n      })\n    };\n  },\n\n  _isCurrentUser: function(user) {\n    return user.id === cdb.config.get('user').id;\n  },\n\n});\n","var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar pluralizeString = require('../../../view_helpers/pluralize_string')\n\nmodule.exports = cdb.core.View.extend({\n\n  initialize: function() {\n    _.each(['permission', 'isUsingVis'], function(name) {\n      if (_.isUndefined(this.options[name])) throw new Error(name + ' is required');\n    }, this);\n  },\n\n  render: function() {\n    this.$el.html(\n      this.getTemplate('common/dialogs/change_privacy/share/details')({\n        willRevokeAccess: this._willRevokeAccess(),\n        avatarUrl: this.model.get('avatar_url'),\n        title: this.model.get('display_name'),\n        desc: this._desc(),\n        roleLabel: false\n      })\n    );\n    return this;\n  },\n\n  _desc: function() {\n    var usersCount = this.model.users.length;\n    var xMembers = pluralizeString.prefixWithCount('member', 'members', usersCount);\n\n    if (this._willRevokeAccess()) {\n      return xMembers + '. ' + pluralizeString(\"Member's\", \"Members'\", usersCount) + ' maps will be affected';\n    } else if (this.options.isUsingVis) {\n      return xMembers + '. ' + pluralizeString('Member is', 'Members are', usersCount) + ' using this dataset';\n    } else {\n      return xMembers;\n    }\n  },\n\n  _willRevokeAccess: function() {\n    return this.options.isUsingVis && !this.options.permission.hasReadAccess(this.model);\n  }\n\n});\n","var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * View for an individual access toggler.\n */\nmodule.exports = cdb.core.View.extend({\n\n  tagName: 'span',\n\n  events: {\n    'mouseover .js-toggler.is-disabled': '_onHoverDisabledToggler',\n    'mouseout .js-toggler': '_closeTooltip',\n    'mouseleave .js-toggler': '_closeTooltip',\n    'change .js-input': '_onChangeInput'\n  },\n\n  initialize: function() {\n    _.each(['model', 'permission', 'hasAccess', 'canChangeAccess', 'toggleAccess', 'label'], function(name) {\n      if (_.isUndefined(this.options[name])) throw new Error(name + ' is required');\n    }, this);\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.$el.html(\n      cdb.templates.getTemplate('common/dialogs/change_privacy/share/permission_toggler')({\n        cid: this.cid,\n        hasAccess: this.options.hasAccess(),\n        canChangeAccess: this.options.canChangeAccess(),\n        label: this.options.label\n      })\n    );\n    return this;\n  },\n\n  _onChangeInput: function() {\n    this.options.toggleAccess();\n  },\n\n  _onHoverDisabledToggler: function(ev) {\n    var aclItem = this.options.permission.findRepresentableAclItem(this.model);\n    if (aclItem && !aclItem.isOwn(this.model)) {\n      this._tooltipView().showTipsy();\n    }\n  },\n\n  _closeTooltip: function() {\n    this._tooltipView().hideTipsy();\n  },\n\n  _tooltipView: function(el) {\n    if (!this._tooltip) {\n      this._tooltip = this._newTooltipView();\n      this.addView(this._tooltip);\n    }\n    return this._tooltip;\n  },\n\n  _newTooltipView: function(el) {\n    return new cdb.common.TipsyTooltip({\n      el: this.$('.js-toggler'),\n      trigger: 'manual',\n      title: this._inheritedAccessTooltipText.bind(this)\n    });\n  },\n\n  _inheritedAccessTooltipText: function() {\n    var aclItem = this.options.permission.findRepresentableAclItem(this.model);\n    var type = aclItem.get('type');\n    switch(type) {\n      case 'group':\n        return 'Access is inherited from group ' + aclItem.get('entity').get('name');\n      case 'org':\n        return 'Access is inherited from organization';\n      default:\n        cdb.log.error('Trying to display inherited access for an unrecognized type ' + type)\n        return ''\n    }\n  }\n\n});\n","var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar PermissionTogglerview = require('./permission_toggler_view');\nvar ViewFactory = require('../../../view_factory');\n\n/**\n * View to change permission for a given model.\n */\nmodule.exports = cdb.core.View.extend({\n\n  className: 'ChangePrivacy-shareListItem',\n\n  initialize: function() {\n    _.each(['model', 'permission', 'isWriteAccessTogglerAvailable', 'detailsView'], function(name) {\n      if (_.isUndefined(this.options[name])) throw new Error(name + ' is required');\n    }, this);\n\n    this._initBinds();\n  },\n\n  _initBinds: function() {\n    this.options.permission.acl.bind('add remove reset change', this.render, this);\n    this.add_related_model(this.options.permission);\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this._renderDetails();\n    this._renderAccessTogglers();\n    return this;\n  },\n\n  _renderDetails: function() {\n    this._renderView(this.options.detailsView);\n  },\n\n  _renderAccessTogglers: function() {\n    var togglers = [\n      this._newReadToggler()\n    ];\n\n    if (this.options.isWriteAccessTogglerAvailable) {\n      togglers.unshift(this._newWriteToggler());\n    }\n\n    this._renderView(ViewFactory.createByList(togglers));\n  },\n\n  _newWriteToggler: function() {\n    var p = this.options.permission;\n    return new PermissionTogglerview({\n      className: 'ChangePrivacy-shareListItemTogglerContainer',\n      model: this.model,\n      permission: p,\n      label: 'Write',\n      hasAccess: p.hasWriteAccess.bind(p, this.model),\n      canChangeAccess: p.canChangeWriteAccess.bind(p, this.model),\n      toggleAccess: this._toggleWrite.bind(this)\n    });\n  },\n\n  _newReadToggler: function() {\n    var p = this.options.permission;\n    return new PermissionTogglerview({\n      model: this.model,\n      permission: p,\n      label: 'Read',\n      hasAccess: p.hasReadAccess.bind(p, this.model),\n      canChangeAccess: p.canChangeReadAccess.bind(p, this.model),\n      toggleAccess: this._toggleRead.bind(this)\n    });\n  },\n\n  _renderView: function(view) {\n    this.addView(view);\n    this.$el.append(view.render().el)\n  },\n\n  _toggleWrite: function() {\n    var p = this.options.permission;\n    if (p.canChangeWriteAccess(this.model)) {\n      if (p.hasWriteAccess(this.model)) {\n        p.revokeWriteAccess(this.model);\n      } else {\n        p.grantWriteAccess(this.model);\n      }\n    }\n  },\n\n  _toggleRead: function() {\n    var p = this.options.permission;\n    if (p.canChangeReadAccess(this.model)) {\n      if (p.hasReadAccess(this.model)) {\n        p.revokeAccess(this.model);\n      } else {\n        p.grantReadAccess(this.model);\n      }\n    }\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n/**\n * View model for a share view modal.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    vis: undefined,\n    permission: undefined,\n    organization: undefined\n  },\n\n  initialize: function(attrs) {\n    if (!attrs.vis) throw new Error('vis is required');\n    if (!attrs.organization) throw new Error('organization is required');\n\n    var vis = this.get('vis');\n    this.set('permission', vis.permission.clone());\n\n    if (!vis.isVisualization()) {\n      var self = this;\n      vis.tableMetadata().fetch({\n        silent: true,\n        success: function() {\n          self.trigger('all');\n        }\n      });\n    }\n  },\n\n  name: function() {\n    return this.get('vis').get('name');\n  },\n\n  isWriteAccessTogglerAvailable: function() {\n    return !this.get('vis').isVisualization();\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar BaseDialog = require('../../../views/base_dialog/view');\nvar randomQuote = require('../../../view_helpers/random_quote');\nvar ViewFactory = require('../../../view_factory');\nvar PagedSearchModel = require('../../../paged_search_model');\nvar PagedSearchView = require('../../../views/paged_search/paged_search_view');\nvar ShareModel = require('./share_model');\nvar GrantablesView = require('./grantables_view');\n\n/**\n * Dialog to share item with other users in organization.\n */\nmodule.exports = BaseDialog.extend({\n\n  events: BaseDialog.extendEvents({\n    'click .js-back': '_openChangePrivacy'\n  }),\n\n  initialize: function() {\n    if (!this.options.ChangePrivacyView) throw new Error('ChangePrivacyView is required');\n    this.user = this.options.user;\n    this.organization = this.user.organization;\n    this.model = new ShareModel({\n      vis: this.options.vis,\n      organization: this.organization\n    });\n    this.elder('initialize');\n    this._initViews();\n    this._initBinds();\n  },\n\n  render: function() {\n    BaseDialog.prototype.render.apply(this, arguments);\n    this.$('.content').addClass('Dialog-content--expanded');\n    return this;\n  },\n\n  // @implements cdb.ui.common.Dialog.prototype.render_content\n  render_content: function() {\n    return [\n      this._htmlNode(\n        cdb.templates.getTemplate('common/dialogs/change_privacy/share/share_header')({\n          name: this.options.vis.get('name')\n        })\n      ),\n      this._grantablesView.render().el,\n      this._htmlNode(cdb.templates.getTemplate('common/dialogs/change_privacy/share/share_footer')())\n    ];\n  },\n\n  // @implements cdb.ui.common.Dialog.prototype.ok\n  ok: function() {\n    var loadingView = ViewFactory.createDialogByTemplate('common/templates/loading', {\n      title: 'Sharing…',\n      quote: randomQuote()\n    });\n    loadingView.appendToBody();\n\n    var permission = this.options.vis.permission;\n    permission.overwriteAcl(this.model.get('permission'));\n    permission.save()\n      .always(function() {\n        loadingView.close();\n      })\n      .fail(function() {\n        var failView = ViewFactory.createDialogByTemplate('common/templates/fail', {\n          msg: ''\n        });\n        failView.appendToBody();\n      })\n      .done(this._openChangePrivacy.bind(this));\n  },\n\n  _initViews: function() {\n    var model = this.model;\n    var grantables = this.organization.grantables;\n    var pagedSearchModel = new PagedSearchModel({\n      per_page: 50,\n      order: 'name',\n    });\n    this._grantablesView = new PagedSearchView({\n      isUsedInDialog: true,\n      pagedSearchModel: pagedSearchModel,\n      collection: grantables,\n      createListView: function() {\n        return new GrantablesView({\n          model: model,\n          collection: grantables,\n          pagedSearchModel: pagedSearchModel\n        })\n      }\n    });\n  },\n\n  _initBinds: function() {\n    this.model.on('all', this._grantablesView.render, this._grantablesView);\n  },\n\n  _htmlNode: function(htmlStr) {\n    return $(htmlStr)[0];\n  },\n\n  _openChangePrivacy: function() {\n    var view = new this.options.ChangePrivacyView({\n      clean_on_hide: true,\n      enter_to_confirm: true,\n      vis: this.options.vis,\n      user: this.user\n    });\n    view.appendToBody();\n    this.close();\n  }\n\n});\n","var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * View for the user details to show in the context of a permission item.\n */\nmodule.exports = cdb.core.View.extend({\n\n  initialize: function() {\n    _.each(['permission', 'isUsingVis'], function(name) {\n      if (_.isUndefined(this.options[name])) throw new Error(name + ' is required');\n    }, this);\n  },\n\n  render: function() {\n    this.$el.html(\n      this.getTemplate('common/dialogs/change_privacy/share/details')({\n        willRevokeAccess: this._willRevokeAccess(),\n        avatarUrl: this.model.get('avatar_url'),\n        title: this.model.get('username'),\n        desc: this._desc(),\n        roleLabel: this.model.get('viewer') ? 'Viewer' : 'Builder'\n      })\n    );\n    return this;\n  },\n\n  _desc: function() {\n    var email = this.model.get('email')\n\n    if (this._willRevokeAccess()) {\n      return email + \". User's maps will be affected\";\n    } else if (this.options.isUsingVis) {\n      return email + \". User is using this dataset\";\n    } else {\n      return email;\n    }\n  },\n\n  _willRevokeAccess: function() {\n    return this.options.isUsingVis && !this.options.permission.hasReadAccess(this.model);\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar pluralizeStr = require('../../view_helpers/pluralize_string');\n\nvar DISABLED_SAVE_CLASS_NAME = 'is-disabled';\nvar SHARED_ENTITIES_SAMPLE_SIZE = 5;\n\n/**\n * View represent the start screen when opening the privacy dialog.\n * Display privacy options and possibly a upgrade or share banner depending on user privileges.\n */\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-option': '_onClickOption',\n    'click .js-share': '_onClickShare',\n    'keyup .js-password-input': '_onKeyUpPasswordInput'\n  },\n\n  initialize: function() {\n    this.elder('initialize');\n    if (!this.options.privacyOptions) throw new Error('privacyOptions is required');\n    if (!this.options.user) throw new Error('user is required');\n    if (!this.options.vis) throw new Error('vis is required');\n    this.template = cdb.templates.getTemplate('common/dialogs/change_privacy/start');\n    this._initBinds();\n  },\n\n  render: function() {\n    // Password might not be available (i.e. for changing privacy of a dataset)\n    var pwdOption = this.options.privacyOptions.passwordOption();\n    var password = pwdOption ? pwdOption.get(\"password\") : '';\n\n    var selectedOption = this.options.privacyOptions.selectedOption();\n    var upgradeUrl = cdb.config.get('upgrade_url');\n    var sharedEntities = this.options.vis.permission.getUsersWithAnyPermission();\n\n    this.$el.html(\n      this.template({\n        vis: this.options.vis,\n        privacyOptions: this.options.privacyOptions,\n        password: password,\n        saveBtnClassNames: selectedOption.canSave() ? '' : DISABLED_SAVE_CLASS_NAME,\n        showUpgradeBanner: upgradeUrl && this.options.privacyOptions.any(function(o) { return !!o.get('disabled'); }),\n        upgradeUrl: upgradeUrl,\n        showTrial: this.options.user.canStartTrial(),\n        showShareBanner: this.options.user.organization,\n        sharedEntitiesCount: sharedEntities.length,\n        personOrPeopleStr: pluralizeStr('person', 'people', sharedEntities.length),\n        sharedEntitiesSampleCount: SHARED_ENTITIES_SAMPLE_SIZE,\n        sharedEntitiesSample: _.take(sharedEntities, SHARED_ENTITIES_SAMPLE_SIZE),\n        sharedWithOrganization: this.options.vis.permission.isSharedWithOrganization()\n      })\n    );\n\n    this.delegateEvents();\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.options.privacyOptions.bind('change:selected change:disabled', this.render, this);\n    this.options.privacyOptions.bind('change:password', this._onChangePassword, this);\n    this.add_related_model(this.options.privacyOptions);\n  },\n\n  _onClickOption: function(ev) {\n    var i = $(ev.target).closest('.js-option').data('index');\n    var option = this.options.privacyOptions.at(i);\n\n    if (!option.get('disabled')) {\n      option.set('selected', true);\n    }\n\n    var pwdOption = this.options.privacyOptions.passwordOption();\n    if (option === pwdOption) {\n      this.$(\".js-password-input\")\n        .val('') // reset any existing input value\n        .focus()\n        .keyup(); // manually trigger a key up event to change password state\n    } else if (pwdOption) { // Password might not be available (i.e. for changing privacy of a dataset)\n      this.$(\".js-password-input\").val(pwdOption.get(\"password\"));\n    }\n  },\n\n  _onChangePassword: function() {\n    this.$('.ok').toggleClass(DISABLED_SAVE_CLASS_NAME, !this.options.privacyOptions.selectedOption().canSave());\n  },\n\n  _onKeyUpPasswordInput: function(ev) {\n    this.options.privacyOptions.passwordOption().set('password', ev.target.value);\n  },\n\n  _onClickShare: function(ev) {\n    this.killEvent(ev);\n    this.trigger('clickedShare');\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar DatasetsView = require('./listing/datasets_view');\nvar ImportsView = require('./listing/imports_view');\n\n/**\n *  Create listing view\n *\n *  It will display all the possibilities to select\n *  any of your current datasets or connect a new dataset.\n *\n */\nmodule.exports = cdb.core.View.extend({\n\n  className: 'CreateDialog-listing CreateDialog-listing--noPaddingTop',\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.createModel = this.options.createModel;\n    this.template = cdb.templates.getTemplate('common/views/create/create_listing');\n\n    // Bug with binding... do not work with the usual one for some reason :(\n    this.createModel.bind('change:listing', this._onChangeListing.bind(this));\n    this.add_related_model(this.createModel);\n    this._onChangeListing();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.$el.html(this.template());\n    this._initViews();\n    return this;\n  },\n\n  _onChangeListing: function() {\n    if (this.listingPane) {\n      this.listingPane.active(this.createModel.get('listing'));\n    }\n  },\n\n  _initViews: function() {\n    // Listing content pane\n    this.listingPane = new cdb.ui.common.TabPane({\n      el: this.$(\".ListingContent\")\n    });\n    this.addView(this.listingPane);\n\n    // Datasets view\n    var datasetsView = new DatasetsView({\n      defaultUrl: this.user.viewUrl().dashboard().datasets(),\n      user: this.user,\n      createModel: this.createModel,\n      routerModel: this.createModel.visFetchModel,\n      collection: this.createModel.collection\n    });\n\n    datasetsView.render();\n    this._addListingPane('datasets', datasetsView);\n\n    // Imports view\n    if (this.user.canCreateDatasets()) {\n      var importsView = new ImportsView({\n        user: this.user,\n        createModel: this.createModel\n      });\n\n      importsView.render();\n      this._addListingPane('import', importsView);\n    }\n  },\n\n  _addListingPane: function(name, view) {\n    this.listingPane.addTab(name, view, {\n      active: this.createModel.get('listing') === name\n    });\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * Manages if upcoming import should guess or not.\n * Expected to be rendered in the footer of a create dialog.\n */\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-toggle': '_toggle'\n  },\n\n  initialize: function() {\n    this.elder('initialize');\n    this.createModel = this.options.createModel;\n    this.template = cdb.templates.getTemplate('common/dialogs/create/footer/guessing_toggler');\n    this._initBinds();\n  },\n\n  render: function() {\n    var htmlStr = '';\n    if (this.createModel.showGuessingToggler()) {\n      htmlStr = this.template({\n        isGuessingEnabled: this.model.get('guessing'),\n        importState: this.createModel.getImportState(),\n        isUploadValid: this.createModel.upload.isValidToUpload(),\n        customHosted: cdb.config.get('cartodb_com_hosted')\n      });\n    }\n    this.$el.html(htmlStr);\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.createModel.bind('change', this.render, this);\n    this.model.bind('change', this.render, this);\n    this.add_related_model(this.createModel);\n  },\n\n  _toggle: function() {\n    var value = !this.model.get('guessing');\n    this.model.set('guessing', value);\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\n/**\n *  Change the privacy of the new dataset.\n *  - If the user can't change the privacy, it will refer to the upgrade page\n *   unless app is the \"open source\" version\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n  events: {\n    'click': '_onClick'\n  },\n\n  initialize: function () {\n    this.user = this.options.user;\n    this.createModel = this.options.createModel;\n    this.template = cdb.templates.getTemplate('common/dialogs/create/footer/privacy_toggler_template');\n    this._initBinds();\n  },\n\n  render: function () {\n    this.clearSubViews();\n    this.$el.empty();\n\n    if (this.createModel.showPrivacyToggler()) {\n      var canChangePrivacy = this.user.canCreatePrivateDatasets();\n      var privacy = this.model.get('privacy');\n      var nexPrivacy = privacy === 'PUBLIC' ? 'PRIVATE' : 'PUBLIC';\n      var icon = privacy === 'PUBLIC' ? 'unlock' : 'lock';\n      var upgradeUrl = cdb.config.get('upgrade_url') || window.upgrade_url;\n      var canUpgrade = !cdb.config.get('cartodb_com_hosted') && !canChangePrivacy && upgradeUrl;\n\n      this.$el.html(\n        this.template({\n          privacy: privacy,\n          isDisabled: !canChangePrivacy,\n          canUpgrade: canUpgrade,\n          nextPrivacy: nexPrivacy,\n          upgradeUrl: upgradeUrl,\n          icon: icon\n        })\n      );\n\n      this._initViews();\n    }\n\n    return this;\n  },\n\n  _initBinds: function () {\n    this.model.bind('change:privacy', this.render, this);\n  },\n\n  _initViews: function () {\n    // Tooltip\n    this.addView(\n      new cdb.common.TipsyTooltip({\n        el: this.$('.js-toggler'),\n        html: true,\n        title: function () {\n          return $(this).attr('data-title');\n        }\n      })\n    );\n  },\n\n  _onClick: function () {\n    if (this.user.canCreatePrivateDatasets()) {\n      var privacy = this.model.get('privacy');\n      this.model.set('privacy', privacy === 'PUBLIC' ? 'PRIVATE' : 'PUBLIC');\n      return;\n    }\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar randomQuote = require('../../../../../common/view_helpers/random_quote');\n\n/*\n *  Content result default view\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-connect': '_onConnectClick'\n  },\n\n  initialize: function() {\n    if (!this.options.defaultUrl) {\n      throw new Error('defaultUrl is required')\n    }\n    this.user = this.options.user;\n    this.routerModel = this.options.routerModel;\n    this.template = cdb.templates.getTemplate(this.options.template);\n\n    this._initBinds();\n  },\n\n  render: function() {\n    var type = this.routerModel.get('content_type');\n\n    this.$el.html(this.template({\n      defaultUrl:     this.options.defaultUrl,\n      page:           this.routerModel.get('page'),\n      tag:            this.routerModel.get('tag'),\n      q:              this.routerModel.get('q'),\n      shared:         this.routerModel.get('shared'),\n      locked:         this.routerModel.get('locked'),\n      library:        this.routerModel.get('library'),\n      quote:          randomQuote(),\n      type:           type,\n      totalItems:     this.collection.size(),\n      totalEntries:   this.collection.total_entries\n    }));\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.routerModel.bind('change', this.render, this);\n    this.collection.bind('reset', this.render, this);\n    this.add_related_model(this.routerModel);\n    this.add_related_model(this.collection);\n  },\n\n  _onConnectClick: function() {\n    this.trigger('connectDataset', this);\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar moment = (typeof window !== \"undefined\" ? window['moment'] : typeof global !== \"undefined\" ? global['moment'] : null);\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\nvar pluralizeString = require('../../../../view_helpers/pluralize_string');\nvar LikesView = require('../../../../views/likes/view');\n\n/**\n * View representing an item in the list under datasets route.\n */\nmodule.exports = cdb.core.View.extend({\n\n  tagName: 'li',\n  className: 'DatasetsList-item DatasetsList-item--selectable',\n\n  events: {\n    'click .js-tag-link': '_onTagClick',\n    'click': '_toggleSelected'\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.routerModel = this.options.createModel.visFetchModel;\n    this.template = cdb.templates.getTemplate('common/views/create/listing/dataset_item');\n    this.table = new cdb.admin.CartoDBTableMetadata(this.model.get('table'));\n\n    this.model.on('change', this.render, this);\n  },\n\n  render: function() {\n    var vis = this.model;\n    var table = this.table;\n    var tags = vis.get('tags') || [];\n    var description = vis.get('description') && Utils.stripHTML(markdown.toHTML(vis.get('description'))) || '';\n\n    var d = {\n      isRaster:                vis.get('kind') === 'raster',\n      geometryType:            table.geomColumnTypes().length > 0 ? table.geomColumnTypes()[0] : '',\n      title:                   vis.get('name'),\n      isOwner:                 vis.permission.isOwner(this.user),\n      owner:                   vis.permission.owner.renderData(this.user),\n      showPermissionIndicator: !vis.permission.hasWriteAccess(this.user),\n      description:             description,\n      privacy:                 vis.get('privacy').toLowerCase(),\n      likes:                   vis.get('likes') || 0,\n      timeDiff:                moment(vis.get('updated_at')).fromNow(),\n      tags:                    tags,\n      tagsCount:               tags.length,\n      maxTagsToShow:           3,\n      rowCount:                undefined,\n      datasetSize:             undefined,\n      syncStatus:              undefined,\n      syncRanAt:               undefined\n    };\n\n    var rowCount = table.get('row_count');\n    if (rowCount >= 0) {\n      d.rowCount = ( rowCount < 10000 ? Utils.formatNumber(rowCount) : Utils.readizableNumber(rowCount) );\n      d.pluralizedRows = pluralizeString('Row', rowCount);\n    }\n\n    var datasetSize = table.get('size');\n    if (datasetSize >= 0) {\n      d.datasetSize = Utils.readablizeBytes(datasetSize, true);\n    }\n\n    if (!_.isEmpty(vis.get(\"synchronization\"))) {\n      d.syncRanAt = moment(vis.get(\"synchronization\").ran_at || new Date()).fromNow();\n      d.syncStatus = vis.get(\"synchronization\").state;\n    }\n\n    this.$el.html(this.template(d));\n\n    this._renderLikesIndicator();\n    this._renderTooltips();\n\n    // Item selected?\n    this.$el[ vis.get('selected') ? 'addClass' : 'removeClass' ]('is--selected');\n\n    return this;\n  },\n\n  _renderLikesIndicator: function() {\n    var view = new LikesView({\n      model: this.model.like\n    });\n    this.$('.js-likes-indicator').replaceWith(view.render().el);\n    this.addView(view);\n  },\n\n  _renderTooltips: function() {\n    if (!_.isEmpty(this.model.get(\"synchronization\"))) {\n      this.addView(\n        new cdb.common.TipsyTooltip({\n          el: this.$('.DatasetsList-itemStatus'),\n          title: function(e) {\n            return $(this).attr('data-title')\n          }\n        })\n      )\n    }\n  },\n\n  _onTagClick: function(ev) {\n    var tag = $(ev.target).val();\n\n    if (tag) {\n      this.routerModel.set('tag', tag);\n    }\n  },\n\n  _toggleSelected: function(ev) {\n    // Let links use default behaviour\n    if (ev.target.tagName !== 'A') {\n      this.killEvent(ev);\n      if (this.options.createModel.canSelect(this.model)) {\n        this.model.set('selected', !this.model.get('selected'));\n      }\n    }\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar PaginationModel = require('../../../../views/pagination/model');\nvar PaginationView = require('../../../../views/pagination/view');\n\n\n/**\n * Responsible for the datasets paginator\n *  ___________________________________________________________________________\n * |                                                                           |\n * |                                             Page 2 of 42 [1] 2 [3][4][5]  |\n * |___________________________________________________________________________|\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'DatasetsPaginator',\n\n  initialize: function() {\n    this.routerModel = this.options.routerModel;\n    this.collection = this.options.collection;\n    this.model = new PaginationModel({\n      current_page: this.routerModel.get('page')\n    });\n\n    this._initBinds();\n    this._initViews();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.$el.append(this.paginationView.render().el);\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change', this.render, this);\n    this.model.bind('change:current_page', function() {\n      this.routerModel.set('page', this.model.get('current_page'));\n    }, this);\n    this.collection.bind('reset', this._updatePaginationModelByCollection, this);\n    this.routerModel.bind('change:page', this._updatePaginationModelByRouterModel, this);\n\n    this.add_related_model(this.routerModel);\n    this.add_related_model(this.collection);\n    this.add_related_model(this.model);\n  },\n\n  _initViews: function() {\n    this.paginationView = new PaginationView({\n      model: this.model\n    });\n    this.addView(this.paginationView);\n  },\n\n  _updatePaginationModelByCollection: function() {\n    this.model.set({\n      per_page:    this.collection.options.get('per_page'),\n      total_count: this.collection.total_entries\n    });\n  },\n\n  _updatePaginationModelByRouterModel: function() {\n    this.model.set('current_page', this.routerModel.get('page'));\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar DatasetItem = require('./dataset_item_view');\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\nvar UploadConfig = require('../../../../background_polling/models/upload_config');\nvar pluralizeString = require('../../../../view_helpers/pluralize_string');\n\n/**\n *  Remote dataset item view\n *\n */\n\nmodule.exports = DatasetItem.extend({\n\n  tagName: 'li',\n  className: 'DatasetsList-item',\n\n  events: {\n    'click .js-tag-link': '_onTagClick',\n    'click': '_toggleSelected'\n  },\n\n  initialize: function() {\n    this.elder('initialize');\n    this.template = cdb.templates.getTemplate('common/views/create/listing/remote_dataset_item');\n    this.table = new cdb.admin.CartoDBTableMetadata(this.model.get('external_source'));\n  },\n\n  render: function() {\n    var vis = this.model;\n    var table = this.table;\n    var tags = vis.get('tags') || [];\n    var description = vis.get('description') && Utils.stripHTML(markdown.toHTML(vis.get('description'))) || '';\n    var source = vis.get('source') && markdown.toHTML(vis.get('source')) || '';\n\n    var d = {\n      isRaster:                vis.get('kind') === 'raster',\n      geometryType:            table.geomColumnTypes().length > 0 ? table.geomColumnTypes()[0] : '',\n      title:                   vis.get('display_name') || vis.get('name'),\n      source:                  source,\n      description:             description,\n      timeDiff:                moment(vis.get('updated_at')).fromNow(),\n      tags:                    tags,\n      tagsCount:               tags.length,\n      routerModel:             this.routerModel,\n      maxTagsToShow:           3,\n      canImportDataset:        this._canImportDataset(),\n      rowCount:                undefined,\n      datasetSize:             undefined\n    };\n\n    var rowCount = table.get('row_count');\n    if (rowCount >= 0) {\n      d.rowCount = ( rowCount < 10000 ? Utils.formatNumber(rowCount) : Utils.readizableNumber(rowCount) );\n      d.pluralizedRows = pluralizeString('Row', rowCount);\n    }\n\n    var datasetSize = table.get('size');\n    if (datasetSize >= 0) {\n      d.datasetSize = Utils.readablizeBytes(\n        datasetSize,\n        datasetSize.toString().length > 9 ? false : true\n      );\n    }\n\n    this.$el.html(this.template(d));\n    this._setItemClasses();\n    this._renderTooltips();\n\n    return this;\n  },\n\n  _setItemClasses: function() {\n    // Item selected?\n    this.$el[ this.model.get('selected') ? 'addClass' : 'removeClass' ]('is--selected');\n    // Check if it is selectable\n    this.$el[ this._canImportDataset() ? 'addClass' : 'removeClass' ]('DatasetsList-item--selectable');\n    // Check if it is importable\n    this.$el[ this._canImportDataset() ? 'removeClass' : 'addClass' ]('DatasetsList-item--banned');\n  },\n\n  _renderTooltips: function() {\n    this.addView(\n      new cdb.common.TipsyTooltip({\n        el: this.$('.DatasetsList-itemStatus'),\n        title: function(e) {\n          return $(this).attr('data-title')\n        }\n      })\n    )\n  },\n\n  _onTagClick: function(ev) {\n    if (ev) {\n      this.killEvent(ev);\n    }\n\n    var tag = $(ev.target).val();\n\n    if (tag) {\n      this.routerModel.set({\n        tag: tag,\n        library: true\n      });\n    }\n  },\n\n  _canImportDataset: function() {\n    var table_size = this.table.get('size') || 0;\n    return (\n        this.user.get('remaining_byte_quota') * UploadConfig.fileTimesBigger >= table_size &&\n        this.user.get('limits')['import_file_size'] > table_size\n      );\n  },\n\n  _toggleSelected: function(ev) {\n    // Let links use default behaviour\n    if (ev.target.tagName !== 'A') {\n      this.killEvent(ev);\n      if (this._canImportDataset() && this.options.createModel.canSelect(this.model)) {\n        this.model.set('selected', !this.model.get('selected'));\n      }\n    }\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar DatasetsItem = require('./datasets/dataset_item_view');\nvar RemoteDatasetsItem = require('./datasets/remote_dataset_item_view');\n\n/**\n * View representing the list of items\n */\nmodule.exports = cdb.core.View.extend({\n\n  tagName: 'ul',\n\n  className: 'DatasetsList',\n\n  events: {},\n\n  _ITEMS: {\n    'remotes':  RemoteDatasetsItem,\n    'datasets': DatasetsItem\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.createModel = this.options.createModel;\n    this.collection.bind('reset', this.render, this);\n    this.add_related_model(this.collection);\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.collection.each(this._addItem, this);\n    return this;\n  },\n\n  _addItem: function(m, i) {\n    var type = m.get('type') === \"remote\" ? 'remotes' : 'datasets';\n\n    var item = new this._ITEMS[type]({\n      model:       m,\n      createModel: this.createModel,\n      user:        this.user\n    });\n\n    this.addView(item);\n    this.$el.append(item.render().el);\n  },\n\n  show: function() {\n    this.$el.removeClass('is-hidden');\n  },\n\n  hide: function() {\n    this.$el.addClass('is-hidden');\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar DatasetsList = require('./datasets_list_view');\nvar ContentResult = require('./datasets/content_result_view');\nvar DatasetsPaginator = require('./datasets/datasets_paginator_view');\n\n/**\n *  Datasets list view\n *\n *  Show datasets view to select them for\n *  creating a map or importing a dataset\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.createModel = this.options.createModel;\n    this.routerModel = this.options.routerModel;\n\n    this._initViews();\n    this._initBindings();\n  },\n\n  _initBindings: function() {\n    this.routerModel.bind('change', this._onRouterChange, this);\n    this.collection.bind('loading', this._onDataLoading, this);\n    this.collection.bind('reset', this._onDataFetched, this);\n    this.collection.bind('error', function(e) {\n      // Old requests can be stopped, so aborted requests are not\n      // considered as an error\n      if (!e || (e && e.statusText !== \"abort\")) {\n        this._onDataError()\n      }\n    }, this);\n    this.add_related_model(this.routerModel);\n    this.add_related_model(this.createModel);\n    this.add_related_model(this.collection);\n  },\n\n  _initViews: function() {\n    this.controlledViews = {};  // All available views\n    this.enabledViews = [];     // Visible views\n\n    var noDatasetsView = new ContentResult({\n      className:  'ContentResult no-datasets',\n      user: this.user,\n      defaultUrl: this.options.defaultUrl,\n      routerModel: this.routerModel,\n      collection: this.collection,\n      template: 'common/views/create/listing/content_no_datasets'\n    });\n    noDatasetsView.bind('connectDataset', function() {\n      if (this.user.canCreateDatasets()) {\n        this.createModel.set('listing', 'import');\n      }\n    }, this);\n    noDatasetsView.render().hide();\n    this.controlledViews.no_datasets = noDatasetsView;\n    this.$el.append(noDatasetsView.el);\n    this.addView(noDatasetsView);\n\n    var listView = new DatasetsList({\n      user:         this.user,\n      createModel:  this.createModel,\n      routerModel:  this.routerModel,\n      collection:   this.collection\n    });\n    this.controlledViews.list = listView;\n    this.$el.append(listView.render().el);\n    this.addView(listView);\n\n    var noResultsView = new ContentResult({\n      defaultUrl: this.options.defaultUrl,\n      routerModel: this.routerModel,\n      collection: this.collection,\n      template: 'common/views/create/listing/datasets_no_result'\n    });\n    noResultsView.render().hide();\n    this.controlledViews.no_results = noResultsView;\n    this.$el.append(noResultsView.el);\n    this.addView(noResultsView);\n\n    var errorView = new ContentResult({\n      defaultUrl: this.options.defaultUrl,\n      routerModel: this.routerModel,\n      collection: this.collection,\n      template: 'common/views/create/listing/datasets_error'\n    });\n    errorView.render().hide();\n    this.controlledViews.error = errorView;\n    this.$el.append(errorView.el);\n    this.addView(errorView);\n\n    var mainLoaderView = new ContentResult({\n      defaultUrl: this.options.defaultUrl,\n      routerModel: this.routerModel,\n      collection: this.collection,\n      template: 'common/views/create/listing/datasets_loader'\n    });\n\n    this.controlledViews.main_loader = mainLoaderView;\n    this.$el.append(mainLoaderView.render().el);\n    this.addView(mainLoaderView);\n\n    var datasetsPaginator = new DatasetsPaginator({\n      routerModel: this.routerModel,\n      collection: this.collection\n    });\n\n    this.controlledViews.content_footer = datasetsPaginator;\n    this.$el.append(datasetsPaginator.render().el);\n    this.addView(datasetsPaginator);\n  },\n\n  _onRouterChange: function() {\n    this._hideBlocks();\n    this._showBlocks([ 'main_loader' ]);\n  },\n\n  /**\n   * Arguments may vary, depending on if it's the collection or a model that triggers the event callback.\n   * @private\n   */\n  _onDataFetched: function() {\n    var activeViews = [ 'content_footer' ];\n    var tag = this.routerModel.get('tag');\n    var q = this.routerModel.get('q');\n    var shared = this.routerModel.get('shared');\n    var locked = this.routerModel.get('locked');\n    var library = this.routerModel.get('library');\n\n    if (library && this.collection.total_user_entries === 0) {\n      activeViews.push('no_datasets');\n    }\n\n    if (this.collection.size() === 0) {\n      if (!tag && !q && shared === \"no\" && !locked) {\n        if (!library) {\n          this._goToLibrary();\n          return;\n        } else {\n          activeViews.push('no_results');\n        }\n      } else {\n        activeViews.push('no_results');\n      }\n    } else {\n      activeViews.push('list');\n    }\n\n    this._hideBlocks();\n    this._showBlocks(activeViews);\n  },\n\n  _onDataLoading: function() {\n    this._hideBlocks();\n    this._showBlocks([ 'main_loader' ]);\n  },\n\n  _onDataError: function(e) {\n    this._hideBlocks();\n    this._showBlocks([ 'error' ]);\n  },\n\n  _showBlocks: function(views) {\n    var self = this;\n    if (views) {\n      _.each(views, function(v){\n        if (self.controlledViews[v]) {\n          self.controlledViews[v].show();\n          self.enabledViews.push(v);\n        }\n      })\n    } else {\n      self.enabledViews = [];\n      _.each(this.controlledViews, function(v){\n        v.show();\n        self.enabledViews.push(v);\n      })\n    }\n  },\n\n  _goToLibrary: function() {\n    this.routerModel.set({\n      shared: 'no',\n      library: true,\n      page: 1\n    });\n  },\n\n  _hideBlocks: function(views) {\n    var self = this;\n    if (views) {\n      _.each(views, function(v){\n        if (self.controlledViews[v]) {\n          self.controlledViews[v].hide();\n          self.enabledViews = _.without(self.enabledViews, v);\n        }\n      })\n    } else {\n      _.each(this.controlledViews, function(v){\n        v.hide();\n      });\n      self.enabledViews = [];\n    }\n  },\n\n  _isBlockEnabled: function(name) {\n    if (name) {\n      return _.contains(this.enabledViews, name);\n    }\n    return false\n  }\n\n});\n","var ImportService = require('./imports/service_import/import_service_view');\nvar ImportTwitter = require('./imports/twitter_import/import_twitter_view');\nvar ImportDataView = require('./imports/import_data_view');\nvar ImportArcGISView = require('./imports/import_arcgis_view');\n\n/**\n * Attributes:\n *\n *  className: import pane class view\n *  enabled: function that takes cdb.config and returns whether the service is enabled\n *  fallbackClassName: ...\n *  name: local name\n *  title: text for tab link\n *  options:\n *    - service:\n *    - fileExtensions:\n *    - showAvailableFormats:\n *    - acceptSync:\n *    - fileAttrs:\n *\n */\n\nmodule.exports = {\n  File: {\n    className: ImportDataView,\n    enabled: function (config, userData) { return true; },\n    name: 'file',\n    title: 'Data file',\n    options: {\n      type: 'url',\n      fileEnabled: true,\n      acceptSync: true\n    }\n  },\n  GDrive:   {\n    className: ImportService,\n    enabled: function (config, userData) { return !!config.get('oauth_gdrive'); },\n    name: 'gdrive',\n    title: 'Google Drive',\n    options: {\n      service: 'gdrive',\n      fileExtensions: ['Google SpreadSheet', 'CSV'],\n      showAvailableFormats: false,\n      acceptSync: true,\n      fileAttrs: {\n        ext: true,\n        title: 'filename',\n        description: {\n          content: [{\n            name: 'size',\n            format: 'size',\n            key: true\n          }]\n        }\n      }\n    }\n  },\n  Dropbox: {\n    className: ImportService,\n    enabled: function (config, userData) { return !!config.get('oauth_dropbox'); },\n    name: 'dropbox',\n    title: 'Dropbox',\n    options: {\n      service: 'dropbox',\n      fileExtensions: ['CSV', 'XLS'],\n      showAvailableFormats: false,\n      acceptSync: true,\n      fileAttrs: {\n        ext: true,\n        title: 'filename',\n        description: {\n          content: [\n            {\n              name: 'id',\n              format: ''\n            },\n            {\n              name: 'size',\n              format: 'size',\n              key: true\n            }\n          ],\n          separator: '-'\n        }\n      }\n    }\n  },\n  Box: {\n    className: ImportService,\n    enabled: function (config, userData) { return !!config.get('oauth_box'); },\n    name: 'box',\n    title: 'Box',\n    fallback: 'common/views/create/listing/import_box_fallback',\n    options: {\n      service: 'box',\n      fileExtensions: ['CSV', 'XLS'],\n      showAvailableFormats: false,\n      acceptSync: true,\n      fileAttrs: {\n        ext: true,\n        title: 'filename',\n        description: {\n          content: [\n            {\n              name: 'size',\n              format: 'size',\n              key: true\n            }\n          ],\n          separator: '-'\n        }\n      }\n    }\n  },\n  Twitter: {\n    className: ImportTwitter,\n    enabled: function (config, userData) { return userData.twitter.enabled && !!config.get('datasource_search_twitter'); },\n    fallback: 'common/views/create/listing/import_twitter_fallback',\n    name: 'twitter',\n    title: 'Twitter'\n  },\n  Mailchimp: {\n    className: ImportService,\n    enabled: function (config, userData) { return userData.mailchimp.enabled && !!config.get('oauth_mailchimp'); },\n    fallback: 'common/views/create/listing/import_mailchimp_fallback',\n    name: 'mailchimp',\n    title: 'MailChimp',\n    options: {\n      service: 'mailchimp',\n      fileExtensions: [],\n      acceptSync: true,\n      showAvailableFormats: false,\n      headerTemplate: 'common/views/create/listing/import_types/data_header_mailchimp',\n      fileAttrs: {\n        ext: true,\n        title: 'filename',\n        description: {\n          content: [{\n            name: 'member_count',\n            format: 'number',\n            key: true\n          }],\n          itemName: 'member',\n          separator: ''\n        }\n      }\n    }\n  },\n  // Instagram: {\n  //   className: ImportService,\n  //   fallback: 'common/views/create/listing/import_instagram_fallback',\n  //   name: 'instagram',\n  //   title: 'Instagram',\n  //   options: {\n  //     service: 'instagram',\n  //     fileExtensions: [],\n  //     acceptSync: false,\n  //     showAvailableFormats: false,\n  //     fileAttrs: {\n  //       ext: false,\n  //       title: 'title'\n  //     }\n  //   }\n  // },\n  Arcgis: {\n    className: ImportArcGISView,\n    enabled: function (config, userData) { return config.get('arcgis_enabled'); },\n    fallback: 'common/views/create/listing/import_arcgis_fallback',\n    name: 'arcgis',\n    title: 'ArcGIS Server&trade;'\n  },\n  Salesforce: {\n    className: ImportDataView,\n    enabled: function (config, userData) { return config.get('salesforce_enabled'); },\n    fallback: 'common/views/create/listing/import_salesforce_fallback',\n    name: 'salesforce',\n    title: 'Salesforce',\n    options: {\n      type: 'service',\n      service_name: 'salesforce',\n      acceptSync: true,\n      formTemplate: 'common/views/create/listing/import_types/data_form_salesforce',\n      headerTemplate: 'common/views/create/listing/import_types/data_header_salesforce'\n    }\n  }\n};\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\n\n/**\n *  Form view for url import for example\n *\n *  - It accepts an url\n *  - It checks if it is valid\n *  - It could have a file option\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  options: {\n    template: '',\n    fileEnabled: false\n  },\n\n  events: {\n    'keyup .js-textInput': '_onTextChanged',\n    'submit .js-form': '_onSubmitForm'\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.template = cdb.templates.getTemplate(this.options.template || 'common/views/create/listing/import_types/data_form');\n    this._initBinds();\n    this._checkVisibility();\n  },\n\n  render: function() {\n    this.$el.html(\n      this.template(this.options)\n    )\n    this._initViews();\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:state', this._checkVisibility, this);\n  },\n\n  _initViews: function() {\n    if (this.options.fileEnabled) {\n      var self = this;\n      this.$('.js-fileInput').bind('change', function(e) {\n        if (this.files && this.files.length > 0) {\n          self._onFileChanged(this.files);\n        }\n        this.value = \"\";\n      });\n\n      this._initDropzone();\n    }\n  },\n\n  _initDropzone: function() {\n    var el = $('html')[0]; // :(\n    var self = this;\n\n    this.dragster = new Dragster(el);\n\n    $(el).bind(\"dragster:enter\", function (e) {\n      self._showDropzone();\n    });\n\n    $(el).bind(\"dragster:leave\", function (e) {\n      self._hideDropzone();\n    });\n\n    if (el.dropzone) { // avoid loading the dropzone twice\n      return;\n    }\n\n    this.dropzone = new Dropzone(el, {\n      url: ':)',\n      autoProcessQueue: false,\n      previewsContainer: false\n    });\n\n    this.dropzone.on('dragover', function() {\n      self._showDropzone();\n    });\n\n    this.dropzone.on(\"drop\", function (ev) {\n      var files = ev.dataTransfer.files;\n      self._onFileChanged(files);\n      self._hideDropzone();\n    });\n  },\n\n  _destroyDropzone: function() {\n    var el = $('html')[0]; // :(\n\n    if (this.dragster) {\n      this.dragster.removeListeners();\n      this.dragster.reset();\n      $(el).unbind('dragster:enter dragster:leave');\n    }\n\n    if (this.dropzone) {\n      this.dropzone.destroy();\n    }\n  },\n\n  _setValidFileExtensions: function(list) {\n    return RegExp(\"(\\.|\\/)(\" + list.join('|') + \")$\", \"i\");\n  },\n\n  _onTextChanged: function() {\n    var value = this.$('.js-textInput').val();\n    if (!value) {\n      this._hideTextError();\n    }\n  },\n\n  _onFileChanged: function(files) {\n    this.trigger('fileSelected', this);\n\n    if (files && files.length === 1) {\n      files = files[0];\n    }\n\n    this.model.set({\n      type: 'file',\n      value: files\n    });\n\n    if (this.model.get('state') !== \"error\") {\n      this._hideFileError();\n      this.model.set('state', 'selected');\n    } else {\n      this._showFileError();\n    }\n  },\n\n  _showTextError: function() {\n    this.$('.Form-inputError').addClass('is-visible');\n  },\n\n  _hideTextError: function() {\n    this.$('.Form-inputError').removeClass('is-visible');\n  },\n\n  _showDropzone: function() {\n    this.$('.Form-upload').addClass('is-dropping');\n    this._hideFileError();\n  },\n\n  _hideDropzone: function() {\n    this.$('.Form-upload').removeClass('is-dropping');\n  },\n\n  _showFileError: function() {\n    if (this.model.get('state') === \"error\") {\n      this.$('.js-fileError')\n        .text(this.model.get('get_error_text').what_about)\n        .show();\n      this.$('.js-fileLabel').hide();\n      this.$('.js-fileButton').addClass('Button--negative');\n    }\n  },\n\n  _hideFileError: function() {\n    this.$('.js-fileError').hide();\n    this.$('.js-fileLabel').show();\n    this.$('.js-fileButton').removeClass('Button--negative');\n  },\n\n  _onSubmitForm: function(e) {\n    if (e) this.killEvent(e);\n\n    // URL submit\n    var value = this.$('.js-textInput').val();\n\n    if (!value) {\n      this._hideTextError();\n      return;\n    }\n\n    // Change file attributes :S\n    this.trigger('urlSelected', this);\n\n    // Change model\n    var importType = this.model.get('service_name') ? 'service' : 'url';\n    this.model.set({\n      type: importType,\n      value: value,\n      service_item_id: value,\n      state: 'idle'\n    });\n\n    if (this.model.get('state') !== \"error\") {\n      // Remove errors\n      this._hideFileError();\n      this._hideTextError();\n      this.model.set('state', 'selected');\n    } else {\n      this._showTextError();\n    }\n  },\n\n  _checkVisibility: function() {\n    var state = this.model.get('state');\n    this[ state !== \"selected\" ? 'show' : 'hide' ]()\n  },\n\n  clean: function() {\n    this._destroyDropzone();\n    this.$('.js-fileInput').unbind('change');\n    this.elder('clean');\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n *  Data header view\n *\n *  - It will change when upload state changes\n *  - Possibility to change state with a header button\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-back': '_goToStart'\n  },\n\n  options: {\n    fileEnabled: false,\n    acceptSync: false\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.template = cdb.templates.getTemplate(this.options.template || 'common/views/create/listing/import_types/data_header');\n    this._initBinds();\n    this._checkVisibility();\n  },\n\n  render: function() {\n    var acceptSync = this.options.acceptSync && this.user.get('actions') && this.user.get('actions').sync_tables && this.model.get('type') !== \"file\"; \n    \n    this.$el.html(\n      this.template({\n        type: this.model.get('type'),\n        fileEnabled: this.options.fileEnabled,\n        acceptSync: acceptSync,\n        state: this.model.get('state')\n      })\n    );\n    this._checkVisibility();\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:state', this.render, this);\n  },\n\n  _checkVisibility: function() {\n    this.show()\n  },\n\n  _goToStart: function() {\n    this.model.set('state', 'idle');\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\nvar SelectedDataset = require('./import_selected_dataset_view');\n\n/**\n *  Selected ArcGIS dataset\n *\n *  - Displays the result when an ArcGIS url/dataset is selected, no matter the type.\n *  - It will show available sync options if user can and the url is an ArcGIS layer.\n *  - Upgrade link for people who don't have sync permissions.\n *\n */\n\nmodule.exports = SelectedDataset.extend({\n\n  render: function() {\n    var title = this.options.fileAttrs.title && this.model.get('value')[this.options.fileAttrs.title] || this.model.get('value');\n    var description = this._genDescription();\n    var ext = this.options.fileAttrs.ext ? Utils.getFileExtension(title) : '' ;\n\n    if (this.options.fileAttrs.ext) {\n      title = title && title.replace('.' + ext, '');\n    }\n\n    var upgradeUrl = window.upgrade_url;\n    var userCanSync = this.user.get('actions') && this.user.get('actions').sync_tables;\n    var customInstall = cdb.config.get('cartodb_com_hosted');\n\n    this.$el.html(\n      this.template({\n        title: title,\n        description: description,\n        ext: ext,\n        interval: this.model.get('interval'),\n        importCanSync: this.options.acceptSync && this._isArcGISLayer(title),\n        userCanSync: userCanSync,\n        showTrial: this.user.canStartTrial(),\n        showUpgrade: !userCanSync && !customInstall && upgradeUrl && !this.user.isInsideOrg(),\n        upgradeUrl: upgradeUrl\n      })\n    );\n    return this;\n  },\n\n  _isArcGISLayer: function(url) {\n    return url.search(/([0-9]+\\/|[0-9]+)/) !== -1\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar FormView = require('./data_import/data_form_view');\nvar HeaderView = require('./data_import/data_header_view');\nvar SelectedDataset = require('./import_arcgis_selected_dataset_view');\nvar ImportDataView = require('./import_data_view');\n\n/**\n *  Import ArcGIS panel\n *\n *  - It only accepts an url, and it could be a map or a layer.\n *\n */\n\nmodule.exports = ImportDataView.extend({\n\n  options: {\n    fileExtensions: [],\n    type: 'service',\n    service: 'arcgis',\n    acceptSync: true,\n    fileEnabled: false,\n    fileAttrs: {\n      ext: false,\n      title: '',\n      description: ''\n    }\n  },\n\n  _initViews: function() {\n    // Data header\n    var headerView = new HeaderView({\n      el: this.$('.ImportPanel-header'),\n      model: this.model,\n      user: this.user,\n      collection: this.collection,\n      fileEnabled: this.options.fileEnabled,\n      acceptSync: this.options.acceptSync,\n      template: 'common/views/create/listing/import_types/data_header_arcgis'\n    });\n    headerView.render();\n    this.addView(headerView);\n\n    // Dataset selected\n    var selected = new SelectedDataset({\n      el: this.$('.DatasetSelected'),\n      user: this.user,\n      model: this.model,\n      acceptSync: this.options.acceptSync,\n      fileAttrs: this.options.fileAttrs\n    });\n    selected.render();\n    this.addView(selected);\n\n    // Data Form\n    var formView = new FormView({\n      el: this.$('.ImportPanel-form'),\n      user: this.user,\n      model: this.model,\n      template: 'common/views/create/listing/import_types/data_form_arcgis',\n      fileEnabled: this.options.fileEnabled\n    });\n\n    formView.render();\n    this.addView(formView);\n\n  }\n\n})\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar ImportDefaultView = require('./import_default_view');\nvar UploadModel = require('../../../../background_polling/models/upload_model');\nvar FormView = require('./data_import/data_form_view');\nvar HeaderView = require('./data_import/data_header_view');\nvar SelectedDataset = require('./import_selected_dataset_view');\n\n/**\n *  Import data panel\n *\n *  - It accepts an url\n *  - It checks if it is valid\n *\n */\n\nmodule.exports = ImportDefaultView.extend({\n\n  options: {\n    fileExtensions: [],\n    type: 'url',\n    service: '',\n    acceptSync: false,\n    fileEnabled: false,\n    formTemplate: '',\n    headerTemplate: '',\n    fileAttrs: {}\n  },\n\n  className: 'ImportPanel ImportDataPanel',\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.model = new UploadModel({\n      type: this.options.type,\n      service_name: this.options.service\n    }, {\n      user: this.user\n    });\n\n    this.template = cdb.templates.getTemplate('common/views/create/listing/import_types/import_data');\n\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.$el.html(this.template());\n    this._initViews();\n    return this;\n  },\n\n  _initViews: function() {\n    // Data header\n    var headerView = new HeaderView({\n      el: this.$('.ImportPanel-header'),\n      model: this.model,\n      user: this.user,\n      fileEnabled: this.options.fileEnabled,\n      acceptSync: this.options.acceptSync,\n      template: this.options.headerTemplate\n    });\n    headerView.render();\n    this.addView(headerView);\n\n    // Dataset selected\n    var selected = new SelectedDataset({\n      el: this.$('.DatasetSelected'),\n      user: this.user,\n      model: this.model,\n      acceptSync: this.options.acceptSync,\n      fileAttrs: this.options.fileAttrs\n    });\n    selected.render();\n    this.addView(selected);\n\n    // Data Form\n    var formView = new FormView({\n      el: this.$('.ImportPanel-form'),\n      user: this.user,\n      model: this.model,\n      template: this.options.formTemplate,\n      fileEnabled: this.options.fileEnabled\n    });\n\n    formView.bind('fileSelected', function() {\n      selected.setOptions({\n        acceptSync: false,\n        fileAttrs: {\n          ext: true,\n          title: 'name',\n          description: {\n            content: [{\n              name: 'size',\n              format: 'size'\n            }]\n          }\n        }\n      });\n    });\n\n    formView.bind('urlSelected', function() {\n      selected.setOptions({\n        acceptSync: true,\n        fileAttrs: {\n          ext: false,\n          title: '',\n          description: ''\n        }\n      });\n    });\n    formView.render();\n    this.addView(formView);\n\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:state', this._checkState, this);\n    this.model.bind('change', this._triggerChange, this);\n  },\n\n  _checkState: function() {\n    if (this.model.previous('state') === \"selected\") {\n      this.model.set({\n        type: undefined,\n        value: '',\n        service_name: '',\n        service_item_id: '',\n        interval: 0\n      });\n    }\n  }\n\n})\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n *  Import fallback default panel\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'ImportPanel',\n\n  initialize: function() { \n    this.template = cdb.templates.getTemplate( this.options.template || 'common/views/create/listing/import_default_fallback' );\n  },\n\n  render: function() {\n    this.$el.append(this.template());\n  }\n\n})","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar UploadModel = require('../../../../background_polling/models/upload_model');\n\n/**\n *  Default view for an import item\n *\n *  - It is based in an upload model.\n *  - Will trigger a change when model changes.\n *  - It returns their data if it is requested with a method.\n */\n\n\nmodule.exports = cdb.core.View.extend({\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.model = new UploadModel(null, { user: this.user });\n    this._initBinds();\n  },\n\n  _initBinds: function() {\n    this.model.bind('change', this._triggerChange, this);\n  },\n\n  _triggerChange: function() {\n    this.trigger('change', this.model.toJSON(), this);\n  },\n\n  getModelData: function() {\n    if (this.model) {\n      return this.model.toJSON()\n    }\n    return {}\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\nvar pluralizeString = require('../../../../view_helpers/pluralize_string');\n\n/**\n *  Selected dataset\n *\n *  - Displays the result when a dataset is selected, no matter the type.\n *  - It will show available sync options if that import lets it.\n *  - Upgrade link for people who don't have sync permissions.\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'DatasetSelected',\n\n  _FORMATTERS: {\n    'size': Utils.readablizeBytes,\n    'number': Utils.formatNumber\n  },\n\n  options: {\n    acceptSync: false,\n    fileAttrs: {\n      ext: false,\n      title: '',\n      description: {\n        content: [{\n          name: 'id',\n          format: ''\n        }],\n        itemName: '',\n        separator: ''\n      }\n    }\n  },\n\n  events: {\n    'click .js-interval-0': '_onIntervalZero',\n    'click .js-interval-1': '_onIntervalHour',\n    'click .js-interval-2': '_onIntervalDay',\n    'click .js-interval-3': '_onIntervalWeek',\n    'click .js-interval-4': '_onIntervalMonth'\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.template = cdb.templates.getTemplate('common/views/create/listing/import_selected_dataset');\n    this._initBinds();\n    this._checkVisibility();\n  },\n\n  render: function() {\n    var title = this.options.fileAttrs.title && this.model.get('value')[this.options.fileAttrs.title] || this.model.get('value');\n    var description = this._genDescription();\n    var ext = this.options.fileAttrs.ext ? Utils.getFileExtension(title) : '' ;\n\n    if (this.options.fileAttrs.ext) {\n      title = title && title.replace('.' + ext, '');\n    }\n\n    var upgradeUrl = window.upgrade_url;\n    var userCanSync = this.user.get('actions') && this.user.get('actions').sync_tables;\n    var customInstall = cdb.config.get('cartodb_com_hosted');\n\n    this.$el.html(\n      this.template({\n        title: title,\n        description: description,\n        ext: ext,\n        interval: this.model.get('interval'),\n        importCanSync: this.options.acceptSync,\n        userCanSync: userCanSync,\n        showTrial: this.user.canStartTrial(),\n        showUpgrade: !userCanSync && !customInstall && upgradeUrl && !this.user.isInsideOrg(),\n        upgradeUrl: upgradeUrl\n      })\n    );\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:value', this.render, this);\n    this.model.bind('change:interval', this.render, this);\n    this.model.bind('change:state', this._checkVisibility, this);\n  },\n\n  _genDescription: function() {\n    if (this.options.fileAttrs && this.options.fileAttrs.description) {\n      var descriptionOpts = this.options.fileAttrs.description;\n      var descriptionKeyValue = '';\n      var descriptionStr = '';\n      var self = this;\n\n      if (descriptionOpts.content && descriptionOpts.content.length > 0) {\n        _.each(descriptionOpts.content, function(item, i) {\n\n          if (i > 0 && descriptionOpts.separator) {\n            descriptionStr += \" \" + descriptionOpts.separator + ' ';\n          }\n\n          var value = self.model.get('value')[item.name];\n          var format = item.format && self._FORMATTERS[item.format];\n          descriptionStr += format && format(value) || value;\n\n          if (item.key) {\n            descriptionKeyValue = item.name;\n          }\n        })\n      }\n\n      if (descriptionOpts.itemName && descriptionKeyValue) {\n        descriptionStr += ' ' + (descriptionOpts.itemName && pluralizeString(descriptionOpts.itemName, descriptionKeyValue) || '');\n      }\n\n      return descriptionStr;\n    }\n\n    return '';\n  },\n\n  _onIntervalZero: function() {\n    this.model.set('interval', 0);\n  },\n\n  _onIntervalHour: function() {\n    if (this.options.acceptSync && this.user.get('actions').sync_tables) {\n      this.model.set('interval', 3600);\n    }\n  },\n\n  _onIntervalDay: function() {\n    if (this.options.acceptSync && this.user.get('actions').sync_tables) {\n      this.model.set('interval', 86400);\n    }\n  },\n\n  _onIntervalWeek: function() {\n    if (this.options.acceptSync && this.user.get('actions').sync_tables) {\n      this.model.set('interval', 604800);\n    }\n  },\n\n  _onIntervalMonth: function() {\n    if (this.options.acceptSync && this.user.get('actions').sync_tables) {\n      this.model.set('interval', 2592000);\n    }\n  },\n\n  // Change options\n  setOptions: function(d) {\n    if (d && !_.isEmpty(d)) {\n      _.extend(this.options, d);\n    }\n  },\n\n  _checkVisibility: function() {\n    var state = this.model.get('state');\n    if (state === 'selected') {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar ImportDefaultView = require('../import_default_view');\nvar UploadModel = require('../../../../../background_polling/models/upload_model');\nvar ServiceHeader = require('./service_header_view');\nvar ServiceLoader = require('./service_loader_view');\nvar ServiceList = require('./service_list_view');\nvar ServiceSelectedFile = require('../import_selected_dataset_view');\nvar ServiceToken = require('../../../../../service_models/service_token_model');\nvar ServiceOauth = require('../../../../../service_models/service_oauth_model');\nvar ServiceCollection = require('./service_items_collection');\n\n/**\n *  Import service view\n *\n *  - Use a service import panel\n *  - It will request login to the service\n *  - If it works, a list of available files will appear.\n *  - Once a file is selected, sync options will appear.\n *\n */\n\nmodule.exports = ImportDefaultView.extend({\n\n  _DATASOURCE_NAME: '',\n  _WINDOW_INTERVAL: 1000, // miliseconds\n\n  className: 'ImportPanel ImportPanelService',\n\n  options: {\n    service: '',                  // Name of the service\n    showAvailableFormats: false,  // If all available format link should appear or not\n    fileExtensions: [],           // File extensions\n    acceptSync: false,            // Accept sync this service?\n    fileAttrs: {                  // Attributes or changes for service list or selected file:\n      ext: false,                 // If files should show extension\n      title: 'filename',          // Title attribute\n      description: '<%- size %>', // Description attribute\n      formatDescription: 'size',  // If any format function should be applied over the description\n      headerTemplate: ''          // Header template\n    }\n  },\n\n  initialize: function() {\n    if (!this.options.service) {\n      cdb.log.info('Service provider not set for import panel!')\n      return false;\n    } else {\n      this._DATASOURCE_NAME = this.options.service;\n    }\n\n    this.user = this.options.user;\n    this.model = new UploadModel({\n      type: 'service',\n      service_name: this._DATASOURCE_NAME\n    }, { user: this.user });\n\n    this.template = cdb.templates.getTemplate('common/views/create/listing/import_types/import_service');\n\n    this._initModels();\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.$el.html(this.template(this.options));\n    this._initViews();\n    return this;\n  },\n\n  _initModels: function() {\n    // Token\n    this.token = new ServiceToken(null, { datasource_name: this._DATASOURCE_NAME });\n    // Service model\n    this.service = new ServiceOauth(null, { datasource_name: this._DATASOURCE_NAME });\n    // List collection\n    this.collection = new ServiceCollection(null, { datasource_name: this._DATASOURCE_NAME });\n  },\n\n  _initBinds: function() {\n    this.model.bind('change', this._triggerChange, this);\n    this.model.bind('change:state', this._checkState, this);\n    this.token.bind('change:oauth_valid', this._onOauthChange, this);\n    this.service.bind('change:url', this._openWindow, this);\n    this.add_related_model(this.service);\n    this.add_related_model(this.token);\n  },\n\n  _initViews: function() {\n    // Header\n    var header = new ServiceHeader({\n      el: this.$('.ImportPanel-header'),\n      user: this.user,\n      model: this.model,\n      collection: this.collection,\n      title: this.options.title,\n      showAvailableFormats: this.options.showAvailableFormats,\n      fileExtensions: this.options.fileExtensions,\n      acceptSync: this.options.acceptSync,\n      template: this.options.headerTemplate\n    });\n    header.render();\n    this.addView(header);\n\n    // Loader\n    var loader = new ServiceLoader({\n      el: this.$('.ServiceLoader'),\n      model: this.model,\n      token: this.token,\n      service: this.service\n    });\n    loader.render();\n    this.addView(loader);\n\n    // List\n    var list = new ServiceList({\n      el: this.$('.ServiceList'),\n      model: this.model,\n      collection: this.collection,\n      title: this.options.title,\n      fileAttrs: this.options.fileAttrs\n    });\n    list.render();\n    this.addView(list);\n\n    // Selected file\n    var selected = new ServiceSelectedFile({\n      el: this.$('.ServiceSelected'),\n      user: this.user,\n      model: this.model,\n      acceptSync: this.options.acceptSync,\n      fileAttrs: this.options.fileAttrs\n    });\n    selected.render();\n    this.addView(selected);\n  },\n\n  _onOauthChange: function() {\n    if (this.token.get('oauth_valid')) {\n      this._getFiles();\n    }\n  },\n\n  _getFiles: function() {\n    var self = this;\n\n    this.model.set('state', 'retrieving');\n\n    this.collection.fetch({\n      // data: {\n      //   filter: this.options.acceptFileTypes\n      // },\n      error: function() {\n        self.model.set('state', 'error');\n      },\n      success:  function() {\n        self.model.set('state', 'list');\n      }\n    });\n  },\n\n  _checkState: function() {\n    if (this.model.get('state') === \"list\") {\n      if (this.collection.size() === 1) {\n        var item = this.collection.at(0);\n        this.model.set({\n          state: 'selected',\n          value: item.toJSON(),\n          service_item_id: item.get('id')\n        });\n      }\n    }\n    if (this.model.get('state') !== \"selected\") {\n      this.model.set({\n        value: '',\n        service_item_id: '',\n        interval: 0\n      });\n    }\n  },\n\n  _openWindow: function() {\n    var url = this.service.get('url');\n    var self = this;\n    var i = window.open(url, null, \"menubar=no,toolbar=no,width=600,height=495\");\n    var e = window.setInterval(function() {\n      if (i && i.closed) {\n        self._getFiles();\n        clearInterval(e)\n      } else if (!i) {\n        self.model.set('state', 'error');\n        clearInterval(e)\n      }\n    }, this._WINDOW_INTERVAL);\n  }\n\n})\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n *  Service header\n *\n *  - It will change when upload state changes\n *  - Possibility to change state with a header button\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-back': '_goToList'\n  },\n\n  options: {\n    title: 'Service',\n    showAvailableFormats: false,\n    acceptSync: false,\n    fileExtensions: [],\n    template: ''\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.template = cdb.templates.getTemplate( this.options.template || 'common/views/create/listing/import_types/service_header' );\n    this._initBinds();\n  },\n\n  render: function() {\n    this.$el.html(\n      this.template({\n        items: this.collection.size(),\n        service_name: this.model.get(\"service_name\"),\n        showAvailableFormats: this.options.showAvailableFormats,\n        fileExtensions: this.options.fileExtensions,\n        acceptSync: this.options.acceptSync && this.user.get('actions').sync_tables,\n        state: this.model.get('state'),\n        title: this.options.title\n      })\n    );\n    this._checkVisibility();\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:state', this.render, this);\n  },\n\n  _checkVisibility: function() {\n    var state = this.model.get('state');\n    this[ state !== \"list\" ? 'show' : 'hide' ]()\n  },\n\n  _goToList: function() {\n    this.model.set('state', 'list');\n  }\n\n});\n","var Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\n\n/**\n *  Service list item format utils\n *\n *  - Create customized functions for service list items.\n *\n */\n\nmodule.exports = {\n\n  // Due to the fact that backend data source service\n  // returns 0 size when it doesn't know it\n  formatSize: function(s) {\n    if (s && s > 0) {\n      return Utils.readablizeBytes(s);\n    } else {\n      return 'Unknown'\n    }\n  }\n\n}","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n *  Service item model\n *\n */\n\nmodule.exports = cdb.core.Model.extend({\n  \n  defaults: {\n    id: '',\n    filename: '',\n    checksum: '',\n    service: '',\n    size: '',\n    title: ''\n  }\n\n});","var ServiceItem = require('./service_item_model.js');\nvar Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\n\n/**\n *  Service item model + Service items collection\n *\n *  - It needs a datasource name or it won't work.\n *\n */\n\nmodule.exports = Backbone.Collection.extend({\n\n  _DATASOURCE_NAME: 'dropbox',\n\n  model: ServiceItem,\n\n  initialize: function(coll, opts) {\n    if (opts.datasource_name) {\n      this._DATASOURCE_NAME = opts.datasource_name;\n    }\n  },\n\n  fetch: function() {\n    this.trigger(\"fetch\", this);\n\n    // Pass through to original fetch.\n    return Backbone.Collection.prototype.fetch.apply(this, arguments);\n  },\n\n  parse: function(r) {\n    return r.files;\n  },\n\n  url: function(method) {\n    var version = cdb.config.urlVersion('imports_service', method);\n    return '/api/' + version + '/imports/service/' + this._DATASOURCE_NAME + '/list_files'\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\nvar ServiceUtilsFormat = require('./service_item_description_format');\nvar pluralizeString = require('../../../../../view_helpers/pluralize_string');\n\n/**\n *  Service list item view\n *\n *  - Displays the item info.\n *  - It lets user to select the item for a future import.\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  options: {\n    title: '',\n    fileAttrs: {\n      ext: false,\n      title: 'filename',\n      description: 'size',\n      itemName: 'file',\n      formatDescription: ''\n    }\n  },\n\n  _FORMATTERS: {\n    'size': ServiceUtilsFormat.formatSize,\n    'number': Utils.formatNumber\n  },\n\n  className: 'ServiceList-item',\n  tagName: 'li',\n\n  events: {\n    'click .js-choose': '_onSelectItem'\n  },\n\n  initialize: function() {\n    this.template = cdb.templates.getTemplate('common/views/create/listing/import_types/service_list_item');\n  },\n\n  render: function() {\n    var title = this.model.get(this.options.fileAttrs.title);\n    var description = this._genDescription();\n    var ext = this.options.fileAttrs.ext ? Utils.getFileExtension(title) : '' ;\n\n    if (this.options.fileAttrs.ext) {\n      title = title && title.replace('.' + ext, '');\n    }\n\n    this.$el.html(\n      this.template({\n        name: this.options.title,\n        ext: ext,\n        title: title,\n        description: description\n      })\n    );\n    return this;\n  },\n\n  _genDescription: function() {\n    if (this.options.fileAttrs && this.options.fileAttrs.description) {\n      var descriptionOpts = this.options.fileAttrs.description;\n      var descriptionKeyValue = '';\n      var descriptionStr = '';\n      var self = this;\n\n      if (descriptionOpts.content && descriptionOpts.content.length > 0) {\n        _.each(descriptionOpts.content, function(item, i) {\n\n          if (i > 0 && descriptionOpts.separator) {\n            descriptionStr += \" \" + descriptionOpts.separator + ' ';\n          }\n\n          var value = self.model.get(item.name);\n          var format = item.format && self._FORMATTERS[item.format];\n          descriptionStr += format && format(value) || value;\n\n          if (item.key) {\n            descriptionKeyValue = item.name;\n          }\n        })\n      }\n\n      if (descriptionOpts.itemName && descriptionKeyValue) {\n        descriptionStr += ' ' + (descriptionOpts.itemName && pluralizeString(descriptionOpts.itemName, descriptionKeyValue) || '');\n      }\n\n      return descriptionStr;\n    }\n\n    return '';\n  },\n\n  _onSelectItem: function() {\n    this.trigger('selected', this.model, this);\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar ServiceListItem = require('./service_list_item_view');\nvar pluralizeString = require('../../../../../view_helpers/pluralize_string');\n\n/**\n *  Service list view\n *\n *  - It will display all the items available under\n *  the service and the possibility to chose one of\n *  them.\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  _TEXTS: {\n    item: _t('item')\n  },\n\n  options: {\n    title: 'service',\n    fileAttrs: {}\n  },\n\n  initialize: function() {\n    this.template = cdb.templates.getTemplate('common/views/create/listing/import_types/service_list');\n    this._initBinds();\n    this._checkVisibility();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    var size = this.collection.size();\n    this.$el.html(\n      this.template({\n        size: size,\n        title: this.options.title,\n        pluralize: pluralizeString(this._TEXTS.item, size)\n      })\n    );\n    if (this.collection.size() > 0) {\n      this.collection.each(this._addItem, this);\n    }\n    return this;\n  },\n\n  _initBinds: function() {\n    this.collection.bind('reset', this.render, this);\n    this.model.bind('change:state', this._checkVisibility, this);\n    this.add_related_model(this.collection);\n  },\n\n  _addItem: function(m) {\n    var item = new ServiceListItem({\n      model: m,\n      title: this.options.title,\n      fileAttrs: this.options.fileAttrs\n    });\n    item.bind('selected', this._onSelectedItem, this);\n    this.$('.ServiceList-items').append(item.render().el);\n    this.addView(item);\n  },\n\n  _onSelectedItem: function(mdl) {\n    this.model.set({\n      state: 'selected',\n      value: mdl.toJSON(),\n      service_item_id: mdl.get('id')\n    });\n  },\n\n  _checkVisibility: function() {\n    var state = this.model.get('state');\n    if (state === 'list') {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n *  Service loader view\n *\n *  - It will be on charge to make token and oauth petitions\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-connect': '_checkToken'\n  },\n\n  initialize: function() {\n    this.token = this.options.token;\n    this.service = this.options.service;\n    this.template = cdb.templates.getTemplate('common/views/create/listing/import_types/service_loader');\n    this._initBinds();\n    this._checkVisibility();\n  },\n\n  render: function() {\n    this.$el.html(\n      this.template({\n        state: this.model.get('state')\n      })\n    );\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:state', this.render, this);\n    this.model.bind('change:state', this._checkVisibility, this);\n  },\n\n  _checkToken: function() {\n    var self = this;\n    this.model.set('state', 'token');\n\n    var self = this;\n    this.token.fetch({\n      success: function(r) {\n        if (!r.get('oauth_valid')) {\n          self._getOauthURL();\n        }\n      },\n      error: function(e) {\n        self._getOauthURL();\n      }\n    });\n  },\n\n  _checkVisibility: function() {\n    var state = this.model.get('state');\n    if (state !== 'list' && state !== 'selected') {\n      this.show();\n    } else {\n      this.hide();\n    }\n  },\n\n  _getOauthURL: function() {\n    var self = this;\n    this.model.set('state', 'oauth');\n    this.service.set({ url: '' }, { silent: true });\n    this.service.fetch({\n      error: function() {\n        self.model.set('state', 'error');\n      }\n    });\n  }\n\n})","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\n\n/**\n *  Credits info view\n *\n *  - Percentage of use\n *  - Possible money spent\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  initialize: function() {\n    this.user = this.options.user;\n    this._initBinds();\n    this.template = cdb.templates.getTemplate('common/views/create/listing/import_types/credits_info');\n  },\n\n  render: function() {\n    var twitterData = this.user.get('twitter');\n    var remaining = twitterData.quota - twitterData.monthly_use;\n    var per = Math.min(100,Math.ceil((this.model.get('value') * 100) / remaining));\n\n    this.$el.html(\n      this.template({\n        value: this.model.get('value'),\n        remaining: remaining,\n        per: per,\n        hardLimit: twitterData.hard_limit,\n        remainingFormatted: Utils.formatNumber(remaining),\n        quota: twitterData.quota,\n        block_price: twitterData.block_price,\n        block_size: Utils.readizableNumber(twitterData.block_size)\n      })\n    )\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change', this.render, this);\n  }\n\n});","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar CreditsInfo = require('./credits_info_view');\n\n/**\n *  Set max use of credits for Twitter\n *\n *  - Slider range = 1000 credits\n *  - Last step should be infinite if user doesn't\n *    have \"soft_limit\".\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  _DEFAULT_PER_VALUE: 80, // Default percentage value for slider\n  _MIN_PER_VALUE: 1,      // Default min percentage value for slider\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.model = new cdb.core.Model();\n    this._initBinds();\n    this._setModel();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.$(\".js-slider\").slider(\"destroy\");\n    this._initViews();\n    return this;\n  },\n\n  _initBinds: function() {\n    _.bindAll(this, '_onSlideChange');\n    this.model.bind('change:value', this._onValueChange, this);\n  },\n\n  _setModel: function() {\n    var twitterData = this.user.get('twitter');\n    var max = twitterData.quota - twitterData.monthly_use;\n    var min =  (this._MIN_PER_VALUE * max) / 100; // Just 1% of the quota\n    var defaultValue = (max * this._DEFAULT_PER_VALUE) / 100;\n    var value = max > 0 ? defaultValue : (max + 1);\n    \n    this.model.set({\n      max: (twitterData.hard_limit ? max : max + 1 ),\n      min: min,\n      step: min,\n      value: max > 0 ? value : twitterData.quota,\n      disabled: max > 0 ? false : true\n    });\n  },\n\n  _initViews: function() {\n    // Slider\n    this.$(\".js-slider\").slider(\n      _.extend({\n          range: 'min',\n          orientation: \"horizontal\",\n          slide: this._onSlideChange,\n          change: this._onSlideChange\n        },\n        this.model.attributes\n      )\n    );\n\n    // Info\n    var creditsInfo = new CreditsInfo({\n      el: this.$('.js-info'),\n      user: this.user,\n      model: this.model\n    });\n    creditsInfo.render();\n    this.addView(creditsInfo);\n  },\n\n  _onSlideChange: function(ev, ui) {\n    this.model.set('value', ui.value);\n  },\n\n  _onValueChange: function() {\n    this.trigger('maxCreditsChange', this.getMaxCredits(), this);\n  },\n\n  getMaxCredits: function() {\n    var twitterData = this.user.get('twitter');\n    var max = twitterData.quota - twitterData.monthly_use;\n    var value = this.model.get('value');\n    return value > max ? 0 : value\n  }\n\n});","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar ImportDefaultView = require('../../../../../dialogs/create/listing/imports/import_default_view');\nvar UploadModel = require('../../../../../background_polling/models/upload_model');\nvar DatesRangePicker = require('../../../../../views/date_pickers/dates_range_picker');\nvar TwitterCategories = require('../../../../../dialogs/create/listing/imports/twitter_import/twitter_categories/twitter_categories_view');\nvar CreditsUsage = require('./credits_usage_view.js');\n\n/**\n *  Import twitter panel\n *\n *  - It accepts up to 3 categories\n *  - Date range can't be longer than 30 days\n *\n */\n\nmodule.exports = ImportDefaultView.extend({\n\n  options: {\n    acceptSync: false,\n    type: 'service',\n    service: 'twitter_search'\n  },\n\n  className: 'ImportPanel ImportTwitterPanel',\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.model = new UploadModel({\n      type: this.options.type,\n      service_name: this.options.service\n    }, {\n      user: this.user\n    });\n\n    this.template = cdb.templates.getTemplate('common/views/create/listing/import_types/import_twitter');\n\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.$el.html(this.template());\n    this._initViews();\n    return this;\n  },\n\n  _initViews: function() {\n    // Categories\n    var categories = this.categories = new TwitterCategories();\n    categories.bind('changeCategory', this._setModel, this);\n    this.$('.ImportTwitterPanel-cagetories').append(categories.render().el);\n    this.addView(categories);\n\n    // Date picker\n    var datepicker = this.datepicker = new DatesRangePicker({\n      className: 'DatePicker DatePicker--withBorder'\n    });\n    datepicker.bind('changeDate', this._setModel, this);\n    this.$('.js-picker').append(datepicker.render().el);\n    this.addView(datepicker);\n\n    // Use slider\n    var creditsUsage = this.creditsUsage = new CreditsUsage({\n      el: this.$('.CreditsUsage'),\n      user: this.user\n    });\n    creditsUsage.bind('maxCreditsChange', this._setModel, this);\n    creditsUsage.render();\n    this.addView(creditsUsage);\n\n    this._setModel();\n  },\n\n  _initBinds: function() {\n    this.model.bind('change', this._triggerChange, this);\n  },\n\n  _getCategories: function() {\n    var categories = this.categories.getCategories();\n    return _.filter(categories, function(c) {\n      return c.category && c.terms.length > 0\n    });\n  },\n\n  _getDates: function() {\n    return this.datepicker.getDates();\n  },\n\n  _getMaxCredits: function() {\n    return this.creditsUsage.getMaxCredits();\n  },\n\n  _setModel: function() {\n    var categories = this._getCategories();\n    var dates = this._getDates();\n    var maxCredits = this._getMaxCredits();\n    var d = {\n      categories: categories,\n      dates: dates\n    };\n\n    this.model.set({\n      value: d,\n      service_item_id: d,\n      user_defined_limits: {\n        twitter_credits_limit: maxCredits\n      }\n    });\n  }\n\n})\n","var Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar TwitterCategoryModel = require('./twitter_category_model');\n  \n// Twitter categories collection\n\nmodule.exports = Backbone.Collection.extend({\n  model: TwitterCategoryModel\n});","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar TwitterCategoriesCollection = require('./twitter_categories_collection');\nvar TwitterCategoriesModel = require('./twitter_category_model');\nvar TwitterCategoryView = require('./twitter_category_view');\n\n/**\n *  Twitter category list view\n *  - It will generate a collection to store all the \n *    terms added.\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  _MAX_CATEGORIES: 4,\n  _MAX_TERMS: 29,\n\n  initialize: function() {\n    // Add a first empty model\n    var m = this._generateCategory();\n    this.collection = new TwitterCategoriesCollection([ m ]);\n\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.collection.each(this._addCategory, this);\n    return this;\n  },\n\n  _initBinds: function() {\n    this.collection.bind('change', this._manageCategories, this);\n    this.collection.bind('change', this._onCategoryChange, this);\n    this.add_related_model(this.collection);\n  },\n\n  _manageCategories: function() {\n    var self = this;\n    var collection_size = this.collection.size();\n\n    // Check if already created models are completed\n    var nonFilled = this.collection.filter(function(m) {\n      return m.get('terms').length === 0\n    });\n\n    // if so, generate new one\n    if (nonFilled.length === 0 && collection_size < this._MAX_CATEGORIES) {\n      var m = this._generateCategory();\n      this.collection.add(m);\n      this._addCategory(m);\n      return false;\n    }\n\n    // else, let's check\n    if (nonFilled.length > 0) {\n      var m = _.first(nonFilled);\n      var v = _.find(this._subviews, function(view){ return m.cid === view.model.cid });\n      var pos = v.$el.index();\n      \n      // Only one item in the collection, do nothing\n      if (collection_size === 1) return false;\n\n      // If it is the last item but there is no more items, do nothing\n      if (pos === (collection_size - 1)) return false;\n\n      // If it is not the last item and there is another non-filled element\n      // let's remove that one.\n      if (pos !== (collection_size - 1) && nonFilled.length > 1) {\n        m = nonFilled[1];\n        v = _.find(this._subviews, function(view){ return m.cid === view.model.cid });\n        this._removeCategory(v);\n      }\n\n      // Reorder category indexes :(\n      this._setCategoryIndex();\n    }\n  },\n\n  // Set proper index after any category removed\n  _setCategoryIndex: function() {\n    var self = this;\n\n    // Hack to set properly category numbers\n    this.$('.twitter-category').each(function(i,el) {\n      // Get category, removing Category word\n      var category = $(el).find('.js-category').text().replace('Category ','');\n\n      if (category !== (i+1) ) {\n        // Find model\n        var m = self.collection.find(function(m) { return m.get('category') === category });\n        // Find view\n        m.set('category', (i+1).toString() );  \n      }\n      \n    })\n  },\n\n  _generateCategory: function() {\n    return new TwitterCategoriesModel({\n      terms: [],\n      category: (this.collection ? ( this.collection.size() + 1 ) : 1 ).toString()\n    });\n  },\n\n  _addCategory: function(m) {\n    var category = new TwitterCategoryView({ model: m });\n    \n    category.bind('submit', this._onCategorySubmit, this);\n    category.bind('limit', this._onCategoryLimit, this);\n    category.bind('nolimit', this._onCategoryNoLimit, this);\n\n    this.$el.append(category.render().el);\n    \n    this.addView(category);\n    this.trigger(\"addCategory\");\n  },\n\n  _removeCategory: function(v) {\n    v.hide();\n    v.clean();\n    v.model.destroy();\n    this.trigger(\"removeCategory\");\n  },\n\n  _onCategorySubmit: function() {\n    this.trigger('submitCategory', this.collection.toJSON(), this);\n  },\n\n  _onCategoryLimit: function() {\n    this.trigger('limitCategory', this.collection.toJSON(), this);\n  },\n\n  _onCategoryNoLimit: function() {\n    this.trigger('noLimitCategory', this.collection.toJSON(), this);\n  },\n\n  _onCategoryChange: function() {\n    this.trigger('changeCategory', this.collection.toJSON(), this);\n  },\n\n  getCategories: function() {\n    return this.collection.toJSON();\n  }\n\n});","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n// Twitter category model\n\nmodule.exports = cdb.core.Model.extend({\n\n  _MAX_COUNTER: 1014,\n\n  _CHAR_MAP: {\n    ' ': 2,\n    '-': 2,\n    '_': 2,\n    '.': 2\n  },\n  \n  defaults: {\n    terms:    [],\n    category: '',\n    counter:  1014\n  },\n\n  initialize: function() {\n    this._initBinds();\n  },\n\n  _initBinds: function() {\n    this.bind('change:terms', this._setCounter, this);\n  },\n\n  _setCounter: function() {\n    var count = this._MAX_COUNTER;\n    var self = this;\n\n    // Check terms number\n    if (this.get('terms').length > 1) {\n      count = count - ( ( this.get('terms').length - 1 ) * 4 )\n    }\n\n    // Check characters\n    _.each(this.get('terms'), function(term) {\n      _.each(term, function(c) {\n        if (self._CHAR_MAP[c] !== undefined) {\n          count = count - self._CHAR_MAP[c];\n        } else {\n          count--\n        }\n      });\n    });\n\n    // Count never should be fewer then 0 please!\n    this.set('counter', Math.max(0,count));\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n\n/**\n *  Twitter category item view\n *  - It just needs a twitter category model\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'TwitterCategory',\n\n  _MAX_CATEGORIES: 4,\n  _MAX_TERMS: 29,\n\n  events: {\n    'keydown .js-terms':   '_onInputChange',\n    'keypress .js-terms':  '_onInputChange',\n    'keyup .js-terms':     '_onInputChange'\n  },\n\n  initialize: function() {\n    this.template = cdb.templates.getTemplate('common/views/create/listing/import_types/twitter_category');\n    this._initBinds();\n  },\n\n  render: function() {\n    this.$el.append(\n      this.template({\n        terms: this.model.get('terms'),\n        category: this.model.get('category'),\n        counter: this.model.get('counter')\n      })\n    );\n\n    // Show category\n    this.show();\n\n    return this;\n  },\n\n  _initBinds: function() {\n    _.bindAll(this, '_onInputChange');\n    this.model.bind('change:category', this._onCategoryChange, this);\n  },\n\n  _onCategoryChange: function() {\n    this.$('.js-category').text('Category ' + this.model.get('category'));\n  },\n\n  _onInputChange: function(e) {\n    var value = $(e.target).val();\n\n    // It was a ENTER key event? Send signal!\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      this.trigger('submit', this.model, this);\n      return false;\n    }\n\n    // Change icon class\n    this.$('.CDB-IconFont-twitter')[value.length > 0 ? 'addClass' : 'removeClass']('is-highlighted');\n\n    // Check if it is possible to add new characters\n    // if not, stop the action, unless user is deleting\n    // any previous character\n    if (( this.model.get('counter') === 0 || this.model.get('terms').length > this._MAX_TERMS) &&\n      e.keyCode !== 37 /* left */ && e.keyCode !== 39 /* right */ && e.keyCode !== 8 && value.length > 0) {\n      this.killEvent(e);\n      this.trigger('limit', this.model, this);\n      return false;\n    } else {\n      this.trigger('nolimit', this.model, this);\n    }\n\n    var $input = $(e.target);\n    var value = $input.val();\n    var d = {};\n\n    // Get valid terms array\n    if (!value) {\n      value = [];\n    } else {\n      value = value.split(',');\n    }\n\n    d['terms'] = value;\n\n    this.model.set(d);\n  },\n\n  show: function() {\n    this.$el.addClass('enabled');\n  },\n\n  hide: function() {\n    this.$el.removeClass('enabled');\n  }\n\n});","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar ImportOptions = require('./import_options');\nvar ImportFallback = require('./imports/import_default_fallback_view');\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n/**\n *  Imports view\n *\n *  Displays all the import options available\n *  through new create dialog.\n *\n *  IMPORTANT!!\n *\n *  If you need to add a new import pane:\n *\n *  - Create the proper class within imports folder and its tests.\n *  - Add necessary info in import_options file.\n *  - Create a check function here if needed, if not will appear\n *    always enabled (for everybody!).\n *\n */\n\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'ImportOptions',\n\n  _TABS_PER_ROW: 5,\n  _DEFAULT_IMPORT: 'file',\n  _IMPORT_OPTIONS: ImportOptions,\n\n  _TEXTS: {\n    key:      _t('<%- name %> key is not specified and panel can\\'t be enabled'),\n    account:  _t('<%- name %> data source is not available in your plan. Please upgrade'),\n    limits:   _t('You\\'ve reached the limits for your account. Please upgrade'),\n    credits:  _t('You\\'ve reached the available <%- name %> credits for your account this month')\n  },\n\n  events: {\n    'click .js-goNext': '_moveNextTabs',\n    'click .js-goPrev': '_movePrevTabs'\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.model = new cdb.core.Model({ page: 1, maxPages: 0 });\n    this.createModel = this.options.createModel;\n    this.template = cdb.templates.getTemplate('common/views/create/listing/import_view');\n  },\n\n  render: function() {\n    this._destroyBinds();\n    this.clearSubViews();\n    this.$el.empty();\n\n    // Append template content\n    this.$el.append(this.template());\n    // Generate tabs!\n    this._genTabs();\n    // Generate tabs navigation\n    this._genTabsNavigation();\n    // Generate panes!\n    this._genPanes();\n    // Set binds\n    this._initBinds();\n    // Set option\n    this._setOption();\n\n    return this;\n  },\n\n\n  ////////////////////\n  // TABS && PANES! //\n  ////////////////////\n\n  _genTabs: function() {\n    var tabs = \"\";\n    var tabTemplate = cdb.templates.getTemplate('common/views/create/listing/import_tab');\n\n    _.each(this._IMPORT_OPTIONS, function(t) {\n      if (!_.isEmpty(t) && t.enabled(cdb.config, this.user_data)) {\n        tabs += tabTemplate(t);\n      }\n    });\n\n    this.$('.ImportOptions-tabsList').append(tabs);\n\n    // Create tabs\n    this.importTabs = new cdb.admin.Tabs({\n      el:     this.$('.ImportOptions-tabsList'),\n      slash:  true\n    });\n    this.addView(this.importTabs);\n  },\n\n  _genTabsNavigation: function() {\n    var numTabs = this.$('.ImportOptions-tab').size();\n    if (numTabs <= 1) {\n      this.$('.ImportOptions-tabs').hide();\n    }\n\n    // Set max pages\n    this.model.set('maxPages', Math.ceil(numTabs / this._TABS_PER_ROW));\n    this._checkTabsNavigation();\n    if (this.model.get('maxPages') <= 1) {\n      this.$('.ImportOptions-navigation').hide();\n    }\n  },\n\n  _moveNextTabs: function() {\n    var page = this.model.get('page');\n    var maxPages = this.model.get('maxPages');\n\n    if (page < maxPages) {\n      this.model.set('page', page + 1);\n    }\n  },\n\n  _movePrevTabs: function() {\n    var page = this.model.get('page');\n    if (page > 1) {\n      this.model.set('page', page - 1);\n    }\n  },\n\n  _moveTabsNavigation: function() {\n    var page = this.model.get('page');\n    var rowWidth = 800;\n\n    this.$('.ImportOptions-tabsList').css('margin-left', '-' + (rowWidth * (page-1)) + 'px');\n    this._checkTabsNavigation();\n  },\n\n  _checkTabsNavigation: function() {\n    var page = this.model.get('page');\n    var maxPages = this.model.get('maxPages');\n\n    // Check prev button\n    this.$('.js-goPrev')[ page > 1 ? 'removeClass' : 'addClass' ]('is-disabled');\n\n    // Check next button\n    this.$('.js-goNext')[ page < maxPages ? 'removeClass' : 'addClass' ]('is-disabled');\n  },\n\n  _genPanes: function() {\n    var self = this;\n\n    // Create TabPane\n    this.importPanes = new cdb.ui.common.TabPane({\n      el: this.$(\".ImportOptions-panes\")\n    });\n    this.addView(this.importPanes);\n\n    // Link tabs with panes\n    this.importTabs.linkToPanel(this.importPanes);\n\n    // Render panes!\n    _.each(this._IMPORT_OPTIONS, function(imp,i) {\n      var pane = '';\n\n      // Check if import option function exists\n      var fn = self['_check' + i + 'Import'];\n      var isEnabled = (fn && fn(imp, self));\n\n      if (( isEnabled || isEnabled === undefined ) && !_.isEmpty(imp)) {\n        pane = new imp.className(\n          _.extend(\n            ( imp.options || {} ),\n            {\n              user: self.user,\n              title: imp.title\n            }\n          )\n        );\n      } else if (imp.fallback) {\n        pane = new ImportFallback({\n          template: imp.fallback\n        });\n      }\n\n      if (pane) {\n        pane.render();\n        pane.bind('change', self._setUploadModel, self);\n        self.importPanes.addTab(imp.name, pane);\n        self.addView(pane);\n      }\n    });\n  },\n\n  _checkGDriveImport: function(imp, v) {\n    if (!cdb.config.get('oauth_gdrive')) {\n      v._setFailedTab('gdrive', 'key');\n      return false;\n    }\n    return true;\n  },\n\n  _checkDropboxImport: function(imp, v) {\n    if (!cdb.config.get('oauth_dropbox')) {\n      v._setFailedTab('dropbox', 'key');\n      return false;\n    }\n    return true;\n  },\n\n  _checkBoxImport: function(imp, v) {\n    if (!cdb.config.get('oauth_box')) {\n      v._setFailedTab('box', 'key');\n      return false;\n    }\n    return true;\n  },\n\n  _checkTwitterImport: function(imp, v) {\n    // Check if user have twitter datasource enabled!\n    if (!cdb.config.get('datasource_search_twitter')) {\n      v._setFailedTab('twitter', 'key');\n      return false;\n    }\n    // Check if user can create or import a new file or user has\n    // enough rights to enable twitter!\n    if (!v.user.get('twitter').enabled) {\n      return false;\n    }\n    // Check if user can create or import a new file or user has\n    // enough rights to enable twitter!\n    if (( v.user.get('twitter').quota - v.user.get('twitter').monthly_use ) <= 0 && v.user.get('twitter').hard_limit) {\n      v._setFailedTab('twitter', 'credits');\n      return false;\n    }\n    return true;\n  },\n\n  _checkInstagramImport: function(imp, v) {\n    if (!v.user.featureEnabled('instagram_import')) {\n      return false;\n    }\n    if (!cdb.config.get('oauth_instagram')) {\n      v._setFailedTab('instagram', 'key');\n      return false;\n    }\n    return true;\n  },\n\n  _checkSalesforceImport: function(imp, v) {\n    // Check if salesforce feature is enabled\n    if (!v.user.get('salesforce').enabled) {\n      return false;\n    }\n    return true;\n  },\n\n  _checkMailchimpImport: function(imp, v) {\n    // Config available?\n    if (!cdb.config.get('oauth_mailchimp')) {\n      v._setFailedTab('mailchimp', 'key');\n      return false;\n    }\n    // Feature enabled?\n    if (!v.user.featureEnabled('mailchimp_import')) {\n      return false;\n    }\n    return true;\n  },\n\n  _setFailedTab: function(tab, type) {\n    var $tab = this.importTabs.getTab(tab);\n    $tab.addClass('disabled');\n    this._createTooltip(tab, type);\n  },\n\n  _createTooltip: function(tab, type) {\n    var self = this;\n    var $tab = this.importTabs.getTab(tab);\n\n    // Tipsy?\n    var tooltip = new cdb.common.TipsyTooltip({\n      el: $tab,\n      title: function() {\n        return _.template(self._TEXTS[type])({ name: tab })\n      }\n    })\n    this.addView(tooltip);\n  },\n\n  _setUploadModel: function(d) {\n    this.createModel.upload.setFresh(d);\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:page', this._moveTabsNavigation, this);\n    if (this.importPanes) {\n      this.importPanes.bind('tabEnabled',  this._onTabChange, this);\n    }\n  },\n\n  _destroyBinds: function() {\n    if (this.importPanes) {\n      this.importPanes.unbind('tabEnabled', null, this);\n    }\n  },\n\n  _setOption: function() {\n    // First option > data file\n    this.importPanes.active(this._DEFAULT_IMPORT);\n    this._updateImportOption();\n  },\n\n  _updateImportOption: function() {\n    this.createModel.setActiveImportPane(this.importPanes.activeTab);\n  },\n\n\n  ////////////\n  // Events //\n  ////////////\n\n  _onTabChange: function(tabName) {\n    var v = this.importPanes.getPane(tabName);\n    // Set upload model from activated pane to create model\n    var upload = v.getModelData && v.getModelData();\n    if (upload) {\n      this._setUploadModel(upload);\n    } else {\n      this._setUploadModel({});\n    }\n    this._updateImportOption();\n  },\n\n  clean: function() {\n    this._destroyBinds();\n    cdb.core.View.prototype.clean.call(this);\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\nvar pluralizeString = require('../../../view_helpers/pluralize_string');\n\n/**\n *  Listing datasets navigation.\n *\n *  - 'Filter by' datasets.\n *  - 'Search' any pattern within dataset collection.\n *\n */\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'submit .js-search-form':   '_submitSearch',\n    'keydown .js-search-form':  '_onSearchKeyDown',\n    'click .js-search-form':    'killEvent',\n    'click .js-search-link':    '_onSearchClick',\n    'click .js-clean-search':   '_onCleanSearchClick',\n    'click .js-shared':         '_onSharedClick',\n    'click .js-library':        '_onLibraryClick',\n    'click .js-connect':        '_onConnectClick',\n    'click .js-datasets':       '_onDatasetsClick',\n    'click .js-create_empty':   '_onCreateEmptyClick'\n  },\n\n  _TEXTS: {\n    createFromScratchLabel: {\n      map: 'Create empty map',\n      dataset: 'Create empty dataset',\n      addLayer: 'Add an empty layer'\n    }\n  },\n\n  initialize: function() {\n    this.routerModel = this.options.routerModel;\n    this.createModel = this.options.createModel;\n    this.user = this.options.user;\n    this.template = cdb.templates.getTemplate('common/views/create/listing/navigation');\n    this.model = new cdb.core.Model();\n\n    this._preRender();\n    this._initBinds();\n  },\n\n  // It is necessary to add two static elements because\n  // they can't be removed/replaced using render method\n  // each time a change (in a model or a collection) happens.\n  // This is due to the behaviour of the CSS animations.\n  _preRender: function() {\n    var $uInner = $('<div>').addClass('u-inner');\n    var $filtersInner = $('<div>').addClass('Filters-inner');\n    this.$el.append($uInner.append($filtersInner));\n  },\n\n  render: function(m, c) {\n    this.clearSubViews();\n\n    var selectedItemsCount = this._selectedItems().length;\n    // If a change is made from content type we have to know\n    // preventing show wrong data about total items\n    var changedContentType = c && c.changes && c.changes.content_type;\n    var createModelType = this.createModel.get('type');\n\n    this.$('.Filters-inner').html(\n      this.template(\n        _.extend({\n            createModel:           this.createModel,\n            canCreateDataset:      this.user.canCreateDatasets(),\n            listing:               this.createModel.get('listing'),\n            isInsideOrg:           this.user.isInsideOrg(),\n            selectedItemsCount:    selectedItemsCount,\n            maxLayersByMap:        this.user.getMaxLayers(),\n            totalShared:           changedContentType ? 0 : this.collection.total_shared,\n            totalItems:            changedContentType ? 0 : this.collection.total_user_entries,\n            pageItems:             this.collection.size(),\n            routerModel:           this.routerModel,\n            pluralizedContentType: pluralizeString('dataset', changedContentType ? 0 : this.collection.total_user_entries),\n            pluralizedContentTypeSelected: pluralizeString('dataset', selectedItemsCount),\n            createFromScratchLabel: this._TEXTS.createFromScratchLabel[createModelType]\n          },\n          this.routerModel.attributes\n        )\n      )\n    );\n\n    this._animate();\n    if (this.routerModel.isSearching()) {\n      this._focusSearchInput();\n    }\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.on('change:isSearchEnabled', this._onChangeIsSearchEnabled, this);\n    this.createModel.bind('change:listing', this.render, this);\n    this.routerModel.bind('change', this.render, this);\n    this.collection.bind('reset', this.render, this);\n    cdb.god.bind('closeDialogs', this._animate, this);\n    this.add_related_model(cdb.god);\n    this.add_related_model(this.createModel);\n    this.add_related_model(this.collection);\n    this.add_related_model(this.routerModel);\n  },\n\n  _onChangeIsSearchEnabled: function(model, isSearchEnabled) {\n    this._enableSearchUI(isSearchEnabled);\n\n    if (this.routerModel.isSearching()) {\n      this._cleanSearch();\n    } else if (isSearchEnabled) {\n      this._$searchInput().val('');\n      this._focusSearchInput();\n    }\n  },\n\n  _$searchInput: function() {\n    return this.$('.js-search-input')\n  },\n\n  _focusSearchInput: function() {\n    this._$searchInput()\n      .select()\n      .focus();\n  },\n\n  _onSearchKeyDown: function(e) {\n    // ESC\n    if (e.keyCode === 27) {\n      this.killEvent(e);\n      this._cleanSearch();\n    }\n  },\n\n  _selectedItems: function() {\n    return this.collection.where({ selected: true });\n  },\n\n  _animate: function() {\n    this._enableSearchUI(!!this.routerModel.isSearching());\n\n    // Check if user doesn't have any table and it is in library section\n    // to remove useless shadow\n    var inLibrarySection = this.routerModel.get('library');\n    var inDatasetsSection = this.createModel.get('listing') === \"datasets\";\n    var hasDatasets = this.collection.total_user_entries > 0;\n    this.$el.toggleClass('no-shadow', inLibrarySection && !hasDatasets && inDatasetsSection);\n  },\n\n  _enableSearchUI: function(enable) {\n    this.$('.js-search-field').toggle(enable);\n    this.$('.js-links-list').toggleClass('is-hidden', enable);\n    this.$('.js-order-list').toggleClass('is-hidden', enable);\n  },\n\n  _onDatasetsClick: function() {\n    this.routerModel.set({\n      shared: 'no',\n      library: false,\n      page: 1\n    });\n    this.createModel.set('listing', 'datasets');\n  },\n\n  _onSharedClick: function() {\n    this.routerModel.set({\n      shared: 'only',\n      library: false,\n      page: 1\n    });\n    this.createModel.set('listing', 'datasets');\n  },\n\n  _onLibraryClick: function() {\n    this.routerModel.set({\n      shared: 'no',\n      library: true,\n      page: 1\n    });\n    this.createModel.set('listing', 'datasets');\n\n    // Event tracking \"Clicked Common data\"\n    cdb.god.trigger('metrics', 'common_data', {\n      email: window.user_data.email\n    });\n  },\n\n  _onConnectClick: function() {\n    if (this.user.canCreateDatasets()) {\n      this.createModel.set('listing', 'import');\n    }\n  },\n\n  _onCreateEmptyClick: function() {\n    if (this.user.canCreateDatasets()) {\n      this.createModel.createFromScratch();\n    }\n  },\n\n  // Selection actions\n\n  _onSearchClick: function(e) {\n    if (e) this.killEvent(e);\n    this.model.set('isSearchEnabled', !this.model.get('isSearchEnabled'));\n  },\n\n  // Filter actions\n\n  _onCleanSearchClick: function(e) {\n    if (e) e.preventDefault();\n    this._cleanSearch();\n  },\n\n  _cleanSearch: function() {\n    this.routerModel.set({\n      q: '',\n      tag: '',\n      shared: 'no',\n      library: this.createModel.showLibrary()\n    });\n    this.model.set('isSearchEnabled', false);\n  },\n\n  _submitSearch: function(e) {\n    if (e) this.killEvent(e);\n    var val = Utils.stripHTML(this.$('.js-search-input').val().trim(),'');\n    var tag = val.search(':') === 0 ? val.replace(':', '') : '';\n    var q = val.search(':') !== 0 ? val : '';\n\n    this.routerModel.set({\n      page: 1,\n      tag: tag,\n      q: q,\n      shared: 'yes'\n    });\n\n    this.createModel.set('listing', 'datasets');\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BaseDialog = require('../../views/base_dialog/view');\nvar ViewFactory = require('../../view_factory');\nvar randomQuote = require('../../view_helpers/random_quote');\n\n/**\n * Create a vis from a dataset, required for some contexts to have a vis before be able to carry out next task\n *  - duplicate vis\n *  - add layer\n */\nmodule.exports = BaseDialog.extend({\n\n  initialize: function() {\n    this.elder('initialize');\n    if (!this.model) throw new Error('model is required (cdb.admin.Visualization)');\n    if (!this.options.title) throw new Error('title is required');\n    if (!this.options.explanation) throw new Error('title is required');\n    if (!this.options.router) throw new Error('router callback is required');\n    this._initViews();\n    this._initBinds();\n  },\n\n  render_content: function() {\n    return this._panes.getActivePane().render().el;\n  },\n\n  _initViews: function() {\n    this._panes = new cdb.ui.common.TabPane({\n      el: this.el\n    });\n    this.addView(this._panes);\n    this._panes.addTab('confirm',\n      ViewFactory.createByTemplate('common/dialogs/create_vis_first/template', {\n        title: this.options.title,\n        explanation: this.options.explanation\n      })\n    );\n    this._panes.addTab('loading',\n      ViewFactory.createByTemplate('common/templates/loading', {\n        title: 'Creating map…',\n        quote: randomQuote()\n      })\n    );\n    this._panes.addTab('fail',\n      ViewFactory.createByTemplate('common/templates/fail', {\n        msg: 'Could not create map for some reason'\n      })\n    );\n    this._panes.active('confirm');\n  },\n\n  _initBinds: function() {\n    this._panes.bind('tabEnabled', this.render, this);\n  },\n\n  ok: function() {\n    this._panes.active('loading');\n    var self = this;\n    this.model.changeToVisualization({\n      success: function(vis) {\n        self.options.router.changeToVis(vis);\n        if (self.options.success) {\n          self.options.success(vis);\n        }\n        self.clean();\n      },\n      error: function() {\n        self._panes.active('fail');\n      }\n    });\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BaseDialog = require('../../views/base_dialog/view');\nvar ViewFactory = require('../../view_factory');\nvar randomQuote = require('../../view_helpers/random_quote');\n\nmodule.exports = BaseDialog.extend({\n\n  initialize: function() {\n    this.elder('initialize');\n\n    if (!this.options.table) {\n      throw new Error('table is required');\n    }\n\n    if (!this.options.column) {\n      throw new Error('column is required');\n    }\n    this._initViews();\n    this._initBinds();\n  },\n\n  render_content: function() {\n    return this._panes.getActivePane().render().el;\n  },\n\n  _initViews: function() {\n\n    this.table = this.options.table;\n    this.column = this.options.column;\n\n    this._panes = new cdb.ui.common.TabPane({\n      el: this.el\n    });\n    this.addView(this._panes);\n    this._panes.addTab('confirm',\n      ViewFactory.createByTemplate('common/dialogs/delete_column/template', {\n        column: this.column\n      })\n    );\n    this._panes.addTab('loading',\n      ViewFactory.createByTemplate('common/templates/loading', {\n        title: 'Deleting column…',\n        quote: randomQuote()\n      })\n    );\n    this._panes.addTab('fail',\n      ViewFactory.createByTemplate('common/templates/fail', {\n        msg: 'Could not delete column for some reason'\n      })\n    );\n    this._panes.active('confirm');\n  },\n\n  _initBinds: function() {\n    this._panes.bind('tabEnabled', this.render, this);\n  },\n\n  ok: function() {\n    this._panes.active('loading');\n    this.table.deleteColumn(this.column);\n    this.close();\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BaseDialog = require('../views/base_dialog/view');\nvar pluralizeString = require('../view_helpers/pluralize_string');\nvar randomQuote = require('../view_helpers/random_quote');\nvar MapCardPreview = require('../views/mapcard_preview');\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar moment = (typeof window !== \"undefined\" ? window['moment'] : typeof global !== \"undefined\" ? global['moment'] : null);\n\nvar AFFECTED_ENTITIES_SAMPLE_COUNT = 3;\nvar AFFECTED_VIS_COUNT = 3;\n\n/**\n * Delete items dialog\n */\nmodule.exports = BaseDialog.extend({\n\n  initialize: function() {\n    this.elder('initialize');\n    if (!this.options.viewModel) {\n      throw new TypeError('viewModel is required');\n    }\n    if (!this.options.user) {\n      throw new TypeError('user is required');\n    }\n\n    this._viewModel = this.options.viewModel;\n    this._viewModel.loadPrerequisites();\n    this._viewModel.bind('change', function() {\n      if (this._viewModel.state() === 'DeleteItemsDone') {\n        this.close();\n      } else {\n        this.render();\n      }\n    }, this);\n    this.add_related_model(this._viewModel);\n  },\n\n  render: function() {\n    BaseDialog.prototype.render.call(this);\n    this._loadMapPreviews();\n    return this;\n  },\n\n  /**\n   * @implements cdb.ui.common.Dialog.prototype.render_content\n   */\n  render_content: function() {\n    return this['_render' + this._viewModel.state()]();\n  },\n\n  _renderLoadingPrerequisites: function() {\n    return cdb.templates.getTemplate('common/templates/loading')({\n      title: 'Checking what consequences deleting the selected ' + this._pluralizedContentType() + ' would have...',\n      quote: randomQuote()\n    });\n  },\n\n  _renderLoadPrerequisitesFail: function() {\n    return cdb.templates.getTemplate('common/templates/fail')({\n      msg: 'Failed to check consequences of deleting the selected ' + this._pluralizedContentType()\n    });\n  },\n\n  _renderConfirmDeletion: function() {\n    // An entity can be an User or Organization\n    var affectedEntities = this._viewModel.affectedEntities();\n    var affectedVisData = this._viewModel.affectedVisData();\n\n    return cdb.templates.getTemplate('common/dialogs/delete_items_view_template')({\n      firstItemName: this._getFirstItemName(),\n      selectedCount: this._viewModel.length,\n      isDatasets: this._viewModel.isDeletingDatasets(),\n      pluralizedContentType: this._pluralizedContentType(),\n      affectedEntitiesCount: affectedEntities.length,\n      affectedEntitiesSample: affectedEntities.slice(0, AFFECTED_ENTITIES_SAMPLE_COUNT),\n      affectedEntitiesSampleCount: AFFECTED_ENTITIES_SAMPLE_COUNT,\n      affectedVisCount: affectedVisData.length,\n      pluralizedMaps: pluralizeString('map', affectedVisData.length),\n      affectedVisVisibleCount: AFFECTED_VIS_COUNT,\n      visibleAffectedVis: this._prepareVisibleAffectedVisForTemplate(affectedVisData.slice(0, AFFECTED_VIS_COUNT))\n    });\n  },\n\n  _prepareVisibleAffectedVisForTemplate: function(visibleAffectedVisData) {\n    return visibleAffectedVisData.map(function(visData) {\n      var vis = new cdb.admin.Visualization(visData);\n      var owner = vis.permission.owner;\n      return {\n        visId: vis.get('id'),\n        name: vis.get('name'),\n        url: vis.viewUrl(this.options.user).edit(),\n        owner: owner,\n        ownerName: owner.get('username'),\n        isOwner: vis.permission.isOwner(this.options.user),\n        showPermissionIndicator: !vis.permission.hasWriteAccess(this.options.user),\n        timeDiff: moment(vis.get('updated_at')).fromNow()\n      };\n    }, this);\n  },\n\n  /**\n   * @overrides BaseDialog.prototype.ok\n   */\n  ok: function() {\n    this._viewModel.deleteItems();\n    this.render();\n  },\n\n  _loadMapPreviews: function() {\n    var self = this;\n\n    this.$el.find('.MapCard').each(function() {\n      var username = $(this).data('visOwnerName');\n      var mapCardPreview = new MapCardPreview({\n        el: $(this).find('.js-header'),\n        width: 298,\n        height: 130,\n        mapsApiResource: cdb.config.getMapsResourceName(username),\n        visId: $(this).data('visId'),\n        username: username\n      }).load();\n\n      self.addView(mapCardPreview);\n    });\n  },\n\n  _renderDeletingItems: function() {\n    return cdb.templates.getTemplate('common/templates/loading')({\n      title: 'Deleting the selected ' + this._pluralizedContentType() + '...',\n      quote: randomQuote()\n    });\n  },\n\n  _renderDeleteItemsFail: function() {\n    var message = this._viewModel.errorMessage().replace(/\\n/g, '<br>');\n    if (message === 'something failed') {\n      message = '';\n    }\n    return cdb.templates.getTemplate('common/templates/fail')({\n      msg: 'Failed to delete the selected ' + this._pluralizedContentType() + '. ' + message\n    });\n  },\n\n  _pluralizedContentType: function() {\n    return pluralizeString(\n      this._viewModel.isDeletingDatasets() ? 'dataset' : 'map',\n      this._viewModel.length\n    );\n  },\n\n  _getFirstItemName: function() {\n    if (!this.options.viewModel) return;\n\n    var firstItem = this.options.viewModel.at(0);\n\n    if (firstItem) {\n      return firstItem.get(\"name\");\n    }\n  }\n\n});\n","var Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar batchProcessItems = require('../../common/batch_process_items');\n\n/**\n * View model for delete items view.\n * Manages the states changes for the delete items view.\n */\nmodule.exports = Backbone.Collection.extend({\n\n  initialize: function(models, opts) {\n    if (!opts.contentType) {\n      throw new TypeError('contentType is required')\n    }\n\n    this._contentType = opts.contentType;\n  },\n\n  state: function() {\n    return this._state;\n  },\n\n  errorMessage: function() {\n    return this._errorMessage;\n  },\n\n  setState: function(newState) {\n    this._state = newState;\n    this.trigger('change');\n    this.trigger(newState);\n  },\n\n  isDeletingDatasets: function() {\n    return this._contentType === 'datasets';\n  },\n\n  loadPrerequisites: function() {\n    var setStateToConfirmDeletion = this.setState.bind(this, 'ConfirmDeletion');\n\n    if (this.isDeletingDatasets()) {\n      this.setState('LoadingPrerequisites');\n\n      batchProcessItems({\n        howManyInParallel: 5,\n        items: this.toArray(),\n        processItem: this._loadPrerequisitesForModel,\n        done: setStateToConfirmDeletion,\n        fail: this.setState.bind(this, 'LoadPrerequisitesFail')\n      });\n    } else {\n      setStateToConfirmDeletion();\n    }\n  },\n\n  affectedEntities: function() {\n    return this.chain()\n      .map(function(m) {\n        return m.sharedWithEntities();\n      })\n      .flatten().compact().value();\n  },\n\n  affectedVisData: function() {\n    var visData = this.chain()\n      .map(function(m) {\n          var metadata = m.tableMetadata();\n          return []\n            .concat(metadata.get('dependent_visualizations'))\n            .concat(metadata.get('non_dependent_visualizations'));\n        })\n      .flatten().compact().value();\n\n    return _.uniq(visData, function(metadata) {\n      return metadata.id;\n    });\n  },\n\n  deleteItems: function() {\n    this.setState('DeletingItems');\n\n    // INFO: Don't put more than 1 delete in parallel because this lead to a\n    // race condicition in the derived map deletion (if any)\n    batchProcessItems({\n      howManyInParallel: 1,\n      items: this.toArray(),\n      processItem: this._deleteItem,\n      done: this.setState.bind(this, 'DeleteItemsDone'),\n      fail: this._deletionFailed.bind(this)\n    });\n  },\n\n  _deletionFailed: function(error) {\n    this._errorMessage = error;\n    this.setState('DeleteItemsFail');\n  },\n\n  _loadPrerequisitesForModel: function(m, callback) {\n    var metadata = m.tableMetadata();\n\n    // TODO: extract to be included in fetch call instead? modifying global state is not very nice\n    metadata.no_data_fetch = true;\n\n    metadata.fetch({\n      wait: true, // TODO: from old code (delete_dialog), why is it necessary?\n      success: function() {\n        callback();\n      },\n      error: function(model, jqXHR) {\n        callback(jqXHR.responseText);\n      }\n    });\n  },\n\n  _deleteItem: function(item, callback) {\n    item.destroy({ wait: true })\n      .done(function() {\n        callback();\n      })\n      .fail(function(response) {\n        var errorMessage;\n\n        try {\n          errorMessage = JSON.parse(response.responseText).errors.join('; ');\n        } catch (e) {\n          errorMessage = 'something failed';\n        }\n\n        callback(errorMessage);\n      });\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BaseDialog = require('../../views/base_dialog/view');\nvar ViewFactory = require('../../view_factory');\nvar randomQuote = require('../../view_helpers/random_quote');\n\n/**\n * Create a vis from a dataset, required for some contexts to have a vis before be able to carry out next task\n *  - duplicate vis\n *  - add layer\n */\nmodule.exports = BaseDialog.extend({\n\n  initialize: function() {\n    this.elder('initialize');\n\n    // Clean on hide and enter to confirm\n    // have to be mandatory\n    _.extend(\n      this.options,\n      {\n        clean_on_hide: true,\n        enter_to_confirm: true\n      }\n    );\n\n    if (!this.model) throw new Error('model is required (layer)');\n    this._initViews();\n    this._initBinds();\n  },\n\n  render_content: function() {\n    return this._panes.getActivePane().render().el;\n  },\n\n  _initViews: function() {\n    this._panes = new cdb.ui.common.TabPane({\n      el: this.el\n    });\n    this.addView(this._panes);\n    this._panes.addTab('confirm',\n      ViewFactory.createByTemplate('common/dialogs/delete_layer/template', {\n      })\n    );\n    this._panes.addTab('loading',\n      ViewFactory.createByTemplate('common/templates/loading', {\n        title: 'Deleting layer…',\n        quote: randomQuote()\n      })\n    );\n    this._panes.addTab('fail',\n      ViewFactory.createByTemplate('common/templates/fail', {\n        msg: 'Could not delete layer for some reason'\n      })\n    );\n    this._panes.active('confirm');\n  },\n\n  _initBinds: function() {\n    this._panes.bind('tabEnabled', this.render, this);\n  },\n\n  ok: function() {\n    this._panes.active('loading');\n    var self = this;\n    this.model.destroy({\n      wait: true,\n      success: function() {\n        self.close();\n      },\n      error: function() {\n        self._panes.active('fail');\n      }\n    });\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BaseDialog = require('../../views/base_dialog/view');\nvar ViewFactory = require('../../view_factory');\nvar randomQuote = require('../../view_helpers/random_quote');\n\n/**\n * Modal to delete a row/feature (e.g. a point or polygon), on the table or map view .\n */\nmodule.exports = BaseDialog.extend({\n\n  initialize: function() {\n    this.elder('initialize');\n\n    if (!this.options.table) {\n      throw new Error('table is required');\n    }\n\n    if (!this.options.row) {\n      throw new Error('row is required');\n    }\n\n    this.options.name = this.options.name || 'row';\n\n    this._initViews();\n    this._initBinds();\n  },\n\n  render_content: function() {\n    return this._panes.getActivePane().render().el;\n  },\n\n  _initViews: function() {\n    this.table = this.options.table;\n    this.row = this.options.row;\n\n    this._panes = new cdb.ui.common.TabPane({\n      el: this.el\n    });\n    this.addView(this._panes);\n    this._panes.addTab('confirm',\n      ViewFactory.createByTemplate('common/dialogs/delete_row/template', {\n        name: this.options.name\n      })\n    );\n    this._panes.addTab('loading',\n      ViewFactory.createByTemplate('common/templates/loading', {\n        title: 'Deleting ' + this.options.name + '…',\n        quote: randomQuote()\n      })\n    );\n    this._panes.addTab('fail',\n      ViewFactory.createByTemplate('common/templates/fail', {\n        msg: 'Could not delete ' + this.options.name + ' for some reason'\n      })\n    );\n    this._panes.active('confirm');\n  },\n\n  _initBinds: function() {\n    this._panes.bind('tabEnabled', this.render, this);\n  },\n\n  ok: function() {\n    var self = this\n    this._panes.active('loading');\n    this.table.trigger('removing:row');\n    this.row.destroy({\n      success: function() {\n        self.table.trigger('remove:row', self.row);\n        self.close();\n      },\n      error: function() {\n        self._panes.active('fail');\n      }\n    }, {\n      wait: this.options.wait\n    });\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar BaseDialog = require('../views/base_dialog/view');\nvar ViewFactory = require('../view_factory');\nvar randomQuote = require('../view_helpers/random_quote');\nvar ErrorDetailsView = require('../views/error_details_view');\n\n/**\n * Dialog to manage duplication process of a cdb.admin.CartoDBTableMetadata object.\n */\nmodule.exports = BaseDialog.extend({\n\n  initialize: function() {\n    this.elder('initialize');\n    if (!this.model) throw new Error('model is required (cdb.admin.CartoDBTableMetadata)');\n    if (!this.options.user) throw new Error('user is required');\n    this.elder('initialize');\n    this._initViews();\n    this._initBinds();\n    this._duplicateDataset();\n  },\n\n  render_content: function() {\n    return this._panes.getActivePane().render().el;\n  },\n\n  _initViews: function() {\n    this._panes = new cdb.ui.common.TabPane({\n      el: this.el\n    });\n    this.addView(this._panes);\n    this._panes.addTab('loading',\n      ViewFactory.createByTemplate('common/templates/loading', {\n        title: this.model.isInSQLView() ? 'Creating dataset from your query' : 'Duplicating your dataset',\n        quote: randomQuote()\n      })\n    );\n    this._panes.active('loading');\n  },\n\n  _initBinds: function() {\n    this._panes.bind('tabEnabled', this.render, this);\n  },\n\n  _duplicateDataset: function(newName) {\n    var self = this;\n    var newName = this.model.get('name') + '_copy';\n    this.model.duplicate(newName, {\n      success: function(newTable) {\n        self._redirectTo(newTable.viewUrl());\n      },\n      error: self._showError.bind(self)\n    });\n  },\n\n  _showError: function(model) {\n    var view;\n    try {\n      var err = _.clone(model.attributes);\n      view = new ErrorDetailsView({\n        err: _.extend(err, model.attributes.get_error_text),\n        user: this.options.user\n      });\n    } catch(err) {\n      view = ViewFactory.createByTemplate('common/templates/fail', {\n        msg: \"Sorry, something went wrong, but we're not sure why.\"\n      });\n    }\n    this._panes.addTab('fail', view.render());\n    this._panes.active('fail');\n  },\n\n  _redirectTo: function(url) {\n    window.location = url;\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar BaseDialog = require('../views/base_dialog/view');\nvar ViewFactory = require('../view_factory');\nvar randomQuote = require('../view_helpers/random_quote');\nvar ErrorDetailsView = require('../views/error_details_view');\n\n/**\n * Dialog to manage duplication process of a cdb.admin.Visualization object.\n */\nmodule.exports = BaseDialog.extend({\n\n  initialize: function() {\n    this.elder('initialize');\n    if (!this.model) throw new Error('model is required (cdb.admin.Visualization)');\n    if (!this.options.user) throw new Error('user is required');\n    this.elder('initialize');\n    this._initViews();\n    this._initBinds();\n    this._duplicateMap();\n  },\n\n  render_content: function() {\n    return this._panes.getActivePane().render().el;\n  },\n\n  _initViews: function() {\n    this._panes = new cdb.ui.common.TabPane({\n      el: this.el\n    });\n    this.addView(this._panes);\n    this._panes.addTab('loading',\n      ViewFactory.createByTemplate('common/templates/loading', {\n        title: 'Duplicating your map',\n        quote: randomQuote()\n      })\n    );\n    this._panes.active('loading');\n  },\n\n  _initBinds: function() {\n    this._panes.bind('tabEnabled', this.render, this);\n  },\n\n  _duplicateMap: function(newName) {\n    var self = this;\n    var newName = this.model.get('name') + ' copy';\n    this.model.copy({\n      name: newName\n    }, {\n      success: function(newVis) {\n        self._redirectTo(newVis.viewUrl(self.options.user).edit().toString());\n      },\n      error: self._showError.bind(self)\n    });\n  },\n\n  _showError: function(model) {\n    var view;\n    try {\n      var err = _.clone(model.attributes);\n      view = new ErrorDetailsView({\n        err: _.extend(err, model.attributes.get_error_text),\n        user: this.options.user\n      });\n    } catch(err) {\n      view = ViewFactory.createByTemplate('common/templates/fail', {\n        msg: \"Sorry, something went wrong, but we're not sure why.\"\n      });\n    }\n    this._panes.addTab('fail', view.render());\n    this._panes.active('fail');\n  },\n\n  _redirectTo: function(url) {\n    window.location = url;\n  }\n});\n","var $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\n\n\n/**\n *  Edit visualization (dataset or map) dialog\n *\n */\nmodule.exports = cdb.core.View.extend({\n\n  options: {\n    maxLength: 200\n  },\n\n  events: {\n    'keydown .js-name': '_onNameKeyDown',\n    'click .js-privacy': '_showPrivacy',\n    'submit': '_onSubmit'\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.template = cdb.templates.getTemplate('common/dialogs/edit_vis_metadata/edit_vis_form');\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this._destroyTags();\n    this.$el.html(\n      this.template({\n        isDataset: this.model.isDataset(),\n        isDataLibraryEnabled: this.user.featureEnabled('data_library'),\n        visValue: this.model.get('name'),\n        visDescription: this.model.get('description'),\n        visPrivacy: this.model.get('privacy').toLowerCase(),\n        visSource: this.model.get('source'),\n        visAttributions: this.model.get('attributions'),\n        visDisplayName: this.model.get('display_name'),\n        isNameEditable: this.model.isNameEditable(),\n        isMetadataEditable: this.model.isMetadataEditable(),\n        maxLength: this.options.maxLength\n      })\n    );\n    this._initViews();\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('error', this._setFields, this);\n    this.model.bind('valid', this._setFields, this);\n  },\n\n  _initViews: function() {\n    var self = this;\n\n    // Markdown tooltip\n    this.addView(\n      new cdb.common.TipsyTooltip({\n        el: this.$('.js-markdown'),\n        html: true,\n        title: function() {\n          return $(this).data('title');\n        }\n      })\n    );\n\n    // Name error tooltip\n    this.addView(\n      new cdb.common.TipsyTooltip({\n        el: this.$('.js-name'),\n        title: function() {\n          return self.model.getError();\n        }\n      })\n    );\n\n    // Tags\n    _.each(this.model.get('tags'), function(li) {\n      this.$(\".js-tagsList\").append(\"<li>\" + cdb.core.sanitize.html(li) + \"</li>\");\n    }, this);\n\n    var tagsPlaceholder = (!this.model.isMetadataEditable() && this.model.get('tags').length === 0) ? 'No tags' : 'Add tags';\n\n    this.$(\".js-tagsList\").tagit({\n      allowSpaces: true,\n      placeholderText: tagsPlaceholder,\n      readOnly: !this.model.isMetadataEditable(),\n      onBlur: function() {\n        if (self.model.isMetadataEditable()) {\n          self.$('.js-tags').removeClass('is-focus')\n        }\n      },\n      onFocus: function() {\n        if (self.model.isMetadataEditable()) {\n          self.$('.js-tags').addClass('is-focus')\n        }\n      },\n      onSubmitTags: function(ev, tagList) {\n        ev.preventDefault();\n        self._onSubmit();\n        return false;\n      }\n    });\n\n    // Licenses dropdown\n    if (this.model.isDataset()) {\n      this._licenseDropdown = new cdb.forms.Combo({\n        className: 'Select',\n        width: '100%',\n        property: 'license',\n        model: this.model,\n        disabled: !this.model.isMetadataEditable(),\n        extra: this._getLicensesForFormsCombo()\n      });\n      this.addView(this._licenseDropdown);\n      this.$('.js-license').append(this._licenseDropdown.render().el);\n    }\n  },\n\n  _getLicensesForFormsCombo: function() {\n    var items = cdb.config.get('licenses');\n    var emptyOption = [{\n      id: '',\n      name: '-'\n    }];\n    return _.chain(emptyOption.concat(items))\n      .compact()\n      .map(function(d) {\n        return [d.name, d.id];\n      })\n      .value();\n  },\n\n  _setFields: function() {\n    // for the moment only name input is required\n    this.$('.js-name').toggleClass('is-invalid', !!this.model.getError());\n  },\n\n  _showPrivacy: function(ev) {\n    this.killEvent(ev);\n    this.trigger('onPrivacy', this);\n  },\n\n  // Form events\n\n  _onNameKeyDown: function(ev) {\n    if (ev.keyCode === $.ui.keyCode.ENTER) {\n      ev.preventDefault();\n      this._onSubmit();\n      return false;\n    }\n  },\n\n  _onSubmit: function(ev) {\n    if (ev) {\n      this.killEvent(ev);\n    }\n\n    // values\n    var attrs = {};\n    if (this.model.isNameEditable()) {\n      attrs['name'] = Utils.stripHTML(this.$('.js-name').val());\n    }\n    if (this.model.isMetadataEditable()) {\n      attrs['description'] = Utils.removeHTMLEvents(this.$('.js-description').val());\n      attrs['tags'] = this.$('.js-tagsList').tagit(\"assignedTags\");\n\n      if (this.model.isDataset()) {\n        attrs.source = this.$('.js-source').val();\n        attrs.attributions = this.$('.js-attributions').val();\n        attrs.display_name = this.$('.js-displayName').val();\n        // license is set through dropdown view, so no need to do an explicit set here\n      }\n    }\n\n    this.model.set(attrs);\n\n    if (this.model.isValid()) {\n      this.trigger('onSubmit', this.model, this);\n    }\n  },\n\n  // Clean functions\n\n  _destroyTags: function() {\n    this.$('.js-tagsList').tagit('destroy');\n  },\n\n  clean: function() {\n    this._destroyTags();\n    this.elder('clean');\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n *  Edit vis metadata dialog model\n *  to control if name and metadata\n *  are editable or not.\n *\n */\n\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    name: '',\n    description: '',\n    tags: '',\n    privacy: ''\n  },\n\n  initialize: function(attrs, opts) {\n    if (!opts || !opts.vis || !opts.user || !opts.dataLayer) {\n      throw new Error('Visualization, user and dataLayer models are required');\n    }\n    this.vis = opts.vis;\n    this.user = opts.user;\n    this.dataLayer = opts.dataLayer;\n\n    var data = {\n      name: this.vis.get('name'),\n      description: this.vis.get('description'),\n      tags: this.vis.get('tags'),\n      privacy: this.vis.get('privacy')\n    };\n    if (!this.vis.isVisualization()) {\n      // Additional fields, only for dataset, w/ fallbacks for defaults\n      data.source = this.vis.get('source') || '';\n      data.attributions = this.vis.get('attributions') || '';\n      data.license = this.vis.get('license') || '';\n      data.display_name = this.vis.get('display_name') || '';\n    }\n    this.set(data);\n\n    // Validation control variable\n    this.validationError = '';\n    this._initBinds();\n  },\n\n  _initBinds: function() {\n    this.bind('valid', function() {\n      this.validationError = '';\n    }, this);\n    this.bind('error', function(m, error) {\n      this.validationError = error;\n    }, this);\n  },\n\n  // Validation\n  _validate: function(attrs) {\n    var valid = cdb.core.Model.prototype._validate.apply(this, arguments);\n    if (valid) {\n      this.trigger('valid')\n      return true;\n    } else {\n      return false;\n    }\n  },\n\n  validate: function(attrs) {\n    if (!attrs) return;\n\n    if (!attrs.name) {\n      return \"Name can't be blank\"\n    }\n  },\n\n  getError: function() {\n    return this.validationError;\n  },\n\n  isValid: function() {\n    if (!this.validate) {\n      return true;\n    }\n    return !this.validate(this.attributes) && this.validationError === \"\";\n  },\n\n  // Helper functions\n  isDataset: function() {\n    return !this.vis.isVisualization();\n  },\n\n  isVisEditable: function() {\n    return this.vis.permission.isOwner(this.user);\n  },\n\n  isAttributeEditable: function(type) {\n    if (this.vis.isVisualization()) {\n      return this.isVisEditable();\n    } else {\n      var isReadOnly = type === \"name\" ? this.dataLayer.isReadOnly() : false;\n      if (!this.dataLayer) {\n        return false;\n      } else if (this.dataLayer && (isReadOnly || !this.dataLayer.permission.isOwner(this.user))) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  },\n\n  isNameEditable: function() {\n    return this.isAttributeEditable('name');\n  },\n\n  isMetadataEditable: function() {\n    return this.isAttributeEditable('rest');\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BaseDialog = require('../../views/base_dialog/view');\nvar ViewFactory = require('../../view_factory');\nvar FormView = require('./edit_vis_form_view');\nvar EditVisMetadataModel = require('./edit_vis_metadata_dialog_model');\nvar randomQuote = require('../../view_helpers/random_quote');\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n\n/**\n *  Edit visualization (dataset or map) dialog\n *\n */\nmodule.exports = BaseDialog.extend({\n\n  events: BaseDialog.extendEvents({\n    'click .js-back': '_showForm'\n  }),\n\n  className: 'Dialog is-opening EditVisMetadata',\n\n  initialize: function() {\n    this.elder('initialize');\n\n    if (!this.options.vis) {\n      throw new TypeError('vis model is required');\n    }\n\n    this.vis = this.options.vis;\n    this.user = this.options.user;\n    this.dataLayer = this.options.dataLayer;\n    this.model = new EditVisMetadataModel({}, {\n      vis: this.vis,\n      dataLayer: this.dataLayer,\n      user: this.user\n    });\n    this.template = cdb.templates.getTemplate('common/dialogs/edit_vis_metadata/edit_vis_metadata_dialog');\n  },\n\n  render: function() {\n    this.clearSubViews();\n    BaseDialog.prototype.render.call(this);\n    this.$('.content').addClass('Dialog-content--expanded');\n    this._initViews();\n    return this;\n  },\n\n  render_content: function() {\n    var visType = this.vis.isVisualization() ? 'map' : 'dataset';\n    return this.template({\n      visType: visType,\n      visTypeCapitalized: visType.charAt(0).toUpperCase() + visType.slice(1),\n      isNameEditable: this.model.isNameEditable(),\n      isMetadataEditable: this.model.isMetadataEditable()\n    });\n  },\n\n  _initViews: function() {\n    // Panes\n    this._panes = new cdb.ui.common.TabPane({\n      el: this.$('.js-content')\n    });\n\n    // Create form\n    var form = new FormView({\n      el: this.$('.js-form'),\n      model: this.model,\n      user: this.user,\n      maxLength: this.options.maxLength\n    });\n\n    form.bind('onPrivacy', this._showPrivacy, this);\n    form.bind('onSubmit', this._saveAttributes, this);\n    this._panes.addTab('form', form.render());\n\n    // Create loading\n    this._panes.addTab('loading',\n      ViewFactory.createByTemplate('common/templates/loading', {\n        title: 'Saving new data...',\n        quote: randomQuote()\n      }).render()\n    );\n\n    // Create error\n    this._panes.addTab('error',\n      ViewFactory.createByTemplate('common/templates/fail', {\n        msg: 'Sorry, something went wrong but you can get <button class=\"Button--link js-back\">back to the form</button>.'\n      }).render()\n    );\n\n    this._panes.active('form');\n  },\n\n  _saveAttributes: function() {\n    var self = this;\n    var newAttrs = _.omit(this.model.toJSON(), 'privacy');\n    var oldAttrs = {\n      name: this.vis.get('name'),\n      description: this.vis.get('description'),\n      tags: this.vis.get('tags')\n    };\n    if (this.model.isDataset()) {\n      oldAttrs.source = this.vis.get('source');\n      oldAttrs.attributions = this.vis.get('attributions');\n      oldAttrs.license = this.vis.get('license');\n    }\n\n    if (!_.isEmpty(this.vis.changedAttributes(newAttrs))) {\n      this._panes.active('loading');\n      this.vis.save(newAttrs,{\n        success: function() {\n          self.options.onDone && self.options.onDone(oldAttrs.name !== newAttrs.name);\n          self.hide();\n        },\n        error: function() {\n          self.vis.set(oldAttrs);\n          self._panes.active('error');\n        }\n      })\n    } else {\n      this.hide();\n    }\n  },\n\n  _showPrivacy: function() {\n    this.options.onShowPrivacy && this.options.onShowPrivacy();\n    this.hide();\n  },\n\n  _showForm: function() {\n    this._panes.active('form');\n  }\n\n});\n","var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BaseDialog = require('../../views/base_dialog/view');\n\n/**\n * shows a dialog to get the table exported\n * new ExportDialog({\n *  table: table_model\n * })\n *\n * (Migrated almost-as-is from old editor to not break functionality)\n */\nmodule.exports = BaseDialog.extend({\n\n  _CSV_FILTER: \"SELECT * FROM (%%sql%%) as subq \",\n  _MAX_SQL_GET_LENGTH: 1000,\n  events: BaseDialog.extendEvents({\n    'click .js-option:not(.is-disabled)': '_export'\n  }),\n\n  /**\n   * Allowed formats on the exporter\n   * @type {Array}\n   */\n  formats: [\n    {format: 'csv', fetcher: 'fetchCSV', geomRequired: false, illustrationIconModifier: 'IllustrationIcon--neutral' },\n    {format: 'shp', fetcher: 'fetch', geomRequired: true, illustrationIconModifier: 'IllustrationIcon--magenta' },\n    {format: 'kml', fetcher: 'fetch', geomRequired: true, illustrationIconModifier: 'IllustrationIcon--sunrise' },\n    {format: 'geojson', label: 'geo json', fetcher: 'fetch', geomRequired: true, illustrationIconModifier: 'IllustrationIcon--cyan' },\n    {format: 'svg', fetcher: 'fetchSVG', geomRequired: true, illustrationIconModifier: 'IllustrationIcon--royalDark' }\n  ],\n\n  initialize: function() {\n    _.extend(this.options, {\n      clean_on_hide: true,\n      table_id: this.model.id\n    });\n    this.elder('initialize');\n    _.bindAll(this, '_export');\n    this.baseUrl = cdb.config.getSqlApiUrl();\n    this.model.bind('change:geometry_types', this.refresh, this);\n  },\n\n  /**\n   * search a format based on its name in the format array\n   * @param  {string} format Format name\n   * @return {Object}\n   */\n  getFormat: function(format) {\n    for(var n in this.formats) {\n      if(this.formats[n].format === format) {\n        return this.formats[n]\n      }\n    }\n  },\n\n  /**\n   * Answer to button event and lauchn the export method associated to that format\n   * @param  {Event} ev\n   */\n  _export: function(ev) {\n    this.killEvent(ev);\n    var $button = $(ev.currentTarget);\n    var formatName = $button.data('format');\n    var format = this.getFormat(formatName);\n    this[format.fetcher](formatName);\n  },\n\n\n  /**\n   * Create a dictionary with the options shared between all the methods\n   * @return {Object}\n   */\n  getBaseOptions: function() {\n    var options = {};\n    options.filename = this.model.get('name');\n\n    if (this.options.user_data) {\n      options.api_key = this.options.user_data.api_key;\n    }\n\n    return options;\n  },\n\n  /**\n   * Returns the base sql to retrieve the data\n   * @return {string}\n   */\n  getPlainSql: function() {\n    if(this.options.sql) {\n      sql = this.options.sql;\n    } else {\n      if(this.model.sqlView) {\n        sql = this.model.sqlView.getSQL();\n      } else {\n        sql = \"select * from \" + this.model.get('name')\n      }\n    }\n    return sql;\n  },\n\n  /**\n   * Returns a specific sql filtered by the_geom, used on CSV exports\n   * @return {string}\n   */\n  getGeomFilteredSql: function() {\n    var sql = this.getPlainSql();\n    // if we have \"the_geom\" in our current schema, we apply a custom sql\n    if(this.model.isGeoreferenced()) {\n      return this._CSV_FILTER.replace(/%%sql%%/g, sql);\n    }\n    // Otherwise, we apply regular sql\n    return sql;\n  },\n\n  /**\n   * Populates the hidden form with the format related values and submits them to get the file\n   * @param  {Object} options Base options\n   * @param  {String} sql Sql of the document to be retrieved\n   */\n  _fetch: function(options, sql) {\n    this._showElAndHideRest('.js-preparing-download');\n    this.$('.format').val(options.format);\n    this.$('.q').val(sql);\n    this.$('.filename').val(options.filename);\n    this.$('.api_key').val(options.api_key);\n\n    if (options.format === 'csv') {\n      this.$('.skipfields').val(\"the_geom_webmercator\");\n    } else {\n      this.$('.skipfields').val(\"the_geom,the_geom_webmercator\");\n    }\n\n    if (window.user_data && window.user_data.email) {\n      // Event tracking \"Exported table data\"\n      cdb.god.trigger('metrics', 'export_table', {\n        email: window.user_data.email\n      });\n    }\n\n    // check if the sql is big or not, and send the request as a verb or other. This is a HACK.\n    if (sql.length < this._MAX_SQL_GET_LENGTH) {\n      var location = this.$('form').attr('action') + '?' + this.$('form').serialize()\n      this._fetchGET(location);\n    } else {\n      // I can't find a way of making the iframe trigger load event when its get a form posted,\n      // so we need to leave like it was until\n      this.submit();\n    }\n\n    this.$('.db').attr('disabled', 'disabled');\n    this.$('.skipfields').attr('disabled', 'disabled');\n\n    if (this.options.autoClose) {\n      this.close();\n      this.trigger('generating', this.$('.js-preparing-download').html());\n    }\n\n  },\n\n  showError: function(error) {\n    this.$('.js-error').html(\n      this.getTemplate('common/templates/fail')({\n        msg: error\n      })\n    );\n    this._showElAndHideRest('.js-error');\n  },\n\n  _fetchGET: function(url) {\n    function getError(content) {\n      // sql api returns a json when it fails\n      // but if the browser is running some plugin that\n      // formats it, the window content is the html\n      // so search for the word \"error\"\n      var error = null;\n      try {\n        var json = JSON.parse(content);\n        error = json.error[0];\n      } catch(e) {\n        if (content && content.indexOf('error') !== -1) {\n          error = \"an error occurred\";\n        }\n      }\n      return error;\n    }\n\n    var self = this;\n    var checkInterval;\n\n    var w = window.open(url);\n    w.onload = function() {\n      clearInterval(checkInterval);\n      var error = getError(w.document.body.textContent);\n      if(error) {\n        self.showError(error);\n      } else {\n        self.close();\n      }\n      w.close();\n    };\n    window.focus();\n    checkInterval = setInterval(function check() {\n      // safari needs to check the body because it never\n      // calls onload\n      if (w.closed || (w.document && w.document.body.textContent.length === 0)) {\n        self.close();\n        clearInterval(checkInterval);\n      }\n    }, 100);\n  },\n\n  /**\n   * Submits the form. This method is separated to ease the testing\n   */\n  submit: function() {\n    this.$('form').submit();\n  },\n\n  /**\n   * Base fetch, for the formats that don't require special threatment\n   * @param  {String} formatName\n   */\n  fetch: function(formatName) {\n    var options = this.getBaseOptions();\n    options.format = formatName;\n    var sql = this.getPlainSql();\n    this._fetch(options, sql);\n  },\n\n  /**\n   * Gets the options needed for csv format and fetch the document\n   * @param  {String} formatName\n   */\n  fetchCSV: function() {\n    var options = this.getBaseOptions();\n    options.format = 'csv';\n    var sql = this.getGeomFilteredSql();\n    this.$('.skipfields').removeAttr('disabled');\n    this._fetch(options, sql);\n  },\n  /**\n   * Gets the options needed for svg format and fetch the document\n   * @param  {String} formatName\n   */\n  fetchSVG: function(){\n    this.$('.db').removeAttr('disabled');\n    this.fetch('svg');\n  },\n  /**\n   * Returns the html populated with current data\n   * @return {String}\n   */\n  render_content: function() {\n    var isGeoreferenced = this.model.isGeoreferenced();\n    if (_.isBoolean(isGeoreferenced)) {\n      return this.getTemplate('common/dialogs/export/export_template')({\n        preparingDownloadContent: this._renderLoadingContent('We are preparing your download. Depending on the size, it could take some time.'),\n        formats: this.formats,\n        url: this.baseUrl,\n        isGeoreferenced: isGeoreferenced\n      });\n    } else {\n      return this._renderLoadingContent('Checking georeferences…');\n    }\n  },\n\n  refresh: function() {\n    this.$('.content').html(this.render_content());\n  },\n\n  _renderLoadingContent: function(title) {\n    return this.getTemplate('common/templates/loading')({\n      title: title,\n      quote: cdb.editor.randomQuote()\n    });\n  },\n\n  _showElAndHideRest: function(classNameToShow) {\n    [\n      '.js-start',\n      '.js-preparing-download',\n      '.js-error'\n    ].forEach(function(className) {\n      this.$(className)[ className === classNameToShow ? 'show' : 'hide' ]();\n    }, this);\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BaseDialog = require('../../views/base_dialog/view');\nvar randomQuote = require('../../view_helpers/random_quote');\n\n/**\n * Lock/unlock datasets/maps dialog.\n */\nmodule.exports = BaseDialog.extend({\n\n  events: BaseDialog.extendEvents({\n    'click .js-ok': '_confirm',\n    'click .js-download': '_download',\n    'click .js-cancel': '_abortExport'\n  }),\n\n  initialize: function (attrs) {\n    this.elder('initialize');\n\n    this._initBinds();\n  },\n\n  render_content: function () {\n    var state = this.model.get('state');\n\n    if (state === 'complete') {\n      var w = window.open(this.model.get('url'));\n\n      // If w is undefined, popup was blocked: we show a \"click to download\" modal. Else, download has started.\n      if (w === undefined) return cdb.templates.getTemplate('common/dialogs/export_map/templates/download');\n\n      w.focus();\n      this.close();\n    } else if (state === 'failure') {\n      return cdb.templates.getTemplate('common/templates/fail')({\n        msg: 'Export has failed'\n      });\n    } else if (state === 'pending' || state === 'exporting' || state === 'uploading') {\n      var loadingTitle = state.charAt(0).toUpperCase() + state.slice(1) + ' ...';\n\n      return this.getTemplate('common/templates/loading')({\n        title: loadingTitle,\n        quote: randomQuote()\n      });\n    } else {\n      return cdb.templates.getTemplate('common/dialogs/export_map/templates/confirm');\n    }\n  },\n\n  _confirm: function () {\n    this.model.requestExport();\n  },\n\n  _download: function () {\n    window.open(this.model.get('url'));\n    window.focus();\n\n    this.close();\n  },\n\n  _abortExport: function () {\n    this.model.cancelExport();\n    this.close();\n  },\n\n  _initBinds: function () {\n    this.model.bind('change:state', function () { this.render(); }, this);\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n *  Add column view\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'AddColumn js-addField',\n\n  events: {\n    'click .js-addColumn': '_addColumn'  \n  },\n\n  initialize: function() {\n    this.model = new cdb.core.Model({\n      state: 'idle'\n    });\n    this.table = this.options.table;\n    this.template = cdb.templates.getTemplate('common/dialogs/feature_data/add_column/add_column');\n    this._initBinds();\n  },\n\n  render: function() {\n    this.$el.html(\n      this.template({\n        state: this.model.get('state')\n      })\n    )\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:state', this.render, this);\n  },\n\n  _addColumn: function() {\n    var self = this;\n    // Loading\n    this.model.set('state', 'loading');\n\n    this.table.addColumn('column_' + new Date().getTime(), 'string', {\n      success: function(mdl, data) {\n        self.trigger('newColumn', mdl, this);\n        self.model.set('state', 'idle');\n      },\n      error: function() {\n        self.model.set('state', 'error');\n      }\n    });\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BaseDialog = require('../../views/base_dialog/view');\nvar FormView = require('./form_view');\nvar ViewFactory = require('../../view_factory');\nvar randomQuote = require('../../view_helpers/random_quote');\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n\n/**\n *  Feature data edition dialog\n */\nmodule.exports = BaseDialog.extend({\n\n  events: BaseDialog.extendEvents({\n    'click .js-back': '_showForm'\n  }),\n\n  className: 'Dialog is-opening FeatureData',\n\n  initialize: function() {\n    this.elder('initialize');\n\n    if (!this.options.table) {\n      throw new TypeError('table is required');\n    }\n\n    this.row = this.options.row;\n    this.table = this.options.table;\n    this.baseLayer = this.options.baseLayer;\n    this.dataLayer = this.options.dataLayer;\n    this.provider = this.options.provider;\n    this.currentZoom = this.options.currentZoom;\n    this.user = this.options.user;\n    this._template = cdb.templates.getTemplate('common/dialogs/feature_data/feature_data_dialog');\n  },\n\n  render: function() {\n    this.clearSubViews();\n    BaseDialog.prototype.render.call(this);\n    this.$('.content').addClass('Dialog-content--expanded');\n    this._initViews();\n    return this;\n  },\n\n  render_content: function() {\n    return this._template({\n      featureType: this.row.getFeatureType(),\n      quote: randomQuote()\n    });\n  },\n\n  _initViews: function() {\n    var self = this;\n\n    // Panes\n    this._panes = new cdb.ui.common.TabPane({\n      el: this.$('.js-content')\n    });\n\n    // Create map\n    setTimeout(function() {\n      self._createPreviewMap()\n    }, 200);\n\n    // Create form\n    this.form = new FormView({\n      el: this.$('.js-form'),\n      table: this.table,\n      row: this.row\n    });\n\n    this.form.bind('onSubmit', this._changeAttributes, this);\n    this.form.bind('onError', this._scrollToError, this);\n    this._panes.addTab('form', this.form.render());\n\n    this.addView(this.form);\n\n    // Create loading\n    this._panes.addTab('loading',\n      ViewFactory.createByTemplate('common/templates/loading', {\n        title: 'Saving new data...',\n        quote: randomQuote()\n      }).render()\n    );\n\n    // Create error\n    this._panes.addTab('error',\n      ViewFactory.createByTemplate('common/templates/fail', {\n        msg: 'Sorry, something went wrong but you can get <button class=\"Button--link js-back\">back to the form</button>.'\n      }).render()\n    );\n\n    this._panes.active('form');\n  },\n\n  _scrollToError: function(mdl) {\n    this.$('.js-content').animate({\n      scrollTop: ( this.$(\".EditField-label[value='\" + mdl.get('attribute') + \"']\").position().top - 20 )\n    });\n  },\n\n  _changeAttributes: function(attrs) {\n    var self = this;\n    var newData = _.object(_.pluck(attrs, 'attribute'), _.pluck(attrs, 'value'));\n    var oldData = {};\n\n    // Change state\n    this._panes.active('loading');\n\n    // Unset columns already not present in the\n    // new form data\n    _.each(this.row.attributes, function(val, key) {\n      if (newData[key] === undefined && !cdb.admin.Row.isReservedColumn(key) && key !== \"id\") {\n        self.row.unset(key) \n      }\n      oldData[key] = val;\n    });\n\n    if (!_.isEmpty(this.row.changedAttributes(newData))) {\n      // Save new attributes\n      this.row.save(newData, {\n        success: function() {\n          self._ok();\n        },\n        error: function() {\n          self.row.set(oldData);\n          self._panes.active('error');\n        }\n      });\n    } else {\n      self._cancel();\n    }\n  },\n\n  _createPreviewMap: function() {\n    var self = this;\n\n    // Create map\n    var div = this.$('.js-map');\n\n    var mapViewClass = cdb.admin.LeafletMapView;\n    if (this.provider === 'googlemaps') {\n      var mapViewClass = cdb.admin.GoogleMapsMapView;\n    }\n\n    // New map\n    this.map = new cdb.admin.Map();\n\n    this.mapView = new mapViewClass({\n      el: div,\n      map: this.map,\n      user: this.user\n    });\n\n    // Base layer\n    this.baseLayer.set('attribution', '');\n    this.map.addLayer(this.baseLayer);\n\n    // Data layer\n    this.dataLayer.set('query', 'SELECT * FROM ' + this.table.get('name') + ' WHERE cartodb_id=' + this.row.get('cartodb_id'));\n    this.dataLayer.set('attribution', '');\n    this.map.addLayer(this.dataLayer);\n\n    // Set bounds\n    var sql = new cdb.admin.SQL({\n      user: this.user.get('username'),\n      api_key: this.user.get('api_key')\n    });\n    sql.getBounds('SELECT * FROM ' + this.table.get('name') + ' WHERE cartodb_id=' + this.row.get('cartodb_id')).done(function(r) {\n      if (r) {\n        if (r[0][0] === r[1][0] && r[0][1] === r[1][1]) {\n          // Point geometry\n          self.map.setCenter(r[0]);\n        } else {\n          // Rest of geometries\n          self.map.setBounds(r);\n        }\n        self.map.setZoom(self.currentZoom);\n      }\n    });\n  },\n\n  _showForm: function() {\n    this._panes.active('form');\n  },\n\n  _ok: function() {\n    this.options.onDone && this.options.onDone();\n    this.elder('_ok');\n  },\n\n  _cancel: function() {\n    this.elder('_cancel');\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\n\n/**\n *  Collection with all fields model\n *  included.\n *\n */\n\nmodule.exports = Backbone.Collection.extend({\n\n  isValid: function() {\n    return !this.getInvalid();\n  },\n\n  getInvalid: function() {\n    return this.find(function(mdl) {\n      return !mdl.isValid()\n    });\n  }\n\n})","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar StringFieldView = require('../../../edit_fields/string_field/string_field_view');\nvar NumberFieldView = require('../../../edit_fields/number_field/number_field_view');\nvar BooleanFieldView = require('../../../edit_fields/boolean_field/boolean_field_view');\nvar DateFieldView = require('../../../edit_fields/date_field/date_field_view');\n\n/**\n *  Form field view for edit feature metadata\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'keydown .js-columnName': '_onInputChange',\n    'focusout .js-columnName': '_onColNameChange',\n  },\n\n  _FIELD_VIEW: {\n    'string': StringFieldView,\n    'number': NumberFieldView,\n    'boolean': BooleanFieldView,\n    'date': DateFieldView,\n    'timestamp with time zone': DateFieldView,\n    'timestamp without time zone': DateFieldView\n  },\n\n  initialize: function() {\n    this.model = new cdb.core.Model({\n      columnError: '',\n      typeError: '',\n      fieldError: ''\n    });\n    this.table = this.options.table;\n    this.row = this.options.row;\n    this.fieldModel = this.options.fieldModel;\n    this.template = cdb.templates.getTemplate('common/dialogs/feature_data/form_field/form_field');\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.$el.html(\n      this.template({\n        type: this.fieldModel.get('type'),\n        value: this.fieldModel.get('value'),\n        attribute: this.fieldModel.get('attribute'),\n        readOnly: this.fieldModel.get('readOnly'),\n        typeError: this.model.get('typeError'),\n        columnError: this.model.get('columnError')\n      })\n    );\n    this._initViews();\n    return this;\n  },\n\n  _initBinds: function() {\n    this.fieldModel.bind('change:readOnly', this.render, this);\n    this.fieldModel.bind('change:type', this._onTypeChanged, this);\n    this.add_related_model(this.fieldModel);\n  },\n\n  _initViews: function() {\n    var self = this;\n\n    // Field view\n    var editorField = this._FIELD_VIEW[this.fieldModel.get('type')] || this._FIELD_VIEW['string'];\n    var v = new editorField({\n      readOnly: this.fieldModel.get('readOnly'),\n      model: this.fieldModel\n    }).bind('onSubmit', function(e) {\n      this.trigger('onSubmit');\n    }, this);\n\n    this.$('.js-editField').append(v.render().el);\n    this.addView(v);\n\n    // Field tooltip\n    var fieldTooltip = new cdb.common.TipsyTooltip({\n      el: this.$('.js-editField'),\n      title: function() {\n        return self.fieldModel.getError()\n      }\n    });\n    this.addView(fieldTooltip);\n\n    // Column type combo\n    // Current value has to be available in the extra array,\n    // if not select will place first item as value\n    var types = [this.fieldModel.get('type')].concat(_.filter(['string', 'boolean', 'number', 'date'], function(type){\n      return self.table.isTypeChangeAllowed(self.fieldModel.get('attribute'), type)\n    }));\n    var combo = new cdb.forms.Combo({\n      el: this.$('.js-fieldType'),\n      model: this.fieldModel,\n      property: 'type',\n      disabled: this.fieldModel.get('readOnly'),\n      width: '85px',\n      extra: types\n    });\n\n    this.$(\".js-fieldType\").append(combo.render());\n    combo.bind('change', function(type) {\n      this.fieldModel.set({\n        value: null,\n        type: type\n      })\n    }, this);\n    this.addView(combo);\n\n    // Column type tooltip\n    var typeTooltip = new cdb.common.TipsyTooltip({\n      el: this.$('.js-fieldType'),\n      title: function() {\n        return self.model.get('typeError')\n      }\n    });\n    this.addView(typeTooltip);\n\n    // Column name tooltip\n    var typeTooltip = new cdb.common.TipsyTooltip({\n      el: this.$('.js-columnName'),\n      title: function() {\n        return self.model.get('columnError');\n      }\n    });\n    this.addView(typeTooltip);\n  },\n\n  _onTypeChanged: function() {\n    var self = this;\n    var previousType = this.fieldModel.previous('type');\n    var previousValue = this.fieldModel.previous('value');\n\n    this.model.set('typeError', '');\n\n    // Readonly everything\n    this.fieldModel.set('readOnly', true);\n\n    this.table.changeColumnType(this.fieldModel.get('attribute'), this.fieldModel.get('type'), {\n      success: function() {\n        // refresh record data after change\n        // readOnly to false\n        self._refreshRecordData(function() {\n          self.fieldModel.set('readOnly', false);\n        })\n      },\n      error: function() {\n        // Avoiding silent:true and the event trigger\n        // when other attribute is changed\n        self.fieldModel.attributes.readOnly = false;\n        self.fieldModel.attributes.value = previousValue;\n        self.fieldModel.attributes.type = previousType;\n\n        try {\n          var msg = JSON.parse(e.responseText).errors[0];\n          self.model.set('typeError', msg);\n        } catch (e) {}\n        self.render();\n      }\n    });\n  },\n\n  _onInputChange: function(ev) {\n    if (ev.keyCode === 13) {\n      $(ev.target).blur();\n      this.killEvent(ev);\n    }\n  },\n\n  _onColNameChange: function(ev) {\n    var self = this;\n    var val = $(ev.target).val();\n    var oldVal = this.fieldModel.get('attribute');\n    \n    if (oldVal !== val) {\n      this.fieldModel.set({\n        attribute: val,\n        readOnly: true\n      });\n\n      this.table.renameColumn(oldVal, val, {\n        success: function(mdl, data) {\n          self.model.set('columnError', '');\n          self.fieldModel.set({\n            attribute: data.name,\n            readOnly: false\n          });\n        },\n        error: function(mdl, err) {\n          try {\n            var msg = JSON.parse(err.responseText).errors[0];\n            self.model.set('columnError', msg);\n          } catch (e) {}\n          self.fieldModel.set({\n            attribute: oldVal,\n            readOnly: false\n          });\n        }\n      });\n    }\n  },\n\n  _refreshRecordData: function(onComplete) {\n    var self = this;\n\n    this.row.fetch({\n      success: function(r) {\n        var newValue = r && r.rows[0] && r.rows[0][self.fieldModel.get('attribute')];\n        self.fieldModel.set('value', newValue);\n        onComplete && onComplete();\n      },\n      error: function() {\n        onComplete && onComplete();\n      }\n    })\n  },\n  \n});","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar FormFieldView = require('./form_field/form_field_view');\nvar AddColumnView = require('./add_column/add_column_view');\nvar EditFieldModel = require('../../edit_fields/edit_field_model');\nvar FormCollection = require('./form_collection');\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n/**\n *  Form view for edit feature metadata\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-submit': '_onSubmit',\n    'submit': '_onSubmit'\n  },\n\n  initialize: function() {\n    this.model = new cdb.core.Model({ state: 'idle' });\n    this.table = this.options.table;\n    this.row = this.options.row;\n    this.collection = new FormCollection();\n    this._generateCollection();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this._newColumn();\n    this.collection.each(this._renderField, this);\n    return this;\n  },\n\n  _generateCollection: function() {\n    var self = this;\n    var tableSchema = this.table.get('schema');\n    var hiddenColumns = this.table.hiddenColumns;\n\n    _.each(tableSchema, function(pair) {\n      if (!_.contains(hiddenColumns, pair[0])) {\n        var mdl = self._generateModel(pair[0], pair[1], self.row.get(pair[0]));\n        self.collection.add(mdl);\n      }\n    });\n  },\n\n  _generateModel: function(column, type, value) {\n    return new EditFieldModel({\n      attribute: column,\n      value: value,\n      type: type\n    });\n  },\n\n  _renderField: function(mdl) {\n    var v = new FormFieldView({\n      fieldModel: mdl,\n      table: this.table,\n      row: this.row\n    });\n    this.$('.js-addField').before(v.render().el);\n    v.bind('onSubmit', this._onSubmit, this);\n    this.addView(v);\n  },\n\n  _newColumn: function() {\n    var newColumn = new AddColumnView({ table: this.table });\n    newColumn.bind('newColumn', function(d){\n      // add it to the form\n      var mdl = this._generateModel(d.get('_name'), d.get('type'), null);\n      this.collection.add(mdl);\n      this._renderField(mdl);\n    }, this);\n    this.addView(newColumn);\n    this.$el.append(newColumn.render().el);\n  },\n\n  _onSubmit: function(ev) {\n    this.killEvent(ev);\n    \n    // Check if all models are valid, if so\n    // let's go my buddy!\n    var invalid = this.collection.getInvalid();\n    if (!invalid) {\n      var attrs = this.collection.toJSON();\n      this.trigger('onSubmit', attrs, this);\n    } else {\n      this.trigger('onError', invalid, this);\n    }\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar StepsView = require('./steps_view');\nvar RowModel = require('./row_model');\nvar DefaultFooterView = require('./default_footer_view');\nvar ViewFactory = require('../../view_factory');\n\n/**\n * Model for the administrative regions georeference option.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  TAB_LABEL: 'Admin. Regions',\n  KIND: 'admin1',\n\n  defaults: {\n    step: 0,\n    columns: []\n  },\n\n  initialize: function(attrs) {\n    if (!attrs.geocodeStuff) throw new Error('geocodeStuff is required');\n    if (!attrs.columnsNames) throw new Error('columnsNames is required');\n    if (!attrs.columns) throw new Error('columns is required');\n  },\n\n  createView: function() {\n    this._initRows();\n    this._setStateForFirstStep();\n\n    return ViewFactory.createByList([\n      new StepsView({\n        title: 'Select the column that has Administrative Regions',\n        desc: \"Georeference your data by country, state, province or municipality\",\n        model: this\n      }),\n      new DefaultFooterView({\n        model: this\n      })\n    ]);\n  },\n\n  assertIfCanContinue: function() {\n    var value = this.get('step') === 0 ? this._columnNameValue() : this.get('geometryType');\n    this.set('canContinue', !!value);\n  },\n\n  continue: function() {\n    if (this.get('step') === 0) {\n      this._setStateForSecondStep();\n    } else {\n      this._geocode();\n    }\n  },\n\n  goBack: function() {\n    this._setStateForFirstStep();\n  },\n\n  availableGeometriesFetchData: function() {\n    return this.get('geocodeStuff').availableGeometriesFetchData(this.KIND, this._locationValue(), this._isLocationFreeText());\n  },\n\n  _setStateForFirstStep: function() {\n    this.set({\n      step: 0,\n      canGoBack: false,\n      canContinue: false,\n      hideFooter: false\n    });\n    this.get('rows').invoke('unset', 'value');\n  },\n\n  _setStateForSecondStep: function() {\n    this.set({\n      step: 1,\n      canGoBack: true,\n      canContinue: false,\n      hideFooter: true,\n      geometryType: ''\n    });\n  },\n\n  _initRows: function() {\n    var rows = new Backbone.Collection([\n      new RowModel({\n        comboViewClass: 'Combo',\n        label: 'Select Your Region Name',\n        placeholder: 'Select column',\n        data: this.get('columnsNames')\n      }),\n      new RowModel({\n        label: \"Select Your Country Data\",\n        data: this.get('columns')\n      })\n    ]);\n    this.set('rows', rows);\n  },\n\n  _geocode: function() {\n    var geocodeStuff = this.get('geocodeStuff');\n    var locationValue = this._locationValue();\n    var isLocationFreeText = this._isLocationFreeText();\n\n    var d = geocodeStuff.geocodingChosenData({\n      type: 'admin',\n      kind: geocodeStuff.isLocationWorld(locationValue, isLocationFreeText, true) ? 'admin0' : this.KIND, // migrated from old code, unclear why this is needed\n      location: locationValue,\n      column_name: this._columnNameValue(),\n      geometry_type: this.get('geometryType')\n    }, isLocationFreeText, true);\n\n    this.set('geocodeData', d);\n  },\n\n  _columnNameValue: function() {\n    return this.get('rows').first().get('value');\n  },\n\n  _locationValue: function() {\n    return this._location().get('value');\n  },\n\n  _isLocationFreeText: function() {\n    return this._location().get('isFreeText');\n  },\n\n  _location: function() {\n    return this.get('rows').last();\n  }\n\n});\n","var $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar GeometryItemView = require('./geometry_item_view');\nvar ViewFactory = require('../../view_factory');\nvar randomQuote = require('../../view_helpers/random_quote');\n\n/**\n * View to select which geometry type to use for georeference process.\n */\nmodule.exports = cdb.core.View.extend({\n\n  initialize: function() {\n    this.availableGeometries = new cdb.admin.Geocodings.AvailableGeometries();\n\n    this._initBinds();\n    this._fetchAvailableGeometries();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.$el.html(\n      this.getTemplate('common/dialogs/georeference/choose_geometry')()\n    );\n    _.each(\n      this.availableGeometries.get('available_geometries') ? this._createItemsViews() : [this._createLoadingView()],\n      this._appendView, this\n    );\n    return this;\n  },\n\n  _appendView: function(view) {\n    this.addView(view);\n    this.$('.js-items').append(view.render().el);\n  },\n\n  _createItemsViews: function() {\n    return [\n      this._createItemView({\n        type: 'point',\n        titles: {\n          available: 'Georeference your data with points',\n          unavailable: 'No point data available for your selection'\n        }\n      }),\n      this._createItemView({\n        type: 'polygon',\n        titles: {\n          available: 'Georeference your data with administrative regions',\n          unavailable: 'No polygon data available for your selection.',\n          learnMore: \"Sorry, we don't have polygons available for the datatype you are trying to geocode. \" +\n            'For example, if you are geocoding placenames we can only give you points for where those places exist.'\n        }\n      })\n    ];\n  },\n\n  _createItemView: function(d) {\n    return new GeometryItemView(_.extend({\n      model: this.model,\n      availableGeometries: this.availableGeometries\n    }, d));\n  },\n\n  _createLoadingView: function() {\n    return ViewFactory.createByTemplate('common/templates/loading', {\n      title: 'Checking for available geometries…',\n      quote: randomQuote()\n    });\n  },\n\n  _initBinds: function() {\n    this.availableGeometries.bind('change:available_geometries', this.render, this);\n    this.add_related_model(this.availableGeometries);\n  },\n\n  _fetchAvailableGeometries: function() {\n    this.availableGeometries.fetch({\n      data: this.model.availableGeometriesFetchData()\n    });\n  }\n\n});\n","var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar StepsView = require('./steps_view');\nvar RowModel = require('./row_model');\nvar DefaultFooterView = require('./default_footer_view');\nvar ViewFactory = require('../../view_factory');\n\n/**\n * Model for the city names georeference option.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  TAB_LABEL: 'City Names',\n  KIND: 'namedplace',\n\n  defaults: {\n    step: 0,\n    columns: []\n  },\n\n  initialize: function(attrs) {\n    if (!attrs.geocodeStuff) throw new Error('geocodeStuff is required');\n    if (!attrs.columnsNames) throw new Error('columnsNames is required');\n    if (!attrs.columns) throw new Error('columns is required');\n  },\n\n  createView: function() {\n    this._initRows();\n    this._setStateForFirstStep();\n\n    return ViewFactory.createByList([\n      new StepsView({\n        title: \"Select the column that contains the City's Name\",\n        desc: 'No matter the type of the columns you select, we will transform them to number for georeferencing.',\n        model: this\n      }),\n      new DefaultFooterView({\n        model: this\n      })\n    ]);\n  },\n\n  assertIfCanContinue: function() {\n    var value = this.get('step') === 0 ? this._columnNameValue() : this.get('geometryType');\n    this.set('canContinue', !!value);\n  },\n\n  continue: function() {\n    if (this.get('step') === 0) {\n      this._setStateForSecondStep();\n    } else {\n      this._geocode();\n    }\n  },\n\n  goBack: function() {\n    this._setStateForFirstStep();\n  },\n\n  availableGeometriesFetchData: function() {\n    return this.get('geocodeStuff').availableGeometriesFetchData(this.KIND, this._locationValue(), this._isLocationFreeText());\n  },\n\n  _setStateForFirstStep: function() {\n    this.set({\n      step: 0,\n      canGoBack: false,\n      canContinue: false,\n      hideFooter: false\n    });\n  },\n\n  _setStateForSecondStep: function() {\n    this.set({\n      step: 1,\n      canGoBack: true,\n      canContinue: false,\n      hideFooter: true,\n      geometryType: ''\n    });\n  },\n\n  _geocode: function() {\n    var d = this.get('geocodeStuff').geocodingChosenData({\n      type: 'city',\n      kind: this.KIND,\n      location: this._locationValue(),\n      column_name: this._columnNameValue(),\n      geometry_type: this.get('geometryType')\n    }, this._isLocationFreeText(), true);\n\n    var region = this._regionValue();\n    if (!_.isEmpty(region)) {\n      d.region = region;\n      d.region_text = this._isRegionFreeText();\n    }\n\n    this.set('geocodeData', d);\n  },\n\n  _initRows: function() {\n    var rows = new Backbone.Collection([\n      new RowModel({\n        comboViewClass: 'Combo',\n        label: 'In which column are your city names stored?',\n        placeholder: 'Select column',\n        data: this.get('columnsNames')\n      }),\n      new RowModel({\n        label: \"Admin. Region where city's located, if known\",\n        data: this.get('columns')\n      }),\n      new RowModel({\n        label: \"Country where city's located, if known\",\n        data: this.get('columns')\n      })\n    ]);\n    this.set('rows', rows);\n  },\n\n  _columnNameValue: function() {\n    return this.get('rows').first().get('value');\n  },\n\n  _regionValue: function() {\n    return this._region().get('value');\n  },\n\n  _isRegionFreeText: function() {\n    return this._region().get('isFreeText');\n  },\n\n  _region: function() {\n    return this.get('rows').at(1); // 2nd row\n  },\n\n  _locationValue: function() {\n    return this._location().get('value');\n  },\n\n  _isLocationFreeText: function() {\n    return this._location().get('isFreeText');\n  },\n\n  _location: function() {\n    return this.get('rows').last();\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * View for the default footer\n */\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-force-all-rows': '_onClickForceAllRows'\n  },\n\n  initialize: function() {\n    this._initBinds();\n  },\n\n  render: function() {\n    this.$el.html(\n      this.getTemplate('common/dialogs/georeference/default_footer')()\n    );\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:canContinue', this._onChangeCanContinue, this);\n    this.model.bind('change:hideFooter', this._onChangeHideFooter, this);\n\n    var geocodeStuff = this._geocodeStuff();\n    geocodeStuff.bind('change:forceAllRows', this._onChangeForceAllRows, this);\n    this.add_related_model(geocodeStuff);\n  },\n\n  _onChangeCanContinue: function(m, canContinue) {\n    this.$('.ok').toggleClass('is-disabled', !canContinue);\n  },\n\n  _onChangeHideFooter: function(m, hideFooter) {\n    this.$el.toggle(!hideFooter);\n  },\n\n  _onChangeForceAllRows: function(m, hasForceAllRows) {\n    this.$('.js-force-all-rows button').toggleClass('is-checked', !!hasForceAllRows);\n  },\n\n  _onClickForceAllRows: function(ev) {\n    this.killEvent(ev);\n    var m = this._geocodeStuff();\n    m.set('forceAllRows', !m.get('forceAllRows'));\n  },\n\n  _geocodeStuff: function() {\n    return this.model.get('geocodeStuff');\n  }\n\n});\n","var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * Simple object for common logic in the georeference modal, e.g. for available geometries, and\n * creating chosen geocoding data, etc.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    tableName: undefined,\n    forceAllRows: false\n  },\n\n  initialie: function(attrs) {\n    if (!attrs.tableName) throw new Error('tableName is required');\n  },\n\n  /**\n   * @param {String} kind\n   * @param {String} location\n   * @param {Boolean} isLocationFreeText\n   * @return {Object} hash\n   */\n  availableGeometriesFetchData: function(kind, location, isLocationFreeText) {\n    if (!kind) throw new Error('kind is required');\n\n    var d = {\n      kind: kind\n    };\n\n    if (_.isEmpty(location)) {\n      d.free_text = 'World';\n    } else {\n      if (isLocationFreeText) {\n        d.free_text = location;\n      } else {\n        d.column_name = location;\n        d.table_name = this.get('tableName');\n      }\n    }\n\n    return d;\n  },\n\n  // @return {Boolean} true if location is considered a \"world\" geocoding search value.\n  isLocationWorld: function(location, isFreeText, useFallbackIfLocationIsMissing) {\n    var isLocationMissingAndShouldFallback = (location === undefined && useFallbackIfLocationIsMissing);\n    var isWorld = location === '' || isLocationMissingAndShouldFallback;\n    return isWorld || (!!isFreeText && location.search('world') !== -1);\n  },\n\n  /**\n   * Creates the expected data for the 'geocodingChosen' event on the cdb.god model.\n   * Adheres to the existing workflow and was extracted from old views.\n   * @param {Object} d\n   * @param {Boolean} isLocationFreeText true if location prop was created through a free-text input field, and\n   *  false if matches a column name on the table\n   * @param {Boolean} useFallbackIfLocationIsMissing true if should use fallback value for a missing location value.\n   * @return {Object}\n   */\n  geocodingChosenData: function(d, isLocationFreeText, useFallbackIfLocationIsMissing) {\n    d.table_name = this.get('tableName');\n\n    if (this.isLocationWorld(d.location, isLocationFreeText, useFallbackIfLocationIsMissing)) {\n      d.location = 'world';\n      d.text = true; // Set free text\n    } else if (_.isBoolean(isLocationFreeText) && isLocationFreeText) {\n      d.text = true;\n    }\n\n    if (this.get('forceAllRows')) {\n      d.force_all_rows = true;\n    }\n\n    return d;\n  }\n\n});\n","var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * View for an individual geometry type\n */\nmodule.exports = cdb.core.View.extend({\n\n  className: 'OptionCard OptionCard--blocky',\n\n  events: {\n    'click': '_onClick'\n  },\n\n  initialize: function() {\n    if (!this.options.type) cdb.log.error('type is required');\n    if (!this.options.titles) cdb.log.error('titles is required');\n    if (!this.options.titles.available) cdb.log.error('titles.available is required');\n    if (!this.options.titles.unavailable) cdb.log.error('titles.unavailable is required');\n    this.availableGeometries = this.options.availableGeometries;\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n\n    this.$el.html(\n      this.getTemplate('common/dialogs/georeference/geometry_item_' + this.options.type)({\n      })\n    );\n\n    this._onChangeAvailableGeometries();\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.availableGeometries.bind('change:available_geometries', this._onChangeAvailableGeometries, this);\n    this.add_related_model(this.availableGeometries);\n\n    this.model.bind('change:geometryType', this._onChangeGeometryType, this);\n  },\n\n  _onChangeGeometryType: function(m, type) {\n    this.$el.toggleClass('is-selected', type === this.options.type);\n  },\n\n  _onChangeAvailableGeometries: function() {\n    var isAvailable = this._isAvailable();\n\n    this.$el.toggleClass('OptionCard--static', !isAvailable);\n    this.$('.js-icon').toggleClass('u-disabled', !isAvailable);\n    this.$('.js-warning').toggle(!isAvailable);\n    this.$('.js-title')\n      .toggleClass('u-disabled', !isAvailable)\n      .text(this.options.titles[isAvailable ? 'available' : 'unavailable']);\n  },\n\n  _onClick: function(ev) {\n    this.killEvent(ev);\n    if (this._isAvailable()) {\n      this.model.set('geometryType', this.options.type);\n      this.model.continue();\n    }\n  },\n\n  _isAvailable: function() {\n    return _.contains(this.availableGeometries.get('available_geometries'), this.options.type);\n  }\n\n});\n","var Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar LonLatColumnsModel = require('./lon_lat_columns_model');\nvar CityNamesModel = require('./city_names_model');\nvar AdminRegionsModel = require('./admin_regions_model');\nvar PostalCodesModel = require('./postal_codes_model');\nvar IpAddressesModel = require('./ip_addresses_model');\nvar StreetAddressesModel = require('./street_addresses/street_addresses_model');\nvar GeocodeStuffModel = require('./geocode_stuff_model');\nvar UserGeocodingModel = require('./user_geocoding_model');\n\n/**\n * View model for merge datasets view.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  _EXCLUDED_COLUMN_NAMES: ['cartodb_id', 'the_geom', 'updated_at', 'created_at', 'cartodb_georef_status'],\n  _ALLOWED_COLUMN_TYPES: ['string', 'number', 'boolean', 'date'],\n\n  defaults: {\n    options: undefined // Collection, created with model\n  },\n\n  initialize: function(attrs) {\n    if (!attrs.table) throw new Error('table is required');\n    if (!attrs.user) throw new Error('user is required');\n    this._initGeocodeStuff();\n    this._initOptions();\n  },\n\n  changedSelectedTab: function(newTab) {\n    this.get('options').chain()\n      .without(newTab).each(this._deselect);\n  },\n\n  createView: function() {\n    return this._selectedTabModel().createView();\n  },\n\n  canContinue: function() {\n    return this._selectedTabModel().get('canContinue');\n  },\n\n  continue: function() {\n    if (this.canContinue()) {\n      this._selectedTabModel().continue();\n    }\n  },\n\n  canGoBack: function() {\n    return this._selectedTabModel().get('canGoBack');\n  },\n\n  goBack: function() {\n    if (this.canGoBack()) {\n      this._selectedTabModel().goBack();\n    }\n  },\n\n  _selectedTabModel: function() {\n    return this.get('options').find(this._isSelected);\n  },\n\n  _columnsNames: function() {\n    // Maintained old logic, so for some reason the column types filter is not applied for the places where the column names are usd\n    return _.chain(this.get('table').get('schema'))\n      .filter(this._isAllowedColumnName, this)\n      .map(this._columnName)\n      .value();\n  },\n\n  _filteredColumns: function() {\n    var table = this.get('table');\n    // original_schema may be set if not in SQL view (see where attr is set in the table model)\n    // maintained from code to not break behavior when implementing this new modal\n    return _.chain(table.get('original_schema') || table.get('schema'))\n      .filter(this._isAllowedColumnName, this)\n      .filter(this._isAllowedColumnType, this)\n      .map(this._inverColumnRawValues)\n      .value();\n  },\n\n  _inverColumnRawValues: function(rawColumn) {\n    // The cdb.forms.CustomTextCombo expects the data to be in order of [type, name], so need to translate the raw schema\n    var type = rawColumn[1];\n    var name = rawColumn[0];\n    return [type, name];\n  },\n\n  _isAllowedColumnName: function(rawColumn) {\n    return !_.contains(this._EXCLUDED_COLUMN_NAMES, this._columnName(rawColumn));\n  },\n\n  _isAllowedColumnType: function(rawColumn) {\n    return _.contains(this._ALLOWED_COLUMN_TYPES, this._columnType(rawColumn));\n  },\n\n  _columnName: function(rawColumn) {\n    return rawColumn[0];\n  },\n\n  _columnType: function(rawColumn) {\n    return rawColumn[1];\n  },\n\n  _isSelected: function(m) {\n    return m.get('selected');\n  },\n\n  _deselect: function(m) {\n    m.set('selected', false);\n  },\n\n  _initGeocodeStuff: function() {\n    var m = new GeocodeStuffModel({\n      tableName: this.get('table').get('id')\n    });\n    this.set('geocodeStuff', m);\n  },\n\n  _initOptions: function() {\n    var geocodeStuff = this.get('geocodeStuff');\n    var columnsNames = this._columnsNames();\n    var columns = this._filteredColumns();\n\n    this.set('options',\n      new Backbone.Collection([\n        new LonLatColumnsModel({\n          geocodeStuff: geocodeStuff,\n          columnsNames: columnsNames,\n          selected: true\n        }),\n        new CityNamesModel({\n          geocodeStuff: geocodeStuff,\n          columnsNames: columnsNames,\n          columns: columns\n        }),\n        new AdminRegionsModel({\n          geocodeStuff: geocodeStuff,\n          columnsNames: columnsNames,\n          columns: columns\n        }),\n        new PostalCodesModel({\n          geocodeStuff: geocodeStuff,\n          columnsNames: columnsNames,\n          columns: columns\n        }),\n        new IpAddressesModel({\n          geocodeStuff: geocodeStuff,\n          columnsNames: columnsNames,\n          columns: columns\n        }),\n        new StreetAddressesModel({\n          geocodeStuff: geocodeStuff,\n          columns: columns,\n          isGoogleMapsUser: this._isGmeGeocoderEnabled(),\n          userGeocoding: this._userGeocoding(),\n          lastBillingDate: this.get('user').get('billing_period'),\n          estimation: new cdb.admin.Geocodings.Estimation({\n            id: this.get('table').getUnquotedName()\n          })\n        })\n      ])\n    );\n\n    if (this.get('user').featureEnabled('georef_disabled')) {\n      this._disableGeorefTabs();\n    } else {\n      this._maybeDisabledStreetAddresses();\n    }\n  },\n\n  _disableGeorefTabs: function() {\n    _.each(this._georefTabs(), this._disableTab.bind(this, \"You don't have this option available in this version\"));\n  },\n\n  _georefTabs: function() {\n     // exclude 1st tab (LonLat), since it should not be affected by this feature flag\n    return this.get('options').rest();\n  },\n\n  _maybeDisabledStreetAddresses: function() {\n    var isGmeGeocoderEnabled = this._isGmeGeocoderEnabled();\n    if (this._isGoogleMapsEnabled()) {\n      if (!isGmeGeocoderEnabled) {\n        this._disableTab('Google Maps geocoder is not configured. Please contact us at sales@carto.com', this._streetAddrTabModel());\n      }\n    } else {\n      if (isGmeGeocoderEnabled) {\n        this._disableTab('Geocoder is not configured properly. Please contact us at sales@carto.com', this._streetAddrTabModel());\n      } else if (!this._userGeocoding().hasQuota()) {\n        // Credits are only used for users that use non-GME geocoder\n        this._disableTab('Your geocoding quota is not defined. Please contact us at sales@carto.com', this._streetAddrTabModel());\n      }\n    }\n  },\n\n  _userGeocoding: function() {\n    return new UserGeocodingModel(this.get('user').get('geocoding'));\n  },\n\n  _isGoogleMapsEnabled: function() {\n    return this._hasUserActionEnabled('google_maps_enabled');\n  },\n\n  _isGmeGeocoderEnabled: function() {\n    return this._hasUserActionEnabled('google_maps_geocoder_enabled');\n  },\n\n  _hasUserActionEnabled: function(actionName) {\n    return !!this.get('user').get('actions')[actionName];\n  },\n\n  _streetAddrTabModel: function() {\n    return this.get('options').find(function(m) {\n      return m instanceof StreetAddressesModel;\n    });\n  },\n\n  _disableTab: function(msg, tabModel) {\n    tabModel.set('disabled', msg);\n  }\n\n});\n","var $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BaseDialog = require('../../views/base_dialog/view.js');\nvar GeoreferenceModel = require('./georeference_model');\nvar TabItemView = require('./tab_item_view');\n\n/**\n * Dialog to georeference a table.\n * This view only acts as a high-level view, that managed the general view logic for the modal.\n * What is supposed to happen is delegated to the model and in turn the selected georeference option.\n */\nmodule.exports = BaseDialog.extend({\n\n  events: BaseDialog.extendEvents({\n    'click .js-back:not(.is-disabled)': '_onGoBack'\n  }),\n\n  initialize: function() {\n    if (!this.options.user) throw new Error('user is required');\n    this.options.clean_on_hide = true;\n    this.options.enter_to_confirm = true;\n    this.elder('initialize');\n\n    this.model = new GeoreferenceModel({\n      table: this.options.table,\n      user: this.options.user\n    });\n    this._initViews();\n    this._initBinds();\n  },\n\n  /**\n   * @override BaseDialog.prototype.render\n   */\n  render: function() {\n    BaseDialog.prototype.render.apply(this, arguments);\n    this.$('.content').addClass('Dialog-contentWrapper');\n    return this;\n  },\n\n  render_content: function() {\n    var table = this.model.get('table');\n    var $el = $(\n      this.getTemplate('common/dialogs/georeference/georeference')({\n        hasNoGeoferencedData: !table.isGeoreferenced() && table.data().length > 0\n      })\n    );\n    this._renderTabs($el.find('.js-tabs'));\n    this._renderTabContent($el);\n\n    return $el;\n  },\n\n  ok: function() {\n    this.model.continue();\n  },\n\n  _initViews: function() {\n    this._tabViews = this.model.get('options').map(this._createDefaultTabView, this);\n  },\n\n  _createDefaultTabView: function(model) {\n    var view = new TabItemView({\n      model: model\n    });\n    this.addView(view);\n    return view;\n  },\n\n  _renderTabs: function($target) {\n    $target.append.apply($target, _.map(this._tabViews, this._getRenderedElement));\n  },\n\n  _getRenderedElement: function(view) {\n    return view.render().el;\n  },\n\n  _renderTabContent: function($target) {\n    if (this._tabContentView) {\n      this._tabContentView.clean();\n    }\n    this._tabContentView = this.model.createView();\n    this.addView(this._tabContentView);\n    $target.find('.js-tab-content').html(this._tabContentView.render().el);\n  },\n\n  _initBinds: function() {\n    var options = this.model.get('options');\n    options.bind('change:selected', this._onChangeSelectedTab, this);\n    options.bind('change:canGoBack', this._onChangeCanGoBack, this);\n    options.bind('change:geocodeData', this._onChangeGeocodeData, this);\n    this.add_related_model(options);\n  },\n\n  _onChangeSelectedTab: function(tabModel, isSelected) {\n    if (isSelected) {\n      this.model.changedSelectedTab(tabModel);\n      this._renderTabContent(this.$el);\n    }\n  },\n\n  _onChangeCanGoBack: function(tabModel, canGoBack) {\n    this.$('.js-back').toggle(!!canGoBack);\n  },\n\n  _onGoBack: function() {\n    this.model.goBack();\n  },\n\n  _onChangeGeocodeData: function(tabModel, data) {\n    cdb.god.trigger('geocodingChosen', data);\n    this.close();\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar RowModel = require('./row_model');\nvar RowsView = require('./rows_view');\nvar DefaultFooterView = require('./default_footer_view');\nvar ViewFactory = require('../../view_factory');\n\n/**\n * Model for the IP addresses georeference option.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  TAB_LABEL: 'IP Addresses',\n\n  initialize: function(attrs) {\n    if (!attrs.geocodeStuff) throw new Error('geocodeStuff is required');\n    if (!attrs.columnsNames) throw new Error('columnsNames is required');\n  },\n\n  createView: function() {\n    this._initRows();\n    this.set({\n      canContinue: false,\n      hideFooter: false\n    });\n\n    return ViewFactory.createByList([\n      ViewFactory.createByTemplate('common/dialogs/georeference/default_content_header', {\n        title: \"Select the column that that contains the IP's name\",\n        desc: 'Convert IP address into geographical locations.'\n      }),\n      new RowsView({\n        model: this\n      }),\n      new DefaultFooterView({\n        model: this\n      })\n    ]);\n  },\n\n  assertIfCanContinue: function() {\n    this.set('canContinue', !!this._columnNameValue());\n  },\n\n  continue: function() {\n    var d = this.get('geocodeStuff').geocodingChosenData({\n      type: 'ip',\n      kind: 'ipaddress',\n      column_name: this._columnNameValue(),\n      geometry_type: 'point'\n    });\n\n    this.set('geocodeData', d);\n  },\n\n  _initRows: function() {\n    var rows = new Backbone.Collection([\n      new RowModel({\n        comboViewClass: 'Combo',\n        label: 'In which column are your IP addresses stored?',\n        placeholder: 'Select column',\n        data: this.get('columnsNames')\n      })\n    ]);\n    this.set('rows', rows);\n  },\n\n  _columnNameValue: function() {\n    return this.get('rows').first().get('value');\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar RowModel = require('./row_model');\nvar RowsView = require('./rows_view');\nvar DefaultFooterView = require('./default_footer_view');\nvar ViewFactory = require('../../view_factory');\n\n/**\n * Model for the Lon/Lat georeference option.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  TAB_LABEL: 'Lon/Lat Columns',\n\n  defaults: {\n    columnsNames: []\n  },\n\n  initialize: function(attrs) {\n    if (!attrs.geocodeStuff) throw new Error('geocodeStuff is required');\n    if (!attrs.columnsNames) throw new Error('columnsNames is required');\n  },\n\n  createView: function() {\n    this.set({\n      canContinue: false,\n      hideFooter: false\n    });\n    this._initRows();\n\n    return ViewFactory.createByList([\n      ViewFactory.createByTemplate('common/dialogs/georeference/default_content_header', {\n        title: 'Select the columns containing your Lon/Lat columns',\n        desc: 'The selected columns are transformed into georeference coordinates.'\n      }),\n      new RowsView({\n        model: this\n      }),\n      new DefaultFooterView({\n        model: this\n      })\n    ]);\n  },\n\n  assertIfCanContinue: function() {\n    var canContinue = this.get('rows').all(function(m) {\n      return !!m.get('value');\n    });\n    this.set('canContinue', canContinue);\n  },\n\n  continue: function() {\n    var d = this.get('geocodeStuff').geocodingChosenData({\n      type: 'lonlat',\n      longitude: this.get('rows').first().get('value'),\n      latitude: this.get('rows').last().get('value')\n    });\n\n    this.set('geocodeData', d);\n  },\n\n  _initRows: function() {\n    var rows = new Backbone.Collection([\n      new RowModel({\n        comboViewClass: 'Combo',\n        label: 'Select your Longitude',\n        placeholder: 'Select column',\n        property: 'longitude',\n        data: this.get('columnsNames')\n      }),\n      new RowModel({\n        comboViewClass: 'Combo',\n        label: 'Select your Latitude',\n        placeholder: 'Select column',\n        property: 'latitude',\n        data: this.get('columnsNames')\n      })\n    ]);\n    this.set('rows', rows);\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar RowModel = require('./row_model');\nvar StepsView = require('./steps_view');\nvar DefaultFooterView = require('./default_footer_view');\nvar ViewFactory = require('../../view_factory');\n\n/**\n * Model for the postal codes georeference option.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  TAB_LABEL: 'Postal Codes',\n  KIND: 'postalcode',\n\n  defaults: {\n    step: 0,\n    columns: []\n  },\n\n  initialize: function(attrs) {\n    if (!attrs.geocodeStuff) throw new Error('geocodeStuff is required');\n    if (!attrs.columnsNames) throw new Error('columnsNames is required');\n    if (!attrs.columns) throw new Error('columns is required');\n  },\n\n  createView: function() {\n    this._initRows();\n    this._setStateForFirstStep();\n\n    return ViewFactory.createByList([\n      new StepsView({\n        title: 'Select the column that has the Postal Codes',\n        desc: 'Georeference your data by postal codes.',\n        model: this\n      }),\n      new DefaultFooterView({\n        model: this\n      })\n    ]);\n  },\n\n  assertIfCanContinue: function() {\n    var value = this.get('step') === 0 ? this._columnNameValue() : this.get('geometryType');\n    this.set('canContinue', !!value);\n  },\n\n  continue: function() {\n    if (this.get('step') === 0) {\n      this._setStateForSecondStep();\n    } else {\n      this._geocode();\n    }\n  },\n\n  goBack: function() {\n    this._setStateForFirstStep();\n  },\n\n  availableGeometriesFetchData: function() {\n    return this.get('geocodeStuff').availableGeometriesFetchData(this.KIND, this._locationValue(), this._isLocationFreeText());\n  },\n\n  _setStateForFirstStep: function() {\n    this.set({\n      step: 0,\n      canGoBack: false,\n      canContinue: false,\n      hideFooter: false\n    });\n  },\n\n  _setStateForSecondStep: function() {\n    this.set({\n      step: 1,\n      canGoBack: true,\n      canContinue: false,\n      hideFooter: true,\n      geometryType: ''\n    });\n  },\n\n  _geocode: function() {\n    var d = this.get('geocodeStuff').geocodingChosenData({\n      type: 'postal',\n      kind: this.KIND,\n      location: this._locationValue(),\n      column_name: this._columnNameValue(),\n      geometry_type: this.get('geometryType')\n    }, this._isLocationFreeText(), true);\n\n    this.set('geocodeData', d);\n  },\n\n  _initRows: function() {\n    var rows = new Backbone.Collection([\n      new RowModel({\n        comboViewClass: 'Combo',\n        label: 'In which column are your postal codes stored?',\n        placeholder: 'Select column',\n        data: this.get('columnsNames')\n      }),\n      new RowModel({\n        label: 'Country where postal codes are located, if known',\n        data: this.get('columns')\n      })\n    ]);\n    this.set('rows', rows);\n  },\n\n  _columnNameValue: function() {\n    return this.get('rows').first().get('value');\n  },\n\n  _locationValue: function() {\n    return this._location().get('value');\n  },\n\n  _isLocationFreeText: function() {\n    return this._location().get('isFreeText');\n  },\n\n  _location: function() {\n    return this.get('rows').last();\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar RowView = require('./row_view');\n\n/**\n * Model for an individual row\n */\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    comboViewClass: 'CustomTextCombo',\n    label: '',\n    placeholder: 'Select column or type it',\n    isFreeText: false,\n    data: []\n  },\n\n  createView: function() {\n    return new RowView({\n      model: this\n    });\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * View for the street addresses georeference option.\n */\nmodule.exports = cdb.core.View.extend({\n\n  className: 'Form-row Form-row--step',\n\n  initialize: function() {\n    this._initViews();\n    this._initBinds();\n  },\n\n  render: function() {\n    this.$el.html(\n      this.getTemplate('common/dialogs/georeference/row')({\n        label: this.model.get('label')\n      })\n    );\n    this.$('.js-select').append(this._selectView.render().el);\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:value', this._onChangeValue, this);\n  },\n\n  _initViews: function() {\n    this._selectView = new cdb.forms[this.model.get('comboViewClass')]({\n      model: this.model,\n      placeholder: this.model.get('placeholder'),\n      disabled: this.model.get('disabled'),\n      extra: this.model.get('data'),\n      className: 'Select',\n      width: '100%',\n      property: 'value',\n\n      // This is only needed for a ComboFreeText view, but doesn't hurt for the normal Combo so let's leave it\n      text: 'isFreeText'\n    });\n    this.addView(this._selectView);\n\n    // Simulate a initial selection to update model to be in sync with the view\n    this._selectView.render()._changeSelection();\n  },\n\n  _onChangeValue: function(m, val) {\n    this.$el.toggleClass('is-done', !!val);\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * View to render a set of rows.\n */\nmodule.exports = cdb.core.View.extend({\n\n  initialize: function() {\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this._renderRows();\n    return this;\n  },\n\n  _initBinds: function() {\n    var rows = this.model.get('rows');\n    rows.bind('change', this.model.assertIfCanContinue, this.model);\n    this.add_related_model(rows);\n  },\n\n  _renderRows: function() {\n    this.model.get('rows').chain()\n      .map(this._createRowView, this)\n      .map(this._appendRowToDOM, this);\n  },\n\n  _createRowView: function(m) {\n    var view = m.createView();\n    this.addView(view);\n    return view;\n  },\n\n  _appendRowToDOM: function(view) {\n    this.$el.append(view.render().el);\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar RowsView = require('./rows_view');\nvar ChooseGeometryView = require('./choose_geometry_view');\nvar ViewFactory = require('../../view_factory');\n\n/**\n * View for the georeference types that requires the two-steps flow.\n * First select columns values, and then the geometry type to use.\n */\nmodule.exports = cdb.core.View.extend({\n\n  initialize: function() {\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n\n    if (this.model.get('step') === 1) {\n      this._renderChooseGeometry();\n    } else {\n      this._renderHeader();\n      this._renderRows();\n    }\n\n    return this;\n  },\n\n  _renderHeader: function() {\n    this._appendView(\n      ViewFactory.createByTemplate('common/dialogs/georeference/default_content_header', {\n        title: this.options.title,\n        desc: this.options.desc\n      })\n    );\n  },\n\n  _renderRows: function() {\n    this._appendView(\n      new RowsView({\n        model: this.model\n      })\n    );\n  },\n\n  _renderChooseGeometry: function() {\n    this._appendView(\n      new ChooseGeometryView({\n        model: this.model\n      })\n    );\n  },\n\n  _appendView: function(view) {\n    this.addView(view);\n    this.$el.append(view.render().$el);\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:step', this.render, this);\n  }\n\n});\n","var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'Georeference-estimation',\n\n  initialize: function() {\n    if (!_.isBoolean(this.options.hasHardLimit)) throw new Error('hasHardLimit is required');\n    if (!this.options.userGeocoding) throw new Error('userGeocoding is required');\n    this._initBinds();\n  },\n\n  render: function() {\n    var estimation = this.model.get('estimation');\n    var rows = this.model.get('rows');\n\n    this.$el.html(\n      this.getTemplate('common/dialogs/georeference/street_addresses/estimation')({\n        hasEstimation: estimation !== undefined && rows !== undefined,\n        hasHardLimit: this.options.hasHardLimit,\n        costInCredits: this.model.costInCredits(),\n        costInDollars: this.model.costInDollars(),\n        blockPriceInDollars: this.options.userGeocoding.blockPriceInDollars(),\n        hasRows: rows !== 0\n      })\n    );\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change error', this.render, this);\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'Georeference-quota',\n\n  render: function() {\n    this.$el.html(\n      this.getTemplate('common/dialogs/georeference/street_addresses/quota')({\n        quotaLeft: this.model.quotaLeftThisMonth(),\n        quotaUsedInPct: this.model.quotaUsedThisMonthInPct()\n      })\n    );\n    return this;\n  }\n\n});\n","var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar moment = (typeof window !== \"undefined\" ? window['moment'] : typeof global !== \"undefined\" ? global['moment'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar StreetAddressesView = require('./street_addresses_view');\nvar RowModel = require('../row_model');\nvar StreetRowModel = require('./street_row_model');\n\n/**\n * Model for the street addresses georeference option.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  TAB_LABEL: 'Street Addresses',\n  MAX_STREET_ROWS: 3,\n\n  defaults: {\n    columnsNames: [],\n    columns: [],\n    estimation: undefined\n  },\n\n  initialize: function(attrs) {\n    if (!attrs.geocodeStuff) throw new Error('geocodeStuff is required');\n    if (!_.isBoolean(attrs.isGoogleMapsUser)) throw new Error('isGoogleMapsUser is required');\n    if (!attrs.userGeocoding) throw new Error('userGeocoding is required');\n    if (!attrs.columns) throw new Error('columns is required');\n    if (!attrs.estimation) throw new Error('estimation is required'); // cdb.admin.Geocodings.Estimations\n  },\n\n  createView: function() {\n    this.set({\n      canContinue: false,\n      hideFooter: false,\n      mustAgreeToTOS: false,\n      confirmTOS: false,\n      hasAgreedToTOS: false\n    });\n    this._initRows();\n\n    return new StreetAddressesView({\n      model: this\n    });\n  },\n\n  isDisabled: function() {\n    return !this.get('isGoogleMapsUser') && this.get('userGeocoding').hasReachedMonthlyQuota();\n  },\n\n  showCostsInfo: function() {\n    return !this.get('isGoogleMapsUser');\n  },\n\n  getFormatterItemByRow: function(m) {\n    var val = m.get('value');\n    if (val) {\n      return m.get('isFreeText') ? val.trim() : '{' + val + '}';\n    }\n  },\n\n  assertIfCanAddMoreRows: function() {\n    // If can add more rows, enable the add button only on the last street row\n    var streetRows = this.get('rows').filter(this._isStreetRow);\n    _.invoke(streetRows, 'set', 'canAddRow', false);\n    _.last(streetRows).set('canAddRow', streetRows.length < this.MAX_STREET_ROWS);\n  },\n\n  daysLeftToNextBilling: function() {\n    var today = moment().startOf('day');\n    return moment(this.get('lastBillingDate')).add(30, 'days').diff(today, 'days')\n  },\n\n  continue: function() {\n    var mustAgreeToTOS = this.get('mustAgreeToTOS');\n\n    if (this._hasAgreedToTOS() || !mustAgreeToTOS) {\n      var d = this.get('geocodeStuff').geocodingChosenData({\n        type: 'address',\n        kind: 'high-resolution',\n        formatter: this.get('formatter')\n      });\n      this.set('geocodeData', d);\n    } else if (mustAgreeToTOS) {\n      this.set('confirmTOS', true);\n    }\n  },\n\n  hasHardLimit: function() {\n    return !!this.get('userGeocoding').get('hard_limit');\n  },\n\n  _hasAgreedToTOS: function() {\n    return this.get('mustAgreeToTOS') && this.get('hasAgreedToTOS');\n  },\n\n  _isStreetRow: function(row) {\n    return row instanceof StreetRowModel;\n  },\n\n  _initRows: function() {\n    var columns = this.get('columns');\n    var isDisabled = this.isDisabled();\n    var rows = new Backbone.Collection([\n      new StreetRowModel({\n        label: 'Which column are your street addresses stored in?',\n        data: columns,\n        canAddRow: true,\n        disabled: isDisabled\n      }),\n      new RowModel({\n        label: 'State/province where address is located, if known',\n        data: columns,\n        disabled: isDisabled\n      }),\n      new RowModel({\n        label: 'Country where street address is located, if known',\n        data: columns,\n        disabled: isDisabled\n      })\n    ]);\n    this.set('rows', rows);\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar ViewFactory = require('../../../view_factory');\nvar EstimationView = require('./estimation_view');\nvar QuotaView = require('./quota_view');\nvar DefaultFooterView = require('../default_footer_view');\nvar pluralizeString = require('../../../view_helpers/pluralize_string');\n\n/**\n * View to select long/lat couple to do the georeference.\n */\nmodule.exports = cdb.core.View.extend({\n\n  initialize: function() {\n    this._initBinds();\n    this._fetchEstimation();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.$el.html(\n      this.getTemplate('common/dialogs/georeference/street_addresses/street_addresses')({\n      })\n    );\n    this._renderHeader();\n    this._renderRows();\n\n    var showCostsInfo = this.model.showCostsInfo();\n    if (showCostsInfo) {\n      this._renderEstimation();\n      this._renderQuota();\n    }\n    this.$('.js-costs-info').toggle(!!showCostsInfo);\n\n    this._renderFooter();\n    return this;\n  },\n\n  _renderHeader: function() {\n    var view = ViewFactory.createByTemplate('common/dialogs/georeference/default_content_header', {\n      title: 'Select the column(s) that has your street address',\n      desc: 'Use this option if you need high resolution geocoding of your street adresses data.'\n    });\n    this.addView(view);\n    this.$el.prepend(view.render().$el);\n  },\n\n  _renderRows: function() {\n    this._$rows().toggleClass('u-disabled', !!this.model.isDisabled());\n    this.model.get('rows').chain()\n      .map(this._createRowView, this)\n      .map(this._appendRowToDOM, this);\n  },\n\n  _renderEstimation: function() {\n    var view = new EstimationView({\n      model: this.model.get('estimation'),\n      userGeocoding: this.model.get('userGeocoding'),\n      hasHardLimit: this.model.hasHardLimit()\n    });\n    this.addView(view);\n    this.$('.js-estimation').append(view.render().el);\n  },\n\n  _renderQuota: function() {\n    var view = new QuotaView({\n      model: this.model.get('userGeocoding')\n    });\n    this.addView(view);\n    this.$('.js-quota').append(view.render().el);\n  },\n\n  _renderFooter: function() {\n    var content;\n\n    if (this.model.isDisabled()) {\n      content = this.getTemplate('common/dialogs/georeference/street_addresses/upgrade_footer')({\n        cartodb_com_hosted: cdb.config.get('cartodb_com_hosted'),\n        upgradeURL: cdb.config.get('upgrade_url'),\n        pluralizeString: pluralizeString,\n        daysLeftToNextBilling: this.model.daysLeftToNextBilling()\n      });\n    } else {\n      var view = new DefaultFooterView({\n        model: this.model\n      });\n      this.addView(view);\n      content = view.render().$el;\n    }\n\n    this.$el.append(content);\n  },\n\n  _createRowView: function(m) {\n    var view = m.createView();\n    this.addView(view);\n    return view;\n  },\n\n  _appendRowToDOM: function(view) {\n    this._$rows().append(view.render().el);\n  },\n\n  _$rows: function() {\n    return this.$('.js-rows');\n  },\n\n  _initBinds: function() {\n    var rows = this.model.get('rows');\n    rows.bind('change', this._onChangeRows, this);\n    rows.bind('add', this._onAddRow, this);\n    this.add_related_model(rows);\n\n    var estimation = this.model.get('estimation');\n    estimation.bind('change', this._onChangeEstimation, this);\n    estimation.bind('error', this._onEstimationError, this);\n    this.add_related_model(estimation);\n\n    var geocodeStuff = this.model.get('geocodeStuff');\n    geocodeStuff.bind('change:forceAllRows', this._onChangeForceAllRows, this);\n    this.add_related_model(geocodeStuff);\n\n    this.model.bind('change:confirmTOS', this._onChangeConfirmTOS, this);\n    this.model.bind('change:isGoogleMapsUser', this.render, this);\n  },\n\n  _onChangeForceAllRows: function() {\n    this.model.get('estimation').reset();\n    this._fetchEstimation();\n  },\n\n  _fetchEstimation: function() {\n    if (this.model.showCostsInfo()) {\n      this.model.get('estimation').fetch({\n        data: {\n          force_all_rows: this.model.get('geocodeStuff').get('forceAllRows')\n        }\n      });\n    }\n  },\n\n  _onChangeRows: function() {\n    var formatter = this.model.get('rows').chain()\n      .map(this.model.getFormatterItemByRow)\n      .compact() // there might be rows that have no value, if so skip them\n      .value().join(', ');\n\n    this.model.set({\n      formatter: formatter,\n      canContinue: !_.isEmpty(formatter)\n    });\n  },\n\n  _onAddRow: function(newRow, rows, opts) {\n    var rowView = this._createRowView(newRow);\n    this.$('.js-rows').children().eq(opts.index).before(rowView.render().el);\n    this.model.assertIfCanAddMoreRows();\n  },\n\n  _onChangeEstimation: function() {\n    var mustAgreeToTOS = this.model.get('estimation').mayHaveCost() && !this.model.hasHardLimit();\n    this.model.set('mustAgreeToTOS', mustAgreeToTOS);\n  },\n\n  _onEstimationError: function() {\n    // Force re-render, handled in subview\n    this.model.get('estimation').set({\n      estimation: -1,\n      rows: -1\n    });\n  },\n\n  _onChangeConfirmTOS: function(m, confirmTOS) {\n    if (confirmTOS) {\n      this.model.set('confirmTOS', false, { silent: true }); // to re-renable if cancelled\n      var view = ViewFactory.createDialogByTemplate('common/dialogs/georeference/street_addresses/confirm_tos', {\n        // template data\n        costInDollars: this.model.get('estimation').costInDollars()\n      }, {\n        // dialog options\n        triggerDialogEvents: false, // to avoid closing this modal\n        enter_to_confirm: true,\n        clean_on_hide: false\n      });\n      view.ok = this._onAgreeToTOS.bind(this);\n      this.addView(view);\n      view.appendToBody();\n    }\n  },\n\n  _onAgreeToTOS: function() {\n    this.model.set('hasAgreedToTOS', true);\n    this.model.continue();\n  }\n\n});\n","var RowModel = require('../row_model');\nvar StreetRowView = require('./street_row_view');\n\n/**\n * Specialization for the street row, to add an additonal row\n */\nmodule.exports = RowModel.extend({\n\n  createView: function() {\n    return new StreetRowView({\n      model: this\n    });\n  },\n\n  addRow: function() {\n    var newRowModel = new this.constructor({\n      label: 'Additional information to complete street address',\n      data: this.get('data')\n    });\n    this.collection.add(newRowModel, { at: this._indexAfterThisModel() });\n  },\n\n  _indexAfterThisModel: function() {\n    return this.collection.indexOf(this) + 1;\n  }\n\n});\n","var RowView = require('../row_view');\n\n/**\n * Special view for the street addresses georeference option\n * This allows to potentially add more\n */\nmodule.exports = RowView.extend({\n\n  events: RowView.extendEvents({\n    'click .js-add-row': '_onClickAddRow'\n  }),\n\n  initialize: function() {\n    RowView.prototype.initialize.apply(this, arguments);\n    this._initStreetRowBinds();\n  },\n\n  render: function() {\n    RowView.prototype.render.call(this);\n    if (!this.model.get('disabled')) {\n      this.$el.append(\n        this.getTemplate('common/dialogs/georeference/street_addresses/row_add_row')()\n      );\n    }\n    return this;\n  },\n\n  _initStreetRowBinds: function() {\n    this.model.bind('change:canAddRow', this._onChangeCanAddRow, this);\n  },\n\n  _onClickAddRow: function(ev) {\n    this.killEvent(ev);\n    this.model.addRow();\n  },\n\n  _onChangeCanAddRow: function(m, canAddRow) {\n    this.$('.js-add-row').toggle(!!canAddRow);\n  }\n\n});\n","var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * View for an indvidual tab item\n */\nmodule.exports = cdb.core.View.extend({\n\n  tagName: 'li',\n  className: 'Filters-typeItem Filters-typeItem--moreMargins',\n\n  events: {\n    'click .js-btn': '_onClick'\n  },\n\n  initialize: function() {\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n\n    this.$el.html(\n      this.getTemplate('common/dialogs/georeference/tab_item')({\n        label: this.model.TAB_LABEL,\n        isDisabled: this.model.get('disabled')\n      })\n    );\n    this._onChangeSelected(this.model, this.model.get('selected'));\n    this._onChangeDisabled(this.model, this.model.get('disabled'));\n    this._createDisabledTooltip();\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:selected', this._onChangeSelected, this);\n    this.model.bind('change:disabled', this._onChangeDisabled, this);\n  },\n\n  _onChangeSelected: function(m, isSelected) {\n    this.$('button').toggleClass('is-selected', !!isSelected);\n  },\n\n  _onChangeDisabled: function(m, isDisabled) {\n    isDisabled ? this.undelegateEvents() : this.delegateEvents();\n  },\n\n  _createDisabledTooltip: function() {\n    var msg = this.model.get('disabled');\n    if (!_.isEmpty(msg)) {\n      this.addView(\n        new cdb.common.TipsyTooltip({\n          el: this.$('.js-btn'),\n          fallback: msg,\n          gravity: 's',\n          offset: -30\n        })\n      );\n    }\n  },\n\n  _onClick: function(ev) {\n    this.killEvent(ev);\n    this.model.set('selected', true);\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * A value object to encapsulate logic related to user view model.\n *\n * Expected to be create with geocoding value from an user, e.g.:\n *   new UserGeocoding(user.get('geocoding'));\n */\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    quota: null, // is based on monthly usage\n    block_price: null, // cost (in cents) per each 1000 credits extra\n    monthly_use: 0,\n    hard_limit: false\n  },\n\n  hasQuota: function() {\n    var quota = this.get('quota');\n    return quota !== null && quota !== undefined && quota !== '';\n  },\n\n  hasReachedMonthlyQuota: function() {\n    return this.get('hard_limit') && this._maybe(function(quota, monthlyUse) {\n      return (monthlyUse >= quota);\n    }, false);\n  },\n\n  /**\n   * Returns the quota left.\n   * @return {Number} a non-negative number (.e.g in the case of monthly usage exceeds the quota, returns 0)\n   */\n  quotaLeftThisMonth: function() {\n    return this._maybe(function(quota, monthlyUse) {\n      return Math.max(quota - monthlyUse, 0);\n    }, 0);\n  },\n\n  quotaUsedThisMonthInPct: function() {\n    return this._maybe(function(quota, monthlyUse) {\n      return (monthlyUse * 100) / quota;\n    }, 0);\n  },\n\n  blockPriceInDollars: function() {\n    return Math.ceil(this.get('block_price') / 100);\n  },\n\n  // Make sure monthly_use and quota are set\n  _maybe: function(fn, fallbackVal) {\n    var monthlyUse = this.get('monthly_use');\n    var quota = this.get('quota');\n\n    if (monthlyUse >= 0 && quota >= 0) {\n      return fn(quota, monthlyUse);\n    } else {\n      return fallbackVal;\n    }\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null)\n\n/**\n *  Limits reach content\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-toggler': '_onLumpSumClick'\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.model = new cdb.core.Model({\n      lumpSum: false\n    });\n    this.template = cdb.templates.getTemplate('common/dialogs/limits_reach/limits_reached_content');\n    this._initBinds();\n  },\n\n  render: function() {\n    var canUpgrade = cdb.config.get('upgrade_url') && !cdb.config.get('cartodb_com_hosted') && !this.user.isInsideOrg();\n    var currentPlan = this.user.get(\"account_type\");\n\n    var availablePlans = _.compact(this.collection.map(function(plan, index) {\n      var price = plan.get('price');\n      var planName = plan.get('title');\n\n      return {\n        name: planName.toLowerCase(),\n        price: Utils.formatNumber(price),\n        isUserPlan: planName.search(currentPlan) !== -1,\n        lumpSumPrice: price == \"0\" ? \"0\" : Utils.formatNumber(plan.get('lump_sum').price),\n        quota: Utils.readablizeBytes(plan.get('bytes_quota')).replace(/\\.00/g,'').replace(\" \", \"\"),\n        layers: plan.get('max_layers'),\n        privateMaps: plan.get('private_tables'),\n        removableBrand: plan.get('removable_brand')\n      }\n    }));\n\n    this.$el.html(\n      this.template({\n        lumpSum: this.model.get('lumpSum'),\n        itemHighlighted: this._getHighlighted(availablePlans, this.user.get(\"account_type\")),\n        canUpgrade: canUpgrade,\n        availablePlans: availablePlans,\n        organizationAdmin: this.user.isOrgOwner(),\n        organizationUser: (this.user.isInsideOrg() && !this.user.isOrgOwner()),\n        customHosted: cdb.config.get('cartodb_com_hosted'),\n        upgradeURL: cdb.config.get('upgrade_url'),\n        canStartTrial: this.user.canStartTrial()\n      })\n    );\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change', this.render, this);\n    this.collection.bind('reset', this.render, this);\n    this.add_related_model(this.collection);\n  },\n\n  _getHighlighted: function(plans, currentPlan) {\n    var item = 0;\n    for (var i = 0, l = plans.length; i < l; i++) {\n      if (plans[i].name.search(currentPlan) !== -1) {\n        item = i;\n      }\n    }\n    return item < 2 ? 2 : 3;\n  },\n\n  _onLumpSumClick: function() {\n    this.model.set('lumpSum', !this.model.get('lumpSum'));\n  }\n\n})\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar UserPlansCollection = require('./user_plans_collection');\nvar LimitsReachedContentView = require('./limits_reached_content_view');\nvar BaseDialog = require('../../views/base_dialog/view');\nvar randomQuote = require('../../view_helpers/random_quote');\nvar ViewFactory = require('../../view_factory');\n\n/**\n *  Show upgrade possibilities per user type\n *\n */\n\nmodule.exports = BaseDialog.extend({\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.userPlans = new UserPlansCollection(null, { user: this.user });\n    this.elder('initialize');\n    this._initBinds();\n  },\n\n  render_content: function() {\n    var canUpgrade = cdb.config.get('upgrade_url') && !cdb.config.get('cartodb_com_hosted') && !this.user.isInsideOrg();\n    var organizationAdminEmail = this.user.isInsideOrg() && this.user.organization.get('owner').email || '';\n    var $el = $(cdb.templates.getTemplate('common/dialogs/limits_reach/limits_reached')({\n      canUpgrade: canUpgrade,\n      organizationAdminEmail: organizationAdminEmail,\n      organizationAdmin: this.user.isOrgOwner(),\n      organizationUser: (this.user.isInsideOrg() && !this.user.isOrgOwner()),\n      layersCount: this.user.getMaxLayers(),\n      customHosted: cdb.config.get('cartodb_com_hosted')\n    }));\n    this._initViews($el);\n    return $el;\n  },\n\n  _initBinds: function() {\n    this.userPlans.bind('error', function() {\n      this._panes.active('error');\n    }, this);\n    this.userPlans.bind('reset', function() {\n      this._panes.active('content');\n    }, this);\n    this.add_related_model(this.userPlans);\n  },\n\n  _initViews: function($el) {\n    this._panes = new cdb.ui.common.TabPane({\n      el: $el.find('.js-content')\n    });\n    this.addView(this._panes);\n\n    this._panes.addTab('loading',\n      ViewFactory.createByTemplate('common/templates/loading', {\n        title: 'Getting plans info…',\n        quote: randomQuote()\n      }).render()\n    );\n\n    this._panes.addTab('error',\n      ViewFactory.createByTemplate('common/templates/fail', {\n        msg: 'Sorry, something went wrong trying to get your available plans.'\n      }).render()\n    );\n\n    this._panes.addTab('content',\n      new LimitsReachedContentView({\n        user: this.user,\n        collection: this.userPlans\n      }).render()\n    );\n\n    var canUpgrade = cdb.config.get('upgrade_url') && !cdb.config.get('cartodb_com_hosted') && !this.user.isInsideOrg();\n\n    this._panes.active(canUpgrade ? 'loading' : 'content');\n\n    if (canUpgrade) {\n      this.userPlans.fetch({\n        error: function() {\n          this.trigger('error');\n        }\n      });\n    }\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\n\n/**\n *  User plans model\n *\n */\n\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    title: '',\n    desc: '',\n    price: 0,\n    tables_quota: '',\n    bytes_quota: 0,\n    support: '',\n    private_tables: false,\n    removable_brand: false,\n    max_layers: 4\n  }\n\n})","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar UserPlanModel = require('./user_plan_model');\n\n/**\n *  User plans collection\n *\n *  - It will get the available plans per user\n */\n\n\nmodule.exports = Backbone.Collection.extend({\n\n  model: UserPlanModel,\n\n  url: function() {\n    return '//' + cdb.config.get('account_host') + '/account/' + this.user.get('username') + '.json'\n  },\n\n  initialize: function(models, opts) {\n    if (!opts.user) {\n      throw new Error('user model is needed')\n    }\n    this.user = opts.user;\n  },\n\n  sync: function(method, model, options) {\n    var self = this;\n    var params = _.extend({\n      type: 'GET',\n      dataType: 'jsonp',\n      url: self.url(),\n      processData: false\n    }, options);\n\n    return $.ajax(params);\n  },\n\n  parse: function(r) {\n    return r.available_plans\n  }\n\n})","var $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar GuessingTogglerView = require('../../create/footer/guessing_toggler_view');\nvar PrivacyTogglerView = require('../../create/footer/privacy_toggler_view');\n\n/**\n * Footer view for the add layer modal.\n */\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-ok': '_finish'\n  },\n\n  initialize: function() {\n    this.elder('initialize');\n    this.user = this.options.user;\n    this.guessingModel = new cdb.core.Model({ guessing: true });\n    this.privacyModel = new cdb.core.Model({\n      privacy: this.user.canCreatePrivateDatasets() ? 'PRIVATE' : 'PUBLIC'\n    });\n    this._template = cdb.templates.getTemplate('common/dialogs/map/add_layer/footer');\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n\n    var $el = $(\n      this._template({\n        canFinish: this.model.canFinish(),\n        listing: this.model.get('listing')\n      })\n    );\n    this.$el.html($el);\n\n    this._initViews();\n\n    return this;\n  },\n\n  _initViews: function() {\n    var guessingTogglerView = new GuessingTogglerView({\n      model: this.guessingModel,\n      createModel: this.model\n    });\n    this.$('.js-footer-info').append(guessingTogglerView.render().el);\n    this.addView(guessingTogglerView);\n\n    this.privacyTogglerView = new PrivacyTogglerView({\n      model: this.privacyModel,\n      user: this.user,\n      createModel: this.model\n    });\n    this.$('.js-footerActions').prepend(this.privacyTogglerView.render().el);\n    this.addView(this.privacyTogglerView);\n  },\n\n  _initBinds: function() {\n    this.model.upload.bind('change', this.render, this);\n    this.model.selectedDatasets.bind('all', this._update, this);\n    this.model.bind('change', this._update, this);\n    this.add_related_model(this.model.upload);\n    this.add_related_model(this.model.selectedDatasets);\n  },\n\n  _update: function() {\n    var contentPane = this.model.get('contentPane');\n    var listing = this.model.get('listing');\n    if (contentPane === 'listing' && listing !== 'scratch') {\n      this.render().show();\n    } else {\n      this.hide();\n    }\n  },\n\n  _finish: function(e) {\n    this.killEvent(e);\n    if (this.model.canFinish()) {\n      // Set proper guessing values before starting the upload\n      // if dialog is in import section\n      if (this.model.get('listing') === 'import') {\n        this.model.upload.set('privacy', this.privacyModel.get('privacy'));\n        this.model.upload.setGuessing(this.guessingModel.get('guessing'));\n      }\n      this.model.finish();\n    }\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar UploadModel = require('../../background_polling/models/upload_model');\nvar VisFetchModel = require('../../visualizations_fetch_model');\n\n/**\n * Add layer model\n *\n * \"Implements\" the CreateListingModel.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    type: 'addLayer',\n    contentPane: 'listing', // [listing, loading]\n    listing: 'datasets', // [import, datasets, scratch]\n    collectionFetched: false,\n    activeImportPane: 'file'\n  },\n\n  initialize: function(attrs, opts) {\n    this.user = opts.user;\n    this.vis = opts.vis;\n    this.map = opts.map;\n\n    this.upload = new UploadModel({\n      create_vis: false\n    }, {\n      user: this.user\n    });\n\n    this.selectedDatasets = new Backbone.Collection();\n    this.collection = new cdb.admin.Visualizations();\n    this.visFetchModel = new VisFetchModel({\n      content_type: 'datasets',\n      library: this.showLibrary()\n    });\n    this._initBinds();\n    this._maybePrefetchDatasets();\n  },\n\n  // For create-listing view\n  canSelect: function(dataset) {\n    return dataset.get('selected') || this.selectedDatasets.length < 1; // for now only allow 1 item\n  },\n\n  // For create-listing view\n  showLibrary: function() {\n    return false;\n  },\n\n  // For create-listing view\n  showDatasets: function() {\n    return true;\n  },\n\n  // For create-listing-import view\n  setActiveImportPane: function(name) {\n    this.set('activeImportPane', name);\n  },\n\n  // For footer\n  canFinish: function() {\n    if (this.get('listing') === 'import') {\n      return this.upload.isValidToUpload();\n    } else if (this.get('listing') === 'datasets') {\n      return this.selectedDatasets.length > 0;\n    }\n  },\n\n  finish: function() {\n    if (this.get('listing') === 'import') {\n      cdb.god.trigger('importByUploadData', this.upload.toJSON(), this);\n    } else if (this.get('listing') === 'datasets') {\n      var mdl = this.selectedDatasets.at(0);\n      if (mdl.get('type') === 'remote') {\n        var d = {\n          create_vis: false,\n          type: 'remote',\n          value: mdl.get('name'),\n          remote_visualization_id: mdl.get('id'),\n          size: mdl.get('external_source') ? mdl.get('external_source').size : undefined\n        };\n        // See BackgroundImporter where the same event is bound to be handled..\n        cdb.god.trigger('importByUploadData', d, this);\n      } else {\n        this._addNewLayer(mdl.tableMetadata().get('name'));\n      }\n    }\n  },\n\n  // For footer (type guessing)\n  getImportState: function() {\n    return this.get('activeImportPane');\n  },\n\n  // For footer (type guessing)\n  showGuessingToggler: function() {\n    return this.get('listing') === 'import';\n  },\n\n  // For create-footer view\n  showPrivacyToggler: function() {\n    return this.get('listing') === 'import';\n  },\n\n  // For create-from-scratch view\n  createFromScratch: function() {\n    this.set('contentPane', 'creatingFromScratch');\n    var self = this;\n    var table = new cdb.admin.CartoDBTableMetadata();\n    table.save({}, {\n      success: function() {\n        self._addNewLayer(table.get('name'));\n      },\n      error: function() {\n        this.set('contentPane', 'addLayerFailed');\n      }\n    });\n  },\n\n  _initBinds: function() {\n    this.upload.bind('change', function() {\n      this.trigger('change:upload', this);\n    }, this);\n    this.visFetchModel.bind('change', this._fetchCollection, this);\n    this.bind('change:listing', this._maybePrefetchDatasets);\n\n    this.collection.bind('change:selected', function(changedModel, wasSelected) {\n      this.selectedDatasets[ wasSelected ? 'add' : 'remove' ](changedModel);\n    }, this);\n    this.collection.bind('reset', function() {\n      this.selectedDatasets.each(function(model) {\n        var sameModel = this.collection.get(model.id);\n        if (sameModel) {\n          sameModel.set('selected', true);\n        }\n      }, this);\n    }, this);\n  },\n\n  _maybePrefetchDatasets: function() {\n    if (this.get('listing') === 'datasets' && !this.get('collectionFetched') && !this.visFetchModel.isSearching()) {\n      this.set('collectionFetched', true);\n      this._fetchCollection();\n    }\n  },\n\n  _fetchCollection: function() {\n    var params = this.visFetchModel.attributes;\n    var types;\n\n    if (this.visFetchModel.isSearching()) {\n      // Supporting search in data library and user datasets at the same time\n      types = 'table,remote';\n    } else {\n      types = params.library ? 'remote' : 'table';\n    }\n\n    this.collection.options.set({\n      locked: '',\n      q: params.q,\n      page: params.page || 1,\n      tags: params.tag,\n      per_page: this.collection['_TABLES_PER_PAGE'],\n      shared: params.shared,\n      only_liked: params.liked,\n      order: 'updated_at',\n      type: '',\n      types: types,\n      exclude_raster: true\n    });\n\n    this.collection.fetch();\n  },\n\n  _onCollectionChange: function() {\n    this.selectedDatasets.reset(this.collection.where({ selected: true }));\n  },\n\n  _addNewLayer: function(tableName) {\n    this.set('contentPane', 'addingNewLayer');\n\n    var self = this;\n    this.map.addCartodbLayerFromTable(tableName, this.user.get('username'), {\n      vis: this.vis,\n      success: function() {\n        // layers need to be saved because the order may changed\n        self.map.layers.saveLayers();\n        self.trigger('addLayerDone');\n      },\n      error: function() {\n        self.set('contentPane', 'addLayerFailed');\n      }\n    });\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BaseDialog = require('../../views/base_dialog/view');\nvar CreateListing = require('../create/create_listing');\nvar FooterView = require('./add_layer/footer_view');\nvar ViewFactory = require('../../view_factory');\nvar randomQuote = require('../../view_helpers/random_quote');\nvar NavigationView = require('../create/listing/navigation_view');\n\n/**\n * Add layer dialog, typically used from editor\n */\nmodule.exports = BaseDialog.extend({\n\n  initialize: function() {\n    this.elder('initialize');\n    if (!this.model) {\n      throw new TypeError('model is required');\n    }\n    if (!this.options.user) {\n      throw new TypeError('user is required');\n    }\n\n    this._template = cdb.templates.getTemplate('common/dialogs/map/add_layer_template');\n    this._initBinds();\n  },\n\n  // implements cdb.ui.common.Dialog.prototype.render\n  render: function() {\n    this.clearSubViews();\n    BaseDialog.prototype.render.call(this);\n    this.$('.content').addClass('Dialog-content--expanded');\n    this._initViews();\n    this.$('.js-footer').append(this._footerView.render().el);\n    return this;\n  },\n\n  // implements cdb.ui.common.Dialog.prototype.render\n  render_content: function() {\n    return this._template({\n    });\n  },\n\n  _initBinds: function() {\n    this.model.bind('addLayerDone', this.close, this);\n    this.model.bind('change:contentPane', this._onChangeContentView, this);\n    cdb.god.bind('importByUploadData', this.close, this);\n    this.add_related_model(cdb.god);\n  },\n\n  _initViews: function() {\n    this._contentPane = new cdb.ui.common.TabPane({\n      el: this.$('.js-content-container')\n    });\n    this.addView(this._contentPane);\n\n    this._navigationView = new NavigationView({\n      el: this.$('.js-navigation'),\n      user: this.options.user,\n      routerModel: this.model.visFetchModel,\n      createModel: this.model,\n      collection: this.model.collection\n    });\n    this._navigationView.render();\n    this.addView(this._navigationView);\n\n    this._addTab('listing',\n      new CreateListing({\n        createModel: this.model,\n        user: this.options.user\n      })\n    );\n    this._addTab('creatingFromScratch',\n      ViewFactory.createByTemplate('common/templates/loading', {\n        title: 'Creating empty dataset…',\n        quote: randomQuote()\n      })\n    );\n    this._addTab('addingNewLayer',\n      ViewFactory.createByTemplate('common/templates/loading', {\n        title: 'Adding new layer…',\n        quote: randomQuote()\n      })\n    );\n    this._addTab('addLayerFailed',\n      ViewFactory.createByTemplate('common/templates/fail', {\n        msg: 'Could not add layer'\n      })\n    );\n    this._contentPane.active(this.model.get('contentPane'));\n\n    this._footerView = new FooterView({\n      model: this.model,\n      user: this.options.user\n    });\n    this.addView(this._footerView);\n  },\n\n  _addTab: function(name, view) {\n    this._contentPane.addTab(name, view.render());\n    this.addView(view);\n  },\n\n  _onChangeContentView: function() {\n    var pane = this.model.get('contentPane');\n    this._contentPane.active(pane);\n    if (pane === 'loading') {\n      this._footerView.hide();\n    }\n    if (pane !== \"listing\") {\n      this._navigationView.hide();\n    }\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\n/**\n *  Asset item previewing image\n *\n *  - It needs a model with asset url and state (is-idle, is-selected, is-destroying).\n *\n *  new AssetsItemView({\n *    model: asset_model\n *  })\n */\nmodule.exports = cdb.core.View.extend({\n\n  _SIZE: 60, // Thumbnail size (same cm for width and height)\n  _MIN_SIZE: 32, // Minimal thumbnail size (same cm for width and height)\n\n  tagName: 'li',\n\n  options: {\n    template: 'common/dialogs/map/image_picker/assets_item'\n  },\n\n  events: {\n    'click a.delete': '_openDropdown',\n    'click':          '_onClick'\n  },\n\n  initialize: function() {\n    this.template = cdb.templates.getTemplate(this.options.template);\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.$el.append(this.template(this.model.toJSON()));\n\n    this._calcBkgImg(this.model.get(\"public_url\"));\n\n    return this;\n  },\n\n  _initBinds: function() {\n    _.bindAll(this, '_onClick', '_openDropdown');\n\n    this.model.bind('change:state', this._changeState, this);\n    this.model.bind('destroy', this.remove, this);\n  },\n\n  _calcBkgImg: function(src) {\n    var img = new Image();\n    var self = this;\n\n    img.onload = function() {\n      var w = this.width;\n      var h = this.height;\n\n      var $thumbnail = self.$(\"a.image\");\n\n      self.$el.css(\"background\",\"none\");\n\n      if(self.model.get(\"kind\") === 'marker') {\n        if(h > self._SIZE) {\n          $thumbnail.css({\n            \"background-size\":  \"cover\",\n            \"background-origin\": \"content-box\"\n          });\n        } else if ((w || h) < self._MIN_SIZE) {\n          // Scale up images smaller than considered min size (e.g. maki icons).\n          $thumbnail.css({\n            \"background-size\": self._MIN_SIZE + \"px\"\n          });\n        }\n      } else {\n        if ((w || h) > self._SIZE) {\n          $thumbnail.css({\n            \"background-size\":  \"cover\",\n            \"background-origin\": \"content-box\"\n          });\n        } else {\n          $thumbnail.css({\n            \"background-position\": \"0 0\",\n            \"background-repeat\": \"repeat\"\n          });\n        }\n      }\n    }\n\n    img.onerror = function(e){ cdb.log.info(e) };\n    img.src = src;\n  },\n\n  _onClick: function(e) {\n    this.killEvent(e);\n\n    if (this.model.get('state') !== 'selected' && this.model.get('state') != 'destroying') {\n      this.trigger('selected', this.model);\n      this.model.set('state', 'selected');\n    }\n  },\n\n  _changeState: function() {\n    this.$el\n      .removeClass('is-idle is-selected is-destroying')\n      .addClass(\"is-\" + this.model.get('state'));\n  },\n\n  _openDropdown: function(e) {\n    var self = this;\n\n    this.killEvent(e);\n    e.stopImmediatePropagation();\n\n    this.dropdown = new cdb.admin.DropdownMenu({\n      className: 'dropdown border tiny',\n      target: $(e.target),\n      width: 196,\n      speedIn: 150,\n      speedOut: 300,\n      template_base: 'common/dialogs/map/image_picker/remove_asset',\n      vertical_position: \"down\",\n      horizontal_position: \"left\",\n      horizontal_offset: 3,\n      tick: \"left\"\n    });\n\n    this.dropdown.bind(\"optionClicked\", function(ev) {\n      ev.preventDefault();\n      self._deleteAsset();\n    });\n\n    $('body').append(this.dropdown.render().el);\n    this.dropdown.open(e);\n    cdb.god.bind(\"closeDialogs\", this.dropdown.hide, this.dropdown);\n  },\n\n  _deleteAsset: function() {\n    var self = this;\n    this.model.set('state', 'destroying');\n\n    this.model.destroy({\n      success: function() {},\n      error: function() {\n        self.model.set('state', 'idle');\n      }\n    })\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar StaticAssetItemView = require('./static_assets_item_view');\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'AssetPane',\n\n  initialize: function() {\n    this.model = this.options.model;\n    this.template = cdb.templates.getTemplate('common/dialogs/map/image_picker/assets_template');\n    this._setupAssets();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.$el.html(this.template());\n    this._renderAssets();\n    return this;\n  },\n\n  _setupAssets: function() {\n    var opts = {};\n\n    if (this.options.folder !== undefined)  opts.folder = this.options.folder;\n    if (this.options.size   !== undefined)  opts.size   = this.options.size;\n    if (this.options.host   !== undefined)  opts.host   = this.options.host;\n    if (this.options.ext    !== undefined)  opts.ext    = this.options.ext;\n\n    if (!_.isEmpty(opts)) {\n      this.options.icons = _.map(this.options.icons, function(a) {\n        return _.extend(a, opts);\n      });\n    }\n\n    this.collection = new cdb.admin.StaticAssets(this.options.icons);\n  },\n\n  _renderAssets: function() {\n    var self = this;\n    var items = this.collection.where({ kind: this.options.kind });\n\n    _(items).each(function(mdl) {\n      var item = new StaticAssetItemView({\n        className: 'AssetItem ' + (self.options.folder || ''),\n        template: 'common/dialogs/map/image_picker/static_assets_item',\n        model: mdl\n      });\n      item.bind('selected', self._selectItem, self);\n\n      self.$('ul').append(item.render().el);\n      self.addView(item);\n    });\n  },\n\n  _selectItem: function(m) {\n    this.model.set('value', m.get('public_url'));\n    this.trigger('fileChosen', this);\n    this._unselectItems(m);\n  },\n\n  // Unselect all images expect the selected one\n  _unselectItems: function(m) {\n    this.collection.each(function(mdl) {\n      if (mdl !== m && mdl.get('state') === 'selected') {\n        mdl.set('state', 'idle');\n      }\n    });\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar UploadModel = require('./upload_model');\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'AssetPane',\n\n  events: {\n    'click .js-fileButton': '_onBoxClick'\n  },\n\n  _UPLOADER: {\n    url:              '/api/v1/users/<%- id %>/assets',\n    uploads:          1, // Max uploads at the same time\n    maxFileSize:      1048576, // 1MB\n    acceptFileTypes:  ['png','svg','jpeg','jpg'],\n    acceptSync:       undefined,\n    resolution:       \"1024x1024\"\n  },\n\n  initialize: function() {\n    _.bindAll(this, '_onDbxChooserSuccess');\n\n    this.kind = this.options.kind;\n    this.user = this.options.user;\n    this._setupModel();\n    this.collection = this.options.collection;\n  },\n\n  render: function() {\n    this.clearSubViews();\n\n    this.template = cdb.templates.getTemplate('common/dialogs/map/image_picker/box_template');\n\n    this.$el.html(this.template());\n\n    return this;\n  },\n\n  _setupModel: function() {\n    this.model = new UploadModel({\n      type: this.options.type,\n      kind: this.options.kind\n    }, {\n      userId: this.user.get(\"id\")\n    });\n    this._initBinds();\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:state', this._onChangeState, this);\n  },\n\n  _onStateUploaded: function() {\n    this.collection.fetch();\n    this.model.setFresh({ kind: this.kind });\n  },\n\n  _onStateError: function() {\n    this._showFileError();\n    this.trigger(\"hide_loader\", this);\n    this.$(\".js-import-panel\").show();\n    this.model.setFresh({ kind: this.kind });\n  },\n\n  _showFileError: function() {\n    if (this.model.get('state') === \"error\") {\n      this.$('.js-fileError')\n        .text(this.model.get('get_error_text').what_about)\n        .show();\n      this.$('.js-fileButton').addClass('Button--negative');\n    }\n  },\n\n  _hideFileError: function() {\n    this.$('.js-fileError').hide();\n    this.$('.js-fileLabel').show();\n    this.$('.js-fileButton').removeClass('Button--negative');\n  },\n\n  _onChangeState: function() {\n    var state = this.model.get('state');\n\n    if (state === 'uploaded') {\n      this._onStateUploaded();\n    } else {\n      if (state == \"error\") {\n        this._onStateError();\n      } else if (state === 'idle' || state === \"uploading\") {\n        this.$(\".js-import-panel\").hide();\n        this.trigger(\"show_loader\", this);\n      } else {\n        this.$(\".js-import-panel\").show();\n        this.trigger(\"hide_loader\", this);\n      }\n    }\n  },\n\n\n  _onBoxClick: function(e) {\n    this.killEvent(e);\n\n    Box.choose({\n      success:      this._onDbxChooserSuccess,\n      multiselect:  false,\n      linkType:     \"direct\",\n      extensions:   _.map(this._UPLOADER.acceptFileTypes, function(ext) { return '.' + ext })\n    });\n  },\n\n  _onDbxChooserSuccess: function(files) {\n    if (files && files[0]) {\n      this.model.set({\n        type: 'url',\n        value: files[0].link,\n        state: 'uploading'\n      });\n\n      this.model.upload();\n\n      if (this.model.get('state') !== \"error\") {\n        // Remove errors\n        this._hideFileError();\n      } else {\n        this._showFileError();\n      }\n    }\n  }\n\n});\n","// Maki icons from https://github.com/mapbox/maki\n// and https://github.com/mapbox/maki/blob/mb-pages/_includes/maki.json\nmodule.exports = {\n  disclaimer: '<a href=\"https://github.com/mapbox/maki\" target=\"_blank\">Maki Icons</a>, an open source project by <a href=\"http://mapbox.com\" target=\"_blank\">Mapbox</a>',\n  icons: [\n    {\n        \"name\": \"Circle stroked\",\n        \"icon\": \"circle-stroked\"\n    },\n    {\n        \"name\": \"Circle solid\",\n        \"icon\": \"circle\"\n    },\n    {\n        \"name\": \"Square stroked\",\n        \"icon\": \"square-stroked\"\n    },\n    {\n        \"name\": \"Square solid\",\n        \"icon\": \"square\"\n    },\n    {\n        \"name\": \"Triangle stroked\",\n        \"icon\": \"triangle-stroked\"\n    },\n    {\n        \"name\": \"Triangle solid\",\n        \"icon\": \"triangle\"\n    },\n    {\n        \"name\": \"Star stroked\",\n        \"icon\": \"star-stroked\"\n    },\n    {\n        \"name\": \"Star solid\",\n        \"icon\": \"star\"\n    },\n    {\n        \"name\": \"Cross\",\n        \"icon\": \"cross\"\n    },\n    {\n        \"name\": \"Marker Stroke\",\n        \"icon\": \"marker-stroked\"\n    },\n    {\n        \"name\": \"Marker Solid\",\n        \"icon\": \"marker\"\n    },\n    {\n        \"name\": \"Religious Jewish\",\n        \"icon\": \"religious-jewish\"\n    },\n    {\n        \"name\": \"Religious Christian\",\n        \"icon\": \"religious-christian\"\n    },\n    {\n        \"name\": \"Religious Muslim\",\n        \"icon\": \"religious-muslim\"\n    },\n    {\n        \"name\": \"Cemetery\",\n        \"icon\": \"cemetery\"\n    },\n    {\n        \"name\": \"Rocket\",\n        \"icon\": \"rocket\"\n    },\n    {\n        \"name\": \"Airport\",\n        \"icon\": \"airport\"\n    },\n    {\n        \"name\": \"Heliport\",\n        \"icon\": \"heliport\"\n    },\n    {\n        \"name\": \"Rail\",\n        \"icon\": \"rail\"\n    },\n    {\n        \"name\": \"Rail Metro\",\n        \"icon\": \"rail-metro\"\n    },\n    {\n        \"name\": \"Rail Light\",\n        \"icon\": \"rail-light\"\n    },\n    {\n        \"name\": \"Bus\",\n        \"icon\": \"bus\"\n    },\n    {\n        \"name\": \"Fuel\",\n        \"icon\": \"fuel\"\n    },\n    {\n        \"name\": \"Parking\",\n        \"tags\": [\n            \"parking\",\n            \"transportation\"\n        ],\n        \"icon\": \"parking\"\n    },\n    {\n        \"name\": \"Parking Garage\",\n        \"tags\": [\n            \"parking\",\n            \"transportation\",\n            \"garage\"\n        ],\n        \"icon\": \"parking-garage\"\n    },\n    {\n        \"name\": \"Airfield\",\n        \"tags\": [\n            \"airfield\",\n            \"airport\",\n            \"plane\",\n            \"landing strip\"\n        ],\n        \"icon\": \"airfield\"\n    },\n    {\n        \"name\": \"Roadblock\",\n        \"tags\": [\n            \"roadblock\",\n            \"stop\",\n            \"warning\",\n            \"dead end\"\n        ],\n        \"icon\": \"roadblock\"\n    },\n    {\n        \"name\": \"Ferry\",\n        \"tags\": [\n            \"ship\",\n            \"boat\",\n            \"water\",\n            \"ferry\",\n            \"transportation\"\n        ],\n        \"icon\": \"ferry\"\n    },\n    {\n        \"name\": \"Harbor\",\n        \"tags\": [\n            \"marine\",\n            \"dock\",\n            \"water\",\n            \"wharf\"\n        ],\n        \"icon\": \"harbor\"\n    },\n    {\n        \"name\": \"Bicycle\",\n        \"tags\": [\n            \"cycling\",\n            \"cycle\",\n            \"transportation\"\n        ],\n        \"icon\": \"bicycle\"\n    },\n    {\n        \"name\": \"Park\",\n        \"tags\": [\n            \"recreation\",\n            \"park\",\n            \"forest\",\n            \"tree\",\n            \"green\",\n            \"woods\",\n            \"nature\"\n        ],\n        \"icon\": \"park\"\n    },\n    {\n        \"name\": \"Park 2\",\n        \"tags\": [\n            \"recreation\",\n            \"park\",\n            \"forest\",\n            \"tree\",\n            \"green\",\n            \"woods\",\n            \"nature\"\n        ],\n        \"icon\": \"park2\"\n    },\n    {\n        \"name\": \"Museum\",\n        \"tags\": [\n            \"recreation\",\n            \"museum\",\n            \"tourism\"\n        ],\n        \"icon\": \"museum\"\n    },\n    {\n        \"name\": \"Lodging\",\n        \"tags\": [\n            \"lodging\",\n            \"hotel\",\n            \"recreation\",\n            \"motel\",\n            \"tourism\"\n        ],\n        \"icon\": \"lodging\"\n    },\n    {\n        \"name\": \"Monument\",\n        \"tags\": [\n            \"recreation\",\n            \"statue\",\n            \"monument\",\n            \"tourism\"\n        ],\n        \"icon\": \"monument\"\n    },\n    {\n        \"name\": \"Zoo\",\n        \"tags\": [\n            \"recreation\",\n            \"zoo\",\n            \"animal\",\n            \"giraffe\"\n        ],\n        \"icon\": \"zoo\"\n    },\n    {\n        \"name\": \"Garden\",\n        \"tags\": [\n            \"recreation\",\n            \"garden\",\n            \"park\",\n            \"flower\",\n            \"nature\"\n        ],\n        \"icon\": \"garden\"\n    },\n    {\n        \"name\": \"Campsite\",\n        \"tags\": [\n            \"recreation\",\n            \"campsite\",\n            \"camp\",\n            \"camping\",\n            \"tent\",\n            \"nature\"\n        ],\n        \"icon\": \"campsite\"\n    },\n    {\n        \"name\": \"Theatre\",\n        \"tags\": [\n            \"recreation\",\n            \"theatre\",\n            \"theater\",\n            \"entertainment\",\n            \"play\",\n            \"performance\"\n        ],\n        \"icon\": \"theatre\"\n    },\n    {\n        \"name\": \"Art gallery\",\n        \"tags\": [\n            \"art\",\n            \"center\",\n            \"museum\",\n            \"gallery\",\n            \"creative\",\n            \"recreation\",\n            \"entertainment\",\n            \"studio\"\n        ],\n        \"icon\": \"art-gallery\"\n    },\n    {\n        \"name\": \"Pitch\",\n        \"tags\": [\n            \"pitch\",\n            \"track\",\n            \"athletic\",\n            \"sports\",\n            \"field\"\n        ],\n        \"icon\": \"pitch\"\n    },\n    {\n        \"name\": \"Soccer\",\n        \"tags\": [\n            \"soccer\",\n            \"sports\"\n        ],\n        \"icon\": \"soccer\"\n    },\n    {\n        \"name\": \"American Football\",\n        \"tags\": [\n            \"football\",\n            \"sports\"\n        ],\n        \"icon\": \"america-football\"\n    },\n    {\n        \"name\": \"Tennis\",\n        \"tags\": [\n            \"tennis\",\n            \"court\",\n            \"ball\",\n            \"sports\"\n        ],\n        \"icon\": \"tennis\"\n    },\n    {\n        \"name\": \"Basketball\",\n        \"tags\": [\n            \"basketball\",\n            \"ball\",\n            \"sports\"\n        ],\n        \"icon\": \"basketball\"\n    },\n    {\n        \"name\": \"Baseball\",\n        \"tags\": [\n            \"baseball\",\n            \"softball\",\n            \"ball\",\n            \"sports\"\n        ],\n        \"icon\": \"baseball\"\n    },\n    {\n        \"name\": \"Golf\",\n        \"tags\": [\n            \"golf\",\n            \"sports\",\n            \"course\"\n        ],\n        \"icon\": \"golf\"\n    },\n    {\n        \"name\": \"Swimming\",\n        \"tags\": [\n            \"swimming\",\n            \"water\",\n            \"swim\",\n            \"sports\"\n        ],\n        \"icon\": \"swimming\"\n    },\n    {\n        \"name\": \"Cricket\",\n        \"tags\": [\n            \"cricket\",\n            \"sports\"\n        ],\n        \"icon\": \"cricket\"\n    },\n    {\n        \"name\": \"Skiing\",\n        \"tags\": [\n            \"winter\",\n            \"skiing\",\n            \"ski\",\n            \"sports\"\n        ],\n        \"icon\": \"skiing\"\n    },\n    {\n        \"name\": \"School\",\n        \"tags\": [\n            \"school\",\n            \"highschool\",\n            \"elementary\",\n            \"children\",\n            \"amenity\",\n            \"middle\"\n        ],\n        \"icon\": \"school\"\n    },\n    {\n        \"name\": \"College\",\n        \"tags\": [\n            \"college\",\n            \"school\",\n            \"amenity\",\n            \"university\"\n        ],\n        \"icon\": \"college\"\n    },\n    {\n        \"name\": \"Library\",\n        \"tags\": [\n            \"library\",\n            \"books\",\n            \"amenity\"\n        ],\n        \"icon\": \"library\"\n    },\n    {\n        \"name\": \"Post\",\n        \"tags\": [\n            \"post\",\n            \"office\",\n            \"amenity\",\n            \"mail\",\n            \"letter\"\n        ],\n        \"icon\": \"post\"\n    },\n    {\n        \"name\": \"Fire station\",\n        \"tags\": [\n            \"fire\",\n            \"station\",\n            \"amenity\"\n        ],\n        \"icon\": \"fire-station\"\n    },\n    {\n        \"name\": \"Town hall\",\n        \"tags\": [\n            \"townhall\",\n            \"mayor\",\n            \"building\",\n            \"amenity\",\n            \"government\"\n        ],\n        \"icon\": \"town-hall\"\n    },\n    {\n        \"name\": \"Police\",\n        \"tags\": [\n            \"police\",\n            \"jail\",\n            \"arrest\",\n            \"amenity\",\n            \"station\"\n        ],\n        \"icon\": \"police\"\n    },\n    {\n        \"name\": \"Prison\",\n        \"tags\": [\n            \"prison\",\n            \"jail\",\n            \"amenity\"\n        ],\n        \"icon\": \"prison\"\n    },\n    {\n        \"name\": \"Embassy\",\n        \"tags\": [\n            \"embassy\",\n            \"diplomacy\",\n            \"consulate\",\n            \"amenity\",\n            \"flag\"\n        ],\n        \"icon\": \"embassy\"\n    },\n    {\n        \"name\": \"Beer\",\n        \"tags\": [\n            \"bar\",\n            \"beer\",\n            \"drink\",\n            \"commercial\",\n            \"biergarten\",\n            \"pub\"\n        ],\n        \"icon\": \"beer\"\n    },\n    {\n        \"name\": \"Restaurant\",\n        \"tags\": [\n            \"restaurant\",\n            \"commercial\"\n        ],\n        \"icon\": \"restaurant\"\n    },\n    {\n        \"name\": \"Cafe\",\n        \"tags\": [\n            \"cafe\",\n            \"coffee\",\n            \"commercial\",\n            \"tea\"\n        ],\n        \"icon\": \"cafe\"\n    },\n    {\n        \"name\": \"Shop\",\n        \"tags\": [\n            \"shop\",\n            \"mall\",\n            \"commercial\",\n            \"store\"\n        ],\n        \"icon\": \"shop\"\n    },\n    {\n        \"name\": \"Fast Food\",\n        \"tags\": [\n            \"food\",\n            \"fast\",\n            \"commercial\",\n            \"burger\",\n            \"drive-through\"\n        ],\n        \"icon\": \"fast-food\"\n    },\n    {\n        \"name\": \"Bar\",\n        \"tags\": [\n            \"bar\",\n            \"drink\",\n            \"commercial\",\n            \"club\",\n            \"martini\",\n            \"lounge\"\n        ],\n        \"icon\": \"bar\"\n    },\n    {\n        \"name\": \"Bank\",\n        \"tags\": [\n            \"bank\",\n            \"atm\",\n            \"commercial\",\n            \"money\"\n        ],\n        \"icon\": \"bank\"\n    },\n    {\n        \"name\": \"Grocery\",\n        \"tags\": [\n            \"food\",\n            \"grocery\",\n            \"commercial\",\n            \"store\",\n            \"market\"\n        ],\n        \"icon\": \"grocery\"\n    },\n    {\n        \"name\": \"Cinema\",\n        \"tags\": [\n            \"cinema\",\n            \"theatre\",\n            \"film\",\n            \"movie\",\n            \"commercial\",\n            \"theater\",\n            \"entertainment\"\n        ],\n        \"icon\": \"cinema\"\n    },\n    {\n        \"name\": \"Pharmacy\",\n        \"tags\": [\n            \"pharmacy\",\n            \"drugs\",\n            \"medication\",\n            \"social\",\n            \"medicine\",\n            \"prescription\"\n        ],\n        \"icon\": \"pharmacy\"\n    },\n    {\n        \"name\": \"Hospital\",\n        \"tags\": [\n            \"hospital\",\n            \"health\",\n            \"medication\",\n            \"social\",\n            \"medicine\",\n            \"medical\",\n            \"clinic\"\n        ],\n        \"icon\": \"hospital\"\n    },\n    {\n        \"name\": \"Danger\",\n        \"tags\": [\n            \"minefield\",\n            \"landmine\",\n            \"disaster\",\n            \"dangerous\",\n            \"hazard\"\n        ],\n        \"icon\": \"danger\"\n    },\n    {\n        \"name\": \"Industrial\",\n        \"tags\": [\n            \"industrial\",\n            \"factory\",\n            \"property\",\n            \"building\"\n        ],\n        \"icon\": \"industrial\"\n    },\n    {\n        \"name\": \"Warehouse\",\n        \"tags\": [\n            \"warehouse\",\n            \"property\",\n            \"storage\",\n            \"building\"\n        ],\n        \"icon\": \"warehouse\"\n    },\n    {\n        \"name\": \"Commercial\",\n        \"tags\": [\n            \"commercial\",\n            \"property\",\n            \"business\",\n            \"building\"\n        ],\n        \"icon\": \"commercial\"\n    },\n    {\n        \"name\": \"Building\",\n        \"tags\": [\n            \"building\",\n            \"property\",\n            \"structure\",\n            \"business\",\n            \"building\"\n        ],\n        \"icon\": \"building\"\n    },\n    {\n        \"name\": \"Place of worship\",\n        \"tags\": [\n            \"religion\",\n            \"ceremony\",\n            \"religious\",\n            \"nondenominational\",\n            \"church\",\n            \"temple\"\n        ],\n        \"icon\": \"place-of-worship\"\n    },\n    {\n        \"name\": \"Alcohol shop\",\n        \"tags\": [\n            \"alcohol\",\n            \"liquor\",\n            \"store\",\n            \"shop\",\n            \"beer\",\n            \"wine\",\n            \"vodka\"\n        ],\n        \"icon\": \"alcohol-shop\"\n    },\n    {\n        \"name\": \"Logging\",\n        \"tags\": [\n            \"logger\",\n            \"chainsaw\",\n            \"woods\",\n            \"industry\"\n        ],\n        \"icon\": \"logging\"\n    },\n    {\n        \"name\": \"Oil well\",\n        \"tags\": [\n            \"oil\",\n            \"natural\",\n            \"environment\",\n            \"industry\",\n            \"resources\"\n        ],\n        \"icon\": \"oil-well\"\n    },\n    {\n        \"name\": \"Slaughterhouse\",\n        \"tags\": [\n            \"cows\",\n            \"cattle\",\n            \"food\",\n            \"meat\",\n            \"industry\",\n            \"resources\"\n        ],\n        \"icon\": \"slaughterhouse\"\n    },\n    {\n        \"name\": \"Dam\",\n        \"tags\": [\n            \"water\",\n            \"natural\",\n            \"hydro\",\n            \"hydroelectric\",\n            \"energy\",\n            \"environment\",\n            \"industry\",\n            \"resources\"\n        ],\n        \"icon\": \"dam\"\n    },\n    {\n    \"name\": \"Water\",\n    \"tags\": [\n        \"water\",\n        \"natural\",\n        \"hydro\",\n        \"lake\",\n        \"river\",\n        \"ocean\",\n        \"resources\"\n    ],\n    \"icon\": \"water\"\n    },\n    {\n    \"name\": \"Wetland\",\n    \"tags\": [\n        \"water\",\n        \"swamp\",\n        \"natural\"\n    ],\n    \"icon\": \"wetland\"\n    },\n    {\n    \"name\": \"Disability\",\n    \"tags\": [\n        \"handicap\",\n        \"wheelchair\",\n        \"access\"\n    ],\n    \"icon\": \"disability\"\n    },\n    {\n    \"name\": \"Telephone\",\n    \"tags\": [\n        \"payphone\",\n        \"call\"\n    ],\n    \"icon\": \"telephone\"\n    },\n    {\n    \"name\": \"Emergency Telephone\",\n    \"tags\": [\n        \"payphone\",\n        \"danger\",\n        \"safety\",\n        \"call\"\n    ],\n    \"icon\": \"emergency-telephone\"\n    },\n    {\n    \"name\": \"Toilets\",\n    \"tags\": [\n        \"bathroom\",\n        \"men\",\n        \"women\",\n        \"sink\",\n        \"washroom\",\n        \"lavatory\"\n    ],\n    \"icon\": \"toilets\"\n    },\n    {\n    \"name\": \"Waste Basket\",\n    \"tags\": [\n        \"trash\",\n        \"rubbish\",\n        \"bin\",\n        \"garbage\"\n    ],\n    \"icon\": \"waste-basket\"\n    },\n    {\n    \"name\": \"Music\",\n    \"tags\": [\n        \"stage\",\n        \"performance\",\n        \"band\",\n        \"concert\",\n        \"venue\"\n    ],\n    \"icon\": \"music\"\n    },\n    {\n    \"name\": \"Land Use\",\n    \"tags\": [\n        \"zoning\",\n        \"usage\",\n        \"area\"\n    ],\n    \"icon\": \"land-use\"\n    },\n    {\n    \"name\": \"City\",\n    \"tags\": [\n        \"area\",\n        \"point\",\n        \"place\",\n        \"urban\"\n    ],\n    \"icon\": \"city\"\n    },\n    {\n    \"name\": \"Town\",\n    \"tags\": [\n        \"area\",\n        \"point\",\n        \"place\",\n        \"small\"\n    ],\n    \"icon\": \"town\"\n    },\n    {\n    \"name\": \"Village\",\n    \"tags\": [\n        \"area\",\n        \"point\",\n        \"place\",\n        \"small\",\n        \"rural\"\n    ],\n    \"icon\": \"village\"\n    },\n    {\n    \"name\": \"Farm\",\n    \"tags\": [\n        \"building\",\n        \"farming\",\n        \"crops\",\n        \"plants\",\n        \"agriculture\",\n        \"rural\"\n    ],\n    \"icon\": \"farm\"\n    },\n    {\n    \"name\": \"Bakery\",\n    \"tags\": [\n        \"bakery\",\n        \"pastry\",\n        \"croissant\",\n        \"food\",\n        \"shop\",\n        \"bread\"\n    ],\n    \"icon\": \"bakery\"\n    },\n  {\n    \"name\": \"Dog Park\",\n    \"tags\": [\n        \"dog\",\n        \"pet\"\n    ],\n    \"icon\": \"dog-park\"\n    },\n   {\n    \"name\": \"Lighthouse\",\n    \"tags\": [\n        \"building\",\n        \"navigation\",\n        \"nautical\",\n        \"ocean\",\n        \"logistics\"\n    ],\n    \"icon\": \"lighthouse\"\n    },\n    {\n    \"name\": \"Clothing Store\",\n    \"tags\": [\n        \"clothing\",\n        \"store\",\n        \"shop\"\n    ],\n    \"icon\": \"clothing-store\"\n    },\n    {\n    \"name\": \"Polling Place\",\n    \"icon\": \"polling-place\"\n    },\n    {\n    \"name\": \"Playground\",\n    \"icon\": \"playground\"\n    },\n    {\n    \"name\": \"Entrance\",\n    \"icon\": \"entrance\"\n    },\n    {\n    \"name\": \"Heart\",\n    \"icon\": \"heart\"\n    },\n    {\n    \"name\": \"London Underground\",\n    \"icon\": \"london-underground\"\n    },\n    {\n    \"name\": \"Minefield\",\n    \"icon\": \"minefield\"\n    },\n    {\n    \"name\": \"Rail Underground\",\n    \"icon\": \"rail-underground\"\n    },\n    {\n    \"name\": \"Rail Above\",\n    \"icon\": \"rail-above\"\n    },\n    {\n     \"name\": \"Camera\",\n     \"icon\": \"camera\"\n    },\n    {\n    \"name\": \"Laundry\",\n    \"icon\": \"laundry\"\n    },\n    {\n        \"name\": \"Car\",\n        \"icon\": \"car\"\n    },\n    {\n    \"name\": \"Suitcase\",\n    \"icon\": \"suitcase\"\n    },\n    {\n    \"name\": \"Hairdresser\",\n    \"icon\": \"hairdresser\"\n    },\n    {\n    \"name\": \"Chemist\",\n    \"icon\": \"chemist\"\n    },\n    {\n    \"name\": \"Mobile phone\",\n    \"icon\": \"mobilephone\"\n    },\n    {\n    \"name\": \"Scooter\",\n    \"icon\": \"scooter\"\n    }\n  ]\n};\n","module.exports = {\n  icons: [\n    { kind: \"pattern\", ext: \"png\", name: 'diagonal_1px_fast', icon: 'diagonal_1px_fast'},\n    { kind: \"pattern\", ext: \"png\", name: 'diagonal_1px_med', icon: 'diagonal_1px_med', },\n    { kind: \"pattern\", ext: \"png\", name: 'diagonal_1px_slow', icon: 'diagonal_1px_slow'},\n    { kind: \"pattern\", ext: \"png\", name: 'diagonal_2px_fast', icon: 'diagonal_2px_fast', },\n    { kind: \"pattern\", ext: \"png\", name: 'diagonal_2px_med', icon: 'diagonal_2px_med', },\n    { kind: \"pattern\", ext: \"png\", name: 'diagonal_2px_slow', icon: 'diagonal_2px_slow'},\n    { kind: \"pattern\", ext: \"png\", name: 'donuts_4px_med', icon: 'donuts_4px_med', },\n    { kind: \"pattern\", ext: \"png\", name: 'donuts_6px_med', icon: 'donuts_6px_med', },\n    { kind: \"pattern\", ext: \"png\", name: 'dots_2px_fast', icon: 'dots_2px_fast', },\n    { kind: \"pattern\", ext: \"png\", name: 'dots_2px_med', icon: 'dots_2px_med', },\n    { kind: \"pattern\", ext: \"png\", name: 'dots_2px_slow', icon: 'dots_2px_slow'},\n    { kind: \"pattern\", ext: \"png\", name: 'dots_4px_fast', icon: 'dots_4px_fast'},\n    { kind: \"pattern\", ext: \"png\", name: 'dots_4px_med', icon: 'dots_4px_med', },\n    { kind: \"pattern\", ext: \"png\", name: 'dots_6px_fast', icon: 'dots_6px_fast' },\n    { kind: \"pattern\", ext: \"png\", name: 'dots_6px_med',  icon: 'dots_6px_med' }\n  ]\n};\n","// Pin maps from http://www.flaticon.com/packs/pins-of-maps/\nmodule.exports = {\n  disclaimer: '<a href=\"http://www.flaticon.com/packs/pins-of-maps/\" target=\"_blank\">Pin Maps</a>, icons by <a href=\"http://freepik.com\" target=\"_blank\">freepik.com</a>',\n  icons: [\n    { name: 'air', icon: 'air' },\n    { name: 'air2', icon: 'air2' },\n    { name: 'anchor2', icon: 'anchor2' },\n    { name: 'anchor3', icon: 'anchor3' },\n    { name: 'bag1', icon: 'bag1' },\n    { name: 'bag2', icon: 'bag2' },\n    { name: 'balloon', icon: 'balloon' },\n    { name: 'black41', icon: 'black41' },\n    { name: 'boat1', icon: 'boat1' },\n    { name: 'book16', icon: 'book16' },\n    { name: 'building', icon: 'building' },\n    { name: 'burger', icon: 'burger' },\n    { name: 'bus6', icon: 'bus6' },\n    { name: 'caravan2', icon: 'caravan2' },\n    { name: 'church1', icon: 'church1' },\n    { name: 'church3', icon: 'church3' },\n    { name: 'club', icon: 'club' },\n    { name: 'cocktail3', icon: 'cocktail3' },\n    { name: 'coffee2', icon: 'coffee2' },\n    { name: 'dark11', icon: 'dark11' },\n    { name: 'disabled', icon: 'disabled' },\n    { name: 'dog2', icon: 'dog2' },\n    { name: 'favourite1', icon: 'favourite1' },\n    { name: 'flag5', icon: 'flag5' },\n    { name: 'flat', icon: 'flat' },\n    { name: 'hotel', icon: 'hotel' },\n    { name: 'information3', icon: 'information3' },\n    { name: 'location10', icon: 'location10' },\n    { name: 'location11', icon: 'location11' },\n    { name: 'location5', icon: 'location5' },\n    { name: 'location6', icon: 'location6' },\n    { name: 'location7', icon: 'location7' },\n    { name: 'location8', icon: 'location8' },\n    { name: 'location9', icon: 'location9' },\n    { name: 'marker2', icon: 'marker2' },\n    { name: 'marker3', icon: 'marker3' },\n    { name: 'marker4', icon: 'marker4' },\n    { name: 'marker5', icon: 'marker5' },\n    { name: 'marker6', icon: 'marker6' },\n    { name: 'marker7', icon: 'marker7' },\n    { name: 'monument2', icon: 'monument2' },\n    { name: 'mountains', icon: 'mountains' },\n    { name: 'p', icon: 'p' },\n    { name: 'petrol', icon: 'petrol' },\n    { name: 'petrol2', icon: 'petrol2' },\n    { name: 'pharmacy', icon: 'pharmacy' },\n    { name: 'phone13', icon: 'phone13' },\n    { name: 'pin10', icon: 'pin10' },\n    { name: 'pins', icon: 'pins' },\n    { name: 'pins1', icon: 'pins1' },\n    { name: 'pins10', icon: 'pins10' },\n    { name: 'pins11', icon: 'pins11' },\n    { name: 'pins12', icon: 'pins12' },\n    { name: 'pins13', icon: 'pins13' },\n    { name: 'pins14', icon: 'pins14' },\n    { name: 'pins15', icon: 'pins15' },\n    { name: 'pins16', icon: 'pins16' },\n    { name: 'pins17', icon: 'pins17' },\n    { name: 'pins18', icon: 'pins18' },\n    { name: 'pins19', icon: 'pins19' },\n    { name: 'pins2', icon: 'pins2' },\n    { name: 'pins20', icon: 'pins20' },\n    { name: 'pins21', icon: 'pins21' },\n    { name: 'pins22', icon: 'pins22' },\n    { name: 'pins23', icon: 'pins23' },\n    { name: 'pins24', icon: 'pins24' },\n    { name: 'pins25', icon: 'pins25' },\n    { name: 'pins26', icon: 'pins26' },\n    { name: 'pins27', icon: 'pins27' },\n    { name: 'pins28', icon: 'pins28' },\n    { name: 'pins29', icon: 'pins29' },\n    { name: 'pins3', icon: 'pins3' },\n    { name: 'pins30', icon: 'pins30' },\n    { name: 'pins31', icon: 'pins31' },\n    { name: 'pins32', icon: 'pins32' },\n    { name: 'pins33', icon: 'pins33' },\n    { name: 'pins34', icon: 'pins34' },\n    { name: 'pins35', icon: 'pins35' },\n    { name: 'pins36', icon: 'pins36' },\n    { name: 'pins37', icon: 'pins37' },\n    { name: 'pins38', icon: 'pins38' },\n    { name: 'pins39', icon: 'pins39' },\n    { name: 'pins4', icon: 'pins4' },\n    { name: 'pins40', icon: 'pins40' },\n    { name: 'pins41', icon: 'pins41' },\n    { name: 'pins42', icon: 'pins42' },\n    { name: 'pins43', icon: 'pins43' },\n    { name: 'pins44', icon: 'pins44' },\n    { name: 'pins45', icon: 'pins45' },\n    { name: 'pins46', icon: 'pins46' },\n    { name: 'pins47', icon: 'pins47' },\n    { name: 'pins48', icon: 'pins48' },\n    { name: 'pins49', icon: 'pins49' },\n    { name: 'pins5', icon: 'pins5' },\n    { name: 'pins50', icon: 'pins50' },\n    { name: 'pins51', icon: 'pins51' },\n    { name: 'pins52', icon: 'pins52' },\n    { name: 'pins53', icon: 'pins53' },\n    { name: 'pins54', icon: 'pins54' },\n    { name: 'pins55', icon: 'pins55' },\n    { name: 'pins56', icon: 'pins56' },\n    { name: 'pins57', icon: 'pins57' },\n    { name: 'pins58', icon: 'pins58' },\n    { name: 'pins59', icon: 'pins59' },\n    { name: 'pins6', icon: 'pins6' },\n    { name: 'pins60', icon: 'pins60' },\n    { name: 'pins61', icon: 'pins61' },\n    { name: 'pins62', icon: 'pins62' },\n    { name: 'pins63', icon: 'pins63' },\n    { name: 'pins64', icon: 'pins64' },\n    { name: 'pins65', icon: 'pins65' },\n    { name: 'pins66', icon: 'pins66' },\n    { name: 'pins67', icon: 'pins67' },\n    { name: 'pins68', icon: 'pins68' },\n    { name: 'pins69', icon: 'pins69' },\n    { name: 'pins7', icon: 'pins7' },\n    { name: 'pins70', icon: 'pins70' },\n    { name: 'pins71', icon: 'pins71' },\n    { name: 'pins72', icon: 'pins72' },\n    { name: 'pins73', icon: 'pins73' },\n    { name: 'pins74', icon: 'pins74' },\n    { name: 'pins75', icon: 'pins75' },\n    { name: 'pins76', icon: 'pins76' },\n    { name: 'pins77', icon: 'pins77' },\n    { name: 'pins78', icon: 'pins78' },\n    { name: 'pins79', icon: 'pins79' },\n    { name: 'pins8', icon: 'pins8' },\n    { name: 'pins80', icon: 'pins80' },\n    { name: 'pins81', icon: 'pins81' },\n    { name: 'pins82', icon: 'pins82' },\n    { name: 'pins83', icon: 'pins83' },\n    { name: 'pins84', icon: 'pins84' },\n    { name: 'pins85', icon: 'pins85' },\n    { name: 'pins86', icon: 'pins86' },\n    { name: 'pins87', icon: 'pins87' },\n    { name: 'pins88', icon: 'pins88' },\n    { name: 'pins89', icon: 'pins89' },\n    { name: 'pins9', icon: 'pins9' },\n    { name: 'pins90', icon: 'pins90' },\n    { name: 'pins91', icon: 'pins91' },\n    { name: 'position', icon: 'position' },\n    { name: 'restaurant2', icon: 'restaurant2' },\n    { name: 'right14', icon: 'right14' },\n    { name: 'road3', icon: 'road3' },\n    { name: 'shop2', icon: 'shop2' },\n    { name: 'shopping8', icon: 'shopping8' },\n    { name: 'sit', icon: 'sit' },\n    { name: 'ski1', icon: 'ski1' },\n    { name: 'soccer1', icon: 'soccer1' },\n    { name: 'suitcase1', icon: 'suitcase1' },\n    { name: 'suitcase2', icon: 'suitcase2' },\n    { name: 'telephone3', icon: 'telephone3' },\n    { name: 'tent', icon: 'tent' },\n    { name: 'tent1', icon: 'tent1' },\n    { name: 'train3', icon: 'train3' },\n    { name: 'train4', icon: 'train4' },\n    { name: 'turn7', icon: 'turn7' },\n    { name: 'walk', icon: 'walk' },\n    { name: 'wifi11', icon: 'wifi11' }\n  ]\n};\n","// Simple icons from http://www.flaticon.com/packs/simpleicon-places/\nmodule.exports = {\n  disclaimer: '<a href=\"http://www.flaticon.com/packs/simpleicon-places/\" target=\"_blank\">SimpleIcons Places</a>, icons by <a href=\"http://www.simpleicon.com\" target=\"_blank\">simpleicon.com</a>',\n  icons: [\n    { name: 'beach3', icon: 'beach3' },\n    { name: 'beach4', icon: 'beach4' },\n    { name: 'boat12', icon: 'boat12' },\n    { name: 'building21', icon: 'building21' },\n    { name: 'building22', icon: 'building22' },\n    { name: 'building23', icon: 'building23' },\n    { name: 'building24', icon: 'building24' },\n    { name: 'buildings5', icon: 'buildings5' },\n    { name: 'castle7', icon: 'castle7' },\n    { name: 'church7', icon: 'church7' },\n    { name: 'coconut5', icon: 'coconut5' },\n    { name: 'compass44', icon: 'compass44' },\n    { name: 'compass45', icon: 'compass45' },\n    { name: 'compass46', icon: 'compass46' },\n    { name: 'compass47', icon: 'compass47' },\n    { name: 'compass49', icon: 'compass49' },\n    { name: 'compass50', icon: 'compass50' },\n    { name: 'factory7', icon: 'factory7' },\n    { name: 'factory8', icon: 'factory8' },\n    { name: 'flag31', icon: 'flag31' },\n    { name: 'flag32', icon: 'flag32' },\n    { name: 'heart206', icon: 'heart206' },\n    { name: 'home84', icon: 'home84' },\n    { name: 'home85', icon: 'home85' },\n    { name: 'home86', icon: 'home86' },\n    { name: 'home87', icon: 'home87' },\n    { name: 'home88', icon: 'home88' },\n    { name: 'home89', icon: 'home89' },\n    { name: 'home90', icon: 'home90' },\n    { name: 'map35', icon: 'map35' },\n    { name: 'map36', icon: 'map36' },\n    { name: 'map37', icon: 'map37' },\n    { name: 'map38', icon: 'map38' },\n    { name: 'map39', icon: 'map39' },\n    { name: 'map40', icon: 'map40' },\n    { name: 'map41', icon: 'map41' },\n    { name: 'map42', icon: 'map42' },\n    { name: 'map43', icon: 'map43' },\n    { name: 'map44', icon: 'map44' },\n    { name: 'map45', icon: 'map45' },\n    { name: 'map46', icon: 'map46' },\n    { name: 'map47', icon: 'map47' },\n    { name: 'map48', icon: 'map48' },\n    { name: 'map49', icon: 'map49' },\n    { name: 'map50', icon: 'map50' },\n    { name: 'map51', icon: 'map51' },\n    { name: 'map52', icon: 'map52' },\n    { name: 'map53', icon: 'map53' },\n    { name: 'map54', icon: 'map54' },\n    { name: 'map55', icon: 'map55' },\n    { name: 'map56', icon: 'map56' },\n    { name: 'map57', icon: 'map57' },\n    { name: 'map58', icon: 'map58' },\n    { name: 'map59', icon: 'map59' },\n    { name: 'map60', icon: 'map60' },\n    { name: 'palm9', icon: 'palm9' },\n    { name: 'placeholder4', icon: 'placeholder4' },\n    { name: 'sailboat5', icon: 'sailboat5' },\n    { name: 'sunbathing', icon: 'sunbathing' },\n    { name: 'sunbathing1', icon: 'sunbathing1' },\n    { name: 'tower15', icon: 'tower15' },\n    { name: 'town', icon: 'town' }\n  ]\n};\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar UploadModel = require('./upload_model');\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'AssetPane',\n\n  events: {\n    'click .js-fileButton': '_onDropboxClick'\n  },\n\n  _UPLOADER: {\n    url:              '/api/v1/users/<%- id %>/assets',\n    uploads:          1, // Max uploads at the same time\n    maxFileSize:      1048576, // 1MB\n    acceptFileTypes:  ['png','svg','jpeg','jpg'],\n    acceptSync:       undefined,\n    resolution:       \"1024x1024\"\n  },\n\n  initialize: function() {\n    _.bindAll(this, '_onDbxChooserSuccess');\n\n    this.kind = this.options.kind;\n    this.user = this.options.user;\n    this._setupModel();\n    this.collection = this.options.collection;\n  },\n\n  render: function() {\n    this.clearSubViews();\n\n    this.template = cdb.templates.getTemplate('common/dialogs/map/image_picker/dropbox_template');\n\n    this.$el.html(this.template());\n\n    return this;\n  },\n\n  _setupModel: function() {\n    this.model = new UploadModel({\n      type: this.options.type,\n      kind: this.options.kind\n    }, {\n      userId: this.user.get(\"id\")\n    });\n    this._initBinds();\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:state', this._onChangeState, this);\n  },\n\n  _onStateUploaded: function() {\n    this.collection.fetch();\n    this.model.setFresh({ kind: this.kind });\n  },\n\n  _onStateError: function() {\n    this._showFileError();\n    this.trigger(\"hide_loader\", this);\n    this.$(\".js-import-panel\").show();\n    this.model.setFresh({ kind: this.kind });\n  },\n\n  _showFileError: function() {\n    if (this.model.get('state') === \"error\") {\n      this.$('.js-fileError')\n        .text(this.model.get('get_error_text').what_about)\n        .show();\n      this.$('.js-fileButton').addClass('Button--negative');\n    }\n  },\n\n  _hideFileError: function() {\n    this.$('.js-fileError').hide();\n    this.$('.js-fileLabel').show();\n    this.$('.js-fileButton').removeClass('Button--negative');\n  },\n\n  _onChangeState: function() {\n    var state = this.model.get('state');\n\n    if (state === 'uploaded') {\n      this._onStateUploaded();\n    } else {\n      if (state == \"error\") {\n        this._onStateError();\n      } else if (state === 'idle' || state === \"uploading\") {\n        this.$(\".js-import-panel\").hide();\n        this.trigger(\"show_loader\", this);\n      } else {\n        this.$(\".js-import-panel\").show();\n        this.trigger(\"hide_loader\", this);\n      }\n    }\n  },\n\n\n  _onDropboxClick: function(e) {\n    this.killEvent(e);\n\n    Dropbox.choose({\n      success:      this._onDbxChooserSuccess,\n      multiselect:  false,\n      linkType:     \"direct\",\n      extensions:   _.map(this._UPLOADER.acceptFileTypes, function(ext) { return '.' + ext })\n    });\n  },\n\n  _onDbxChooserSuccess: function(files) {\n    if (files && files[0]) {\n      this.model.set({\n        type: 'url',\n        value: files[0].link,\n        state: 'uploading'\n      });\n\n      this.model.upload();\n\n      if (this.model.get('state') !== \"error\") {\n        // Remove errors\n        this._hideFileError();\n      } else {\n        this._showFileError();\n      }\n    }\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar UploadModel = require('./upload_model');\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'AssetPane',\n\n  options: {\n    type: 'url',\n    acceptSync: false,\n    fileEnabled: true,\n    formTemplate: '',\n    headerTemplate: '',\n    fileAttrs: {}\n  },\n\n  events: {\n    'keyup .js-textInput': '_onTextChanged',\n    'submit .js-form': '_onSubmitForm'\n  },\n\n  initialize: function() {\n\n    this.user = this.options.user;\n    this.kind = this.options.kind;\n\n    this.collection = this.options.collection;\n\n    this._setupModel();\n\n    this.template = cdb.templates.getTemplate('common/dialogs/map/image_picker/file_upload_template');\n\n  },\n\n  render: function() {\n    this.$el.html(\n      this.template(_.extend(this.options, this.model.attributes))\n    );\n\n    this._initViews();\n    return this;\n  },\n\n  _setupModel: function() {\n    this.model = new UploadModel({\n      type: this.options.type,\n      kind: this.options.kind\n    }, {\n      userId: this.user.get(\"id\")\n    });\n    this._initBinds();\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:state', this._onChangeState, this);\n  },\n\n  _initViews: function() {\n    if (this.options.fileEnabled) {\n      var self = this;\n      this.$('.js-fileInput').bind('change', function(e) {\n        if (this.files && this.files.length > 0) {\n          self._onFileChanged(this.files);\n        }\n      });\n\n      this._initDropzone();\n    }\n  },\n\n  _onTextChanged: function() {\n    var value = this.$('.js-textInput').val();\n    if (!value) {\n      this._hideTextError();\n    }\n  },\n\n  _onSubmitForm: function(e) {\n    if (e) this.killEvent(e);\n\n    // URL submit\n    var value = this.$('.js-textInput').val();\n\n    if (!value) {\n      this._hideTextError();\n      return;\n    }\n\n    // Change file attributes :S\n    this.trigger('urlSelected', this);\n\n    // Change model\n    this.model.set({\n      type: 'url',\n      value: value,\n      state: 'idle'\n    });\n\n    this.model.upload();\n\n    if (this.model.get('state') !== \"error\") {\n      // Remove errors\n      this._hideFileError();\n      this._hideTextError();\n    } else {\n      this._showTextError();\n    }\n  },\n\n\n  _initDropzone: function() {\n    var el = $('html')[0]; // :(\n    var self = this;\n\n    this.dragster = new Dragster(el);\n\n    $(el).bind(\"dragster:enter\", function (e) {\n      self._showDropzone();\n    });\n\n    $(el).bind(\"dragster:leave\", function (e) {\n      self._hideDropzone();\n    });\n\n    if (el.dropzone) { // avoid loading the dropzone twice\n      return;\n    }\n\n    this.dropzone = new Dropzone(el, {\n      url: ':)',\n      autoProcessQueue: false,\n      previewsContainer: false\n    });\n\n    this.dropzone.on('dragover', function() {\n      self._showDropzone();\n    });\n\n    this.dropzone.on(\"drop\", function (ev) {\n      var files = ev.dataTransfer.files;\n      self._onFileChanged(files);\n      self._hideDropzone();\n    });\n  },\n\n  _destroyDropzone: function() {\n    var el = $('html')[0]; // :(\n\n    if (this.dragster) {\n      this.dragster.removeListeners();\n      this.dragster.reset();\n      $(el).unbind('dragster:enter dragster:leave');\n    }\n\n    if (this.dropzone) {\n      this.dropzone.destroy();\n    }\n  },\n\n  _setValidFileExtensions: function(list) {\n    return RegExp(\"(\\.|\\/)(\" + list.join('|') + \")$\", \"i\");\n  },\n\n  _onFileChanged: function(files) {\n\n    if (files && files.length === 1) {\n      files = files[0];\n    }\n\n    this.model.set({\n      type: 'file',\n      value: files\n    });\n\n    if (this.model.get('state') !== \"error\") {\n      this._hideFileError();\n      this.model.set('state', 'selected');\n      this.model.upload();\n    } else {\n      this._showFileError();\n    }\n  },\n\n  _showTextError: function() {\n    this.$('.Form-inputError').addClass('is-visible');\n  },\n\n  _hideTextError: function() {\n    this.$('.Form-inputError').removeClass('is-visible');\n  },\n\n  _showDropzone: function() {\n    this.$('.Form-upload').addClass('is-dropping');\n    this._hideFileError();\n  },\n\n  _hideDropzone: function() {\n    this.$('.Form-upload').removeClass('is-dropping');\n  },\n\n  _showFileError: function() {\n    if (this.model.get('state') === \"error\") {\n      this.$('.js-fileError')\n        .text(this.model.get('get_error_text').what_about)\n        .show();\n      this.$('.js-fileLabel').hide();\n      this.$('.js-fileButton').addClass('Button--negative');\n    }\n  },\n\n  _hideFileError: function() {\n    this.$('.js-fileError').hide();\n    this.$('.js-fileLabel').show();\n    this.$('.js-fileButton').removeClass('Button--negative');\n  },\n\n  _onStateUploaded: function() {\n    this.collection.fetch();\n    this.model.setFresh({ kind: this.kind });\n    this.$(\".js-textInput\").val(\"\");\n  },\n\n  _onStateError: function() {\n    this._showFileError();\n    this.$(\".js-form\").show();\n    this.trigger(\"hide_loader\", this);\n    this.model.setFresh({ kind: this.kind });\n  },\n\n  _onChangeState: function() {\n    var state = this.model.get('state');\n\n    if (state === 'uploaded') {\n      this._onStateUploaded();\n    } else {\n      if (state === \"error\") {\n        this._onStateError();\n      } else if (state === 'idle' || state === \"uploading\" || state === \"selected\") {\n        this.$(\".js-form\").hide();\n        this.trigger(\"show_loader\", this);\n      } else {\n        this.$(\".js-form\").show();\n        this.trigger(\"hide_loader\", this);\n      }\n    }\n  },\n\n  clean: function() {\n    this._destroyDropzone();\n    this.$('.js-fileInput').unbind('change');\n    this.elder('clean');\n  }\n\n});\n","var $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\nmodule.exports = cdb.core.View.extend({\n\n  _TEXTS: {\n    ok:           {\n      simple_icons: _t('Set image'),\n      pin_icons:    _t('Set image'),\n      maki_icons:   _t('Set image'),\n      your_icons:   _t('Set image'),\n      upload_file:  _t('Upload image'),\n      dropbox:      _t('Upload image'),\n      box:      _t('Upload image')\n    }\n  },\n\n  events: {\n    'click .js-ok': '_finish'\n  },\n\n  initialize: function() {\n    this.elder('initialize');\n    this._template = cdb.templates.getTemplate('common/dialogs/map/image_picker/footer_template');\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n\n    var action = this._TEXTS.ok[this.model.get('pane')] || \"Set image\";\n    var options = _.extend(this.model.attributes, { action:  action });\n    var $el = $(this._template(options));\n\n    this.$el.html($el);\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change', this.render, this);\n    this.model.bind('change:disclaimer', this._updateFooterInfo, this);\n  },\n\n  _updateFooterInfo: function() {\n    this.$el.find(\".js-footer-info\").html(this.model.get(\"disclaimer\"));\n  },\n\n  _finish: function(e) {\n    this.killEvent(e);\n\n    if (this.model.get(\"submit_enabled\")) {\n      this.trigger(\"finish\", this);\n    }\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-item':       '_onItemClick',\n    'click .js-your-icons': '_onYourIconsClick'\n  },\n\n  initialize: function() {\n    this.model = this.options.model;\n    this.kind  = this.options.kind;\n    this.collection = this.options.collection;\n    this.template = cdb.templates.getTemplate('common/dialogs/map/image_picker/navigation_template');\n\n    this._preRender();\n    this._initBinds();\n  },\n\n  // It is necessary to add two static elements because\n  // they can't be removed/replaced using render method\n  // each time a change (in a model or a collection) happens.\n  // This is due to the behaviour of the CSS animations.\n  _preRender: function() {\n    var $uInner = $('<div>').addClass('u-inner');\n    var $filtersInner = $('<div>').addClass('Filters-inner');\n    this.$el.append($uInner.append($filtersInner));\n  },\n\n  render: function(m, c) {\n    this.clearSubViews();\n\n    this.$('.Filters-inner').html(\n      this.template({\n      dropbox_enabled: this.model.get(\"dropbox_enabled\"),\n      box_enabled: this.model.get(\"box_enabled\"),\n      pane: this.model.get('pane'),\n      kind: this.kind\n    }));\n\n    if (this.collection.where({ kind: this.kind }).length > 0) {\n      var type = \"your_icons\";\n      this.$el.find('[data-type=\"' + type + '\"]').removeClass(\"is-disabled\");\n    }\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:pane', this.render, this);\n    this.model.bind('change:pane', this._enableFilter, this);\n    this.add_related_model(this.model);\n  },\n\n  _onYourIconsClick: function(e) {\n    if (this.collection.where({ kind: this.kind }).length > 0) {\n      var type = $(e.target).data(\"type\")\n      this.model.set('pane', type);\n    }\n  },\n\n  _onItemClick: function(e) {\n    var type = $(e.target).data(\"type\")\n    this.model.set('pane', type);\n  },\n\n  _enableFilter: function(e) {\n    var type = this.model.get('pane');\n    var $el = this.$el.find('[data-type=\"' + type + '\"]');\n    $el.removeClass(\"is-disabled\");\n  }\n});\n\n\n\n","var AssetsItemView = require('./assets_item_view');\n\nmodule.exports = AssetsItemView.extend({\n\n  events: {\n    'click': '_onClick'\n  },\n\n  _deleteAsset: function() {},\n  _openDropdown: function() {}\n\n});\n","var Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\nvar moment = (typeof window !== \"undefined\" ? window['moment'] : typeof global !== \"undefined\" ? global['moment'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n/**\n * Model that let user upload files to our endpoints.\n *\n * NOTE: this model extends Backbone.Model instead of cdb.core.Model, because it's required for the\n * vendor/backbone-model-file-upload.\n */\nmodule.exports = Backbone.Model.extend({\n\n  url: function(method) {\n    var version = cdb.config.urlVersion('asset', method);\n    return '/api/' + version + '/users/' + this.userId + '/assets'\n  },\n\n  fileAttribute: 'filename',\n\n  defaults: {\n    type: '',\n    value: '',\n    interval: 0,\n    progress: 0,\n    state: 'idle',\n    option: ''\n  },\n\n  initialize: function(val, opts) {\n    this.user = opts && opts.user;\n\n    if (!opts.userId) {\n      throw new Error('userId is required');\n    }\n\n    this.userId = opts.userId;\n\n    this._initBinds();\n    this._validate(this.attributes, { validate: true });\n  },\n\n  isValidToUpload: function() {\n    return this.get('value') && this.get('state') !== 'error';\n  },\n\n  setFresh: function(attributes) {\n    this.clear();\n    this.set(attributes);\n  },\n\n  _initBinds: function() {\n    this.bind('progress', function(progress) {\n      this.set({\n        progress: progress*100,\n        state: 'uploading'\n      });\n    }, this);\n\n    this.bind('change:value', function() {\n      if (this.get('state') === \"error\") {\n        this.set({ state: 'idle' })\n        this.unset('get_error_text', { silent: true });\n      }\n    }, this);\n\n    this.bind('error invalid', function(m, d) {\n      this.set({\n        state: 'error',\n        error_code: (d && d.error_code) || '',\n        get_error_text: {\n          title: 'Invalid import',\n          what_about: (d && d.msg) || ''\n        }\n      }, { silent: true });\n      // We need this, if not validate will run again and again and again... :(\n      this.trigger('change');\n    }, this);\n  },\n\n  validate: function(attrs) {\n    if (!attrs) return;\n\n    if (attrs.type === \"file\") {\n      // Number of files\n      if (attrs.value && attrs.value.length) {\n        return {\n          msg: \"Unfortunately only one file is allowed per upload\"\n        }\n      }\n      // File extension\n      var name = attrs.value.name;\n      var ext = name.substr(name.lastIndexOf('.') + 1);\n      if (ext) {\n        ext = ext.toLowerCase();\n      }\n      if (!_.contains([\"jpg\", \"png\", \"gif\", \"svg\"], ext)) {\n        return {\n          msg: \"Unfortunately this file extension is not allowed\"\n        }\n      }\n    }\n\n    if (attrs.type === \"url\") {\n      // Valid URL?\n      if (!Utils.isURL(attrs.value)) {\n        return {\n          msg: \"Unfortunately the URL provided is not valid\"\n        }\n      }\n    }\n\n  },\n\n  isValid: function() {\n    return this.get('value') && this.get('state') !== \"error\"\n  },\n\n  upload: function() {\n    var self = this;\n\n    var options = {\n      kind: this.get('kind')\n    };\n\n    if (this.get('type') === \"file\") {\n      options.filename = this.get('value');\n    } else if (this.get('type') === \"url\") {\n      options.url = this.get('value');\n    }\n\n    this.xhr = this.save(options, {\n      success: function(m) {\n        m.set('state', 'uploaded');\n      },\n      error: function(m, msg) {\n\n        var message = 'Unfortunately there was a connection error';\n\n        if (msg && msg.status === 429) {\n          var response = JSON.parse(msg.responseText);\n          message = response.error;\n        } else if (msg && msg.status === 400) {\n          var response = JSON.parse(msg.responseText);\n          message = response.error;\n        }\n\n        self.set({\n          state: 'error',\n          get_error_text: { title: 'There was an error', what_about: message }\n        });\n\n      },\n      complete: function() {\n        delete self.xhr;\n      }\n    });\n  },\n\n  stopUpload: function() {\n    if (this.xhr) this.xhr.abort();\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar AssetsView = require('./assets_view');\nvar AssetsItemView = require('./assets_item_view');\n\nmodule.exports = AssetsView.extend({\n\n  className: 'AssetPane AssetPane-userIcons',\n\n  initialize: function() {\n    this.model = this.options.model;\n    this.template = cdb.templates.getTemplate('common/dialogs/map/image_picker/assets_template');\n\n    this.collection.bind('add remove reset', this.render, this);\n  },\n\n  _renderAssets: function() {\n\n    var self = this;\n    var items = this.collection.where({ kind: this.options.kind });\n\n    _(items).each(function(mdl) {\n      var item = new AssetsItemView({\n        className: 'AssetItem AssetItem-User',\n        model: mdl\n      });\n      item.bind('selected', self._selectItem, self);\n\n      self.$('ul').append(item.render().el);\n      self.addView(item);\n    });\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BaseDialog = require('../../views/base_dialog/view');\nvar ImagePickerNavigationView = require('./image_picker/navigation_view');\nvar FooterView = require('./image_picker/footer_view');\nvar AssetsView = require('./image_picker/assets_view');\nvar UserIconsView = require('./image_picker/user_icons_view');\nvar UploadView = require('./image_picker/file_upload_view');\nvar DropboxView = require('./image_picker/dropbox_view');\nvar BoxView = require('./image_picker/box_view');\nvar makiIcons = require('./image_picker/data/maki_icons');\nvar patterns = require('./image_picker/data/patterns');\nvar pinMaps = require('./image_picker/data/pin_maps');\nvar simpleicon = require('./image_picker/data/simpleicon');\nvar ViewFactory = require('../../view_factory');\nvar randomQuote = require('../../view_helpers/random_quote');\n\nmodule.exports = BaseDialog.extend({\n\n  className: \"Dialog ImagePicker\",\n\n  initialize: function() {\n    this.elder('initialize');\n\n    this._validate();\n\n    this.kind = this.options.kind;\n    this.model = new cdb.core.Model({\n      disclaimer: \"\",\n      dropbox_enabled: cdb.config.get('dropbox_api_key') ? true : false,\n      box_enabled: cdb.config.get('box_api_key') ? true : false,\n      submit_enabled: false\n    });\n\n    this.collection = new cdb.admin.Assets([], {\n      user: this.options.user\n    });\n\n    this._template = cdb.templates.getTemplate('common/dialogs/map/image_picker_template');\n    this._initBinds();\n    this._onChangePane();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    BaseDialog.prototype.render.call(this);\n    this.$('.content').addClass('Dialog-content--expanded');\n    this._initViews();\n    this._initAssets();\n    return this;\n  },\n\n  _initAssets: function() {\n    this.collection.bind('add remove reset',  this._onAssetsFetched,  this);\n    this.collection.fetch();\n  },\n\n  _showLoader: function() {\n    var loader = this._contentPane.getPane(\"loader\");\n    if (loader) {\n      loader.show();\n    }\n  },\n\n  _hideLoader: function() {\n    var loader = this._contentPane.getPane(\"loader\");\n    if (loader) {\n      loader.hide();\n    }\n  },\n\n  _showUploadLoader: function() {\n    var loader = this._contentPane.getPane(\"upload_loader\");\n\n    if (loader) {\n      loader.show();\n    }\n  },\n\n  _hideUploadLoader: function() {\n    var loader = this._contentPane.getPane(\"upload_loader\");\n    if (loader) {\n      loader.hide();\n    }\n  },\n\n  _onAssetsFetched: function() {\n    this._hideLoader();\n\n    var items = this.collection.where({ kind: this.kind });\n\n    if (items.length === 0) {\n      if (this.kind === 'marker') {\n        this.model.set(\"pane\", \"simple_icons\");\n      } else {\n        this.model.set(\"pane\", \"patterns\");\n      }\n    } else {\n      this.model.set(\"pane\", \"your_icons\");\n    }\n\n  },\n\n  // implements cdb.ui.common.Dialog.prototype.render\n  render_content: function() {\n    return this._template({ kind: this.kind });\n  },\n\n  _initViews: function() {\n    this._renderContentPane();\n    this._renderNavigation();\n    this._renderTabPane();\n\n    this._renderLoader();\n    this._renderUploadLoader();\n\n    if (this.kind === \"marker\") {\n      this._renderSimpleiconPane();\n      this._renderPinIconsPane();\n      this._renderMakisPane();\n    } else if (this.kind === \"pattern\") {\n      this._renderPatternPane();\n    }\n\n    this._renderUserIconsPane();\n    this._renderFilePane();\n    this._renderDropboxPane();\n    this._renderBoxPane();\n\n    this._renderFooter();\n    this._contentPane.active('loader');\n  },\n\n  _renderFooter: function() {\n    this._footerView = new FooterView({\n      model: this.model\n    });\n\n    this._footerView.bind(\"finish\", this._ok, this);\n    this.$('.js-footer').append(this._footerView.render().el);\n\n    this.addView(this._footerView);\n  },\n\n  _renderTabPane: function() {\n    this.tabPane = new cdb.ui.common.TabPane({\n      el: this.$(\".AssetsContent\")\n    });\n\n    this.addView(this.tabPane);\n  },\n\n  _renderContentPane: function() {\n    this._contentPane = new cdb.ui.common.TabPane({\n      el: this.$('.js-content-container')\n    });\n\n    this.addView(this._contentPane);\n    this._contentPane.active(this.model.get('contentPane'));\n  },\n\n  _renderNavigation: function() {\n    var navigationView = new ImagePickerNavigationView({\n      el: this.$('.js-navigation'),\n      kind: this.kind,\n      collection: this.collection,\n      user: this.options.user,\n      model: this.model\n    });\n\n    navigationView.render();\n\n    this.addView(navigationView);\n  },\n\n  _renderPane: function(name, pane) {\n    pane.bind('fileChosen', this._onFileChosen, this);\n    pane.render();\n    this._addPane(name, pane);\n  },\n\n  _renderUploadLoader: function() {\n    this._addTab('upload_loader',\n      ViewFactory.createByTemplate('common/templates/loading', {\n        title: 'Uploading asset…',\n        quote: randomQuote()\n      })\n    );\n  },\n\n  _renderLoader: function() {\n    this._addTab('loader',\n      ViewFactory.createByTemplate('common/templates/loading', {\n        title: 'Loading assets…',\n        quote: randomQuote()\n      })\n    );\n  },\n\n  _renderPatternPane: function() {\n    var pane = new AssetsView({\n      model:      this.model,\n      collection: this.collection,\n      kind:       this.kind,\n      icons:      patterns.icons,\n      folder:     'patterns',\n      size:       ''\n    });\n\n    this._renderPane('patterns', pane);\n  },\n\n  _renderSimpleiconPane: function() {\n    var pane = new AssetsView({\n      model:      this.model,\n      collection: this.collection,\n      kind:       this.kind,\n      icons:      simpleicon.icons,\n      disclaimer: simpleicon.disclaimer,\n      folder:     'simpleicon',\n      size:       ''\n    });\n    this._renderPane('simple_icons', pane);\n  },\n\n  _renderMakisPane: function() {\n    var pane = new AssetsView({\n      model:      this.model,\n      collection: this.collection,\n      kind:       this.kind,\n      icons:      makiIcons.icons,\n      disclaimer: makiIcons.disclaimer,\n      folder:     'maki-icons',\n      size:       '18'\n    });\n\n    this._renderPane('maki_icons', pane);\n  },\n\n  _renderUserIconsPane: function() {\n    var pane = new UserIconsView({\n      model:      this.model,\n      collection: this.collection,\n      kind:       this.kind,\n      folder:     'your-icons'\n    });\n\n    this._renderPane('your_icons', pane);\n  },\n\n  _renderPinIconsPane: function() {\n    var pane = new AssetsView({\n      model:      this.model,\n      collection: this.collection,\n      kind:       this.kind,\n      icons:      pinMaps.icons,\n      disclaimer: pinMaps.disclaimer,\n      folder:     'pin-maps',\n      size:       ''\n    });\n\n    this._renderPane('pin_icons', pane);\n  },\n\n  _renderFilePane: function() {\n\n    var pane = new UploadView({\n      collection: this.collection,\n      kind:       this.kind,\n      user:       this.options.user\n    });\n\n    pane.bind('valueChange', this._onFileChosen, this);\n    pane.bind('show_loader', this._showUploadLoader, this);\n    pane.bind('hide_loader', this._hideUploadLoader, this);\n    this._renderPane('upload_file', pane);\n  },\n\n  _renderDropboxPane: function() {\n    if (this.model.get(\"dropbox_enabled\")) {\n\n      var pane = new DropboxView({\n        model:      this.model,\n        collection: this.collection,\n        kind:       this.kind,\n        user:       this.options.user\n      });\n\n      pane.bind('valueChange', this._onFileChosen, this);\n      pane.bind('show_loader', this._showUploadLoader, this);\n      pane.bind('hide_loader', this._hideUploadLoader, this);\n      this._renderPane('dropbox', pane);\n    }\n  },\n\n  _renderBoxPane: function() {\n    if (this.model.get(\"box_enabled\")) {\n\n      var pane = new BoxView({\n        model:      this.model,\n        collection: this.collection,\n        kind:       this.kind,\n        user:       this.options.user\n      });\n\n      pane.bind('valueChange', this._onFileChosen, this);\n      pane.bind('show_loader', this._showUploadLoader, this);\n      pane.bind('hide_loader', this._hideUploadLoader, this);\n      this._renderPane('box', pane);\n    }\n  },\n\n  _addPane: function(name, view) {\n    this.tabPane.addTab(name, view, {\n      active: this.model.get('pane') === name\n    });\n  },\n\n  _addTab: function(name, view) {\n    this._contentPane.addTab(name, view.render());\n    this.addView(view);\n  },\n\n  _validate: function() {\n    if (!this.options.user) {\n      throw new TypeError('user is required');\n    }\n\n    if (!this.options.kind) {\n      throw new Error('kind should be passed');\n    }\n  },\n\n  _initBinds: function() {\n    // Bug with binding... do not work with the usual one for some reason :(\n    this.model.bind('change:pane', this._onChangePane.bind(this));\n  },\n\n  _onChangePane: function() {\n    if (this.tabPane) {\n      this.tabPane.active(this.model.get('pane'));\n\n      this.model.set(\"submit_enabled\", false);\n      var activePane = this.tabPane.getActivePane();\n\n      if (activePane) {\n        this.model.set(\"disclaimer\", activePane.options.disclaimer);\n      }\n    }\n  },\n\n  _ok: function() {\n    this.trigger(\"fileChosen\", this.model.get(\"value\"));\n    this.close();\n  },\n\n  _onFileChosen: function() {\n    this.model.set(\"submit_enabled\", true);\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BaseDialog = require('../../views/base_dialog/view');\n\n/**\n * Scratch modal\n */\nmodule.exports = BaseDialog.extend({\n\n  events: cdb.core.View.extendEvents({\n    \"click .js-option\" : \"_onOptionClick\",\n    \"click .js-skip\"   : \"_onSkipClick\"\n  }),\n\n  options: {\n    skipDisabled: false\n  },\n\n  initialize: function() {\n    this.elder('initialize');\n\n    if (!this.options.table) {\n      throw new TypeError('table is required');\n    }\n\n    this.table = this.options.table;\n    this._template = cdb.templates.getTemplate('common/dialogs/map/scratch_view_template');\n\n  },\n\n  // implements cdb.ui.common.Dialog.prototype.render\n  render: function() {\n    this.clearSubViews();\n    BaseDialog.prototype.render.call(this);\n    return this;\n  },\n\n  // implements cdb.ui.common.Dialog.prototype.render\n  render_content: function() {\n    return this._template({\n      name: this.table.get(\"name\"),\n      skipDisabled: this.options.skipDisabled \n    });\n  },\n\n  _onSkipClick: function(e) {\n    this.killEvent(e);\n    this.close();\n    this.trigger(\"skip\", this);\n  },\n\n  _onOptionClick: function(e) {\n    this.killEvent(e);\n    this.close();\n    this.trigger(\"newGeometry\", $(e.target).closest('.js-option').data(\"type\"));\n  }\n\n});\n","var $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar ChooseKeyColumnsView = require('./choose_key_columns_view');\nvar SelectColumns = require('./select_columns_model');\n\nmodule.exports = cdb.core.Model.extend({\n\n  INSTRUCTIONS_SAFE_HTML: 'Select the dataset on the right that you want to merge the left with. ' +\n    'You can only merge datasets by joining by columns of the same type (e.g. number to a number).',\n\n  defaults: {\n    user: undefined,\n    isReadyForNextStep: false,\n    excludeColumns: [],\n    leftTable: undefined,\n    leftColumns: undefined,\n    rightTableData: undefined,\n    rightColumns: undefined\n  },\n\n  initialize: function() {\n    this._initColumns();\n  },\n\n  createView: function() {\n    // Reset state\n    this.set('gotoNextStep', false);\n    var leftColumns = this.get('leftColumns');\n    leftColumns.each(function(m) {\n      m.unset('selected');\n    });\n    this.get('rightColumns').reset(); // columns are fetched by view\n    this._resetSorting(leftColumns);\n    this._resetSorting(this.get('rightColumns'));\n\n    return new ChooseKeyColumnsView({\n      model: this\n    });\n  },\n\n  changeRightTable: function(tableData) {\n    this.get('rightColumns').reset();\n    this.set('rightTableData', tableData);\n\n    // TODO: extracted from old code, cdb.admin.TableColumnSelector._getColumns,\n    //   isnt there some better way to get the schema/columns?\n    $.ajax({\n      url: cdb.config.prefixUrl() + '/api/v1/tables/' + tableData.id,\n      dataType: 'jsonp',\n      success: this._onFetchedColumns.bind(this)\n    });\n  },\n\n  _onFetchedColumns: function(results) {\n    var filteredColumns = this._filterColumns(results.schema);\n    this.get('rightColumns').reset(filteredColumns);\n    var selectedLeftColumn = this.selectedItemFor('leftColumns');\n    if (selectedLeftColumn) {\n      this.disableRightColumnsNotMatchingType(selectedLeftColumn.get('type'));\n    }\n  },\n\n  disableRightColumnsNotMatchingType: function(leftKeyColumnType) {\n    this.get('rightColumns').each(function(column) {\n      var shouldDisable = column.get('type') !== leftKeyColumnType;\n      if (shouldDisable && column.get('selected')) {\n        // Don't leave the column selected if should be disabled\n        column.set('selected', false);\n      }\n      column.set('disabled', shouldDisable);\n    });\n  },\n\n  assertIfReadyForNextStep: function() {\n    var isReady = !!(this.selectedItemFor('leftColumns') &&\n                  this.selectedItemFor('rightColumns') &&\n                  this.get('rightTableData'));\n    this.set('isReadyForNextStep', isReady);\n  },\n\n  nextStep: function() {\n    return new this.constructor.nextStep({\n      user: this.get('user'),\n      leftTable: this.get('leftTable'),\n      leftColumns: this.get('leftColumns'),\n      leftKeyColumn: this.selectedItemFor('leftColumns').clone(),\n      rightKeyColumn: this.selectedItemFor('rightColumns').clone(),\n      rightColumns: this.get('rightColumns'),\n      rightTableData: this.get('rightTableData')\n    });\n  },\n\n  selectedItemFor: function(collectionName) {\n    return this.get(collectionName).find(function(column) {\n      return column.get('selected');\n    });\n  },\n\n  _initColumns: function() {\n    var filteredLeftColumns = this._filterColumns(this.get('leftTable').get('schema'));\n    this.set('leftColumns', new Backbone.Collection(filteredLeftColumns));\n    this.set('rightColumns', new Backbone.Collection([]));\n  },\n\n  _filterColumns: function(tableSchema) {\n    var excludeColumns = this.get('excludeColumns');\n\n    return _.chain(tableSchema)\n      .map(function(columnData) {\n        return {\n          // TODO: why don't we use a proper model for schema, to provide convenient method to get columns as a collection already?\n          name: columnData[0],\n          type: columnData[1]\n        };\n      })\n      .reject(function(column) {\n        return _.contains(excludeColumns, column.name);\n      })\n      .value();\n  },\n\n  _resetSorting: function(columns) {\n    // May been set on next step, so reset sorters if going back:\n    columns.comparator = function(column) {\n      return column.get('name');\n    };\n    columns.sort();\n  }\n\n}, {\n  header: {\n    icon: 'CDB-IconFont-play',\n    title: 'Choose merge column'\n  },\n  nextStep: SelectColumns\n});\n","var $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar ColumnsSelectorView = require('../columns_selector_view');\nvar TablesSelectorView = require('../tables_selector_view');\nvar FooterView = require('../footer_view');\nvar FooterInfoView = require('./footer_info_view');\n\n/**\n * View to choose the key columns (and implicitly the right table).\n */\nmodule.exports = cdb.core.View.extend({\n\n  initialize: function() {\n    this._initViews();\n    this._initBinds();\n  },\n\n  render: function() {\n    var $el = $(\n      this.getTemplate('common/dialogs/merge_datasets/column_merge/choose_key_columns')({\n        leftTableName: this.model.get('leftTable').get('name')\n      })\n    );\n    $el.find('.js-left-table').append(this._leftTableComboView.render().$el);\n    $el.find('.js-left-columns').append(this._leftColumnsView.render().$el);\n    $el.find('.js-right-tables').append(this._rightTableSelectorView.render().$el);\n    $el.find('.js-right-columns').append(this._rightColumnsView.render().$el);\n    $el.append(this._footerView.render().$el);\n    this.$el.html($el);\n\n    return this;\n  },\n\n  _initViews: function() {\n    var leftTableName = this.model.get('leftTable').get('name');\n\n    this._leftTableComboView = new cdb.forms.Combo({\n      className: 'Select',\n      width: '100%',\n      disabled: true,\n      extra: [leftTableName]\n    });\n    this.addView(this._leftTableComboView);\n\n    this._leftColumnsView = new ColumnsSelectorView({\n      collection: this.model.get('leftColumns'),\n      excludeFilter: this._columnsExcludeFilter,\n      selectorType: 'radio'\n    });\n    this.addView(this._leftColumnsView);\n\n    this._rightTableSelectorView = new TablesSelectorView({\n      excludeFilter: function(vis) {\n        return vis.get('name') === leftTableName;\n      }\n    });\n    this.addView(this._rightTableSelectorView);\n\n    this._rightColumnsView = new ColumnsSelectorView({\n      collection: this.model.get('rightColumns'),\n      excludeFilter: this._columnsExcludeFilter,\n      selectorType: 'radio',\n      loading: 'datasets'\n    });\n    this.addView(this._rightColumnsView);\n\n    this._footerView = new FooterView({\n      model: this.model,\n      infoView: new FooterInfoView({\n        model: this.model\n      })\n    });\n    this.addView(this._footerView);\n  },\n\n  _columnsExcludeFilter: function(column) {\n    return column.get('name') === 'the_geom';\n  },\n\n  _initBinds: function() {\n    var leftColumns = this.model.get('leftColumns');\n    leftColumns.bind('change:selected', this._onChangeSelectedLeftColumn, this);\n    this.add_related_model(leftColumns);\n\n    var rightColumns = this.model.get('rightColumns');\n    rightColumns.bind('change:selected', this._onChangeSelectedRightColumn, this);\n    rightColumns.bind('reset', this._assertIfReadyForNextStep, this);\n    this.add_related_model(rightColumns);\n\n    var rightTablesModel = this._rightTableSelectorView.model;\n    rightTablesModel.bind('change:tableData', this._onChangeRightTableData, this);\n    this.add_related_model(rightTablesModel);\n  },\n\n  _onChangeSelectedLeftColumn: function(m, isSelected) {\n    if (isSelected) {\n      this.model.disableRightColumnsNotMatchingType(m.get('type'));\n    }\n    this._assertIfReadyForNextStep();\n  },\n\n  _onChangeSelectedRightColumn: function() {\n    this._assertIfReadyForNextStep();\n  },\n\n  _assertIfReadyForNextStep: function() {\n    this.model.assertIfReadyForNextStep();\n  },\n\n  _onChangeRightTableData: function(model, tableData) {\n    this._rightColumnsView.model.set('loading', 'columns');\n    this.model.changeRightTable(tableData);\n  }\n\n});\n","var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar ChooseKeyColumnsModel = require('./choose_key_columns_model');\n\n/**\n * Entry point model that represents the merge flavor of doing a column merge.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  ILLUSTRATION_ICON_TYPE: 'IllustrationIcon--alert',\n  ICON: 'CDB-IconFont-mergeColumns',\n  TITLE: 'Column join',\n  DESC: 'Merge two datasets based on a shared value (ex. ISO codes in both datasets)',\n\n  defaults: {\n    user: undefined,\n    table: undefined,\n    excludeColumns: []\n  },\n\n  initialize: function(attrs) {\n    if (!attrs.table) throw new Error('table is required');\n    if (!attrs.excludeColumns || _.isEmpty(attrs.excludeColumns)) cdb.log.error('excludeColumns was empty');\n  },\n\n  isAvailable: function() {\n    // Need at least one more column than the_geom to do a column merge\n    return _.chain(this.get('table').get('schema'))\n      .map(this._columnDataName)\n      .difference(this.get('excludeColumns'))\n      .any(this._isntTheGeomName)\n      .value();\n  },\n\n  _columnDataName: function(columnData) {\n    return columnData[0]; //name\n  },\n\n  _isntTheGeomName: function(columnName) {\n    return columnName !== 'the_geom';\n  },\n\n  firstStep: function() {\n    return new ChooseKeyColumnsModel({\n      user: this.get('user'),\n      leftTable: this.get('table'),\n      excludeColumns: this.get('excludeColumns')\n    });\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * View to indicate the selected key columns relationship.\n * Shared for both step 1 and 2\n */\nmodule.exports = cdb.core.View.extend({\n\n  initialize: function() {\n    this._initBinds();\n  },\n\n  render: function() {\n    var leftKeyColumn = this.model.get('leftKeyColumn');\n    var rightKeyColumn = this.model.get('rightKeyColumn');\n    this.$el.html(\n      this.getTemplate('common/dialogs/merge_datasets/column_merge/footer_info')({\n        leftKeyColumnName: leftKeyColumn ? leftKeyColumn.get('name') : '',\n        rightKeyColumnName: rightKeyColumn ? rightKeyColumn.get('name') : ''\n      })\n    );\n    return this;\n  },\n\n  _initBinds: function() {\n    if (this.model.selectedItemFor) {\n      var leftColumns = this.model.get('leftColumns');\n      leftColumns.bind('change:selected', this._onChangeLeftColumn, this);\n      this.add_related_model(leftColumns);\n\n      var rightColumns = this.model.get('rightColumns');\n      rightColumns.bind('change:selected', this._onChangeRightColumn, this);\n      this.add_related_model(rightColumns);\n    }\n  },\n\n  _onChangeLeftColumn: function() {\n    var m = this.model.selectedItemFor('leftColumns');\n    this.$('.js-left-key-column').text(m ? m.get('name') : '');\n  },\n\n  _onChangeRightColumn: function() {\n    var m = this.model.selectedItemFor('rightColumns');\n    this.$('.js-right-key-column')\n      .text(m ? m.get('name') : '')\n      .toggleClass('is-placeholder', !m);\n  }\n\n});\n","var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n// Used for both left and right table\nvar selectColumn = function(tableName, otherTableName, columnName) {\n  if (columnName === 'the_geom') {\n    return [\n      'CASE WHEN ' + tableName + '.' + columnName + ' IS NULL THEN',\n      otherTableName + '.' + columnName,\n      'ELSE',\n      tableName + '.' + columnName,\n      'END AS',\n        columnName\n    ];\n  } else {\n    return [ tableName + '.' + columnName ];\n  }\n};\n\n// SQL query as taken from old code, cdb.admin.MergeTablesDialog\n// Cleaned up to remove noise and avoid string concatenation to be more legible.\nmodule.exports = function(d) {\n  var leftTableName = d.leftTableName;\n  var leftColumnsNames = d.leftColumnsNames;\n  var leftKeyColumnName = d.leftKeyColumnName;\n  var leftKeyColumnType = d.leftKeyColumnType;\n\n  var rightTableName = d.rightTableName;\n  var rightColumnsNames = d.rightColumnsNames;\n  var rightKeyColumnName = d.rightKeyColumnName;\n  var rightKeyColumnType = d.rightKeyColumnType;\n\n  // Add left table columns\n  var sql = ['SELECT'];\n  var selects = _.map(leftColumnsNames, function(columnName) {\n    return selectColumn(leftTableName, rightTableName, columnName).join(' ');\n  });\n\n  // Add right table columns\n  selects.push.apply(selects,\n    _.map(rightColumnsNames, function(columnName) {\n      var colSQL = selectColumn(rightTableName, leftTableName, columnName);\n\n      var isColumnPresentInLeftTable = _.any(leftColumnsNames, function(leftColumnName) {\n        return columnName === leftColumnName;\n      });\n      if (isColumnPresentInLeftTable) {\n        colSQL = colSQL.concat('AS ' + rightTableName + '_' + columnName);\n      }\n\n      return colSQL.join(' ');\n    })\n  );\n\n  // Make sure all select fields are comma separated\n  sql.push(_.flatten(selects).join(', '));\n\n  // LEFT JOIN\n  sql.push('FROM ' + leftTableName + ' FULL OUTER JOIN ' + rightTableName + ' ON');\n\n  // JOIN FIELD\n  if (leftKeyColumnType === 'string' && rightKeyColumnType === 'string') {\n    sql.push(\n      'LOWER(TRIM(' + leftTableName + '.' + leftKeyColumnName + '))',\n      '=',\n      'LOWER(TRIM(' + rightTableName + '.' + rightKeyColumnName + '))'\n    );\n  } else {\n    sql.push(\n      leftTableName + '.' + leftKeyColumnName,\n      '=',\n      rightTableName + '.' + rightKeyColumnName\n    );\n  }\n\n  return sql.join(' ');\n};\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar SelectColumnsView = require('./select_columns_view');\nvar generateColumnMergeSQL = require('./generate_column_merge_sql');\nvar MergeModel = require('../merge_step_model');\n\n/**\n * View for 2nd step of a column merge, where the user should select the column fields to merge\n */\nmodule.exports = cdb.core.Model.extend({\n\n  INSTRUCTIONS_SAFE_HTML: 'Choose other columns you want in your dataset.',\n\n  defaults: {\n    user: undefined,\n    isReadyForNextStep: true,\n    leftTable: undefined,\n    leftKeyColumn: undefined,\n    leftColumns: undefined,\n    rightTableData: undefined,\n    rightColumns: undefined,\n    rightKeyColumn: undefined\n  },\n\n  createView: function() {\n    // Reset state\n    this.set('gotoNextStep', false);\n    this._resetColumns(this.get('leftColumns'), function(column) {\n      column.set('selected', true);\n    });\n    this._resetColumns(this.get('rightColumns'), function(column) {\n      if (column.get('name') !== 'the_geom') {\n        column.set('selected', true);\n      }\n      column.set('disabled', false);\n    });\n\n    return new SelectColumnsView({\n      model: this\n    });\n  },\n\n  onlyAllowOneSelectedTheGeomColumn: function(column, isSelected) {\n    if (column.get('name') !== 'the_geom') return;\n\n    var leftColumn = this._theGeomColumnFor('leftColumns');\n    var rightColumn = this._theGeomColumnFor('rightColumns');\n\n    if (column === leftColumn) {\n      leftColumn.set('selected', isSelected);\n      rightColumn.set('selected', !isSelected);\n    } else if (column === rightColumn) {\n      leftColumn.set('selected', !isSelected);\n      rightColumn.set('selected', isSelected);\n    }\n  },\n\n  nextStep: function() {\n    var leftKeyColumn = this.get('leftKeyColumn');\n    var rightKeyColumn = this.get('rightKeyColumn');\n\n    var sql = generateColumnMergeSQL({\n      leftTableName: this.get('leftTable').get('name'),\n      leftKeyColumnName: leftKeyColumn.get('name'),\n      leftKeyColumnType: leftKeyColumn.get('type'),\n      leftColumnsNames: this._selectedColumnsNamesFor('leftColumns'),\n      rightTableName: this.get('rightTableData').name,\n      rightKeyColumnName: rightKeyColumn.get('name'),\n      rightKeyColumnType: rightKeyColumn.get('type'),\n      rightColumnsNames: this._selectedColumnsNamesFor('rightColumns')\n    });\n\n    return new this.constructor.nextStep({\n      user: this.get('user'),\n      tableName: this.get('leftTable').get('name'),\n      sql: sql\n    });\n  },\n\n  _selectedColumnsNamesFor: function(collectionName) {\n    return this.get(collectionName)\n      .chain()\n      .filter(function(column) {\n        return column.get('selected');\n      }).\n      map(function(column) {\n        return column.get('name');\n      })\n      .value();\n  },\n\n  _theGeomColumnFor: function(which) {\n    return this.get(which).find(function(column) {\n      return column.get('name') === 'the_geom';\n    });\n  },\n\n  _resetColumns: function(columns, eachReset) {\n    columns.comparator = function(column) {\n      var columnName = column.get('name');\n      return columnName === 'the_geom' ? '00000' : columnName;\n    };\n    columns.each(eachReset, this);\n    columns.sort();\n  }\n\n}, {\n  header: {\n    icon: 'CDB-IconFont-wizard',\n    title: 'Choose the rest to add'\n  },\n  nextStep: MergeModel\n});\n","var $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar ColumnsSelectorView = require('../columns_selector_view');\nvar StickyHeaderView = require('../sticky_header_view');\nvar FooterView = require('../footer_view');\nvar FooterInfoView = require('./footer_info_view');\n\n/**\n * View to select the columns to merge.\n */\nmodule.exports = cdb.core.View.extend({\n\n  initialize: function() {\n    this._initViews();\n    this._initBinds();\n  },\n\n  render: function() {\n    var $el = $(\n      this.getTemplate('common/dialogs/merge_datasets/column_merge/select_columns')({\n        leftKeyColumn: this.model.get('leftKeyColumn'),\n        rightKeyColumn: this.model.get('rightKeyColumn')\n      })\n    );\n    $el.find('.js-sticky-header').append(this._stickyHeaderView.render().$el);\n    $el.find('.js-left-table').append(this._leftTableComboView.render().$el);\n    $el.find('.js-left-columns').append(this._leftColumnsView.render().$el);\n    $el.find('.js-right-table').append(this._rightTableComboView.render().$el);\n    $el.find('.js-right-columns').append(this._rightColumnsView.render().$el);\n    $el.append(this._footerView.render().$el);\n    this.$el.html($el);\n\n    return this;\n  },\n\n  onChangeKeyColumnsVisiblity: function() {\n    this._stickyHeaderView.$el.slideToggle(200);\n  },\n\n  _initViews: function() {\n    this._stickyHeaderView = new StickyHeaderView({\n      leftKeyColumn: this.model.get('leftKeyColumn'),\n      rightKeyColumn: this.model.get('rightKeyColumn')\n    });\n    this.addView(this._stickyHeaderView);\n\n    this._leftTableComboView = new cdb.forms.Combo({\n      className: 'Select',\n      width: '100%',\n      disabled: true,\n      extra: [this.model.get('leftTable').get('name')]\n    });\n    this.addView(this._leftTableComboView);\n\n    this._leftColumnsView = new ColumnsSelectorView({\n      collection: this.model.get('leftColumns'),\n      selectorType: 'switch'\n    });\n    this.addView(this._leftColumnsView);\n\n    this._rightTableComboView = new cdb.forms.Combo({\n      className: 'Select',\n      width: '100%',\n      disabled: true,\n      extra: [this.model.get('rightTableData').name]\n    });\n    this.addView(this._rightTableComboView);\n\n    this._rightColumnsView = new ColumnsSelectorView({\n      collection: this.model.get('rightColumns'),\n      selectorType: 'switch'\n    });\n    this.addView(this._rightColumnsView);\n\n    this._footerView = new FooterView({\n      model: this.model,\n      nextLabel: 'Merge datasets',\n      infoView: new FooterInfoView({\n        model: this.model\n      })\n    });\n    this.addView(this._footerView);\n  },\n\n  _initBinds: function() {\n    this.model.get('leftColumns').bind('change:selected', this._onChangeSelectedColumn, this);\n    this.add_related_model(this.model.get('leftColumns'));\n\n    this.model.get('rightColumns').bind('change:selected', this._onChangeSelectedColumn, this);\n    this.add_related_model(this.model.get('rightColumns'));\n  },\n\n  _onChangeSelectedColumn: function(column, isSelected) {\n    this.model.onlyAllowOneSelectedTheGeomColumn(column, isSelected);\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * View to select one or multiple columns.\n *  - For only allowing selecting one set selectorType to 'radio'\n *  - For allowing multiple selections set selectorType to 'switch'\n */\nmodule.exports = cdb.core.View.extend({\n\n  className: 'List-row',\n\n  events: {\n    'click': '_onClick',\n    'mouseenter': '_onMouseEnter',\n    'mouseleave': '_onMouseLeave'\n  },\n\n  initialize: function() {\n    if (!this.options.selectorType) throw new Error('selectorType is required');\n\n    this.model = new cdb.core.Model({\n      type: this.options.selectorType\n    });\n\n    this.column = this.options.column;\n\n    this._initBinds();\n  },\n\n  render: function() {\n    this.$el.html(\n      this.getTemplate('common/dialogs/merge_datasets/column_selector')({\n        selectorType: this.model.get('type'),\n        columnName: this.column.get('name'),\n        columnType: this.column.get('type')\n      })\n    );\n\n    if (!this._tooltip) {\n      this._tooltip = new cdb.common.TipsyTooltip({\n        el: this.el,\n        offset: -20,\n        trigger: 'manual',\n        fallback: 'Your column type is not compatible with the column you have selected in the left column'\n      });\n      this.addView(this._tooltip);\n    }\n\n    this._onChangeSelected(this.column, this.column.get('selected'));\n    this._onChangeDisabled(this.column, this.column.get('disabled'));\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.column.bind('change:selected', this._onChangeSelected, this);\n    this.column.bind('change:disabled', this._onChangeDisabled, this);\n    this.add_related_model(this.column);\n  },\n\n  _onChangeSelected: function(column, isSelected) {\n    if (this.model.get('type') === 'radio') {\n      this.$el.toggleClass('is-selected', !!isSelected);\n    }\n    this.$('.js-radio').toggleClass('is-checked', !!isSelected);\n    this.$('.js-switch').prop('checked', !!isSelected);\n  },\n\n  _onChangeDisabled: function(column, isDisabled) {\n    isDisabled = !!isDisabled;\n    this.$el.toggleClass('is-disabled', isDisabled);\n  },\n\n  _onClick: function(ev) {\n    this.killEvent(ev);\n    if (!this._isDisabled()) {\n      var inverseSelectedVal = !this.column.get('selected');\n\n      // radio buttons can only be selected, unselection of other items should be handled by collection/parent\n      if (inverseSelectedVal || this.model.get('type') !== 'radio') {\n        this.column.set('selected', inverseSelectedVal);\n      }\n    }\n  },\n\n  _onMouseEnter: function() {\n    if (this._isDisabled()) {\n      this._tooltip.showTipsy();\n    }\n  },\n\n  _onMouseLeave: function() {\n    this._tooltip.hideTipsy();\n  },\n\n  _isDisabled: function() {\n    return this.column.get('disabled');\n  }\n\n});\n","var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar ColumnSelectorView = require('./column_selector_view');\nvar randomQuote = require('../../view_helpers/random_quote');\n\n/**\n * View to select an individual column.\n * The selector type is passed to the child view of class ColumnSelectorView.\n */\nmodule.exports = cdb.core.View.extend({\n\n  className: 'List',\n\n  events: {\n    'click .js-select-all': '_onClickSelectAll',\n    'click': 'killEvent'\n  },\n\n  initialize: function() {\n    this.model = new cdb.core.Model({\n      showSelectAllToggle: this.options.selectorType === 'switch' || false,\n      enforceSingleSelected: this.options.selectorType === 'radio' || false,\n      loading: this.options.loading\n    });\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.$el.html('');\n\n    if (this.collection.length > 0) {\n      var chain = this.collection.chain();\n      if (this.options.excludeFilter) {\n        chain = chain.reject(this.options.excludeFilter);\n      }\n      chain.each(this._addColumnSelectorView, this);\n\n      this._renderSelectAllToggle();\n    } else if (this.model.get('loading')) {\n      this._renderLoading();\n    }\n\n    return this;\n  },\n\n  _renderLoading: function() {\n    this.$el.html(\n      this.getTemplate('common/templates/loading')({\n        title: 'Fetching ' + this.model.get('loading'),\n        quote: randomQuote()\n      })\n    );\n  },\n\n  _addColumnSelectorView: function(model) {\n    var view = new ColumnSelectorView(\n      _.chain({\n        column: model\n      })\n      .extend(this.options)\n      .omit(['el', 'collection'])\n      .value()\n    );\n    this.addView(view);\n    this.$el.append(view.render().$el);\n  },\n\n  _renderSelectAllToggle: function() {\n    if (this.model.get('showSelectAllToggle')) {\n      this.$el.append(\n        this.getTemplate('common/dialogs/merge_datasets/columns_selector_toggle_all')({\n          areAllSelected: this._areAllSelected()\n        })\n      );\n    }\n  },\n\n  _initBinds: function() {\n    this.collection.bind('reset', this.render, this);\n    this.collection.bind('change:selected', this._onChangeSelected, this);\n    this.add_related_model(this.collection);\n\n    this.model.bind('change:loading', this.render, this);\n  },\n\n  _onChangeSelected: function(model, isSelected) {\n    if (isSelected && this.model.get('enforceSingleSelected')) {\n      this._unselectAllExcept(model);\n      this.collection.sort();\n      this.render(); // to re-render with new sort order\n    }\n    this.$('.js-select-all input').prop('checked', this._areAllSelected());\n  },\n\n  _unselectAllExcept: function(exceptionModel) {\n    this.collection.each(function(m) {\n      if (m !== exceptionModel) {\n        m.set('selected', false);\n      }\n    });\n  },\n\n  _onClickSelectAll: function() {\n    var invertedAllSelected = !this._areAllSelected();\n    this.collection.chain()\n    .reject(function(m) {\n      return m.get('disabled');\n    })\n    .each(function(m) {\n      m.set('selected', invertedAllSelected);\n    });\n  },\n\n  _areAllSelected: function() {\n    return this.collection.all(function(m) {\n      return m.get('selected');\n    });\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * View that represents the footer.\n * May contain an additional info view with more state details depending on context.\n */\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-next': '_onClickNext'\n  },\n\n  initialize: function() {\n    if (this.options.infoView) {\n      this.addView(this.options.infoView);\n    }\n    this._initBinds();\n  },\n\n  render: function() {\n    this.$el.html(\n      this.getTemplate('common/dialogs/merge_datasets/footer')({\n        nextLabel: this.options.nextLabel || 'next step'\n      })\n    );\n    this._onChangeIsReadyForNextStep(this.model, this.model.get('isReadyForNextStep'));\n    this._maybeRenderInfoView();\n    return this;\n  },\n\n  _maybeRenderInfoView: function() {\n    if (this.options.infoView) {\n      this.$('.js-info').append(this.options.infoView.render().$el);\n    }\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:isReadyForNextStep', this._onChangeIsReadyForNextStep, this);\n  },\n\n  _onChangeIsReadyForNextStep: function(model, isReady) {\n    this.$('.js-next').toggleClass('is-disabled', !isReady);\n  },\n\n  _onClickNext: function() {\n    if (this.model.get('isReadyForNextStep')) {\n      this.model.set('gotoNextStep', true);\n    }\n  }\n\n});\n","var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar ColumnMergeModel = require('./column_merge/column_merge_model');\nvar SpatialMergeModel = require('./spatial_merge/spatial_merge_model');\n\n/**\n * View model for merge datasets view.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  excludeColumns: [\n    'cartodb_id',\n    'created_at',\n    'updated_at',\n    'the_geom_webmercator',\n    'cartodb_georef_status'\n  ],\n\n  defaults: {\n    mergeFlavors: undefined, // Collection, created with model\n    prevSteps: [],\n    currentStep: undefined,\n    table: undefined,\n    user: undefined\n  },\n\n  initialize: function(attrs) {\n    if (!attrs.table) throw new Error('table is required');\n    if (!attrs.user) throw new Error('user is required');\n\n    var data = {\n      user: this.get('user'),\n      table: this.get('table'),\n      excludeColumns: this.excludeColumns\n    };\n    this.set('mergeFlavors', new Backbone.Collection([\n      new ColumnMergeModel(data),\n      new SpatialMergeModel(data)\n    ]));\n  },\n\n  headerSteps: function() {\n    var steps = [];\n\n    var currentStep = this.get('currentStep');\n    var firstStep = this.get('prevSteps')[0] || currentStep;\n    var isFinished = true;\n    if (firstStep) {\n      var Model = firstStep.constructor;\n      while (Model) {\n        if (Model.header) {\n          var isCurrent = Model === currentStep.constructor;\n          if (isCurrent) {\n            isFinished = false;\n          }\n          steps.push(\n            _.extend({\n              isFinished: isFinished,\n              isCurrent: isCurrent\n            }, Model.header)\n          );\n        }\n\n        Model = Model === Model.nextStep ? undefined : Model.nextStep;\n      }\n    }\n\n    return steps;\n  },\n\n  gotoNextStep: function() {\n    var currentStep = this.get('currentStep');\n    var nextStep = currentStep.nextStep();\n    this.set({\n      prevSteps: this.get('prevSteps').concat(currentStep),\n      currentStep: nextStep\n    });\n  },\n\n  gotoPrevStep: function() {\n    this.set('currentStep', this.get('prevSteps').pop());\n  }\n\n});\n","var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar BaseDialog = require('../../views/base_dialog/view.js');\nvar MergeDatasetsModel = require('./merge_datasets_model.js');\nvar MergeFlavorView = require('./merge_flavor_view');\n\n/**\n* Shows a dialog to start merging two tables\n*  new MergeDatasetsDialog({\n*    model: table\n*  })\n* Migrated from old code.\n*/\nmodule.exports = BaseDialog.extend({\n\n  events: BaseDialog.extendEvents({\n    'click .js-back': '_onBackClick'\n  }),\n\n  initialize: function() {\n    this.options.clean_on_hide = true;\n    this.options.enter_to_confirm = false;\n    this.elder('initialize');\n\n    this.model = new MergeDatasetsModel({\n      table: this.options.table,\n      user: this.options.user\n    });\n\n    this._initBinds();\n  },\n\n  /**\n   * @override BaseDialog.prototype.render\n   */\n  render: function() {\n    BaseDialog.prototype.render.apply(this, arguments);\n    this.$('.content').addClass('Dialog-contentWrapper');\n\n    // Let the current step view know when the scroll has crossed the expected threshold for the key columns to be visible\n    this.$('.js-scroll').off('scroll');\n    if (this._stepView && this._stepView.onChangeKeyColumnsVisiblity) {\n      this._areKeyColumnsVisible = true;\n      var self = this;\n      this.$('.js-scroll').on('scroll', function(ev) {\n        var areKeyColumnsVisible = ev.target.scrollTop <= 175;\n        if (areKeyColumnsVisible !== self._areKeyColumnsVisible) {\n          self._areKeyColumnsVisible = areKeyColumnsVisible;\n          self._stepView.onChangeKeyColumnsVisiblity(areKeyColumnsVisible);\n        }\n      });\n    }\n\n    return this;\n  },\n\n  render_content: function() {\n    this.clearSubViews();\n    var $el;\n    var defaultTemplate = this.getTemplate('common/dialogs/merge_datasets/merge_datasets_content');\n\n    var currentStep = this.model.get('currentStep');\n    if (currentStep) {\n      var $step = this._$renderedStep(currentStep);\n      if (currentStep.get('skipDefaultTemplate')) {\n        // Render the view as content w/o wrapping it in the default template\n        return $step;\n      }\n\n      $el = $(defaultTemplate({\n        currentStep: currentStep,\n        headerSteps: this.model.headerSteps()\n      }));\n      $el.find('.js-details').append($step);\n    } else {\n      $el = $(defaultTemplate({\n        currentStep: undefined\n      }));\n      var $mergeFlavorsList = $el.find('.js-flavors');\n      $mergeFlavorsList.append.apply($mergeFlavorsList, this._$renderedMergeFlavors());\n    }\n\n    return $el;\n  },\n\n  _$renderedMergeFlavors: function() {\n    return this.model.get('mergeFlavors')\n      .map(function(model) {\n        var view = new MergeFlavorView({\n          model: model\n        });\n        this.addView(view);\n        return view.render().$el;\n      }, this);\n  },\n\n  _onChangeSelectedMergeFlavor: function(model, wasSelected) {\n    // Only change to next step if there's one selected\n    if (wasSelected) {\n      // reset selected state, so if/when user goes back to start view can select again\n      model.unset('selected');\n\n      // Set new current step\n      var firstStep = model.firstStep();\n      this.model.set('currentStep', firstStep);\n\n      // Event tracking \"Use visual merge\"\n      cdb.god.trigger('metrics', 'visual_merge', {\n        email: window.user_data.email\n      });\n    }\n  },\n\n  _initBinds: function() {\n    var mergeFlavors = this.model.get('mergeFlavors');\n    mergeFlavors.bind('change:selected', this._onChangeSelectedMergeFlavor, this);\n    this.add_related_model(mergeFlavors);\n\n    this.model.bind('change:currentStep', this.render, this);\n  },\n\n  _onChangeGotoNextStep: function(model, isTrue) {\n    if (isTrue) {\n      this.model.gotoNextStep();\n    }\n  },\n\n  _$renderedStep: function(step) {\n    // Clean up prev step, if there is any\n    if (this._stepView) {\n      this._stepView.clean();\n      this.removeView(this._stepView);\n\n      this._stepModel.unbind('change:gotoNextStep');\n      this._models = _.without(this._models, this._stepModel); // TODO: why no this.remove_related_model?\n    }\n\n    this._stepModel = step;\n    this._stepModel.bind('change:gotoNextStep', this._onChangeGotoNextStep, this);\n    this.add_related_model(this._stepModel);\n\n    this._stepView = step.createView();\n    this._stepView.bind('clickedNext', this._onClickNext, this);\n    this.addView(this._stepView);\n    return this._stepView.render().$el;\n  },\n\n  _onClickNext: function(e) {\n    this.killEvent(e);\n    this.model.gotoNextStep();\n  },\n\n  _onBackClick: function(e) {\n    this.killEvent(e);\n    this.model.gotoPrevStep();\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'OptionCard OptionCard--blocky',\n\n  events: {\n    'click': '_onClick'\n  },\n\n  render: function() {\n    this.$el.html(\n      this.getTemplate('common/dialogs/merge_datasets/merge_flavor')({\n        illustrationIconType: this.model.ILLUSTRATION_ICON_TYPE,\n        icon: this.model.ICON,\n        title: this.model.TITLE,\n        desc: this.model.DESC\n      })\n    );\n\n    if (!this.model.isAvailable()) {\n      this.$el.addClass('is-disabled');\n    }\n\n    return this;\n  },\n\n  _onClick: function(ev) {\n    this.killEvent(ev);\n    if (this.model.isAvailable()) {\n      this.model.set('selected', true);\n    }\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar MergeStepView = require('./merge_step_view');\n\n/**\n * Last step in the merge flows, managed the actual merge flow\n */\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    skipDefaultTemplate: true,\n    user: undefined,\n    tableName: '',\n    sql: undefined\n  },\n\n  createView: function() {\n    return new MergeStepView({\n      model: this\n    });\n  }\n\n});\n","var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar randomQuote = require('../../view_helpers/random_quote.js');\nvar ErrorDetailsView = require('../../views/error_details_view');\n\n/**\n * View for the last step of all merge kinds, creates the actual merged table.\n * TODO: taken from old code, cdb.admin.MergeTableDialog.merge, could this be done in a better way?\n */\nmodule.exports = cdb.core.View.extend({\n\n  initialize: function() {\n    _.bindAll(this, '_onMergeSuccess', '_onMergeError');\n    this._startMerge();\n  },\n\n  render: function() {\n    this.$el.html(\n      this.getTemplate('common/templates/loading')({\n        title: 'Merging datasets and generating the new one…',\n        quote: randomQuote()\n      })\n    );\n    return this;\n  },\n\n  _startMerge: function() {\n    // TODO: taken from old code, cdb.admin.MergeTableDialog.merge\n    //   could this be done in a better way?\n    $.ajax({\n      type: 'POST',\n      url: cdb.config.prefixUrl() + '/api/v1/imports',\n      data: {\n        table_name: this.model.get('tableName') + '_merge',\n        sql: this.model.get('sql')\n      },\n      success: this._onMergeSuccess,\n      error: this._onMergeError\n    });\n  },\n\n  _onMergeSuccess: function(r) {\n    var imp = this.importation = new cdb.admin.Import({\n      item_queue_id: r.item_queue_id\n    });\n    this.add_related_model(imp);\n\n    // Bind complete event\n    imp.bind('importComplete', function() {\n      imp.unbind();\n      window.location.href = cdb.config.prefixUrl() + \"/tables/\" + (imp.get(\"table_name\") || imp.get(\"table_id\")) + \"/\";\n    }, this);\n\n    var self = this;\n    imp.bind('importError', function(e) {\n      self._showError(\n        e.attributes.error_code,\n        e.attributes.get_error_text.title,\n        e.attributes.get_error_text.what_about,\n        e.attributes.item_queue_id\n      );\n    }, this);\n    imp.pollCheck();\n  },\n\n  _onMergeError: function(e) {\n    try {\n      this._showError(\n        e.attributes.error_code,\n        e.attributes.get_error_text.title,\n        e.attributes.get_error_text.what_about,\n        e.attributes.item_queue_id\n      );\n    } catch(err) {\n      this._showError('99999', 'Unknown', '');\n    }\n  },\n\n  //Show the error when duplication fails\n  _showError: function(number, title, what_about, item_queue_id) {\n    var view = new ErrorDetailsView({\n      err: {\n        error_code: number,\n        title: title,\n        what_about: what_about,\n        item_queue_id: item_queue_id\n      },\n      user: this.model.get('user')\n    });\n    this.addView(view);\n    this.$el.html(view.render().el);\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar SpatialMergeView = require('./spatial_merge_view');\nvar MergeModel = require('../merge_step_model');\nvar generateSpatialMergeSQL = require('./generate_spatial_merge_sql');\n\n/**\n * Step 2 for a spatial merge, select merge method and right column.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  INSTRUCTIONS_SAFE_HTML: 'Calculate the intersecting geospatial records between two datasets (ex. points in polygons).<br/>' +\n    \"You'll need to decide the operation to perform here.\",\n\n  defaults: {\n    isReadyForNextStep: false,\n    user: undefined,\n    mergeMethods: undefined,\n    leftTable: undefined,\n    leftKeyColumn: undefined,\n    leftColumns: undefined,\n    rightTableData: undefined,\n    rightKeyColumn: undefined,\n    rightColumns: undefined\n  },\n\n  createView: function() {\n    // Reset state\n    this.set('gotoNextStep', false);\n    this.get('mergeMethods').each(function(m) {\n      m.set('disabled', !this.isCountMergeMethod(m));\n    }, this);\n    this.get('rightColumns').comparator = function(column) {\n      return column.get('name'); // sort alphabetically\n    };\n\n    return new SpatialMergeView({\n      model: this\n    });\n  },\n\n  selectedMergeMethod: function() {\n    return this.get('mergeMethods').find(this._isSelectedColumn);\n  },\n\n  selectedRightMergeColumn: function() {\n    return this.get('rightColumns').find(this._isSelectedColumn);\n  },\n\n  changedRightMergeColumn: function(newColumn) {\n    this._updateMergeMethods(newColumn);\n    this._assertIfReadyForNextStep();\n  },\n\n  changedSelectedMergeMethod: function(newMergeMethod) {\n    var c = this.get('mergeMethods').chain().without(newMergeMethod);\n    c.each(this._deselect); //all but the new selected merge method\n\n    if (this.isCountMergeMethod(newMergeMethod)) {\n      c.each(this._enable); //enable all, so the user can \"go back\" to see available columns for AVG/SUM merge methods\n      this.get('rightColumns').each(this._deselect); // reset prev selection if any\n    } else {\n      // If not a count mege method update state based on current selection of merge column.\n      this._updateMergeMethods(this.selectedRightMergeColumn());\n    }\n\n    this._assertIfReadyForNextStep();\n  },\n\n  _updateMergeMethods: function(newColumn) {\n    // Each merge method should know how it should render based on selected merge column\n    this.get('mergeMethods').each(function(m) {\n      m.changedMergeColumn(newColumn);\n    });\n  },\n\n  isCountMergeMethod: function(m) {\n    return m && m.NAME === 'count';\n  },\n\n  nextStep: function() {\n    return new this.constructor.nextStep({\n      user: this.get('user'),\n      tableName: this.get('leftTable').get('name'),\n      sql: this._sqlForMergeMethod()\n    });\n  },\n\n  _deselect: function(m) {\n    m.set('selected', false);\n  },\n\n  _disable: function(m) {\n    m.set('disabled', true);\n  },\n\n  _enable: function(m) {\n    m.set('disabled', false);\n  },\n\n  _assertIfReadyForNextStep: function() {\n    var mergeMethod = this.selectedMergeMethod();\n    var isReady = mergeMethod && (\n        this.isCountMergeMethod(mergeMethod) ||\n        (!mergeMethod.get('disabled') && this.selectedRightMergeColumn())\n      );\n    this.set('isReadyForNextStep', isReady);\n  },\n\n  _sqlForMergeMethod: function() {\n    var rightTableName = this.get('rightTableData').name;\n    var mergeMethod = this.selectedMergeMethod();\n    var selectedMergeColumn = this.selectedRightMergeColumn();\n    var selectClause = mergeMethod.sqlSelectClause(rightTableName, selectedMergeColumn ? selectedMergeColumn.get('name') : '');\n\n    return generateSpatialMergeSQL({\n      leftTableName: this.get('leftTable').get('name'),\n      leftColumnsNames: this._selectedLeftColumnsNames(),\n      rightTableName: rightTableName,\n      selectClause: selectClause,\n      intersectType: mergeMethod.NAME\n    });\n  },\n\n  _selectedLeftColumnsNames: function() {\n    return this.get('leftColumns')\n    .filter(this._isSelectedColumn)\n    .map(function(m) {\n      return m.get('name');\n    });\n  },\n\n  _isSelectedColumn: function(m) {\n    return m.get('selected');\n  }\n\n}, {\n  header: {\n    icon: 'CDB-IconFont-wizard',\n    title: 'Choose merge columns'\n  },\n  nextStep: MergeModel\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar SumMergeMethod = require('./merge_methods/sum_merge_method');\nvar AVGMergeMethod = require('./merge_methods/avg_merge_method');\nvar CountMergeMethod = require('./merge_methods/count_merge_method');\nvar SpatialMergeView = require('./spatial_merge_view');\nvar ChooseMergeMethod = require('./choose_merge_method_model');\n\n/**\n * First step for a spatial merge - select a dataset table.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  INSTRUCTIONS_SAFE_HTML: 'Calculate the intersecting geospatial records between two datasets (ex. points in polygons).<br/>' +\n    \"You'll need to decide the operation to perform here.\",\n\n  defaults: {\n    user: undefined,\n    leftTable: undefined,\n    excludeColumns: undefined,\n    leftKeyColumn: undefined,\n    leftColumns: undefined,\n    mergeMethods: undefined,\n\n    rightTableData: undefined,\n    rightColumns: undefined\n  },\n\n  initialize: function(attrs) {\n    if (!attrs.leftTable) throw new Error('leftTable is required');\n    if (!attrs.excludeColumns || _.isEmpty(attrs.excludeColumns)) cdb.log.error('excludeColumns was empty');\n    this._initColumns();\n    this._initLeftKeyColumn();\n    this._initMergeMethods();\n  },\n\n  createView: function() {\n    // Reset state\n    this.set({\n      gotoNextStep: false,\n      rightTableData: undefined\n    });\n    this.get('mergeMethods').each(function(m) {\n      m.set({\n        selected: false,\n        disabled: true\n      });\n    });\n    this.get('rightColumns').reset();\n\n    return new SpatialMergeView({\n      model: this\n    });\n  },\n\n  assertIfReadyForNextStep: function() {\n    // Always return false, goes to next step implicitly on selecting table\n    return false;\n  },\n\n  fetchRightColumns: function(tableData) {\n    this.set('rightTableData', tableData);\n    // TODO: extracted from old code, cdb.admin.TableColumnSelector._getColumns,\n    //   isnt there some better way to get the schema/columns?\n    $.ajax({\n      url: cdb.config.prefixUrl() + '/api/v1/tables/' + tableData.id,\n      dataType: 'jsonp',\n      success: this._onFetchedRightColumns.bind(this)\n    });\n  },\n\n  nextStep: function() {\n    return new this.constructor.nextStep({\n      user: this.get('user'),\n      mergeMethods: this.get('mergeMethods'),\n      leftTable: this.get('leftTable'),\n      leftKeyColumn: this.get('leftKeyColumn'),\n      leftColumns: this.get('leftColumns'),\n      rightTableData: this.get('rightTableData'),\n      rightKeyColumn: this._rightKeyColumn(),\n      rightColumns: this.get('rightColumns')\n    });\n  },\n\n  _initColumns: function() {\n    var filteredLeftColumns = this._filterColumns(this.get('leftTable').get('schema'));\n    this.set('leftColumns', new Backbone.Collection(filteredLeftColumns));\n    this.set('rightColumns', new Backbone.Collection());\n  },\n\n  _initMergeMethods: function() {\n    var mergeMethods = new Backbone.Collection([\n      new SumMergeMethod(),\n      new CountMergeMethod(),\n      new AVGMergeMethod()\n    ]);\n    this.set('mergeMethods', mergeMethods);\n  },\n\n  _filterColumns: function(tableSchema) {\n    var excludeColumns = this.get('excludeColumns');\n\n    return _.chain(tableSchema)\n      .map(this._columnDataToColumn)\n      .reject(function(column) {\n        return _.contains(excludeColumns, column.name);\n      })\n      .value();\n  },\n\n  _columnDataToColumn: function(columnData) {\n    return {\n      // TODO: why don't we use a proper model for schema, to provide convenient method to get columns as a collection already?\n      name: columnData[0],\n      type: columnData[1]\n    };\n  },\n\n  _initLeftKeyColumn: function() {\n    var theGeomColumn = this.get('leftColumns').find(this._isColumnTheGeom);\n    this.set('leftKeyColumn', theGeomColumn.clone());\n  },\n\n  _onFetchedRightColumns: function(results) {\n    var filteredColumns = this._filterColumns(results.schema);\n    this.get('rightColumns').reset(filteredColumns, { silent: true }); // handled in next step\n    this.set('gotoNextStep', true);\n  },\n\n  _rightKeyColumn: function() {\n    return this.get('rightColumns')\n      .find(this._isColumnTheGeom)\n      .clone();\n  },\n\n  _isColumnTheGeom: function(column) {\n    return column.get('name') === 'the_geom';\n  }\n\n}, {\n  header: {\n    icon: 'CDB-IconFont-play',\n    title: 'Choose dataset to merge'\n  },\n  nextStep: ChooseMergeMethod\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * View to indicate the selected key columns relationship and merge method relationship.\n */\nmodule.exports = cdb.core.View.extend({\n\n  initialize: function() {\n    this._initBinds();\n  },\n\n  render: function() {\n    var rightColumns = this.model.get('rightColumns');\n    this.$el.html(\n      this.getTemplate('common/dialogs/merge_datasets/spatial_merge/footer_info')({\n        leftTableName: this.model.get('leftTable').get('name'),\n        rightColumnName: rightColumns ? rightColumns.get('name') : ''\n      })\n    );\n    return this;\n  },\n\n  _initBinds: function() {\n    var rightColumns = this.model.get('rightColumns');\n    rightColumns.bind('change:selected', this._updatePieces, this);\n    this.add_related_model(rightColumns);\n\n    var mergeMethods = this.model.get('mergeMethods');\n    mergeMethods.bind('change:selected', this._updatePieces, this);\n    this.add_related_model(mergeMethods);\n  },\n\n  _updatePieces: function() {\n    var selectedMergMethod = this.model.selectedMergeMethod();\n    this.$('.js-merge-method-name').text(selectedMergMethod ? selectedMergMethod.NAME : '');\n\n    if (this.model.isCountMergeMethod(selectedMergMethod)) {\n      this._changeRightPiece(this.model.get('rightTableData').name);\n    } else {\n      var m = this.model.selectedRightMergeColumn();\n      this._changeRightPiece(m ? m.get('name') : '');\n    }\n  },\n\n  _changeRightPiece: function(text) {\n    this.$('.js-right')\n      .text(text || '')\n      .toggleClass('is-placeholder', !text);\n  }\n\n});\n","var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n// SQL query as taken from old code, cdb.admin.MergeTablesDialog\n// Cleaned up to remove noise and avoid string concatenation to be more legible.\nmodule.exports = function(d) {\n  var leftTableName = d.leftTableName;\n  var leftColumnsNames = d.leftColumnsNames;\n  var rightTableName = d.rightTableName;\n  var selectClause = d.selectClause;\n  var intersectType = d.intersectType;\n\n  var sql = ['SELECT',\n    leftTableName + '.cartodb_id,',\n    leftTableName + '.the_geom_webmercator,',\n    leftTableName + '.the_geom,'\n  ];\n\n  _.each(leftColumnsNames, function(columnName) {\n    if (columnName !== 'the_geom') {\n      sql.push(leftTableName + '.' + columnName + ',');\n    }\n  });\n\n  sql.push(\n    '(SELECT ' + selectClause + ' FROM ' + rightTableName,\n      'WHERE ST_Intersects(' + leftTableName + '.the_geom, ' + rightTableName + '.the_geom)',\n    ') AS intersect_' + intersectType,\n    'FROM ' + leftTableName\n  );\n\n  return sql.join(' ');\n};\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * View to render a individual merge method.\n */\nmodule.exports = cdb.core.View.extend({\n\n  className: 'TabLink TabLink--positive TabLink--textCenterUpcase',\n\n  events: {\n    'hover': '_onHover',\n    'mouseout': '_onMouseOut',\n    'click': '_onClick'\n  },\n\n  initialize: function() {\n    this._initBinds();\n  },\n\n  render: function() {\n    var isDisabled = this.model.get('disabled');\n\n    this.$el\n      .text(this.model.NAME)\n      .toggleClass('disabled', isDisabled)\n      .toggleClass('selected', this.model.get('selected') && !isDisabled);\n\n    if (isDisabled) {\n      this._tooltipView().show();\n    }\n\n    return this;\n  },\n\n  _tooltipView: function() {\n    if (!this._tooltip) {\n      this._tooltip = new cdb.common.TipsyTooltip({\n        el: this.$el,\n        trigger: 'manual',\n        title: function() {\n          // For now there's only one reason why a merge method would be disabled, so inline it here.\n          // If there are more methods set the reason as an attr on the model instead, and update that attr based on state\n          return 'Select a column of type number to use this merge method';\n        }\n      });\n      this.addView(this._tooltip);\n    }\n    return this._tooltip;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:selected', this.render, this);\n    this.model.bind('change:disabled', this.render, this);\n  },\n\n  _onHover: function(ev) {\n    this.killEvent(ev);\n    if (this.model.get('disabled')) {\n      this._tooltip.showTipsy();\n    }\n  },\n\n  _onMouseOut: function(ev) {\n    this.killEvent(ev);\n    if (this._tooltip) {\n      this._tooltip.hideTipsy();\n    }\n  },\n\n  _onClick: function(ev) {\n    this.killEvent(ev);\n    if (!this.model.get('disabled')) {\n      this.model.set('selected', true);\n    }\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * Merge method to create SQL query for doing a spatial AVG.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  NAME: 'avg',\n\n  defaults: {\n    disabled: false,\n    selected: false\n  },\n\n  changedMergeColumn: function(newMergeColumn) {\n    var shouldDisable = !newMergeColumn || newMergeColumn.get('type') !== 'number';\n    this.set({\n      disabled: shouldDisable,\n      selected: this.get('selected') && !shouldDisable\n    });\n  },\n\n  sqlSelectClause: function(tableName, columnName) {\n    return 'AVG(' + tableName + '.' + columnName + ')';\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * Merge method to create SQL query for doing a spatial count.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  NAME: 'count',\n\n  defaults: {\n    disabled: false,\n    selected: false\n  },\n\n  changedMergeColumn: function(newMergeColumn) {\n  },\n\n  sqlSelectClause: function() {\n    return 'COUNT(*)';\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * Merge method to create SQL query for doing a spatial sum.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  NAME: 'sum',\n\n  defaults: {\n    disabled: false,\n    selected: false\n  },\n\n  changedMergeColumn: function(newMergeColumn) {\n    var shouldDisable = !newMergeColumn || newMergeColumn.get('type') !== 'number';\n    this.set({\n      disabled: shouldDisable,\n      selected: this.get('selected') && !shouldDisable\n    });\n  },\n\n  sqlSelectClause: function(tableName, columnName) {\n    return 'SUM(' + tableName + '.' + columnName + ')';\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar ChooseRightDatasetModel = require('./choose_right_dataset_model');\n\n/**\n * Entry point model that represents the merge flavor of doing a spatial merge.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  ILLUSTRATION_ICON_TYPE: 'IllustrationIcon--royal',\n  ICON: 'CDB-IconFont-mergeSpatial',\n  TITLE: 'Spatial join',\n  DESC: 'Measure the number of intesecting records between two datasets (ex. count point inside polygons)',\n\n  defaults: {\n    user: undefined,\n    table: undefined,\n    excludeColumns: []\n  },\n\n  initialize: function(attrs) {\n    if (!attrs.user) throw new Error('user is required');\n    if (!attrs.table) throw new Error('table is required');\n    if (!attrs.excludeColumns || _.isEmpty(attrs.excludeColumns)) cdb.log.error('excludeColumns was empty');\n  },\n\n  isAvailable: function() {\n    return true;\n  },\n\n  firstStep: function() {\n    return new ChooseRightDatasetModel({\n      user: this.get('user'),\n      leftTable: this.get('table'),\n      excludeColumns: this.get('excludeColumns')\n    });\n  }\n\n});\n","var $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar ColumnsSelectorView = require('../columns_selector_view');\nvar TablesSelectorView = require('../tables_selector_view');\nvar MergeMethodView = require('./merge_method_view');\nvar StickyHeaderView = require('../sticky_header_view');\nvar FooterView = require('../footer_view');\nvar FooterInfoView = require('./footer_info_view');\n\n/**\n * Shared view for both steps of doing a spatial merge, since they are essentially the same\n */\nmodule.exports = cdb.core.View.extend({\n\n  initialize: function() {\n    this._initViews();\n    this._initBinds();\n  },\n\n  render: function() {\n    var hasSelectedRightTable = this._hasSelectedRightTable();\n\n    var $el = $(\n      this.getTemplate('common/dialogs/merge_datasets/spatial_merge/spatial_merge')({\n        leftKeyColumn: this.model.get('leftKeyColumn'),\n        hasSelectedRightTable: hasSelectedRightTable,\n        rightKeyColumn: this.model.get('rightKeyColumn'),\n        rightColumns: this.model.get('rightColumns')\n      })\n    );\n\n    $el.find('.js-left-table').append(this._leftTableComboView.render().$el);\n    $el.find('.js-left-columns').append(this._leftColumnsView.render().$el);\n    $el.find('.js-right-columns').append(this._rightColumnsView.render().$el);\n    $el.append(this._footerView.render().$el);\n\n    if (hasSelectedRightTable) {\n      $el.find('.js-sticky-header').append(this._stickyHeaderView.render().$el);\n      $el.find('.js-right-table').append(this._rightTableComboView.render().$el);\n      this._renderMergeMethods($el.find('.js-merge-methods'));\n    } else {\n      $el.find('.js-right-tables').append(this._rightTablesSelectorView.render().$el);\n    }\n\n    this.$el.html($el);\n\n    return this;\n  },\n\n  onChangeKeyColumnsVisiblity: function() {\n    if (this._hasSelectedRightTable()) {\n      this._stickyHeaderView.$el.slideToggle(200);\n    }\n  },\n\n  _hasSelectedRightTable: function() {\n    return _.isObject(this.model.get('rightTableData'));\n  },\n\n  _initViews: function() {\n    this._leftTableComboView = new cdb.forms.Combo({\n      className: 'Select',\n      width: '100%',\n      disabled: true,\n      extra: [this.model.get('leftTable').get('name')]\n    });\n    this.addView(this._leftTableComboView);\n\n    this._leftColumnsView = new ColumnsSelectorView({\n      collection: this.model.get('leftColumns'),\n      excludeFilter: this._columnsExcludeFilter,\n      selectorType: 'switch'\n    });\n    this.addView(this._leftColumnsView);\n\n    var footerInfoView; // only set for 2nd step\n    var rightTableData = this.model.get('rightTableData');\n    if (rightTableData) {\n      this._stickyHeaderView = new StickyHeaderView({\n        leftKeyColumn: this.model.get('leftKeyColumn'),\n        rightKeyColumn: this.model.get('rightKeyColumn'),\n        addRadioPlaceholder: true\n      });\n      this.addView(this._stickyHeaderView);\n\n      this._rightTableComboView = new cdb.forms.Combo({\n        className: 'Select',\n        width: '100%',\n        disabled: true,\n        extra: [this.model.get('rightTableData').name]\n      });\n      this.addView(this._rightTableComboView);\n      footerInfoView = new FooterInfoView({\n        model: this.model\n      })\n    } else {\n      this._rightTablesSelectorView = new TablesSelectorView({\n        excludeFilter: this._rightTablesExcludeFilter.bind(this),\n        initialOption: {\n          label: rightTableData ? rightTableData.name : 'Select dataset'\n        }\n      });\n      this.addView(this._rightTablesSelectorView);\n    }\n\n    this._rightColumnsView = new ColumnsSelectorView({\n      collection: this.model.get('rightColumns'),\n      excludeFilter: this._columnsExcludeFilter,\n      selectorType: 'radio'\n    });\n    this.addView(this._rightColumnsView);\n\n    this._mergeMethodViews = this.model.get('mergeMethods').map(this._createMergeMethodView, this);\n\n    this._footerView = new FooterView({\n      model: this.model,\n      nextLabel: rightTableData ? 'Merge datasets' : undefined,\n      infoView: footerInfoView\n    });\n    this.addView(this._footerView);\n  },\n\n  _createMergeMethodView: function(m) {\n    var view = new MergeMethodView({ model: m });\n    this.addView(view);\n    return view;\n  },\n\n  _initBinds: function() {\n    var rightColumns = this.model.get('rightColumns');\n    rightColumns.bind('change:selected', this._onChangeSelectedRightColumn, this);\n    this.add_related_model(rightColumns);\n\n    var mergeMethods = this.model.get('mergeMethods');\n    if (mergeMethods) {\n      mergeMethods.bind('change:selected', this._onChangeSelectedMergeMethod, this);\n      this.add_related_model(mergeMethods);\n    }\n\n    if (this._rightTablesSelectorView) {\n      this._rightTablesSelectorView.model.bind('change:tableData', this._onChangeRightTableData, this);\n      this.add_related_model(this._rightTablesSelectorView.model);\n    }\n  },\n\n  _onChangeRightTableData: function(m, tableData) {\n    this._rightColumnsView.model.set('loading', 'columns');\n    this.model.fetchRightColumns(tableData);\n  },\n\n  _onChangeSelectedRightColumn: function(m, isSelected) {\n    if (isSelected) {\n      this.model.changedRightMergeColumn(m);\n    }\n  },\n\n  _onChangeSelectedMergeMethod: function(m, isSelected) {\n    if (!isSelected) return;\n\n    this.model.changedSelectedMergeMethod(m);\n\n    var isCountMergeMethod = this.model.isCountMergeMethod(m);\n    this.$('.js-count-merge-method-info').toggle(isCountMergeMethod);\n    this.$('.js-right-columns').toggle(!isCountMergeMethod);\n  },\n\n  _renderMergeMethods: function($target) {\n    $target.append.apply($target, this._$renderedMergeMethodViews());\n  },\n\n  _$renderedMergeMethodViews: function() {\n    return _.map(this._mergeMethodViews, function(view) {\n      return view.render().$el;\n    });\n  },\n\n  _columnsExcludeFilter: function(column) {\n    return column.get('name') === 'the_geom';\n  },\n\n  _rightTablesExcludeFilter: function(vis) {\n    return vis.get('name') === this.model.get('leftTable').get('name');\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * Sticky header, should be displayed when the key columns goes out of view\n */\nmodule.exports = cdb.core.View.extend({\n\n  className: 'MergeDatasets-stickyHeader',\n  attributes: {\n    style: 'display: none'\n  },\n\n  render: function() {\n    var leftKeyColumn = this.options.leftKeyColumn;\n    var rightKeyColumn = this.options.rightKeyColumn;\n\n    this.$el.html(\n      this.getTemplate('common/dialogs/merge_datasets/sticky_header')({\n        leftColumnName: leftKeyColumn.get('name'),\n        leftColumnType: leftKeyColumn.get('type'),\n        rightColumnName: rightKeyColumn.get('name'),\n        rightColumnType: rightKeyColumn.get('type'),\n        addRadioPlaceholder: this.options.addRadioPlaceholder\n      })\n    );\n    return this;\n  }\n});\n","var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * View to select a table. extends the cdb.admin.Combo to handle the tables fetch and similar.\n */\nmodule.exports = cdb.forms.Combo.extend({\n\n  className: 'Select',\n\n  initialize: function() {\n    this.options.width = '100%';\n    this.options.disabled = true;\n    this.options.extra = [this._initialOptionDataItem() || 'Loading tables…'];\n    this.options.excludeFilter = this.options.excludeFilter || function() {};\n\n    this.elder('initialize');\n    this.model = this.model || new cdb.core.Model();\n\n    this._initVisualizations();\n    this._initBinds();\n    this._fetchTables();\n  },\n\n  _formatResult: function(state) {\n    return JSON.stringify(state);\n  },\n\n  _initVisualizations: function() {\n    // Taken from old code, cdb.admin.TableColumnSelector._getTables\n    var visualizations = new cdb.admin.Visualizations();\n    visualizations.options.set({\n      type: 'table',\n      per_page: 100000,\n      table_data: false\n    });\n    this.model.set('visualizations', visualizations);\n  },\n\n  _initBinds: function() {\n    this.bind('change', this._onChangeOption, this);\n\n    var visualizations = this.model.get('visualizations');\n    visualizations.bind('reset', this._onResetTables, this);\n    this.add_related_model(visualizations);\n  },\n\n  _fetchTables: function() {\n    // Taken from old code, cdb.admin.TableColumnSelector._getTables\n    this.model.get('visualizations').fetch({\n      data: {\n        o: {\n          updated_at: 'desc'\n        },\n        exclude_raster: true\n      }\n    });\n  },\n\n  _onResetTables: function() {\n    this.options.disabled = false;\n\n    var filteredVisualizations = this.model.get('visualizations').reject(this.options.excludeFilter);\n    var newData = _.map(filteredVisualizations, this._visToComboDataItem, this);\n\n    // Prepend initial item to new data, if there's one\n    var initialItem = this._initialOptionDataItem();\n    if (initialItem) {\n      newData.unshift(initialItem);\n    }\n    this.updateData(newData);\n\n    // pre-select 1st item, unless there's an initialOption\n    var firstFilteredVis = filteredVisualizations[0];\n    if (!initialItem && firstFilteredVis) {\n      this._onChangeOption(firstFilteredVis.id);\n    }\n  },\n\n  _visToComboDataItem: function(vis) {\n    // required data format for an option for the cdb.admin.combo…\n    return this._comboDataItem(vis.get('name'), vis.id);\n  },\n\n  _initialOptionDataItem: function() {\n    if (_.isObject(this.options.initialOption)) {\n      var obj = this.options.initialOption;\n      // required data format for an option for the cdb.admin.combo…\n      return this._comboDataItem(obj.label, obj.value);\n    }\n  },\n\n  _comboDataItem: function(label, value) {\n    return [label, value];\n  },\n\n  _onChangeOption: function(visId) {\n    var vis = this.model.get('visualizations').get(visId);\n    this.model.set('tableData', vis ? vis.get('table') : undefined);\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\nvar Pecan = require('cartodb-pecan');\n\nmodule.exports = cdb.core.View.extend({\n\n  _CARD_WIDTH: 288,\n  _CARD_HEIGHT: 170,\n  _TABS_PER_ROW: 3,\n  _GET_BBOX_FROM_THE_GEOM: true,\n\n  tagName: \"li\",\n  className: \"GalleryList-item MapsList-item js-card\",\n\n  events: {\n    \"click \": \"_onClick\"\n  },\n\n  initialize: function() {\n    this.template = cdb.templates.getTemplate('common/dialogs/pecan/card');\n  },\n\n  render: function() {\n    var src = this.options.url + \"?api_key=\" + this.options.api_key;\n\n    var wizardName = this.model.get(\"visualizationType\").charAt(0).toUpperCase() + this.model.get(\"visualizationType\").slice(1);\n\n    var null_count = +(this.model.get(\"null_ratio\") * this.model.get(\"count\")).toFixed(2);\n    var prettyNullCount = Utils.formatNumber(null_count);\n\n    this.$el.html(\n      this.template({\n      column: this.model.get(\"column\"),\n      wizard: wizardName,\n      metadata: this.model.get(\"metadata\"),\n      null_count: prettyNullCount,\n      weight: this.model.get(\"weight\")\n    }));\n\n    if (this.model.get(\"visualizationType\") === \"choropleth\") {\n      this._addHistogram();\n    }\n\n    var self = this;\n    var img = new Image();\n    img.onerror = function() {\n      cdb.log.info(\"error loading the image for \" + self.model.get(\"column\"));\n    };\n    img.onload = function() {\n      self.$(\".js-loader\").hide();\n      self.$(\".js-header\").append('<img class=\"MapCard-preview\" src=\"' + src + '\" />');\n      self.$(\"img\").show();\n    };\n\n    img.src = src;\n\n    return this;\n  },\n\n  _onClick: function(e) {\n    this.killEvent(e);\n    this.trigger(\"click\", this.model, this);\n  },\n\n  _addHistogram: function() {\n    var data = this.model.get(\"cat_hist\").slice(0, 7);\n    data = _.sortBy(data, function(d){ return d[0]; });\n    var rampName = Pecan.getMethodProperties(this.model.attributes).name;\n\n    var width = 37;\n    var height = 11;\n    var minHeight = 2;\n\n    var x = d3.scale.ordinal()\n        .rangeRoundBands([0, width], .1);\n\n    var y = d3.scale.linear()\n        .range([height, 0]);\n\n    var xAxis = d3.svg.axis()\n        .scale(x)\n        .orient(\"bottom\");\n\n    var svg = d3.select(this.$(\".js-graph\")[0]).append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n      .append(\"g\");\n\n    x.domain(data.map(function(d) { return d[0]; }));\n    y.domain([0, d3.max(data, function(d) { return d[1]; })]);\n\n    svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n    svg.selectAll(\".bar\")\n        .data(data)\n      .enter().append(\"rect\")\n        .attr(\"fill\", function(d, i) {\n          return cdb.admin.color_ramps[rampName][7][i];\n        })\n        .attr(\"class\", \"HistogramGraph-bar\")\n        .attr('data-title', function(d) {\n          return Utils.formatNumber(d[1])\n        })\n        .attr(\"x\", function(d) { return x(d[0]); })\n        .attr(\"width\", 4)\n        .attr(\"y\", function(d) {\n          var value = height - y(d[1]);\n          var yPos = y(d[1]);\n          return value < minHeight ? (height - minHeight) : yPos;\n        })\n        .attr(\"height\", function(d) {\n          var value = height - y(d[1]);\n          return value < minHeight ? minHeight : value;\n        })\n\n    return this;\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\nvar Pecan = require('cartodb-pecan');\nvar BaseDialog = require('../../views/base_dialog/view');\nvar ViewFactory = require('../../view_factory');\nvar randomQuote = require('../../view_helpers/random_quote');\nvar PecanCard = require('./pecan_card');\n\nmodule.exports = BaseDialog.extend({\n\n  _CARD_MARGIN: 20,\n  _CARD_WIDTH: 288,\n  _CARD_HEIGHT: 170,\n  _STROKE_PX_LIMIT: 0.04,\n  _TABS_PER_ROW: 3,\n  _GET_BBOX_FROM_THE_GEOM: true,\n  _DEFAULT_BASEMAP_TEMPLATE: \"http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\",\n  _SUPPORTED_BASEMAPS: [\"light_all\", \"dark_all\", \"light_nolabels\", \"dark_nolabels\", \"base-antique\", \"base-flatblue\", \"toner\", \"watercolor\"],\n\n  events: BaseDialog.extendEvents({\n    \"click .js-goPrev\": \"_prevPage\",\n    \"click .js-goNext\": \"_nextPage\",\n    \"click .js-skip\"  : \"cancel\"\n  }),\n\n  initialize: function() {\n    this.elder('initialize');\n\n    if (!this.options.vis) {\n      throw new Error('vis is required');\n    }\n\n    if (!this.options.user) {\n      throw new Error('user is required');\n    }\n\n    this.columns = this.options.collection;\n    this.add_related_model(this.collection);\n\n    this._initModels();\n    this._initViews();\n    this._initBinds();\n  },\n\n  render_content: function() {\n    return this._panes.getActivePane().render().el;\n  },\n\n  render: function() {\n    BaseDialog.prototype.render.apply(this, arguments);\n    return this;\n  },\n\n  _initModels: function() {\n    this.model = new cdb.core.Model({ page: 1, maxPages: 0 });\n  },\n\n  _initViews: function() {\n\n    _.bindAll(this, \"_addCard\", \"_generateThumbnail\", \"_refreshMapList\", \"_setWizardProperties\");\n\n    this.vis   = this.options.vis;\n    this.map   = this.vis.map;\n    this.user  = this.options.user;\n\n    this._panes = new cdb.ui.common.TabPane({\n      el: this.el\n    });\n\n    this.addView(this._panes);\n\n    this._panes.addTab('vis',\n      ViewFactory.createByTemplate('common/dialogs/pecan/template', {\n      })\n    );\n\n    this._panes.addTab('applying',\n      ViewFactory.createByTemplate('common/templates/loading', {\n        title: 'Applying style…',\n        quote: randomQuote()\n      })\n    );\n\n    this._panes.addTab('loading',\n      ViewFactory.createByTemplate('common/templates/loading', {\n        title: 'Loading previews…',\n        quote: randomQuote()\n      })\n    );\n\n    this._getBBox();\n    this._sendOpenStats();\n    this._loadCards();\n\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:page', this._moveTabsNavigation, this);\n    this._panes.bind('tabEnabled', this.render, this);\n  },\n\n  _getBBox: function() {\n    this.columns.each(function(column) {\n      if (column.get(\"column\") === \"the_geom\") {\n        this.bbox = column.get(\"bbox\");\n      }\n    }, this);\n  },\n\n  _loadCards: function() {\n    this.columns.each(this._loadCard, this);\n  },\n\n  _loadCard: function(column) {\n    var self = this;\n\n    if (column.get(\"success\")) {\n      this._generateThumbnail(column, function(error, url) {\n        if (!error) {\n          self._addCard(url, column);\n        } else {\n          cdb.log.error(error);\n        }\n      });\n    }\n  },\n\n  _sendAppliedStats: function() {\n    cdb.god.trigger('metrics', 'applied_pecan', {\n      email: window.user_data.email\n    });\n  },\n\n  _sendOpenStats: function() {\n    cdb.god.trigger('metrics', 'open_pecan_list', {\n      email: window.user_data.email\n    });\n  },\n\n  _skip: function() {\n    var layerID = this.vis.get(\"active_layer_id\");\n    var name;\n    var activeLayer  = this.vis.map.layers.where({ id: layerID });\n\n    if (activeLayer) {\n      name = activeLayer[0].table.get(\"name\");\n    }\n\n    var skipPencanDialog = 'pecan_' + this.options.user.get(\"username\") + \"_\" + name;\n    localStorage[skipPencanDialog] = true;\n  },\n\n  _nextPage: function() {\n    var page = this.model.get('page');\n    var maxPages = this.model.get('maxPages');\n\n    if (page < maxPages) {\n      this.model.set('page', page + 1);\n    }\n  },\n\n  _prevPage: function() {\n    var page = this.model.get('page');\n    if (page > 1) {\n      this.model.set('page', page - 1);\n    }\n  },\n\n  _moveTabsNavigation: function() {\n    var page = this.model.get('page');\n    var rowWidth = 960;\n\n    var p = rowWidth * (page - 1);\n    this.$('.js-map-list').css('margin-left', '-' + p + 'px');\n    this._refreshNavigation();\n  },\n\n  _refreshNavigation: function() {\n    var page = this.model.get('page');\n    var maxPages = this.model.get('maxPages');\n\n    this.$('.js-goPrev')[ page > 1 ? 'removeClass' : 'addClass' ]('is-disabled');\n    this.$('.js-goNext')[ page < maxPages ? 'removeClass' : 'addClass' ]('is-disabled');\n  },\n\n  _hideNavigation: function() {\n    this.$('.js-navigation').addClass(\"is-hidden\");\n  },\n\n  _setupCSS: function(css, geometryType) {\n    var row_count = this.options.vis.tableMetadata().get(\"row_count\");\n    var removeStrokeIndex = row_count / (this._CARD_WIDTH * this._CARD_HEIGHT);\n    var removeStroke = (removeStrokeIndex > this._STROKE_PX_LIMIT);\n\n    if (geometryType !== \"line\" && removeStroke) {\n      css = css.replace(\"marker-line-width: 1;\", \"marker-line-width: 0.7;\");\n      css = css.replace(\"marker-width: 10;\", \"marker-width: 7;\");\n    }\n\n    return css;\n  },\n\n  _setupTemplate: function() {\n    var template = this.map.getLayerAt(0).get(\"urlTemplate\");\n\n    if (template) {\n      var supportedBasemap = _.find(this._SUPPORTED_BASEMAPS, function(basemap) {\n        return template.indexOf(basemap) !== -1\n      });\n    }\n\n    if (!template || !supportedBasemap) {\n      template = this._DEFAULT_BASEMAP_TEMPLATE;\n    }\n\n    return template;\n  },\n\n  _generateLayerDefinition: function(column) {\n\n    var type = column.get(\"visualizationType\");\n    var sql = column.get(\"sql\");\n    var css = this._setupCSS(column.get(\"css\"), column.get(\"geometryType\"));\n\n    var api_key  = this.user.get(\"api_key\");\n    var maps_api_template = cdb.config.get('maps_api_template');\n\n    var template = this._setupTemplate();\n\n    var layerDefinition = {\n      user_name: user_data.username,\n      maps_api_template: maps_api_template,\n      api_key: api_key,\n      layers: [{\n        type: \"http\",\n        options: {\n          urlTemplate: template,\n          subdomains: [ \"a\", \"b\", \"c\" ]\n        }\n      }, {\n        type: \"cartodb\",\n        options: {\n          sql: sql,\n          cartocss: css,\n          cartocss_version: \"2.1.1\"\n        }\n      }]\n    };\n\n    if (type === \"torque\" || type === \"heatmap\"){\n      layerDefinition.layers[1] = {\n        type: \"torque\",\n        options: {\n          sql: sql,\n          cartocss: css,\n          cartocss_version: \"2.1.1\"\n        }\n      }\n    }\n\n    return layerDefinition;\n  },\n\n  _generateThumbnail: function(column, callback) {\n\n    var layerDefinition = this._generateLayerDefinition(column);\n\n    var onImageReady = function(error, url) {\n      callback && callback(error, url);\n    };\n\n    var the_geom = this.columns.find(function(column) {\n      return column.get(\"column\") === 'the_geom'\n    });\n\n    if (this.bbox && this._GET_BBOX_FROM_THE_GEOM) {\n      cdb.Image(layerDefinition).size(this._CARD_WIDTH, this._CARD_HEIGHT).bbox(this.bbox).getUrl(onImageReady);\n    } else {\n      cdb.Image(layerDefinition).size(this._CARD_WIDTH, this._CARD_HEIGHT).zoom(this.map.get(\"zoom\")).center(this.map.get(\"center\")).getUrl(onImageReady);\n    }\n\n  },\n\n  _addCard: function(url, column) {\n\n    var card = new PecanCard({\n      url: url,\n      urlTemplate: this.map.getLayerAt(0).get(\"urlTemplate\"),\n      api_key: this.user.get(\"api_key\"),\n      model: column\n    });\n\n    card.bind(\"click\", this._onCardClick, this);\n    card.render();\n\n    this._panes.active('vis');\n\n    if (this._getSuccessColumns().length < 3) {\n      this.$(\".js-map-list\").addClass(\"is--centered\");\n    }\n\n    if (column.get(\"visualizationType\") === 'heatmap' || column.get(\"visualizationType\") === 'torque') {\n      this.$(\".js-map-list\").prepend(card.$el);\n    } else {\n      this.$(\".js-map-list\").append(card.$el);\n    }\n\n    this._refreshMapList(card.$el);\n    this._refreshNavigation();\n  },\n\n  _refreshMapList: function($el) {\n    var w = $el.width();\n    var l = this.$(\".js-card\").length;\n    this.$(\".js-map-list\").width(w * l + (l - 1) * this._CARD_MARGIN);\n    this.model.set('maxPages', Math.ceil(this.$('.js-card').size() / this._TABS_PER_ROW));\n  },\n\n  _getSuccessColumns: function() {\n    return this.columns.filter(function(c) { return c.get(\"success\")});\n  },\n\n  _bindDataLayer: function() {\n    this.layer.wizard_properties.unbind(\"load\", this._setWizardProperties, this);\n    this.layer.wizard_properties.bind(\"load\", this._setWizardProperties, this);\n  },\n\n  _getProperties: function(column) {\n\n    var property = column.get(\"column\");\n    var wizard = this._getWizardName(column.get(\"visualizationType\"));\n\n    var properties = { property: property };\n\n    if (wizard === \"category\") {\n      return this._getCategoriesProperties(properties);\n    } else if (wizard === 'choropleth') {\n      return this._getChoroplethProperties(properties);\n    } else if(wizard === \"heatmap\") {\n      return this._getHeatmapProperties(properties);\n    }\n\n  },\n\n  _onCardClick: function(column) {\n    this._panes.active('applying');\n    this.model.set(\"column\", column);\n\n    this._skip();\n\n    this.layer = this._getDataLayer();\n\n    this._sendAppliedStats();\n\n    var wizard = this._getWizardName(column.get(\"visualizationType\"));\n    var properties = this._getProperties(column);\n\n    this._bindDataLayer();\n    this.layer.wizard_properties.active(wizard, properties);\n  },\n\n  _getWizardName: function(name){\n    var mappings = {\"heatmap\": \"torque_heat\"};\n    return mappings[name] || name;\n  },\n\n  _getDataLayer: function() {\n    return this.map.layers.getDataLayers()[0];\n  },\n\n  _setWizardProperties: function() { // TODO: hack, we should find a way to remove this\n    var properties = this._getProperties(this.model.get(\"column\"));\n    this.layer.wizard_properties.unbind(\"load\", this._setWizardProperties, this);\n    if (properties) {\n      this.layer.wizard_properties.set(properties);\n    }\n    this.close();\n  },\n\n  _getChoroplethProperties: function(properties) {\n    var column = this.model.get(\"column\");\n\n    var property = column.get(\"column\");\n    var type     = column.get(\"type\");\n    var dist     = column.get(\"dist_type\");\n    var stats    = column.get(\"stats\");\n\n    properties.qfunction  = this._getQFunction(dist);\n    properties.color_ramp = Pecan.getMethodProperties(stats).name;\n\n    return properties;\n  },\n\n  _getCategoriesProperties: function(properties) {\n    var column = this.model.get(\"column\");\n    properties.metadata   = column.get(\"metadata\");\n    properties.categories = column.get(\"metadata\");\n    return properties;\n  },\n\n  _getHeatmapProperties: function(properties){\n    properties.property = \"cartodb_id\";\n    properties[\"torque-resolution\"] = 2;\n    return properties;\n  },\n\n  _getQFunction: function(dist) {\n    var qfunction = \"Jenks\";\n\n    if (dist === 'L' || dist == 'J') {\n      qfunction = \"Heads/Tails\";\n    } else if (dist === 'A' || dist == 'U') {\n      qfunction = \"Jenks\";\n    } else if (dist === 'F') {\n      qfunction = \"Quantile\"; // we could use 'Equal Interval' too\n    }\n    return qfunction;\n  },\n\n  _keydown: function(e) {\n    if (e.keyCode === $.ui.keyCode.LEFT) {\n      this._prevPage();\n    } else if (e.keyCode === $.ui.keyCode.RIGHT) {\n      this._nextPage();\n    }\n    BaseDialog.prototype._keydown.call(this, e);\n  },\n\n  clean: function() {\n    if (this.layer) {\n      this.layer.wizard_properties.unbind(\"load\", this._setWizardProperties, this);\n    }\n\n    BaseDialog.prototype.clean.call(this);\n  },\n\n  cancel: function(e) {\n    this.killEvent(e);\n    this.model.set('disabled', true);\n    this._skip();\n    this.elder('cancel');\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\nvar BaseDialog = require('../../views/base_dialog/view');\nvar ViewFactory = require('../../view_factory');\nvar randomQuote = require('../../view_helpers/random_quote');\n\nmodule.exports = cdb.core.View.extend({\n\n  _MAX_ROWS: 100000,\n  _MAX_COLS: 60,\n  _EXCLUDED_COLUMNS: [\n    'cartodb_id', 'lat', 'lon', 'lng', 'long', 'latitude', 'longitude', 'longitudenumber','latitudenumber', \n    'minlat', 'maxlat', 'minlon', 'maxlon', 'minlng', 'maxlng', 'center_lat', 'centerlat', 'center_lon', 'centerlon',\n    'latdd', 'longdd', 'shape_length', 'shape_area', 'objectid', 'id', 'created_at', 'updated_at',\n    'iso2', 'iso3', 'x', 'y', 'x_coord', 'y_coord', 'xcoord', 'ycoord', 'coord_x', 'coord_y', 'coordx', 'coordy', \n    'cartodb_georef_status','scalerank', 'strokweig', 'country', 'state', 'area_sqkm', 'region', 'subregion', 'funcstat',\n    'classfp', 'county_fip', 'county', 'aland10'\n  ],\n\n  initialize: function() {\n    this.elder('initialize');\n\n    if (!this.options.table) {\n      throw new Error('table is required');\n    }\n\n    this._initModels();\n    this._initViews();\n  },\n\n  _check: function() {\n\n    var isGeoreferenced = this.options.table.isGeoreferenced();\n\n    var tableData     = this.options.table.data();\n    var geometryTypes = tableData.table && tableData.table.get(\"geometry_types\");\n    var hasGeometries = geometryTypes && geometryTypes.length > 0 ? true : false;\n\n    var row_count     = tableData.table.get(\"rows_counted\");\n    var hasRows       = row_count > 0 && row_count < this._MAX_ROWS;\n\n    var col_count = _(this.query_schema).size();\n    var hasColumns = col_count > 0 && col_count < this._MAX_COLS;\n\n    return isGeoreferenced && hasGeometries && hasRows && hasColumns;\n  },\n\n  _initModels: function() {\n    this.columns = new Backbone.Collection();\n    this.model = new cdb.core.Model({ page: 1, maxPages: 0 });\n  },\n\n  _initViews: function() {\n\n    this.table = this.options.table;\n    this.query_schema = this.table.data().query_schema;\n    this.backgroundPollingModel = this.options.backgroundPollingModel;\n\n    if (this._check() && this.backgroundPollingModel.canAddAnalysis()) {\n      this._setupColumns();\n      this._start();\n    }\n  },\n\n  _getSimplifiedGeometryType: function(g) {\n    return {\n      st_multipolygon: 'polygon',\n      st_polygon: 'polygon',\n      st_multilinestring: 'line',\n      st_linestring: 'line',\n      st_multipoint: 'point',\n      st_point: 'point'\n    }[g.toLowerCase()];\n  },\n\n  _getGeometryType: function() {\n    var geometryTypes = this.table.data().table.get(\"geometry_types\");\n    return this._getSimplifiedGeometryType(geometryTypes[0]);\n  },\n\n  _start: function() {\n    var columns = this.columns.map(function(column) {\n      return { table_id: this.table.id, column: column.get(\"name\"), geometry_type: column.get(\"geometry_type\") };\n    }, this);\n\n    this.backgroundPollingModel.addAnalysis(columns);\n  },\n\n  _setupColumns: function() {\n    _(this.query_schema).each(function(type, name) {\n      if (!_.include(this._EXCLUDED_COLUMNS, name)) {\n        this.columns.add({ name: name.concat(\"\"), geometry_type: this._getGeometryType() });\n      }\n    }, this);\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * View model for an option that may be disabled due to Vis' privacy being set to private.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  isDisabled: function() {\n    return this.get('isPrivacyPrivate');\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * View to handle the visual representation of a publish option.\n */\nmodule.exports = cdb.core.View.extend({\n\n  className: 'OptionCard OptionCard--static',\n\n  events: {\n    'click input': '_onClickInput'\n  },\n\n  initialize: function() {\n    this.elder('initialize');\n    this._template = cdb.templates.getTemplate(this.model.get('template'));\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n\n    this.$el.html(\n      this._template({\n        model: this.model\n      })\n    );\n    this.$el.toggleClass('is-disabled', !!this.model.isDisabled());\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change', this.render, this);\n  },\n\n  _onClickInput: function(ev) {\n    this.killEvent(ev);\n    this.$('input').select();\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar BaseDialog = require('../../views/base_dialog/view');\nvar OptionView = require('./publish_option_view');\nvar ViewModel = require('./options/view_model');\n\n/**\n * Delete items dialog\n */\nmodule.exports = BaseDialog.extend({\n\n  events: function() {\n    return _.extend({}, BaseDialog.prototype.events, {\n      'click .js-change-privacy': '_openPrivacyDialog'\n    });\n  },\n\n  initialize: function() {\n    this.elder('initialize');\n    if (!this.model) throw new Error('model (vis) is required');\n    if (!this.options.user) throw new Error('user is required');\n    this._initOptions();\n    this._initBinds();\n  },\n\n  /**\n   * @implements cdb.ui.common.Dialog.prototype.render_content\n   */\n  render_content: function() {\n    this.clearSubViews();\n\n    var $el = $(\n      cdb.templates.getTemplate('common/dialogs/publish/publish')({\n      })\n    );\n\n    this._options.each(function(model) {\n      var view = new OptionView({\n        model: model\n      });\n      this.addView(view);\n      $el.find('.js-publish-options').append(view.render().el);\n    }, this);\n\n    // Event tracking \"Published visualization\"\n    cdb.god.trigger('metrics', 'published_visualization', {\n      email: window.user_data.email\n    });\n\n    return $el;\n  },\n\n  _initOptions: function() {\n    // Public URL option\n    this._options = new Backbone.Collection();\n    this._publicUrlOption = new ViewModel({\n      template: 'common/dialogs/publish/options/public_url'\n    });\n    this._options.add(this._publicUrlOption);\n\n    // Embed option\n    this._embedOption = new ViewModel({\n      template: 'common/dialogs/publish/options/embed',\n      embedURL: this.model.embedURL()\n    });\n    this._options.add(this._embedOption);\n\n    // CartoDB.js option\n    this._options.add(\n      new ViewModel({\n        template: 'common/dialogs/publish/options/cdb',\n        vizjsonURL: this.model.vizjsonURL()\n      })\n    );\n\n    this._updateOptionsWithNewPrivacy();\n  },\n\n  _updateOptionsWithNewPrivacy: function() {\n    var isPrivate = this.model.get('privacy') === 'PRIVATE';\n\n    this._publicUrlOption.set('isPrivacyPrivate', isPrivate);\n    this._embedOption.set('isPrivacyPrivate', isPrivate);\n\n    if (!isPrivate) {\n      var publicURL = this.model.publicURL();\n      this._publicUrlOption.set({\n        url: publicURL\n      });\n    }\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:privacy', this._updateOptionsWithNewPrivacy, this);\n  },\n\n  _openPrivacyDialog: function(e) {\n    this.killEvent(e);\n\n    var privacyModal = new cdb.editor.ChangePrivacyView({\n      vis: this.model, //vis\n      user: this.options.user,\n      clean_on_hide: true,\n      enter_to_confirm: true\n    });\n\n    // Do not remove this dialog but keep it until returning\n    var originalCleanOnHideValue = this.options.clean_on_hide;\n    this.options.clean_on_hide = false;\n    this.close();\n    privacyModal.appendToBody();\n\n    // Return to this view when done\n    var self = this;\n    var onClose = function() {\n      privacyModal.unbind('hide', onClose);\n      self.options.clean_on_hide = originalCleanOnHideValue;\n      self.show();\n      privacyModal.close();\n    };\n    privacyModal.bind('hide', onClose);\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BaseDialog = require('../../views/base_dialog/view');\nvar ViewFactory = require('../../view_factory');\nvar randomQuote = require('../../view_helpers/random_quote');\nvar moment = (typeof window !== \"undefined\" ? window['moment'] : typeof global !== \"undefined\" ? global['moment'] : null);\n\nmodule.exports = BaseDialog.extend({\n\n  _FORMAT: 'png',\n\n  events: BaseDialog.extendEvents({\n    'click .js-format': '_onClickFormat',\n    'keyup .js-textInput': '_onKeyUp',\n    'focus .js-textInput': '_onFocus',\n    'blur .js-textInput': '_onBlur'\n  }),\n\n  initialize: function() {\n    this.elder('initialize');\n\n    this.options = _.defaults(this.options, { format: this._FORMAT });\n    this.model = new cdb.core.Model(this.options);\n    this.mapView = this.options.mapView;\n    this._initBinds();\n  },\n\n  render_content: function() {\n    return this.getTemplate('common/dialogs/static_image/advanced_export_view')(this.model.attributes);\n  },\n\n  _initBinds: function() {\n    this.model.on('change:format', this._onChangeFormat, this);\n  },\n\n  _onKeyUp: function(e) {\n    var value = +$(e.target).val();\n    $(e.target).parent().toggleClass('has-error', !(_.isNumber(value) && value > 10));\n  },\n\n  _onFocus: function(e) {\n    $(e.target).parent().addClass('is-focused');\n  },\n\n  _onBlur: function(e) {\n    $(e.target).parent().removeClass('is-focused');\n  },\n\n  _onChangeFormat: function() {\n    this.$('.js-radioButton').removeClass('is-checked');\n    this.$('.js-' + this.model.get('format')).addClass('is-checked');\n  },\n\n  _onClickFormat: function(e) {\n    this.killEvent(e);\n    var $el = $(e.target).closest('.js-format');\n    this.model.set('format', $el.data('format'));\n  },\n\n  _getBounds: function() {\n    var nw = this.mapView.pixelToLatLon([this.options.x + this.options.width, this.options.y]);\n    var sw = this.mapView.pixelToLatLon([this.options.x, this.options.y + this.options.height]);\n    return [[sw.lat, sw.lng], [nw.lat, nw.lng]];\n  },\n\n  _ok: function() {\n    var width = +this.$('.js-width').val();\n    var height = +this.$('.js-height').val();\n    var format = this.model.get('format');\n    var bounds = this._getBounds();\n\n    this.trigger('generate_image', { width: width, height: height, bounds: bounds, format: format });\n    this.close();\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BaseDialog = require('../../views/base_dialog/view');\nvar ViewFactory = require('../../view_factory');\nvar randomQuote = require('../../view_helpers/random_quote');\nvar moment = (typeof window !== \"undefined\" ? window['moment'] : typeof global !== \"undefined\" ? global['moment'] : null);\n\nmodule.exports = BaseDialog.extend({\n\n  events: BaseDialog.extendEvents({\n    'click .js-input': '_onInputClick',\n    'click .js-open-image': 'close'\n  }),\n\n  initialize: function() {\n    this.elder('initialize');\n    this._initViews();\n    this._initBinds();\n  },\n\n  render_content: function() {\n    return this._panes.getActivePane().render().el;\n  },\n\n  _initViews: function() {\n    this.vis = this.options.vis;\n    this.user = this.options.user;\n    this.column = this.options.column;\n\n    this._panes = new cdb.ui.common.TabPane({\n      el: this.el\n    });\n\n    this.addView(this._panes);\n\n    this._panes.addTab('loading',\n      ViewFactory.createByTemplate('common/templates/loading', {\n        title: 'Generating image',\n        quote: randomQuote()\n      })\n    );\n    this._panes.addTab('fail',\n      ViewFactory.createByTemplate('common/templates/fail', {\n        msg: 'Could not generate image'\n      })\n    );\n\n    this._panes.active('loading');\n  },\n\n  loadURL: function(url) {\n    this._showResult({ displayedLink: url, filename: url, content: url, type: 'url' });\n  },\n\n  _generateImageFilename: function() {\n    var filename = (this.vis.get('name') + ' by ' + this.user.nameOrUsername() + ' ' + moment(new Date()).format('MM DD YYYY hh mm ss'));\n    return filename.replace(/ /g, '_').toLowerCase();\n  },\n\n  generateImage: function(url) {\n    var callback = function(url) {\n      var filename = this._generateImageFilename();\n      this._showResult({\n        content: url,\n        type: 'url',\n        displayedLink: filename + '.' + this.options.format,\n        filename: filename\n      });\n    };\n\n    if (cdb.config.get('static_image_upload_endpoint')) {\n      callback = this._exportImage;\n    }\n\n    this._loadMapImage(url, callback.bind(this));\n  },\n\n  _showResult: function(options) {\n    this._panes.addTab('result',\n      ViewFactory.createByTemplate('common/dialogs/static_image/export_image_result_view', {\n        column: this.column,\n        response: options\n      })\n    );\n    this._panes.active('result');\n    this.trigger('finish', this);\n  },\n\n  _initBinds: function() {\n    this._panes.bind('tabEnabled', this.render, this);\n  },\n\n  /* Load first the map image and then merge with the overlays rendered frontend side */\n  _loadMapImage: function(url, callback) {\n    var self = this;\n    var mapImage = new Image();\n    mapImage.crossOrigin = 'Anonymous';\n    mapImage.onload = function() {\n      self._mergeAnnotations(mapImage, callback);\n    };\n    mapImage.src = url;\n  },\n\n  _exportImage: function(base64Image) {\n    var self = this;\n    var vis = this.options.vis;\n    // in case a image uploading endpoint is set post the image url there\n    // and show the html payload to the user\n    $.ajax({\n      type: 'POST',\n      url: cdb.config.get('static_image_upload_endpoint'),\n      data: {\n        base64image: base64Image,\n        name: vis.get('name'),\n        visualization_uuid: vis.get('id'),\n        description: vis.get('description')\n      },\n      success: function(content) {\n        self._showResult({ content: content, type: 'html' });\n      },\n      error: function(error) {\n        cdb.editor.ViewFactory.createDialogByTemplate('common/templates/fail', { msg: error.errors })\n        .render().appendToBody();\n      }\n    });\n  },\n\n  _mergeAnnotations: function(mapImage, callback) {\n    var x = this.options.x;\n    var y = this.options.y;\n    var width = this.options.width;\n    var height = this.options.height;\n    var format = this.options.format;\n\n    if (format === 'jpg') {\n      format = 'jpeg';\n    }\n\n    var imageProxyURL = cdb.config.get('url_prefix') + '/api/v1/image_proxy';\n\n    html2canvas($('.cartodb-map')[0], {\n      allowTaint: false, // don't allow non cors images taint the canvas\n      taintTest: true,\n      // useCORS: true,\n      proxy: {\n        url: imageProxyURL,\n        api_key: this.options.user.get('api_key')\n      },\n      background: undefined, // for transparent\n      // this function is called from html2canvas before the screenshot is taken\n      // first parameter is a clone of the current DOM\n      onclone: function(clonedDom) {\n        var doc = $(clonedDom);\n        // remove all the elements but annontations, text and image\n        // if other elements are present it's likely you get a tainted canvas because\n        // images not loaded with cors enabled\n        doc.find('.cartodb-map > div:not(.annotation, .text, .image, .ExportImageView)').remove();\n        doc.find('.ExportImageView').addClass('is-exportable');\n        // default background color for leaflet is gray, set to transparent so the image\n        // can be rendered on top of map image\n        doc.find('.cartodb-map').css('background-color', 'transparent');\n        return true;\n      },\n      onrendered: function(overlaysCanvas) {\n        var finalCanvas = document.createElement('canvas');\n        finalCanvas.width = width;\n        finalCanvas.height = height;\n        var ctx = finalCanvas.getContext('2d');\n        // map image alread has the final image size so render from the top,left\n        ctx.drawImage(mapImage, 0, 0);\n        // overlay canvas renders the full map size so crop it\n        ctx.drawImage(overlaysCanvas, x, y, width, height, 0, 0, width, height);\n        callback(finalCanvas.toDataURL('image/' + format));\n      }\n    });\n  },\n\n  ok: function() {\n    this.close();\n  },\n\n  _onInputClick: function(e) {\n    $(e.target).focus().select();\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * Sync interval\n */\nmodule.exports = cdb.core.View.extend({\n\n  tagName: \"li\",\n\n  className: \"DatasetSelected-syncOptionsItem\",\n\n  events: {\n    \"click\": \"_onClick\"\n  },\n\n  initialize: function() {\n    this._setupModel();\n    this._template = cdb.templates.getTemplate('common/dialogs/sync_dataset/interval_template');\n    this._initBinds();\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this.$el.html(this._template(this.model.attributes));\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:checked', this._onToggleChecked, this);\n  },\n\n  _setupModel: function() {\n    this.model = this.options.model;\n  },\n\n  _onClick: function(e) {\n    this.killEvent(e);\n\n    if (!this.model.get(\"disabled\")) {\n      this.model.set(\"checked\", true);\n      this.trigger(\"checked\", this.model, this);\n    }\n  },\n\n  _onToggleChecked: function() {\n    if (this.model.get(\"checked\")) {\n      this.$(\".js-interval\").addClass(\"is-checked\");\n      this.$(\".js-input\").addClass(\"is-checked\");\n    } else {\n      this.$(\".js-interval\").removeClass(\"is-checked\");\n      this.$(\".js-input\").removeClass(\"is-checked\");\n    }\n  }\n});\n","var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar Backbone = (typeof window !== \"undefined\" ? window['Backbone'] : typeof global !== \"undefined\" ? global['Backbone'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BaseDialog = require('../../views/base_dialog/view');\nvar IntervalView = require('./interval_view');\nvar randomQuote = require('../../view_helpers/random_quote');\n\n/**\n * Sync modal\n */\nmodule.exports = BaseDialog.extend({\n\n  _INTERVALS: [\n    { name: 'Every hour', time: 60 * 60, type: 'hourly', if_external_source: false },\n    { name: 'Every day', time: 60 * 60 * 24, type: 'daily', if_external_source: false },\n    { name: 'Every week', time: 60 * 60 * 24 * 7, type: 'weekly', if_external_source: false },\n    { name: 'Every month', time: 60 * 60 * 24 * 30, type: 'monthly', if_external_source: true },\n    { name: 'Never', time: 0, type: 'never', if_external_source: true }\n  ],\n\n  initialize: function() {\n    if (!this.options.table) {\n      throw new TypeError('table is required');\n    }\n    this.elder('initialize');\n\n    this.model = new cdb.core.Model({\n      option: 'interval',\n      state: 'prefetching',\n      wait: true // await ack before changing model\n    });\n    this.table = this.options.table;\n\n    this._initBinds();\n\n    // Prefetch\n    this.table.fetch({\n      success: this._onFetchedTable.bind(this),\n      error: this._setterForDefaultErrorState()\n    });\n  },\n\n  _initBinds: function() {\n    this.model.bind('change:state', this.render, this);\n  },\n\n  // implements cdb.ui.common.Dialog.prototype.render\n  render: function() {\n    this.clearSubViews();\n    BaseDialog.prototype.render.call(this);\n    this._initIntervals();\n    return this;\n  },\n\n  // implements cdb.ui.common.Dialog.prototype.render\n  render_content: function() {\n    switch (this.model.get('state')) {\n      case 'prefetching':\n        return this._renderLoading('Checking synchronization');\n      case 'error':\n        return this.getTemplate('common/templates/fail')({ msg: '' });\n      case 'saving':\n        return this._renderLoading('Saving…');\n      default:\n        return this.getTemplate('common/dialogs/sync_dataset/sync_dataset')({\n          service: this._serviceName(),\n          url: this._serviceURL()\n        });\n    }\n  },\n\n  _onFetchedTable: function() {\n    this.model.set({\n      state: 'idle',\n      interval: this.table.synchronization.get('interval')\n    });\n  },\n\n  _renderLoading: function(title) {\n    return this.getTemplate('common/templates/loading')({\n      title: title,\n      quote: randomQuote()\n    });\n  },\n\n  _serviceURL: function() {\n    // Does it come from a datasource service (Dropbox, GDrive, ...)?\n    if (this.table.synchronization.get('service_name') || this.table.synchronization.get('service_item_id')) {\n      return this.table.synchronization.get('service_item_id');\n    }\n    return this.table.synchronization.get('url');\n  },\n\n  _serviceName: function() {\n    var name = this.table.synchronization.get('service_name');\n    if (name && _.isString(name)) {\n      return cdb.Utils.capitalize(name);\n    }\n  },\n\n  _initIntervals: function() {\n    this._intervals = new Backbone.Collection();\n\n    var fromExternalSource = this.table.synchronization.from_external_source;\n\n    _.each(this._INTERVALS, function(interval) {\n      var disabled = fromExternalSource && !interval.if_external_source;\n\n      this._intervals.add({\n        name: interval.name,\n        interval: interval.time,\n        checked: this.table.synchronization.get(\"interval\") === interval.time,\n        disabled: disabled\n      });\n    }, this);\n\n    this._intervals.each(function(interval) {\n      var view = new IntervalView({ model: interval });\n      view.bind(\"checked\", this._onIntervalChecked, this);\n      this.$(\".js-intervals\").append(view.render().$el);\n      this.addView(view);\n    }, this);\n  },\n\n  _onIntervalChecked: function(interval) {\n    this._intervals.each(function(i) {\n      if (interval.get(\"interval\") !== i.get(\"interval\")) {\n        i.set(\"checked\", false);\n      }\n    }, this);\n  },\n\n  _getSelectedInterval: function() {\n    return this._intervals.find(function(interval) {\n      return interval.get(\"checked\")\n    });\n  },\n\n  _addTab: function(name, view) {\n    this._contentPane.addTab(name, view.render());\n    this.addView(view);\n  },\n\n  ok: function() {\n    var selectedInterval = this._getSelectedInterval();\n\n    if (selectedInterval) {\n      this.model.set('state', 'saving');\n      var callbacks = {\n        success: this.close.bind(this),\n        error: this._setterForDefaultErrorState()\n      };\n\n      var interval = selectedInterval.get('interval');\n      if (interval) {\n        this.table.synchronization.save({\n          interval: interval\n        }, callbacks);\n      } else {\n        this.table.synchronization.destroy(callbacks);\n      }\n    } else {\n      this.close();\n    }\n  },\n\n  _setterForDefaultErrorState: function() {\n    return this.model.set.bind(this.model, 'state', 'error');\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar EditFieldView = require('../edit_field_view');\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\n/**\n *  Boolean field\n *  \n *  Choosing between true, false or null\n *\n *  new BooleanFieldView({\n *    model: new EditFieldModel({ attribute: 'column', value: 'paco' }),\n *    option: false\n *  })\n */\n\nmodule.exports = EditFieldView.extend({\n\n  options: {\n    template: 'common/edit_fields/boolean_field/boolean_field'\n  },\n\n  events: {\n    'click .js-true': '_onTrueClick',\n    'click .js-false': '_onFalseClick',\n    'click .js-null': '_onNullClick'\n  },\n\n  _initBinds: function() {\n    this.model.bind('change', this.render, this);\n  },\n\n  _onTrueClick: function() {\n    this.model.set('value', true);\n  },\n\n  _onFalseClick: function() {\n    this.model.set('value', false);\n  },\n\n  _onNullClick: function() {\n    this.model.set('value', null);\n  }\n\n})\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar EditFieldView = require('../edit_field_view');\nvar DatePickerView = require('./date_picker/date_picker_view');\nvar TimeInputView = require('./time_input/time_input_view');\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\n/**\n *  Date field\n *  \n *  Place to change a date value\n *\n *  new DateFieldView({\n *    model: new EditFieldModel({ type: 'date', attribute: 'column', value: 'paco' }),\n *    option: false\n *  })\n */\n\nmodule.exports = EditFieldView.extend({\n\n  className: 'EditField EditField--withBorder EditField--withSeparator',\n\n  options: {\n    showTime: true,\n    showGMT: false,\n    timezone: 'Z' // In PostgreSQL 'Z' is the same as +00:00\n  },\n\n  render: function() {\n    this.clearSubViews();\n    this._initViews();\n    return this;\n  },\n\n  _initViews: function() {\n    // Date picker\n    this.datePicker = new DatePickerView({\n      model: this.model\n    });\n\n    this.datePicker.bind('onDateChange', this._setDate, this);\n    this.$el.append(this.datePicker.render().el);\n    this.addView(this.datePicker);\n     \n    // Time input\n    if (this.options.showTime) {\n      this.timeInput = new TimeInputView({\n        model: this.model\n      });\n\n      this.$el.append(this.timeInput.render().el);\n      this.timeInput.bind('onTimeChange', this._setTime, this);\n      this.timeInput.bind('onSubmit', function() {\n        this.trigger('onSubmit', this.model, this);\n      }, this);\n      this.addView(this.timeInput);\n    }\n  },\n\n  _setTime: function(time) {\n    var oldDate = moment(this.model.get('value'));\n    var newDate = moment(new Date());\n    var date;\n\n    if (oldDate.isValid()) {\n      oldDate\n        .hour(newDate.hour())\n        .minutes(newDate.minutes())\n        .seconds(newDate.seconds());\n      date = oldDate.format('YYYY-MM-DDT');\n    } else {\n      date = newDate.format('YYYY-MM-DDT');\n    }\n\n    this.model.set('value', date + time + this.options.timezone);\n  },\n\n  _setDate: function(date) {\n    var oldDate = moment(this.model.get('value'));\n    var newDate = moment(date);\n    var dateStr;\n\n    if (oldDate.isValid()) {\n      oldDate\n        .month(newDate.month())\n        .date(newDate.date())\n        .year(newDate.year());\n      dateStr = oldDate.format('YYYY-MM-DDTHH:mm:ss');\n    } else {\n      dateStr = newDate.format('YYYY-MM-DDTHH:mm:ss');\n    }\n\n    this.model.set('value', dateStr + this.options.timezone);\n  }\n\n})\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar moment = (typeof window !== \"undefined\" ? window['moment'] : typeof global !== \"undefined\" ? global['moment'] : null);\n\n/**\n * Dropdown for a calendar selector.\n * Uses the DatePicker plugin internally to render the calendar and view behaviour.\n */\n\nmodule.exports = cdb.admin.DropdownMenu.extend({\n\n  className: 'Dropdown',\n\n  // defaults, used for\n  options: {\n    flat: true,\n    date: '2008-07-01',\n    current: '2008-07-31',\n    calendars: 1,\n    starts: 1\n  },\n\n  initialize: function() {\n    if (!this.model) throw new Error('model is required');\n    this.elder('initialize');\n    this.template = cdb.templates.getTemplate('common/edit_fields/date_field/date_picker/calendar_dropdown');\n    this._initDefaults();\n  },\n\n  render: function() {\n    this.$el.html(\n      this.template({\n        initialDateStr: moment(this.model.get('value')).format('YYYY-MM-DD')\n      })\n    );\n\n    cdb.god.bind('closeDialogs', this.hide, this);\n    $('body').append(this.el);\n    this._initCalendar(); // must be called after element is added to body!\n\n    return this;\n  },\n\n  clean: function() {\n    this._$calendar().DatePickerHide();\n    cdb.admin.DropdownMenu.prototype.clean.call(this);\n  },\n\n  _initDefaults: function() {\n    var utc = new Date().getTimezoneOffset();\n    var today = moment(new Date()).utcOffset(utc).format('YYYY-MM-DD');\n    this.options.date = this.model.get('value') && moment(this.model.get('value')).format('YYYY-MM-DD') || today;\n    this.options.current = this.options.date;\n  },\n\n  // should not be called until element is located in document\n  _initCalendar: function() {\n    var self = this;\n    this._$calendar().DatePicker(\n      _.extend(this.options, this.model.attributes, {\n        onChange: function(formatted, date) {\n          self.trigger('onDateSelected', date, this);\n          self.hide();\n        }\n      })\n    );\n  },\n\n  _$calendar: function() {\n    return this.$('.js-calendar');\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar moment = (typeof window !== \"undefined\" ? window['moment'] : typeof global !== \"undefined\" ? global['moment'] : null);\nvar CalendarDropdown = require('./calendar_dropdown_view.js');\n\n/**\n * Date picker for a single date.\n */\nmodule.exports = cdb.admin.DropdownMenu.extend({\n\n  className: 'DatePicker',\n\n  events: {\n    'click .js-date-picker': '_onClickDateBtn'\n  },\n\n  options: {\n    vertical_position: 'down',\n    tick: 'center',\n    dateFormat: 'YYYY-MM-DD'\n  },\n\n  initialize: function() {\n    this.elder('initialize');\n    this._initBinds();\n  },\n\n  render: function() {\n    var date = this.model.get('value') || new Date();\n\n    this.$el.html(\n      cdb.templates.getTemplate('common/edit_fields/date_field/date_picker/date_picker')({\n        readOnly: this.model.get('readOnly'),\n        date: moment(date).format(this.options.dateFormat)\n      })\n    );\n\n    if (this.model.get('readOnly')) {\n      this.undelegateEvents();\n    }\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('change', this.render, this);\n  },\n\n  _onClickDateBtn: function(ev) {\n    this.killEvent(ev);\n\n    // Behave like a toggle\n    if (this._calendar) {\n      this._destroyCalendarDropdown();\n    } else {\n      this._calendar = new CalendarDropdown(\n        _.extend(this.options, {\n          target: $(ev.target).closest('button'),\n          model: this.model\n        })\n      );\n      this.addView(this._calendar);\n      this._calendar.render();\n      this._calendar.on('onDropdownHidden', this._destroyCalendarDropdown, this);\n      this._calendar.on('onDateSelected', function(date) {\n        this.trigger('onDateChange', date, this);\n      }, this);\n      this._calendar.open();\n    }\n  },\n\n  _destroyCalendarDropdown: function() {\n    this._calendar.options.target.unbind('click', this._calendar._handleClick);\n    this._calendar.clean();\n    this._calendar = null;\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n\n/**\n *  Time input for date field\n *  \n *  Place to change hours, minutes and seconds\n *  for the date field.\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'TimeInput',\n\n  events: {\n    'keydown .js-input': '_onKeyDown',\n    'keyup .js-input': '_onKeyUp'\n  },\n\n  initialize: function() {\n    this.template = cdb.templates.getTemplate('common/edit_fields/date_field/time_input/time_input');\n  },\n\n  render: function() {\n    var date = this.model.get('value') || new Date();\n    this.$el.html(\n      this.template({\n        readOnly: this.model.get('readOnly'),\n        time: moment(date).format('HH:mm:ss')\n      })\n    )\n\n    if (this.model.get('readOnly')) {\n      this.undelegateEvents();\n    }\n\n    return this;\n  },\n\n  _onKeyDown: function(ev) {\n    if (ev.keyCode === 13) {\n      ev.preventDefault();\n      this.trigger('onSubmit', this);\n      return false;\n    }\n  },\n\n  _onKeyUp: function(ev) {\n    var value = $(ev.target).val();\n    this.trigger('onTimeChange', value, this);\n  }\n\n})\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar moment = (typeof window !== \"undefined\" ? window['moment'] : typeof global !== \"undefined\" ? global['moment'] : null);\n\n/**\n *  Default model for each field model\n *\n */\n\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    attribute: '',\n    value: '',\n    type: 'string',\n    readOnly: false\n  },\n\n  initialize: function() {\n    // Validation control variable\n    this.validationError = '';\n    this.bind('valid', function() {\n      this.validationError = '';\n    }, this);\n    this.bind('error', function(m, error) {\n      this.validationError = error;\n    });\n  },\n\n  _validate: function(attrs, options) {\n    var valid = cdb.core.Model.prototype._validate.apply(this, arguments);\n    if (valid) {\n      this.trigger('valid')\n      return true;\n    } else {\n      return false;\n    }\n  },\n\n  validate: function(attrs) {\n    if (!attrs) return;\n\n    var val = attrs.value;\n    var type = attrs.type;\n\n    if (attrs.type === \"number\") {\n      var pattern = /^(\\+|-)?(?:[0-9]+|[0-9]*\\.[0-9]+)$/;\n      if (val && !pattern.test(val)) {\n        return \"Invalid number\"\n      }  \n    }\n\n    if (type === \"boolean\") {\n      if (val !== null && val !== true && val !== false) {\n        return \"Invalid boolean\"\n      }\n    }\n\n    if (type === \"date\") {\n      if (val && !moment(val).isValid()) {\n        return \"Invalid date\"\n      }\n    }\n  },\n\n  getError: function() {\n    return this.validationError;\n  },\n\n  isValid: function() {\n    if (!this.validate) {\n      return true;\n    }\n    return !this.validate(this.attributes) && this.validationError === \"\";\n  }\n\n})\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n *  Common edit field view\n *  \n */\n\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'EditField',\n\n  options: {\n    template: 'common/edit_fields/edit_field',\n  },\n\n  initialize: function() {\n    if (!this.model) {\n      this.model = new cdb.core.Model({ value: '' });\n    }\n    if (this.options.template) {\n      this.template = cdb.templates.getTemplate(this.options.template);  \n    }\n    this._initBinds();\n  },\n\n  render: function() {\n    this.$el.html(\n      this.template(\n        _.extend(\n          this.options,\n          {\n            type: this.model.get('type'),\n            value: this.model.get('value'),\n            attribute: this.model.get('attribute'),\n            readOnly: this.model.get('readOnly')    \n          }\n        )\n      )\n    );\n\n    if (this.model.get('readOnly')) {\n      this.undelegateEvents();\n    }\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.model.bind('error valid', this._setFieldStyle, this);\n    this.model.bind('change:readOnly', this.render, this);\n  },\n\n  _setFieldStyle: function() {\n    this.$el[ this.model.getError() ? 'addClass' : 'removeClass']('is-invalid');\n  },\n\n  _hasSubmit: function(ev) {\n    if (!ev) {\n      throw new Error('event needed to check if user has submitted from the input');\n    }\n\n    var ua = navigator.userAgent.toLowerCase();\n    var isMac = /mac os/.test(ua);\n\n    return ( (isMac && ev.metaKey) || (!isMac && ev.ctrlKey) ) && ev.keyCode === 13;\n  },\n\n  isValid: function() {\n    return this.model.isValid();\n  }\n\n});","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar EditFieldView = require('../edit_field_view');\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\n/**\n *  Number field\n *  \n *  Place to add/edit number editions\n *  - It accepts a number model with {attribute: 'colum', value: 'hello'}.\n *\n *  new NumberFieldView({\n *    model: new NumberFieldModel({ attribute: 'column', value: 'paco' }),\n *    option: false\n *  })\n */\n\nmodule.exports = EditFieldView.extend({\n\n  options: {\n    template: 'common/edit_fields/number_field/number_field'\n  },\n\n  events: {\n    'keydown .js-input': '_onKeyDown',\n    'keyup .js-input': '_onKeyUp'\n  },\n\n  _hasSubmit: function(ev) {\n    if (!ev) {\n      throw new Error('event needed to check if user has submitted from the input');\n    }\n    return ev.keyCode === 13\n  },\n\n  _onKeyDown: function(ev) {\n    if (this._hasSubmit(ev) && this.model.isValid()) {\n      ev.preventDefault();\n      this.trigger('onSubmit', this.model, this);\n      return false;\n    }\n  },\n\n  _onKeyUp: function(ev) {\n    if (this._hasSubmit(ev) && this.model.isValid()) {\n      ev.preventDefault();\n      return false;\n    }\n\n    var value = $(ev.target).val();\n    // Null values are valid for number type\n    if (value === \"\") {\n      value = null;\n    }\n    this.model.set('value', value);\n  }\n\n})\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar EditFieldView = require('../edit_field_view');\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\n/**\n *  String field\n *  \n *  Place to edit and capture string editions\n *  - It accepts a default model with {attribute: 'colum', value: 'hello'}.\n *\n *  new StringFieldView({\n *    model: new EditFieldModel({ attribute: 'column', value: 'paco' }),\n *    option: false\n *  })\n */\n\nmodule.exports = EditFieldView.extend({\n\n  options: {\n    template: 'common/edit_fields/string_field/string_field',\n    autoResize: true\n  },\n\n  events: {\n    'keydown .js-textarea': '_onKeyDown',\n    'keyup .js-textarea':  '_onKeyUp'\n  },\n\n  render: function() {\n    this.elder('render');\n\n    // Hack to resize correctly the textarea\n    if (this.options.autoResize) {\n      this._resize();\n    }\n\n    return this;\n  },\n\n  _onKeyDown: function(ev) {\n    if (this._hasSubmit(ev)) {\n      ev.preventDefault();\n      this.trigger('onSubmit', this.model, this);\n      return false;\n    }\n  },\n\n  _onKeyUp: function(ev) {\n    ev.preventDefault();\n    var value = $(ev.target).val();\n    this.model.set('value', value);\n\n    if (this.options.autoResize) {\n      this._resize();\n    }\n  },\n\n  // Hack function to resize automatially textarea\n  _resize: function() {\n    var $textarea = this.$(\".js-textarea\");\n\n    // Hello hacky boy\n    if ($textarea) {\n      setTimeout(function() {\n        $textarea.height(20);\n        $textarea.height($textarea[0].scrollHeight - 22);\n      });\n    }\n  }\n\n})\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\n/** \n *  Old form spinner\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n  className: 'form-view form_spinner',\n\n  defaults: {\n    max: 999999999999,\n    min: -999999999999,\n    inc: 1,\n    width: 25,\n    pattern: /^-?[0-9]+\\.?[0-9]*$/,\n    debounce_time: 200\n  },\n\n  events: {\n    'click .plus': '_plus',\n    'click .minus': '_minus',\n    'keypress input.value': '_checkInputPress',\n    'keydown input.value': '_checkInputPress',\n    'keyup input.value': '_checkInputUp',\n    'change .value': '_checkValueChange'\n  },\n\n  initialize: function() {\n    _.bindAll(this, '_fireChange', '_checkNumber');\n    this.property = this.options.property;\n    this.model.bind('change', this.render, this);\n\n    // Check pattern, if it is empty or not valid,\n    // delete the option before extending defaults\n    if (!this.options.pattern ||\n        typeof this.options.pattern !== \"object\" ||\n        (typeof this.options.pattern === \"object\" && !this.options.pattern.test)\n      )\n    {\n      delete this.options.pattern;\n    }\n\n    _.defaults(this.options, this.defaults);\n\n    if(this.options.debounce_time > 0) {\n      this._fireChange = _.debounce(this._fireChange, this.options.debounce_time);\n    }\n  },\n\n  render: function(prop) {\n    var value = this.options.initValue || this.model.get(this.property);\n\n    if (prop && _.isNumber(prop)) {\n      value = prop;\n    }\n\n    this.$el.html('<input class=\"value\" ' + (this.options.disabled ? 'readonly' : '') + ' value=\"\" style=\"width:' + (this.options.width) + 'px!important\"/><a href=\"#\" class=\"plus\">+</a><a href=\"#\" class=\"minus\">-</a>');\n    this.$('.value').val(value);\n\n    if (this.options.disabled) {\n      this.undelegateEvents();\n      this.$el\n      .addClass('disabled')\n      .find('a').bind('click', this.killEvent);\n    }\n\n    return this;\n  },\n\n  _fireChange: function() {\n    this.model.change();\n  },\n\n  _changeValue: function(a) {\n    this.model.set(a, { silent: true });\n    this._fireChange();\n  },\n\n  inc: function(c) {\n    var a = {};\n    var v = a[this.property] = this.model.get(this.property) + c;\n    v = a[this.property] = Math.min(this.options.max, v.toFixed? v.toFixed(1): 1*v);\n    a[this.property] = Math.max(this.options.min, v);\n    this._changeValue(a);\n    // don't wait to be notified by model, render as fast as the user changes the value\n    this.render(a[this.property]);\n  },\n\n  _plus: function(e) {\n    e && e.preventDefault();\n    this.inc(this.options.inc);\n    return false;\n  },\n\n  _minus: function(e) {\n    e && e.preventDefault();\n    this.inc(-this.options.inc);\n    return false;\n  },\n\n  _checkNumber: function(number) {\n    return this.options.pattern.test(number);\n  },\n\n  _checkInputPress: function(ev) {\n    var newChar = String.fromCharCode(ev.charCode);\n\n    if(newChar == '-' || newChar == '.' || 1*newChar !== NaN) {\n      return true;\n    } else {\n      ev.preventDefault();\n      ev.stopPropagation();\n      return false;\n    }\n  },\n\n  _checkInputUp: function(ev) {\n    this.value? null : this.value = this.model.get(this.property);\n    var number = $(ev.target).val();\n\n    // If it is an ENTER -> saves!\n    if (ev.keyCode === 13) {\n      this._saveValue(ev);\n      return false;\n    }\n\n    // If not, check the key\n    if (!this._checkNumber(number) && number != '-' && number != '') {\n      this.$el.find(\"input.value\").val(this.value);\n      // ev.stopPropagation();\n      // ev.preventDefault();\n    } else {\n      if(number != '-' && number != '') {\n        this.value = $(ev.target).val();\n      }\n    }\n    return true;\n  },\n\n  _checkValueChange: function(ev) {\n    var number = $(ev.target).val();\n    number = (number == '' || number == '-')? 0 : 1*number\n    if (!this._checkNumber(number)) {\n      this.$el.find(\"input.value\").val(this.value);\n    } else {\n      this._saveValue(ev);\n      this.value = $(ev.target).val();\n    }\n    return true;\n  },\n\n  _saveValue: function(ev) {\n    var a = {};\n    var val = this.$el.find(\"input.value\").val()\n    var baseNumber = (this.options.min < 0 && this.options.max > 0)?\n      0:\n      this.options.min;\n\n    var number = (val == '' || val == '-') ? baseNumber : 1*val;\n\n    this.$el.find(\"input.value\").val(number);\n\n    a[this.property] = number;\n    this.model.set(a);\n\n    cdb.god.trigger(\"closeDialogs\");\n  }\n\n});","var BaseDialog = require('../views/base_dialog/view');\n\n/**\n *  Dialog for drop actions using mamufas\n *\n */\n\n\nmodule.exports = BaseDialog.extend({\n\n  className: 'Dialog is-opening MamufasDialog',\n\n  overrideDefaults: {\n    template_name: 'common/views/base_dialog/template',\n    triggerDialogEvents: false\n  },\n\n  initialize: function() {\n    BaseDialog.prototype.initialize.apply(this, arguments);\n    this.template = cdb.templates.getTemplate('common/mamufas_import/mamufas_import_dialog');\n  },\n\n  render_content: function() {\n    return this.template();\n  },\n\n  render: function() {\n    this.elder('render');\n    this.$('.Dialog-content').addClass('Dialog-content--expanded');\n    return this;\n  },\n\n  hide: function() {\n    BaseDialog.prototype.hide.apply(this, arguments);\n    this.trigger('hide');\n    this._setBodyForDialogMode('remove')\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar MamufasDialog = require('./mamufas_import_dialog_view');\n\n/**\n *  Big mamufas to import files\n *  using drag and drop\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.model = new cdb.core.Model({ visible: false });\n  },\n\n  render: function() {\n    return this;\n  },\n\n  _createDragster: function() {\n    if (this.dragster) {\n      this._destroyDragster();\n    }\n    this.dragster = new Dragster(this.$el[0]);\n  },\n\n  _createDropzone: function() {\n    if (this.dropzone) {\n      this._destroyDropzone();\n    }\n    this.dropzone = new Dropzone(this.$el[0], {\n      url: ':)',\n      autoProcessQueue: false,\n      previewsContainer: false\n    });\n  },\n\n  _destroyDragster: function() {\n    if (this.dragster) {\n      this.dragster.removeListeners();\n      this.dragster.reset();\n      delete this.dragster;\n    }\n  },\n\n  _destroyDropzone: function() {\n    if (this.dropzone) {\n      this.dropzone.destroy();\n      delete this.dropzone;\n    }\n  },\n\n  _initBinds: function() {\n    var self = this;\n    var mamufas = new MamufasDialog({ clean_on_hide: true });\n\n    this.$el.on( \"dragster:enter\", function (e) {\n      mamufas.appendToBody();\n    });\n\n    this.$el.on( \"dragster:leave\", function (e) {\n      mamufas.hide();\n    });\n\n    this.dropzone.on(\"drop\", function (ev) {\n      self.dragster.dragleave(ev);\n      mamufas.hide();\n      self.dropzone.removeFile(ev);\n\n      var files = ev.dataTransfer.files;\n      if (files && files.length > 0) {\n        if (files.length === 1) { files = files[0] }\n        cdb.god.trigger('fileDropped', files, this);\n      }\n    });\n  },\n\n  _removeBinds: function() {\n    this.$el.off(\"dragster:enter\");\n    this.$el.off(\"dragster:leave\");\n  },\n\n  enable: function() {\n    if (!this.model.get('visible')) {\n      this._createDragster();\n      this._createDropzone();\n      this._initBinds();\n      this.model.set('visible', true);\n    }\n  },\n\n  disable: function() {\n    if (this.model.get('visible')) {\n      this._removeBinds();\n      this._destroyDragster();\n      this._destroyDropzone();\n      this.model.set('visible', false);\n    }\n  },\n\n  clean: function() {\n    this._removeBinds();\n    this.elder('clean');\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * Model representing the query string params for a \"paged search\" of a collection (matching the server-side APIs).\n *\n * @example usage\n *   var PagedSearch = require('common/paged_search_model');\n *   pagedSearch = new PagedSearch({ … })\n *   pagedSearch.fetch(collection) // => jqXHR, GET /collection/123?page=1&per_page20\n *   pagedSearch.set({ page: 2, per_page: 10, q: 'test' });\n *   pagedSearch.fetch(collection) // => GET /collection/123?page=2&per_page10&q=test\n */\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    per_page: 20,\n    page: 1\n    // order: 'name'\n    // q: '',\n  },\n\n  fetch: function(collection) {\n    collection.trigger('fetching');\n    return collection.fetch({\n      data: this.attributes\n    });\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n *  Get oauth url from the service requested\n *\n *  - It needs a datasource name or it won't work.\n *\n *  new cdb.admin.Service({ datasource_name: 'dropbox' })\n */\n\nmodule.exports = cdb.core.Model.extend({\n\n  _DATASOURCE_NAME: 'dropbox',\n\n  initialize: function(attrs, opts) {\n    if (opts.datasource_name) {\n      this._DATASOURCE_NAME = opts.datasource_name;\n    }\n  },\n\n  url: function(method) {\n    var version = cdb.config.urlVersion('imports_service', method);\n    return '/api/' + version + '/imports/service/' + this._DATASOURCE_NAME + '/auth_url'\n  },\n\n  parse: function(r) {\n    return r\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n *  Model to check if oAuth token is valid or not\n *\n *  - It needs a datasource name or it won't work.\n *\n *  new ServiceToken({ datasource_name: 'dropbox' })\n */\n\nmodule.exports = cdb.core.Model.extend({\n\n  _DATASOURCE_NAME: 'dropbox',\n\n  initialize: function(attrs, opts) {\n    if (opts.datasource_name) {\n      this._DATASOURCE_NAME = opts.datasource_name;\n    }\n  },\n\n  url: function(method) {\n    var version = cdb.config.urlVersion('imports_service', method);\n    return '/api/' + version + '/imports/service/' + this._DATASOURCE_NAME + '/token_valid'\n  },\n\n  parse: function(r) {\n    return r\n  }\n\n});\n","var _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar BaseDialog = require('./views/base_dialog/view');\n\n/**\n * Convenient factory to create views without having to create new files.\n */\nmodule.exports = {\n\n  createDialogByTemplate: function(templateOrStr, templateData, dialogOptions) {\n    return this.createDialogByView(this.createByTemplate(templateOrStr, templateData), dialogOptions);\n  },\n\n  /**\n   * @return {Object} instance of cdb.core.View, which takes two params of template and templateData\n   */\n  createByTemplate: function(templateOrStr, templateData, viewOpts) {\n    var template = _.isString(templateOrStr) ? cdb.templates.getTemplate(templateOrStr) : templateOrStr;\n\n    var view = new cdb.core.View(viewOpts);\n    view.render = function() {\n      this.$el.html(\n        template(templateData)\n      );\n      return this;\n    };\n\n    return view;\n  },\n\n  /**\n   * Creates a view that holds a list of views to be rendered.\n   * @param {Array} list of View object, i.e. have a render method, $el, and clean method.\n   * @param {Object,undefined} viewOpts view options, .e.g {className: 'Whatever'}\n   * @return {Object} A view\n   */\n  createByList: function(views, viewOpts) {\n    var listView = new cdb.core.View(viewOpts);\n    listView.render = function() {\n      this.clearSubViews();\n      _.each(views, function(view) {\n        this.addView(view);\n        this.$el.append(view.render().$el);\n      }, this);\n      return this;\n    };\n    return listView;\n  },\n\n  createDialogByView: function(contentView, dialogOptions) {\n\n    var options = _.extend({ clean_on_hide: true, enter_to_confirm: true }, dialogOptions);\n\n    return new (BaseDialog.extend({\n      initialize: function() {\n        this.elder('initialize');\n        this.addView(contentView);\n      },\n\n      render_content: function() {\n        return contentView.render().el;\n      }\n    }))(options);\n  }\n};\n","var $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\n/**\n * Check if Linux user used right/middle click at the time of the event\n *\n * @param ev {Event}\n * @returns {boolean}\n */\nfunction isLinuxMiddleOrRightClick(ev) {\n  return ev.which === 2 || ev.which === 3;\n}\n\n/**\n * Check if Mac user used CMD key at the time of the event Mac user used CMD key at the time of the event.\n *\n * @param ev {Event}\n * @returns {boolean}\n */\nfunction isMacCmdKeyPressed(ev) {\n  return ev.metaKey;\n}\n\nfunction isCtrlKeyPressed(ev) {\n  return ev.ctrlKey;\n}\n\n/**\n * Click handler for a cartodb.js view, to navigate event target's href URL through the view's router.navigate method.\n *\n * The default behavior is:\n * Unless cmd/ctrl keys are pressed it will cancel the default link behavior and instead navigate to the URL set in the\n * target's href attribute.\n *\n * Prerequisities:\n *  - view has a this.router instance.\n *\n * Example of how to use:\n *   - In a template:\n *     <a href=\"/some/uri\" id=\"#my-link\" ...\n *     <a href=\"/special/uri\" id=\"#my-special-link\" ...\n *\n *   - In the view file:\n *     var navigateThroughRouter = require('../../common/view_helpers/navigateThroughRouter');\n *     module.exports = new cdb.core.View.extend({\n *       events: {\n *         'click a#my-link': navigateThroughRouter\n *         'click a#my-special-link': this._myCustomRoute\n *       }\n *\n *       _myCustomRoute: function(ev) {\n *         // Here you can do you custom logic before/after the routing, e.g.:\n *         console.log('before changing route');\n *         navigateThroughRouter.apply(this, arguments);\n *         console.log('after changing route');\n *       }\n *\n * @param ev {Event}\n */\nmodule.exports = function(ev) {\n  // We always kill the default behaviour of the event, since container around view might have other click behavior.\n  // In case of a cmd/ctrl click by an user.\n  this.killEvent(ev);\n  var url = $(ev.target).closest('a').attr('href');\n\n  if (!url) {\n    return false;\n  }\n\n  if (!isLinuxMiddleOrRightClick(ev) && !isMacCmdKeyPressed(ev)) {\n    (this.router || this.options.router).navigate(url, { trigger: true });\n  } else if (isCtrlKeyPressed(ev) || isMacCmdKeyPressed(ev)) {\n    window.open(url, '_blank');\n  }\n};\n","var pluralizeStr = function(singular, plural, count) {\n  if (arguments.length === 2) {\n    // Backward compability with prev usages, retrofit to the new params signature\n    // pluralizeStr('foobar' , 3) // => foobars\n    return pluralizeStr.call(this, arguments[0], arguments[0] + 's', arguments[1]);\n  }\n\n  return count === 1 ? singular : plural;\n};\n\npluralizeStr.prefixWithCount = function(singular, plural, count) {\n  return pluralizeStr(\n    '1 ' + singular, // e.g. 1 item\n    count + ' ' + plural, // e.g. 123 items\n    count\n  );\n}\n\nmodule.exports = pluralizeStr;\n","/**\n * Random quote\n */\nmodule.exports = function() {\n\n  var template  = _.template('<p class=\"CDB-Text CDB-Size-medium u-altTextColor\">\"<%= quote %>\"</p><% if (author) { %><p class=\"CDB-Text CDB-Size-medium u-altTextColor u-tSpace\"><em>– <%- author %></em></p><% } %>');\n\n  var quotes = [\n    { quote: \"Geographers never get lost. They just do accidental field work.\", author: \"Nicholas Chrisman\" },\n    { quote: \"Geography is just physics slowed down, with a couple of trees stuck in it.\", author: \"Terry Pratchett\" },\n    { quote: \"Not all those who wander are lost.\", author: \"J. R. R. Tolkien\" },\n    { quote: \"In that Empire, the Art of Cartography attained such Perfection that the map of a single Province occupied the entirety of a City.\", author: \"Jorge Luis Borges\" },\n    { quote: \"X marks the spot\", author: \"Indiana Jones\" },\n    { quote: \"It's turtles all the way down.\", author: null },\n    { quote: \"Remember: no matter where you go, there you are.\", author: null },\n    { quote: \"Without geography, you're nowhere!\", author: \"Jimmy Buffett\" },\n    { quote: \"our earth is a globe / whose surface we probe /<br />no map can replace her / but just try to trace her\", author: \"Steve Waterman\" },\n    { quote: \"Everything happens somewhere.\", author: \"Doctor Who\" },\n    { quote: \"A map is the greatest of all epic poems. Its lines and colors show the realization of great dreams.\", author: \"Gilbert H. Grosvenor\" },\n    { quote: \"Everything is related to everything else,<br />but near things are more related than distant things.\", author: \"Tobler's first law of geography\" },\n    { quote: \"Hic Sunt Dracones\", author: null },\n    { quote: \"Here be dragons\", author: null },\n    { quote: \"Stand in the place where you live / Now face North /<br/>Think about direction / Wonder why you haven't before\", author: \"R.E.M\" },\n    { quote: \"The virtue of maps, they show what can be done with limited space, they foresee that everything can happen therein.\", author: \"José Saramago\" }\n  ];\n\n  var r = Math.round(Math.random() * (quotes.length - 1));\n\n  return template(quotes[r]);\n};\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\nvar BaseDialog = cdb.ui.common.Dialog;\n\n/**\n * Abstract view for a dialog, a kind of view that takes up the full screen overlaying any previous content.\n *\n * To be extended for a specific use-case.\n * It inherits from CartoDB.js' Dialog view so has some particular behavior/convention of how to be used, see example\n *\n * Example of how to use:\n *   // Extend this view\n *   var MyDialog = BaseDialog.extend({\n *     render_content: function() {\n *       return 'Hello world!';\n *     }\n *   });\n *\n *   // Create instance object.\n *   var dialog = new MyDialog();\n *\n *   // To render & show initially (only to be called once):\n *   dialog.appendToBody();\n */\nmodule.exports = BaseDialog.extend({\n\n  className: 'Dialog is-opening',\n\n  overrideDefaults: {\n    template_name: 'common/views/base_dialog/template',\n    triggerDialogEvents: true\n  },\n\n  initialize: function() {\n    // Override defaults of parent\n    _.defaults(this.options, this.overrideDefaults);\n    this.elder('initialize');\n    this.bind('show', this._setBodyForDialogMode.bind(this, 'add'));\n    this.bind('hide', this._setBodyForDialogMode.bind(this, 'remove'));\n  },\n\n  show: function() {\n    BaseDialog.prototype.show.apply(this, arguments);\n    this.trigger('show');\n    if (this.options.triggerDialogEvents) {\n      cdb.god.trigger('dialogOpened');\n    }\n    this.$el.removeClass('is-closing');\n\n    // Blur current element (e.g. a <a> tag that was clicked to open this window)\n    if (document.activeElement) {\n      document.activeElement.blur();\n    }\n  },\n\n  render: function() {\n    BaseDialog.prototype.render.apply(this, arguments);\n    this.$('.content').addClass('is-newContent');\n\n    if (this._isSticky()) {\n      this.$el.addClass('is-sticky');\n    }\n\n    this.show();\n    return this;\n  },\n\n  _isSticky: function() {\n    return this.options && this.options.sticky;\n  },\n\n  close: function() {\n    this._cancel(undefined, true);\n  },\n\n  /**\n   * @override cdb.ui.common.Dialog.prototype.open for animated opening\n   */\n  open: function() {\n    BaseDialog.prototype.open.apply(this, arguments);\n    this.show();\n  },\n\n  /**\n   * @override cdb.ui.common.Dialog.prototype.hide to implement animation\n   */\n  hide: function() {\n    BaseDialog.prototype.hide.apply(this, arguments);\n    this.trigger('hide');\n  },\n\n  /**\n   * @override cdb.ui.common.Dialog.prototype._cancel to implement animation upon closing the dialog and to handle hide event.\n   */\n  _cancel: function(ev, skipCancelCallback) {\n    if (ev) this.killEvent(ev);\n\n    if (this._isSticky()) {\n      return;\n    }\n\n    this.$el.removeClass('is-opening').addClass('is-closing');\n\n    // Use timeout instead of event listener on animation since the event triggered differs depending on browser\n    // Timing won't perhaps be 100% accurate but it's good enough\n    // The timeout should match the .Dialog.is-closing animation duration.\n    var self = this;\n    setTimeout(function() {\n      // from original _cancel\n      if (self.cancel && !skipCancelCallback) {\n        self.cancel();\n      }\n      BaseDialog.prototype.hide.call(self);\n    }, 80); //ms\n\n    // Trigger events immediately, don't wait for the timeout above\n    this.trigger('hide');\n    if (this.options.triggerDialogEvents) {\n      cdb.god.trigger('dialogClosed');\n    }\n  },\n\n  /**\n   * @override cdb.ui.common.Dialog.prototype._ok to not hide dialog by default if there's an ok method defined.\n   */\n  _ok: function(ev) {\n    this.killEvent(ev);\n    if (this.ok) {\n      this.ok();\n    } else {\n      this.close();\n    }\n  },\n\n  _setBodyForDialogMode: function(action) {\n    $('body')[action + 'Class']('is-inDialog');\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar moment = (typeof window !== \"undefined\" ? window['moment'] : typeof global !== \"undefined\" ? global['moment'] : null);\nvar Spinner = require('../../forms/spinner');\n\n/**\n * Custom picer for a dates range.\n */\nmodule.exports = cdb.core.View.extend({\n\n  _MAX_RANGE: 30,\n\n  className: 'DatePicker',\n\n  options: {\n    flat: true,\n    date: ['2008-07-31', '2008-07-31'],\n    current: '2008-07-31',\n    calendars: 2,\n    mode: 'range',\n    starts: 1\n  },\n\n  events: {\n    'click .js-dates': '_toggleCalendar',\n    'click .js-fourHours': '_setLastFourHours',\n    'click .js-oneDay': '_setLastDay',\n    'click .js-oneWeek': '_setLastWeek'\n  },\n\n  initialize: function() {\n    // Generate model\n    this.model = new cdb.core.Model({\n      fromDate: '',\n      fromHour: 0,\n      fromMin:  0,\n      toDate: '',\n      toHour: 23,\n      toMin:  59,\n      user_timezone: 0 // Explained as GMT+0\n    });\n\n    this.template = this.options.template || cdb.templates.getTemplate('common/views/date_pickers/dates_range');\n\n    // Init binds\n    this._initBinds();\n\n    // Set default dates\n    this._setToday();\n  },\n\n  render: function() {\n    var self = this;\n\n    this.clearSubViews();\n\n    this.$el.append(\n      this.template(\n        _.extend(\n          this.model.attributes,\n          { max_days: this._MAX_RANGE }\n        )\n      )\n    );\n\n    setTimeout(function() {\n      self._initCalendar();\n      self._hideCalendar();\n      self._initTimers();\n    }, 100);\n\n    return this;\n  },\n\n  _initBinds: function() {\n    _.bindAll(this, '_onDatesChange', '_onDocumentClick');\n\n    this.model.bind('change', this._setValues,      this);\n    this.model.bind('change', this._onValuesChange, this);\n\n    // Outside click\n    $(document).bind('click', this._onDocumentClick);\n  },\n\n  _destroyBinds: function() {\n    $(document).unbind('click', this._onDocumentClick);\n  },\n\n  _setValues: function(m, c) {\n    var text = 'Choose your dates';\n    var data = this.model.attributes;\n\n    if (data.fromDate && data.toDate) {\n      text =\n        'From ' +\n        '<strong>' +\n        this.model.get('fromDate') + ' ' +\n        (cdb.Utils.pad(this.model.get('fromHour'),2) + ':' + cdb.Utils.pad(this.model.get('fromMin'),2)) +\n        '</strong>' +\n        ' to ' +\n        '<strong>' +\n        this.model.get('toDate') + ' ' +\n        (cdb.Utils.pad(this.model.get('toHour'),2) + ':' + cdb.Utils.pad(this.model.get('toMin'),2)) +\n        '</strong>' +\n        '<i class=\"CDB-IconFont CDB-IconFont-calendar DatePicker-datesIcon\"></i>';\n    }\n\n    this.$('.DatePicker-dates').html(text);\n  },\n\n  _setToday: function() {\n    var datesUTC = this.model.get('user_timezone');\n    var today = moment().utc(datesUTC);\n    var previous = moment().utc(datesUTC).subtract((this._MAX_RANGE - 1), 'days');\n    this.options.date = [previous.format(\"YYYY-MM-DD\"), today.format(\"YYYY-MM-DD\")];\n    this.options.current = today.format(\"YYYY-MM-DD\");\n    this._setModelFromPrevious(previous);\n  },\n\n  _initCalendar: function() {\n    var selector = '.DatePicker-calendar';\n\n    // Can't initialize calendar if not already present in document... avoid errors being thrown\n    if (!document.body.contains(this.$(selector)[0])) return;\n\n    this.calendar = this.$(selector).DatePicker(\n      _.extend(this.options, {\n        onChange: this._onDatesChange,\n        onRender: function(d) { // Disable future dates and dates < 30 days ago\n\n          var date = d.valueOf();\n          var now = new Date();\n\n          var thirtyDaysAgo = new Date();\n          thirtyDaysAgo.setDate(now.getDate() - 30);\n\n          return (date < thirtyDaysAgo) || (date > now) ? { disabled: true } : ''\n\n        }\n      })\n    );\n  },\n\n  _onDatesChange: function(formatted, dates) {\n\n    // Check if selected dates have more than 30 days\n    var start = moment(formatted[0]);\n    var end = moment(formatted[1]);\n\n    if (Math.abs(start.diff(end, 'days')) > this._MAX_RANGE) {\n      formatted[1] = moment(formatted[0]).add('days', this._MAX_RANGE).format(\"YYYY-MM-DD\");\n      this.$('.DatePicker-calendar').DatePickerSetDate([formatted[0], formatted[1]]);\n    }\n\n    this.model.set({\n      fromDate: formatted[0],\n      toDate:   formatted[1]\n    })\n  },\n\n  _hideCalendar: function(e) {\n    if (e) this.killEvent(e);\n    this.$('.DatePicker-dropdown').hide();\n  },\n\n  _toggleCalendar: function(ev) {\n    if (ev) this.killEvent(ev);\n    this.$('.DatePicker-dropdown').toggle();\n  },\n\n  _setLastFourHours: function() {\n    var previous = moment().utc(0).subtract(4, 'hours');\n    this._setModelFromPrevious(previous);\n    this._setDatepickerFromPrevious(previous);\n    this.closeCalendar();\n  },\n\n  _setLastDay: function() {\n    var previous = moment().utc(0).subtract(1, 'day');\n    this._setModelFromPrevious(previous);\n    this._setDatepickerFromPrevious(previous);\n    this.closeCalendar();\n  },\n\n  _setLastWeek: function() {\n    var previous = moment().utc(0).subtract(1, 'week');\n    this._setModelFromPrevious(previous);\n    this._setDatepickerFromPrevious(previous);\n    this.closeCalendar();\n  },\n\n  _setModelFromPrevious: function(previous) {\n    var today = moment().utc(0);\n\n    this.model.set({\n      fromDate: previous.format('YYYY-MM-DD'),\n      fromHour: parseInt(previous.format('H')),\n      fromMin:  parseInt(previous.format('m')),\n      toDate: today.format('YYYY-MM-DD'),\n      toHour: parseInt(today.format('H')),\n      toMin:  parseInt(today.format('m'))\n    });\n  },\n\n  _setDatepickerFromPrevious: function(previous) {\n    var today = moment().utc(0);    \n    this.$('.DatePicker-calendar').DatePickerSetDate([ previous.format('YYYY-MM-DD') , today.format('YYYY-MM-DD') ]);\n  },\n\n  _initTimers: function() {\n    // 'From' div\n    var $from = this.$('.DatePicker-timersFrom');\n\n    // From hour\n    var fromHour = new Spinner({\n      model:    this.model,\n      property: 'fromHour',\n      min:      0,\n      max:      23,\n      inc:      1,\n      width:    15,\n      pattern:  /^([12]?\\d{0,1}|3[01]{0,2})$/,\n      debounce_time: 0\n    });\n\n    $from.find('.DatePicker-timersHour').append(fromHour.render().el);\n    this.addView(fromHour);\n\n    // From min\n    var fromMin = new Spinner({\n      model:    this.model,\n      property: 'fromMin',\n      min:      0,\n      max:      59,\n      inc:      1,\n      width:    15,\n      pattern:  /^([12345]?\\d{0,1})$/,\n      debounce_time: 0\n    });\n\n    $from.find('.DatePicker-timersMin').append(fromMin.render().el);\n    this.addView(fromMin);\n\n\n    // 'To' div\n    var $to = this.$('.DatePicker-timersTo');\n\n    // To hour\n    var toHour = new Spinner({\n      model:    this.model,\n      property: 'toHour',\n      min:      0,\n      max:      23,\n      inc:      1,\n      width:    15,\n      pattern:  /^([12]?\\d{0,1}|3[01]{0,2})$/,\n      debounce_time: 0\n    });\n\n    $to.find('.DatePicker-timersHour').append(toHour.render().el);\n    this.addView(toHour);\n\n    // To min\n    var toMin = new Spinner({\n      model:    this.model,\n      property: 'toMin',\n      min:      0,\n      max:      59,\n      inc:      1,\n      width:    15,\n      pattern:  /^([12345]?\\d{0,1})$/,\n      debounce_time: 0\n    });\n\n    $to.find('.DatePicker-timersMin').append(toMin.render().el);\n    this.addView(toMin);\n  },\n\n  _onValuesChange: function() {\n    this.trigger('changeDate', this.model.toJSON(), this);\n  },\n\n  getDates: function() {\n    return this.model.toJSON();\n  },\n\n  closeCalendar: function() {\n    this.$('.DatePicker-dropdown').hide();\n  },\n\n  _onDocumentClick: function(e) {\n    var $el = $(e.target);\n\n    if ($el.closest('.DatePicker').length === 0) {\n      this.closeCalendar();\n    }\n  },\n\n  clean: function() {\n    this._destroyBinds();\n    this.closeCalendar();\n    this.$('.DatePicker-calendar').DatePickerHide();\n    cdb.core.View.prototype.clean.call(this);\n  }\n\n})\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * Error details view, to be used together with an error object from an import model.\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  _TEMPLATES: {\n    8001: 'common/views/size_error_details_upgrade_template',\n    8005: 'common/views/layers_error_details_upgrade_template',\n    default: 'common/views/error_details'\n  },\n\n  initialize: function() {\n    this.user = this.options.user;\n    this.err = this.options.err;\n  },\n\n  render: function() {\n    // Preventing problems checking if the error_code is a number or a string\n    // we make the comparision with only double =.\n    var errorCode = this.err.error_code && parseInt(this.err.error_code);\n    var upgradeUrl = cdb.config.get('upgrade_url');\n    var userCanUpgrade = upgradeUrl && !cdb.config.get('cartodb_com_hosted') && (!this.user.isInsideOrg() || this.user.isOrgOwner());\n    var templatePath = this._TEMPLATES['default'];\n    var originalUrl = this.err.original_url;\n    var httpResponseCode = this.err.http_response_code;\n    var httpResponseCodeMessage = this.err.http_response_code_message;\n\n    if (userCanUpgrade && this._TEMPLATES[errorCode]) {\n      templatePath = this._TEMPLATES[errorCode];\n    }\n\n    var template = cdb.templates.getTemplate(templatePath);\n\n    this.$el.html(\n      template({\n        errorCode: errorCode,\n        title: this.err.title,\n        text: this.err.what_about,\n        itemQueueId: this.err.item_queue_id,\n        originalUrl: originalUrl,\n        httpResponseCode: httpResponseCode,\n        httpResponseCodeMessage: httpResponseCodeMessage,\n        userCanUpgrade: userCanUpgrade,\n        showTrial: this.user.canStartTrial(),\n        upgradeUrl: upgradeUrl\n      })\n    );\n\n    return this;\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * Responsible for likes (♥ 123) and its toggling behaviour.\n */\nmodule.exports = cdb.core.View.extend({\n  tagName: 'a',\n\n  events: {\n    'click': '_toggleLike'\n  },\n\n  initialize: function() {\n    this.template = cdb.templates.getTemplate('common/views/likes/template');\n    this.model.bind('change:likeable change:liked change:likes error', this.render, this);\n  },\n\n  render: function() {\n    this.$el.html(\n      this.template({\n        likes: this.model.get(\"likes\"),\n        size: this.model.get(\"size\"),\n        show_count: this.model.get(\"show_count\"),\n        show_label: this.model.get(\"show_label\")\n      })\n    )\n    .attr({\n      class: this._classNames(),\n      href: this._hrefLocation()\n    });\n\n    return this;\n  },\n\n  _hrefLocation: function() {\n    var href = \"#/like\";\n\n    if (!this.model.get('likeable')) {\n      href = window.login_url;\n    }\n\n    return href;\n  },\n\n  _classNames: function() {\n    var classNames = ['LikesIndicator'];\n\n    if (this.model.get('likeable')) {\n      classNames.push('is-likeable');\n    }\n\n    if (this.model.get('liked')) {\n      classNames.push('is-liked');\n    }\n\n    if (this._animate) {\n      classNames.push('is-animated');\n      this.$el.one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function() {\n        // unset animate and force re-render to avoid race conditions\n        this._animate = false;\n        this.render();\n      }.bind(this));\n    }\n\n    return classNames.join(' ');\n  },\n\n  _toggleLike: function(ev) {\n    if (this.model.get('likeable')) {\n      this.killEvent(ev);\n\n      this._animate = true;\n      this.model.toggleLiked();\n    }\n  }\n});\n","var $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n/**\n *  MapCard previews\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  options: {\n    width: 300,\n    height: 170,\n    privacy: 'PUBLIC',\n    username: '',\n    visId: '',\n    mapsApiResource: '',\n    className: '',\n    authTokens: []\n  },\n\n  _TEMPLATES: {\n    // Using <%= %> instead of <%- %> because if not / characters (for example) will be escaped\n    regular: '<%- protocol %>://<%= mapsApiResource %>/api/v1/map/static/named/<%- tpl %>/<%- width %>/<%- height %>.png<%= authTokens %>',\n    cdn: '<%- protocol %>://<%- cdn %>/<%- username %>/api/v1/map/static/named/<%- tpl %>/<%- width %>/<%- height %>.png<%= authTokens %>'\n  },\n\n  initialize: function() {\n    _.each(['visId', 'mapsApiResource', 'username'], function(name) {\n      if (!this.options[name]) {\n        console.log(name + ' is required for Static Map instantiation');\n      }\n    }, this);\n  },\n\n  load: function() {\n    this._startLoader();\n    this._loadFromVisId();\n\n    return this;\n  },\n\n  _generateImageTemplate: function() {\n    return 'tpl_' + this.options.visId.replace(/-/g, '_');\n  },\n\n  _loadFromVisId: function() {\n    var protocol = this._isHTTPS() ? 'https': 'http';\n    var cdnConfig = cdb.config.get('cdn_url');\n    var template = _.template(cdnConfig ? this._TEMPLATES['cdn'] : this._TEMPLATES['regular']);\n\n    var options = {\n      protocol: protocol,\n      username: this.options.username,\n      mapsApiResource: this.options.mapsApiResource,\n      tpl: this._generateImageTemplate(),\n      width: this.options.width,\n      height: this.options.height,\n      authTokens: this._generateAuthTokensParams()\n    };\n\n    if (cdnConfig) {\n      options = _.extend(options, { cdn: cdnConfig[protocol] });\n    }\n\n    var url = template(options);\n\n    this._loadImage({}, url);\n  },\n\n  _generateAuthTokensParams: function () {\n    var authTokens = this.options.authTokens;\n    if (authTokens && authTokens.length > 0) {\n      return '?' + _.map(authTokens, function (t) { return 'auth_token=' + t; }).join('&');\n    } else {\n      return '';\n    }\n  },\n\n  _isHTTPS: function() {\n    return location.protocol.indexOf(\"https\") === 0;\n  },\n\n  loadURL: function(url) {\n    var $img = $('<img class=\"MapCard-preview\" src=\"' + url + '\" />');\n    this.$el.append($img);\n\n    if (this.options.className) {\n      $img.addClass(this.options.className);\n    }\n\n    $img.fadeIn(250);\n  },\n\n  showError: function() {\n    this._onError();\n  },\n\n  _startLoader: function() {\n    this.$el.addClass(\"is-loading\");\n  },\n\n  _stopLoader: function() {\n    this.$el.removeClass(\"is-loading\");\n  },\n\n  _onSuccess: function(url) {\n    this._stopLoader();\n    this.loadURL(url);\n    this.trigger(\"loaded\", url);\n  },\n\n  _onError: function(error) {\n    this._stopLoader();\n    this.$el.addClass(\"has-error\");\n    var $error = $('<div class=\"MapCard-error\" />');\n    this.$el.append($error);\n    $error.fadeIn(250);\n    this.trigger(\"error\");\n  },\n\n  _loadImage: function(error, url) {\n    var self = this;\n    var img  = new Image();\n\n    img.onerror = function() {\n      self._onError(error);\n    };\n\n    img.onload = function() {\n      self._onSuccess(url);\n    };\n\n    try {\n      img.src = url;\n    } catch(err) {\n      this._onError(err);\n    }\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\nvar PaginationModel = require('../pagination/model');\nvar randomQuote = require('../../view_helpers/random_quote');\nvar ViewFactory = require('../../view_factory');\nvar PaginationView = require('../pagination/view');\n\n/**\n * View to render a searchable/pageable collection.\n * Also allows to filter/search list.\n * Set {isUsedInDialog: true} in view opts if intended to be used in a dialog, to have proper classes to position views\n * properly.\n *\n * - collection is a collection which has a PagedSearchModel.\n */\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-search-link': '_onSearchClick',\n    'click .js-clean-search': '_onCleanSearchClick',\n    'keydown .js-search-input': '_onKeyDown',\n    'submit .js-search-form': 'killEvent'\n  },\n\n  initialize: function() {\n    _.each(['collection', 'pagedSearchModel', 'createListView'], function(name) {\n      if (!this.options[name]) throw new Error(name + ' is required');\n    }, this);\n    this.collection = this.options.collection;\n    this.options.noResults = this.options.noResults || {}\n\n    var params = this.options.pagedSearchModel;\n    this.paginationModel = new PaginationModel({\n      current_page: params.get('page'),\n      total_count: this.collection.totalCount() || 0,\n      per_page: params.get('per_page')\n    });\n\n    this.elder('initialize');\n    this._initBinds();\n    this.options.pagedSearchModel.fetch(this.collection);\n  },\n\n  render: function() {\n    this.clearSubViews();\n\n    this._renderContent(\n      this.getTemplate('common/views/paged_search/paged_search')({\n        thinFilters: this.options.thinFilters,\n        q: this.options.pagedSearchModel.get('q')\n      })\n    );\n\n    this._initViews();\n    this._$cleanSearchBtn().hide();\n    this._renderExtraFilters();\n\n    return this;\n  },\n\n  _renderExtraFilters: function() {\n    if (this.options.filtersExtrasView && this.options.filtersExtrasView) {\n      this.$('.js-filters').append(this.options.filtersExtrasView.render().el);\n    }\n  },\n\n  _renderContent: function(html) {\n    if (this.options.isUsedInDialog) {\n      html = this.getTemplate('common/views/paged_search/paged_search_dialog_wrapper')({\n        htmlToWrap: html\n      })\n    }\n    this.$el.html(html);\n\n    // Needs to be called after $el html changed:\n    if (this.options.isUsedInDialog) {\n      this.$el.addClass('Dialog-expandedSubContent');\n      this._$tabPane().addClass('Dialog-bodyInnerExpandedWithSubFooter');\n    }\n  },\n\n  _initBinds: function() {\n    this.collection.bind('fetching', function() {\n      this._toggleCleanSearchBtn();\n      this._activatePane('loading');\n    }, this);\n\n    this.collection.bind('error', function(e) {\n      // Old requests can be stopped, so aborted requests are not\n      // considered as an error\n      if (!e || (e && e.statusText !== \"abort\")) {\n        this._activatePane('error');\n      }\n      this._toggleCleanSearchBtn();\n    }, this);\n\n    this.collection.bind('reset', function(collection) {\n      this.paginationModel.set({\n        total_count: this.collection.totalCount(),\n        current_page: this.options.pagedSearchModel.get('page')\n      });\n      this._activatePane(this.collection.totalCount() > 0 ? 'list' : 'no_results');\n      this._toggleCleanSearchBtn();\n    }, this);\n\n    this.paginationModel.bind('change:current_page', function(mdl, newPage) {\n      this.options.pagedSearchModel.set('page', newPage);\n      this.options.pagedSearchModel.fetch(this.collection);\n    }, this);\n\n    this.add_related_model(this.options.pagedSearchModel);\n    this.add_related_model(this.collection);\n    this.add_related_model(this.paginationModel);\n  },\n\n  _toggleCleanSearchBtn: function() {\n    this._$cleanSearchBtn().toggle(!!this.options.pagedSearchModel.get('q'))\n  },\n\n  _initViews: function() {\n    this._panes = new cdb.ui.common.TabPane({\n      el: this._$tabPane()\n    });\n    this.addView(this._panes);\n\n    this._panes.addTab('list',\n      ViewFactory.createByList([\n        this._createListView(),\n        new PaginationView({\n          className: 'CDB-Text CDB-Size-medium Pagination Pagination--shareList',\n          model: this.paginationModel\n        })\n      ])\n    );\n\n    this._panes.addTab('error',\n      ViewFactory.createByTemplate('common/templates/fail', {\n        msg: ''\n      })\n    );\n\n    this._panes.addTab('no_results',\n      ViewFactory.createByTemplate('common/templates/no_results', {\n        icon: this.options.noResults.icon || 'CDB-IconFont-defaultUser',\n        title: this.options.noResults.title || 'Oh! No results',\n        msg: this.options.noResults.msg || 'Unfortunately we could not find anything with these parameters'\n      })\n    );\n\n    this._panes.addTab('loading',\n      ViewFactory.createByTemplate('common/templates/loading', {\n        title: 'Searching',\n        quote: randomQuote()\n      })\n    );\n\n    if (this.options.pagedSearchModel.get('q')) {\n      this._focusSearchInput();\n    }\n\n    this._activatePane(this._chooseActivePaneName(this.collection.totalCount()));\n  },\n\n  _createListView: function() {\n    var view = this.options.createListView();\n    if (view instanceof cdb.core.View) {\n      return view;\n    } else {\n      cdb.log.error('createListView function must return a view');\n      // fallback for view to not fail miserably\n      return new cdb.core.View();\n    }\n  },\n\n  _activatePane: function(name) {\n    // Only change active pane if the panes is actually initialized\n    if (this._panes && this._panes.size() > 0) {\n      // explicit render required, since tabpane doesn't do it\n      this._panes.active(name).render();\n    }\n  },\n\n  _chooseActivePaneName: function(totalCount) {\n    if (totalCount === 0) {\n      return 'no_results';\n    } else if (totalCount > 0) {\n      return 'list';\n    } else {\n      return 'loading';\n    }\n  },\n\n  _focusSearchInput: function() {\n    // also selects the current search str on the focus\n    this._$searchInput().focus().val(this._$searchInput().val());\n  },\n\n  _onSearchClick: function(ev) {\n    this.killEvent(ev);\n    this._$searchInput().focus();\n  },\n\n  _onCleanSearchClick: function(ev) {\n    this.killEvent(ev);\n    this._cleanSearch();\n  },\n\n  _onKeyDown: function(ev) {\n    var enterPressed = (ev.keyCode == $.ui.keyCode.ENTER);\n    var escapePressed = (ev.keyCode == $.ui.keyCode.ESCAPE);\n    if (enterPressed) {\n      this.killEvent(ev);\n      this._submitSearch();\n    } else if (escapePressed) {\n      this.killEvent(ev);\n      if (this.options.pagedSearchModel.get('q')) {\n        this._cleanSearch();\n      }\n    }\n  },\n\n  _submitSearch: function(e) {\n    this._makeNewSearch(Utils.stripHTML(this._$searchInput().val().trim()));\n  },\n\n  _cleanSearch: function() {\n    this._$searchInput().val('');\n    this._makeNewSearch();\n  },\n\n  _makeNewSearch: function(query) {\n    this.options.pagedSearchModel.set({\n      q: query,\n      page: 1\n    });\n    this.options.pagedSearchModel.fetch(this.collection);\n  },\n\n  _$searchInput: function() {\n    return this.$('.js-search-input');\n  },\n\n  _$cleanSearchBtn: function() {\n    return this.$('.js-clean-search');\n  },\n\n  _$tabPane: function() {\n    return this.$('.js-tab-pane');\n  }\n\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n/**\n * View model intended to be responsible for pagination logic, and to be used in conjunction with a Pagination view.\n */\nmodule.exports = cdb.core.Model.extend({\n  defaults: {\n    total_count:          0,\n    per_page:             10,\n    current_page:         1,\n    display_count:        5,\n    extras_display_count: 1,\n    url_to:               undefined\n  },\n\n  pagesCount: function() {\n    return Math.max(\n        Math.ceil(\n          this.get('total_count') / this.get('per_page')\n        ), 1);\n  },\n\n  isCurrentPage: function(page) {\n    return this.get('current_page') === page;\n  },\n\n  shouldBeVisible: function() {\n    var pagesCount = this.pagesCount();\n    return this.get('total_count') > 0 && pagesCount > 1 && this.get('current_page') <= pagesCount;\n  },\n\n  urlTo: function(page) {\n    if (this.hasUrl()) {\n      return this.get('url_to')(page);\n    }\n  },\n\n  hasUrl: function() {\n    return typeof this.get('url_to') === 'function';\n  },\n\n  /**\n   * Get the pages that are expected to be displayed.\n   * The current page will be in the middle of the returned sequence.\n   *\n   * @returns {number[]} a sequence of Numbers\n   */\n  pagesToDisplay: function() {\n    var rangeStart;\n\n    if (this._inLowRange()) {\n      rangeStart = 1;\n    } else if (this._inHighRange()) {\n      rangeStart = this.get('current_page') - this._startOffset();\n    } else {\n      // Somewhere between the low and high boundary\n      rangeStart = this.pagesCount() - this.get('display_count') + 1;\n    }\n    rangeStart = Math.max(rangeStart, 1);\n\n    return this._withExtraPages(\n      _.range(rangeStart, this._rangeEnd(rangeStart))\n    );\n  },\n\n  _withExtraPages: function(pagesRelativeToCurrentPage) {\n    var lastPage = this.pagesCount();\n    var extraCount = this.get('extras_display_count');\n    var extraStartPages = _.range(1, extraCount + 1);\n    var extraEndPages = _.range(lastPage - extraCount + 1, lastPage + 1);\n\n    var startPagesDiff = pagesRelativeToCurrentPage[0] - extraStartPages.slice(-1)[0];\n    if (startPagesDiff === 2) {\n      // There is only one missing page in the gap, so add it\n      extraStartPages.push(pagesRelativeToCurrentPage[0] - 1);\n    } else if (startPagesDiff > 2) {\n      // There are more hidden pages at low range, add padding at end\n      extraStartPages.push(-1);\n    }\n\n    var endPagesDiff = extraEndPages[0] - pagesRelativeToCurrentPage.slice(-1);\n    if (endPagesDiff === 2) {\n      // There is only one missing page in the gap, so add it\n      extraEndPages.unshift(extraEndPages[0] - 1);\n    } if (endPagesDiff > 2) {\n      // There are more hidden pages at high range, add padding at beginning\n      extraEndPages.unshift(-2);\n    }\n\n    return _.union(extraStartPages, pagesRelativeToCurrentPage, extraEndPages);\n  },\n\n  _inLowRange: function() {\n    return this.get('current_page') < this._startOffset();\n  },\n\n  _inHighRange: function() {\n    return this.get('current_page') < this._highBoundary();\n  },\n\n  _highBoundary: function() {\n    return this.pagesCount() - this._startOffset();\n  },\n\n  _startOffset: function() {\n    return Math.floor(this.get('display_count') / 2);\n  },\n\n  _rangeEnd: function(rangeStart) {\n    // If we are too close to the range end then cap to the pages count.\n    return Math.min(rangeStart + this.get('display_count'), this.pagesCount() + 1);\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar navigateThroughRouter = require('../../view_helpers/navigate_through_router');\n\n/**\n * Responsible for pagination.\n *\n * Expected to be created with a pagination model, see the model for available params, here we create w/ the minimum:\n *   new PaginationView({\n *     model: new PaginationModel({\n *       // Compulsory:\n *       urlTo:  function(page) { return '/?page='+ page },\n\n         // Optional, to router clicks on <a> tags through router.navigate by default\n *       router: new Router(...)\n *     })\n *   });\n */\nmodule.exports = cdb.core.View.extend({\n\n  className: 'Pagination CDB-Text CDB-Size-medium',\n\n  events: {\n    'click a': '_paginate'\n  },\n\n  initialize: function() {\n    this.template = cdb.templates.getTemplate('common/views/pagination/template');\n    this.router = this.options.router;\n\n    if (this.router && !this.model.hasUrl()) {\n      throw new Error('since router is set the model must have a url method set too');\n    }\n\n    this.model.bind('change', this.render, this);\n  },\n\n  render: function() {\n    if (this.model.shouldBeVisible()) {\n      this.$el.html(\n        this.template({\n          m: this.model,\n          pagesCount: this.model.pagesCount(),\n          currentPage: this.model.get('current_page')\n        })\n      );\n      this.$el.addClass(this.className);\n      this.delegateEvents();\n    } else {\n      this.$el.html('');\n    }\n\n    return this;\n  },\n\n  _paginate: function(ev) {\n    if (this.router) {\n      navigateThroughRouter.apply(this, arguments);\n    } else if (!this.model.hasUrl()) {\n      this.killEvent(ev);\n    }\n\n    var page = $(ev.target).data('page');\n    this.model.set('current_page', page);\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * Error details view, to be used together with an error object from an import model.\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n  _TEMPLATES: {\n    'partial_import': 'common/views/partial_import_details',\n    'too_many_files': 'common/views/too_many_files_details',\n    'too_many_rows_connection': 'common/views/too_many_rows_connection_details'\n  },\n\n  initialize: function() {\n    this.warnings = this.options.warnings;\n  },\n\n  render: function() {\n    var warnings = this.warnings;\n\n    var template_file_key = this._getTemplateKey(warnings);\n    var template = cdb.templates.getTemplate(this._TEMPLATES[template_file_key]);\n\n    this.$el.html(\n      template({\n        warnings: warnings\n      })\n    );\n\n    return this;\n  },\n\n  _getTemplateKey: function(warnings) {\n    // We have warnings precedence between max layers an max tables per import.\n    // For example, one import could reach the limit of layers an tables at the\n    // same time.\n    if (warnings.user_max_layers && warnings.max_tables_per_import) {\n      return (warnings.user_max_layers < warnings.max_tables_per_import) ? 'partial_import' : 'too_many_files'\n    } else if (warnings.user_max_layers) {\n      return 'partial_import';\n    } else if (warnings.max_tables_per_import) {\n      return 'too_many_files';\n    } else if (warnings.max_rows_per_connection) {\n      return 'too_many_rows_connection';\n    }\n  }\n});\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * Model that encapsulates params for fetching data in a cdb.admin.Visualizations collection.\n */\nmodule.exports = cdb.core.Model.extend({\n\n  defaults: {\n    content_type:   '',\n    page:           1,\n    q:              '',\n    tag:            '',\n    category:       '',\n    shared:         'no',\n    locked:         false,\n    liked:          false,\n    library:        false,\n    order:          'updated_at',\n    deepInsights:   false\n  },\n\n  isSearching: function() {\n    return this.get('q') || this.get('tag');\n  },\n\n  isDatasets: function() {\n    return this.get('content_type') === 'datasets';\n  },\n\n  isMaps: function() {\n    return this.get('content_type') === 'maps';\n  },\n\n  isDeepInsights: function() {\n    return this.isMaps() && this.get('deepInsights');\n  }\n});\n","// Not a unique entry file, but dependencies required for old table.js bundle, to retrofit newer browserify files to be\n// usable in a non-browserified bundle\n//\n// Expected to be loaded after cdb.js but before table.js\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.editor = {\n  CreateVisFirstView: require('./common/dialogs/create_vis_first/create_vis_first_view'),\n  ImportsCollection: require('./common/background_polling/models/imports_collection'),\n  GeocodingModel: require('./common/background_polling/models/geocoding_model'),\n  LonLatGeocodingModel: require('./common/background_polling/models/lon_lat_geocoding_model'),\n  BackgroundPollingModel: require('./editor/background_polling_model'),\n  ImagePickerView: require('./common/dialogs/map/image_picker_view'),\n  BackgroundPollingView: require('./common/background_polling/background_polling_view'),\n  AddLayerView: require('./common/dialogs/map/add_layer_view'),\n  SyncView: require('./common/dialogs/sync_dataset/sync_dataset_view'),\n  ScratchView: require('./common/dialogs/map/scratch_view'),\n  AddLayerModel: require('./common/dialogs/map/add_layer_model'),\n  FeatureDataView: require('./common/dialogs/feature_data/feature_data_dialog_view'),\n\n  ChangePrivacyView: require('./common/dialogs/change_privacy/change_privacy_view'),\n  EditVisMetadataView: require('./common/dialogs/edit_vis_metadata/edit_vis_metadata_dialog_view'),\n\n  DeleteItemsView: require('./common/dialogs/delete_items_view'),\n  DeleteItemsViewModel: require('./common/dialogs/delete_items_view_model'),\n  DeleteLayerView: require('./common/dialogs/delete_layer/delete_layer_view'),\n  DeleteColumnView: require('./common/dialogs/delete_column/delete_column_view'),\n  DeleteRowView: require('./common/dialogs/delete_row/delete_row_view'),\n\n  ExportImageResultView: require('./common/dialogs/static_image/export_image_result_view'),\n\n  AdvancedExportView: require('./common/dialogs/static_image/advanced_export_view'),\n\n  PublishView: require('./common/dialogs/publish/publish_view'),\n\n  ChangeLockViewModel: require('./common/dialogs/change_lock/change_lock_view_model'),\n  ChangeLockView: require('./common/dialogs/change_lock/change_lock_view'),\n\n  BuilderFeaturesWarningDialog: require('./common/dialogs/builder_features_warning/builder_features_warning_view'),\n\n  PecanView: require('./common/dialogs/pecan/pecan_view'),\n\n  DuplicateVisView: require('./common/dialogs/duplicate_vis_view'),\n  DuplicateDatasetView: require('./common/dialogs/duplicate_dataset_view'),\n\n  ExportView: require('./common/dialogs/export/export_view'),\n\n  MergeDatasetsView: require('./common/dialogs/merge_datasets/merge_datasets_view'),\n  GeoreferenceView: require('./common/dialogs/georeference/georeference_view'),\n\n  LimitsReachView: require('./common/dialogs/limits_reach/limits_reached_view'),\n\n  MamufasImportView: require('./common/mamufas_import/mamufas_import_view'),\n\n  AddCustomBasemapView: require('./common/dialogs/add_custom_basemap/add_custom_basemap_view'),\n  ViewFactory: require('./common/view_factory'),\n  randomQuote: require('./common/view_helpers/random_quote.js'),\n\n  ExportMapView: require('./common/dialogs/export_map/export_map_view')\n};\n","var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar ImportsCollection = require('../common/background_polling/models/imports_collection');\nvar GeocodingsCollection = require('../common/background_polling/models/geocodings_collection');\nvar BackgroundPollingModel = require('../common/background_polling/background_polling_model');\n\n\n/**\n *  Background importer model for the editor context.\n *\n */\n\nmodule.exports = BackgroundPollingModel.extend({\n\n  addImportItem: function(mdl) {\n    if (!mdl) {\n      return false;\n    }\n\n    if (!this.user.canAddLayerTo(this.vis.map)) {\n      mdl.setError({\n        error_code: 8005,\n        get_error_text: {\n          title: \"Max layers per map reached\",\n          what_about: \"You can't add more layers to your map. Please upgrade your account.\"\n        }\n      });\n    }\n\n    this.importsCollection.add(mdl);\n  },\n\n  _onImportsStateChange: function(importsModel) {\n    if (importsModel.hasCompleted()) {\n      this.trigger('importCompleted', importsModel, this);\n      var self = this;\n      this.vis.map.addCartodbLayerFromTable(importsModel.imp.get('table_name'), this.user.get('username'), {\n        vis: this.vis,\n        success: function() {\n          // layers need to be saved because the order may changed\n          self.vis.map.layers.saveLayers();\n          // Don't remove import item if it is Twitter type\n          var serviceName = importsModel.get('upload').service_name;\n          var twitterImport = serviceName && serviceName === \"twitter_search\";\n          if (!twitterImport) {\n            self.importsCollection.remove(importsModel);\n          }\n        },\n        error: function() {\n          self.trigger('importLayerFail', 'Failed to add the connected dataset as a layer to this map');\n          self.importsCollection.remove(importsModel);\n        }\n      });\n    }\n  },\n\n  _onGeocodingsStateChange: function(geocodingModel) {\n    if (geocodingModel.hasCompleted()) {\n      this.trigger('geocodingCompleted', geocodingModel, this);\n    }\n    if (geocodingModel.hasFailed()) {\n      this.trigger('geocodingFailed', geocodingModel, this);\n    }\n  },\n\n  _onAnalysisStateChange: function(mdl, collection) {}\n\n});\n","var geoAttr = require('./cartocss/get-geo-attr');\nvar getDefaultCSSForGeometryType = require('./cartocss/get-default-css-for-geometry-type');\nvar ramps = require('./cartocss/color-ramps');\n\nmodule.exports = {\n  choropleth: function(quartiles, tableName, prop, geometryType, ramp) {\n    var attr = geoAttr(geometryType);\n    var tableID = '#' + tableName;\n\n    var defaultCSS = getDefaultCSSForGeometryType(geometryType);\n    var css = \"/** choropleth visualization */\\n\\n\" + tableID + \" {\\n  \" + attr + \": \" + ramp[0] + \";\\n\" + defaultCSS.join(\"\\n\") + \"\\n}\\n\";\n\n    for (var i = quartiles.length - 1; i >= 0; --i) {\n      if (quartiles[i] !== undefined && quartiles[i] != null) {\n        css += \"\\n\" + tableID + \"[\" + prop + \" <= \" + quartiles[i] + \"] {\\n\";\n        css += '  ' + attr  + ':' + ramp[i] + \";\\n}\"\n      }\n    }\n    return css;\n  },\n\n  categoryMetadata: function(cats, options) {\n    var metadata = [];\n\n    var ramp = (options && options.ramp) ? options.ramp : ramps.category;\n    var type = options && options.type ? options.type : 'string';\n\n    for (var i = 0; i < cats.length; i++) {\n      var cat = cats[i];\n      if (i < 10 && cat !== undefined && ((type === 'string' && cat != null) || (type !== 'string'))) {\n        metadata.push({\n          title: cat,\n          title_type: type,\n          value_type: 'color',\n          color: ramp[i]\n        });\n      }\n    }\n\n    if (cats.length > 10) {\n      metadata.push({\n        title: 'Others',\n        value_type: 'color',\n        default: true,\n        color: ramp[ramp.length - 1]\n      });\n    }\n\n    return metadata;\n  },\n\n  category: function(cats, tableName, prop, geometryType, options) {\n    var attr = geoAttr(geometryType);\n    var tableID = '#' + tableName;\n    var ramp = ramps.category;\n    var name, value;\n\n    var type = options && options.type ? options.type : 'string';\n    var ramp = (options && options.ramp) ? options.ramp : ramps.category;\n\n    var defaultCSS = getDefaultCSSForGeometryType(geometryType);\n\n    var css = \"/** category visualization */\\n\\n\" + tableID + \" {\\n  \" + attr + \": \" + ramp[0] + \";\\n\" + defaultCSS.join(\"\\n\") + \"\\n}\\n\";\n\n    for (var i = 0; i < cats.length; i++) {\n\n      var cat = cats[i];\n\n      if (type === 'string') {\n        name = cat.replace(/\\n/g,'\\\\n').replace(/\\\"/g, \"\\\\\\\"\");\n        value = \"\\\"\" + name + \"\\\"\";\n      } else {\n        value = cat;\n      }\n\n      if (i < 10 && cat !== undefined && ((type === 'string' && cat != null) || (type !== 'string'))) {\n        css += \"\\n\" + tableID + '[' + prop + '=' + value + \"] {\\n\";\n        css += '  ' + attr  + ':' + ramp[i] + \";\\n}\"\n      }\n    }\n\n    if (cats.length > 10) {\n      css += \"\\n\" + tableID + \"{\\n\";\n      css += '  ' + attr  + ': ' + ramp[ramp.length - 1]+ \";\\n}\"\n    }\n\n    return css;\n  },\n\n  torque: function(stats, tableName, options){\n    var tableID = '#' + tableName;\n    var aggFunction = 'count(cartodb_id)';\n    var css = [\n        '/** torque visualization */',\n        'Map {',\n        '  -torque-time-attribute: ' + stats.column + ';',\n        '  -torque-aggregation-function: \"count(cartodb_id)\";',\n        '  -torque-frame-count: ' + stats.steps + ';',\n        '  -torque-animation-duration: 10;',\n        '  -torque-resolution: 2;',\n        '}',\n        tableID + ' {',\n        '  marker-width: 3;',\n        '  marker-fill-opacity: 0.8;',\n        '  marker-fill: #0F3B82; ',\n        '  comp-op: \"lighten\"; ',\n        '  [frame-offset = 1] { marker-width: 10; marker-fill-opacity: 0.05;}',\n        '  [frame-offset = 2] { marker-width: 15; marker-fill-opacity: 0.02;}',\n        '}'\n    ];\n    css = css.join(\"\\n\");\n\n    return css;\n\n  },\n\n  bubble: function(quartiles, tableName, prop) {\n    var tableID = '#' + tableName;\n    var css = \"/** bubble visualization */\\n\\n\" + tableID + \" {\\n\";\n    css += getDefaultCSSForGeometryType('point').join(\"\\n\");\n    css += \"\\nmarker-fill: #FF5C00;\";\n    css += \"\\n}\\n\\n\";\n\n    var min = 10;\n    var max = 30;\n\n    var values = [];\n\n    var NPOINS = 10;\n    for(var i = 0; i < NPOINS; ++i) {\n      var t = i/(NPOINS-1);\n      values.push(min + t*(max - min));\n    }\n\n    // generate carto\n    for(var i = NPOINS - 1; i >= 0; --i) {\n      if(quartiles[i] !== undefined && quartiles[i] != null) {\n        css += \"\\n#\" + tableName + ' [ ' + prop + ' <= ' + quartiles[i] + \"] {\\n\"\n        css += '   marker-width: ' + values[i].toFixed(1) + \";\\n}\"\n      }\n    }\n    return css;\n  },\n\n  heatmap: function(stats, tableName, options){\n    var tableID = '#' + tableName;\n    var css = [\n        '/** heatmap visualization */',\n        'Map {',\n        '  -torque-time-attribute: \"cartodb_id\";',\n        '  -torque-aggregation-function: \"count(cartodb_id)\";',\n        '  -torque-frame-count: 1;',\n        '  -torque-animation-duration: 10;',\n        '  -torque-resolution: 2;',\n        '}',\n        tableID + ' {',\n        '  marker-width: 10;',\n        '  marker-fill-opacity: 0.4;',\n        '  marker-fill: #0F3B82; ',\n        '  comp-op: \"lighten\"; ',\n        '  image-filters: colorize-alpha(blue, cyan, lightgreen, yellow , orange, red);',\n        '  marker-file: url(http://s3.amazonaws.com/com.cartodb.assets.static/alphamarker.png);',\n        '}'\n    ];\n    css = css.join(\"\\n\");\n    return css;\n  }\n};\n","module.exports = {\n  bool: ['#229A00', '#F84F40', '#DDDDDD'],\n  green:  ['#EDF8FB', '#D7FAF4', '#CCECE6', '#66C2A4', '#41AE76', '#238B45', '#005824'],\n  blue:  ['#FFFFCC', '#C7E9B4', '#7FCDBB', '#41B6C4', '#1D91C0', '#225EA8', '#0C2C84'],\n  pink: ['#F1EEF6', '#D4B9DA', '#C994C7', '#DF65B0', '#E7298A', '#CE1256', '#91003F'],\n  black:  ['#F7F7F7', '#D9D9D9', '#BDBDBD', '#969696', '#737373', '#525252', '#252525'],\n  red:  ['#FFFFB2', '#FED976', '#FEB24C', '#FD8D3C', '#FC4E2A', '#E31A1C', '#B10026'],\n  category: ['#A6CEE3', '#1F78B4', '#B2DF8A', '#33A02C', '#FB9A99', '#E31A1C', '#FDBF6F', '#FF7F00', '#CAB2D6', '#6A3D9A', '#DDDDDD'],\n  divergent: ['#0080FF', '#40A0FF', '#7FBFFF', '#FFF2CC', '#FFA6A6', '#FF7A7A', '#FF4D4D']\n};\n","module.exports = function(geometryType) {\n  if (geometryType === 'polygon') {\n    return [\n      'polygon-opacity: 0.7;',\n      'line-color: #FFF;',\n      'line-width: 0.5;',\n      'line-opacity: 1;'\n    ];\n  } else if (geometryType === 'line') {\n    return [\n      'line-width: 2;',\n      'line-opacity: 0.7;'\n    ];\n  } else {\n    return [\n      'marker-fill-opacity: 0.9;',\n      'marker-line-color: #FFF;',\n      'marker-line-width: 1;',\n      'marker-line-opacity: 1;',\n      'marker-placement: point;',\n      'marker-type: ellipse;',\n      'marker-width: 10;',\n      'marker-allow-overlap: true;'\n    ];\n  }\n};\n","module.exports = function(geometryType) {\n  return {\n    \"line\": 'line-color',\n    'polygon': \"polygon-fill\",\n    'point': \"marker-fill\"\n  }[geometryType];\n};\n","\n/**\n * Like _.defaults, but also applies to deep object structure.\n *\n * @param {Object} customs\n * @param {Object} defaults\n * @return {Object}\n */\nvar deepDefaults = function(customs, defaults) {\n  var memo = {};\n\n  for (var key in defaults) {\n    if (defaults.hasOwnProperty(key)) {\n      var defaultsItem = defaults[key];\n      var customsItem;\n\n      if (typeof customs === 'object') {\n        customsItem = customs[key];\n      }\n\n      if (typeof defaultsItem === 'object' && typeof customsItem === 'object') {\n        // both defaultsItem and customsItem are objecs, go down one level, set returned result as value for key\n        memo[key] = deepDefaults(customsItem, defaultsItem);\n      } else if (typeof defaultsItem !== 'object' && customsItem !== undefined) {\n        memo[key] = customsItem;\n      } else {\n        memo[key] = defaultsItem;\n      }\n    }\n  }\n\n  return memo || {};\n};\n\nmodule.exports = deepDefaults;\n","var ramps = require('./cartocss/color-ramps.js');\n\n// TODO: only require the necessary params\nmodule.exports = function(stats) {\n  var method;\n  var ramp = ramps.blue;\n  var name = 'blue';\n\n  if (['A','U'].indexOf(stats.dist_type) != -1) { // apply divergent scheme\n    method = stats.jenks;\n\n    if (stats.min < 0 && stats.max > 0){\n      ramp = ramps.divergent;\n      name = 'spectrum2';\n    }\n  } else if (stats.dist_type === 'F') {\n    method = stats.equalint;\n    ramp = ramps.red;\n    name = 'red';\n  } else if (stats.dist_type === 'J') {\n    method = stats.headtails;\n    ramp = ramps.blue;\n    name = 'blue';\n  } else {\n    method = stats.headtails;\n    ramp = ramps.red;\n    name = 'red';\n  }\n\n  return {\n    name: name,\n    ramp: ramp,\n    method: method\n  };\n};\n","module.exports = function(distType) {\n  return {\n    U: 0.9,\n    A: 0.9,\n    L: 0.7,\n    J: 0.7,\n    S: 0.5,\n    F: 0.3\n  }[distType];\n};\n","var ramps = require('./cartocss/color-ramps');\nvar getWeightFromShape = require('./get-weight-from-shape');\nvar getMethodProperties = require('./get-method-properties');\nvar deepDefaults = require('./deep-defaults');\nvar CSS = require('./cartocss');\n\n/**\n * Get metadata to render a CartoDB map (visualization) from a set of given table and column data, see params.\n *\n * @param {Object} opts hash with following keys:\n *   - tableName: {String}\n *   - column: {Object} hash with following keys:\n *     - stats: {Object} stats as given from a describe call on a SQL API.\n *     - geometryType: {String} e.g. 'points', 'polygon' or similar.\n *     - bbox: {Array[Array]} e.g. [[0.0, 0.1], [1.0, 1.1]]\n *   - dependencies: {Object} hash with following keys:\n *     - underscore: {Object} only used for some column types though, e.g. number, string\n *   - thresholds: {Object} See list in code\n * @return {Object}\n */\nmodule.exports = function(opts) {\n  var _ = opts.dependencies.underscore;\n  var tableName = opts.tableName;\n\n  var thresholds = deepDefaults(opts.thresholds, {\n    number: {\n      forBubbleMap: {\n        minCalcWeight: 0.5,\n        maxStatsCount: 200\n      },\n      forCategoryOrBubbleMap: {\n        minStatsWeight: 0.5,\n        distinctPercentage: 25,\n        forCategory: {\n          maxDistinctPercentage: 1\n        },\n        forBubble: {\n          minDistinctPercentage: 1\n        }\n      }\n    }\n  });\n\n  var column = opts.column;\n  var geometryType = column.geometryType;\n  var stats = column.stats;\n  var columnName = stats.column;\n\n  var visualizationType = 'choropleth';\n  var css = null;\n  var type = stats.type;\n  var metadata = [];\n  var distinctPercentage = (stats.distinct / stats.count) * 100;\n\n  if (type === 'number') {\n    var calcWeight = (stats.weight + getWeightFromShape(stats.dist_type)) / 2;\n\n    if (calcWeight >= thresholds.number.forBubbleMap.minCalcWeight) {\n      var visFunction = CSS.choropleth;\n      var properties = getMethodProperties(stats);\n\n      if (stats.count < thresholds.number.forBubbleMap.maxStatsCount && geometryType === 'point'){\n        visualizationType = 'bubble';\n        visFunction = CSS.bubble;\n      }\n\n      css = visFunction(properties.method, tableName, columnName, geometryType, properties.ramp);\n\n    } else if (stats.weight > thresholds.number.forCategoryOrBubbleMap.minStatsWeight || distinctPercentage < thresholds.number.forCategoryOrBubbleMap.maxDistinctPercentage) {\n      if (distinctPercentage < thresholds.number.forCategoryOrBubbleMap.forCategory.maxDistinctPercentage) {\n        visualizationType = 'category';\n\n        var cats = stats.cat_hist;\n        cats = _.sortBy(cats, function(cat) { return cat[1]; }).reverse().slice(0, ramps.category.length);\n        cats = _.sortBy(cats, function(cat) { return cat[0]; });\n        cats = cats.map(function(r) { return r[0]; });\n\n        css = CSS.category(cats, tableName, columnName, geometryType, { type: type });\n        metadata = CSS.categoryMetadata(cats, { type: type });\n\n      } else if (distinctPercentage >= thresholds.number.forCategoryOrBubbleMap.forBubble.minDistinctPercentage) {\n\n        var visFunction = CSS.choropleth;\n\n        if (geometryType === 'point'){\n          visualizationType = 'bubble';\n          visFunction = CSS.bubble;\n        }\n\n        var properties = getMethodProperties(stats);\n        css = visFunction(properties.method, tableName, columnName, geometryType, properties.ramp);\n      }\n    }\n\n  } else if (type === 'string') {\n    visualizationType = 'category';\n\n    var cats = stats.hist;\n    cats = _.sortBy(cats, function(cat) { return cat[1]; }).reverse().slice(0, ramps.category.length);\n    cats = _.sortBy(cats, function(cat) { return cat[0]; });\n    cats = cats.map(function(r) { return r[0]; });\n\n    css = CSS.category(cats, tableName, columnName, geometryType);\n    metadata = CSS.categoryMetadata(cats);\n\n  } else if (type === 'date') {\n    visualizationType = 'torque';\n    css = CSS.torque(stats, tableName);\n\n  } else if (type === 'boolean') {\n    visualizationType = 'category';\n    var ramp = ramps.bool;\n    var cats = ['true', 'false', null];\n    var options = { type: type, ramp: ramp };\n    css = CSS.category(cats, tableName, columnName, geometryType, options);\n    metadata = CSS.categoryMetadata(cats, options);\n\n  } else if (stats.type === 'geom') {\n    visualizationType = 'heatmap';\n    css = CSS.heatmap(stats, tableName, options);\n  }\n\n  var properties = {\n    geometryType: geometryType,\n    column: columnName,\n    bbox: column.bbox,\n    type: type,\n    visualizationType: visualizationType\n  };\n\n  if (css) {\n    properties.css = css;\n  } else {\n    properties.css = null;\n    properties.weight = -100;\n  }\n\n  if (stats) {\n    properties.stats = stats;\n  }\n\n  if (metadata) {\n    properties.metadata = metadata;\n  }\n\n  return properties;\n};\n","var getWeightFromShape = require('./get-weight-from-shape');\nvar deepDefaults = require('./deep-defaults');\n\nvar analyzeMethods = {\n  geom: function(data) {\n    var stats = data.stats;\n    return data.isPointGeometryType && stats.cluster_rate * stats.density >= data.thresholds.geom.minStatsDensity;\n  },\n\n  string: function(data) {\n    return data.stats.weight >= data.thresholds.string.minWeight;\n  },\n\n  number: function(data) {\n    var stats = data.stats;\n    var distinctPercentage = (stats.distinct / stats.count) * 100;\n    var calcWeight = (stats.weight + getWeightFromShape(stats.dist_type)) / 2;\n    return stats.weight >= data.thresholds.number.minWeight &&\n      (\n        calcWeight >= data.thresholds.number.minCalcWeight ||\n        stats.weight > data.thresholds.number.minWeightIfNoOtherApplies ||\n        distinctPercentage < data.thresholds.number.maxDistinctPercentage\n      );\n  },\n\n  boolean: function(data) {\n    return data.stats.null_ratio <= data.thresholds.boolean.maxNullRatio;\n  },\n\n  date: function(data) {\n    return data.isPointGeometryType && data.stats.null_ratio <= data.thresholds.date.maxNullRatio;\n  }\n};\n\n/**\n * Check wether the given stats is enough to make guesses for pecan maps.\n * @param {Object} stats Results from a describe call on a table column.\n *   A stats object that lacks any relevant statistics will most likely yield a false.\n * @return {Boolean} true if good enough\n */\nmodule.exports = function(data) {\n  var isGoodEnough = false;\n  var data = data || {};\n\n  data.thresholds = deepDefaults(data.thresholds, {\n    geom: {\n      minStatsDensity: 0.1\n    },\n    string: {\n      minWeight: 0.8\n    },\n    number: {\n      minWeight: 0.1,\n      minCalcWeight: 0.5,\n      maxDistinctPercentage: 25,\n      minWeightIfNoOtherApplies: 0.5\n    },\n    boolean: {\n      maxNullRatio: 0.75\n    },\n    date: {\n      maxNullRatio: 0.75\n    }\n  });\n\n  if (data && data.stats) {\n    var method = analyzeMethods[data.stats.type];\n    if (typeof method === 'function') {\n      isGoodEnough = method.call(this, data);\n    }\n  }\n\n  return isGoodEnough;\n};\n","module.exports = {\n  hasEnoughToGuess: require('./has-enough-to-guess'),\n  guessMap: require('./guess-map'),\n  getWeightFromShape: require('./get-weight-from-shape'),\n  getMethodProperties: require('./get-method-properties')\n};\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define('queue', factory) :\n  (global.queue = factory());\n}(this, function () { 'use strict';\n\n  var slice = [].slice;\n\n  function noop() {}\n\n  var noabort = {};\n  var success = [null];\n  function newQueue(concurrency) {\n    if (!(concurrency >= 1)) throw new Error;\n\n    var q,\n        tasks = [],\n        results = [],\n        waiting = 0,\n        active = 0,\n        ended = 0,\n        starting, // inside a synchronous task callback?\n        error,\n        callback = noop,\n        callbackAll = true;\n\n    function start() {\n      if (starting) return; // let the current task complete\n      while (starting = waiting && active < concurrency) {\n        var i = ended + active,\n            t = tasks[i],\n            j = t.length - 1,\n            c = t[j];\n        t[j] = end(i);\n        --waiting, ++active, tasks[i] = c.apply(null, t) || noabort;\n      }\n    }\n\n    function end(i) {\n      return function(e, r) {\n        if (!tasks[i]) throw new Error; // detect multiple callbacks\n        --active, ++ended, tasks[i] = null;\n        if (error != null) return; // only report the first error\n        if (e != null) {\n          abort(e);\n        } else {\n          results[i] = r;\n          if (waiting) start();\n          else if (!active) notify();\n        }\n      };\n    }\n\n    function abort(e) {\n      error = e; // ignore new tasks and squelch active callbacks\n      waiting = NaN; // stop queued tasks from starting\n      notify();\n    }\n\n    function notify() {\n      if (error != null) callback(error);\n      else if (callbackAll) callback(null, results);\n      else callback.apply(null, success.concat(results));\n    }\n\n    return q = {\n      defer: function(f) {\n        if (callback !== noop) throw new Error;\n        var t = slice.call(arguments, 1);\n        t.push(f);\n        ++waiting, tasks.push(t);\n        start();\n        return q;\n      },\n      abort: function() {\n        if (error == null) {\n          var i = ended + active, t;\n          while (--i >= 0) (t = tasks[i]) && t.abort && t.abort();\n          abort(new Error(\"abort\"));\n        }\n        return q;\n      },\n      await: function(f) {\n        if (callback !== noop) throw new Error;\n        callback = f, callbackAll = false;\n        if (!waiting && !active) notify();\n        return q;\n      },\n      awaitAll: function(f) {\n        if (callback !== noop) throw new Error;\n        callback = f, callbackAll = true;\n        if (!waiting && !active) notify();\n        return q;\n      }\n    };\n  }\n\n  function queue(concurrency) {\n    return newQueue(arguments.length ? +concurrency : Infinity);\n  }\n\n  queue.version = \"1.2.1\";\n\n  return queue;\n\n}));"]}
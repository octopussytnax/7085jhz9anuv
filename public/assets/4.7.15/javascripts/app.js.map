{"version":3,"sources":["../../../../lib/assets/javascripts/cartodb/app.js","../../../../lib/assets/javascripts/cartodb/config.js","../../../../lib/build/app_config.js"],"names":["_t","s","cdb","common","admin","dashboard","forms","open","config","setUrlVersion","modelName","method","v","set","urlVersion","defaultVersion","version","get","prefixUrl","this","prefixUrlPathname","prefix","indexOf","TypeError","a","document","createElement","href","url","pathname","replace","e","getMapsResourceName","username","mapsApiTemplate","i18n","format","str","i","arguments","length","attrs","attr","RegExp","getValue","object","prop","_","isFunction","urlError","Error","Backbone","originalSync","sync","model","options","absoluteUrl","surrogateKeys","cachedSync","invalidateSurrogateKeys","currentSync","withCORS","crossDomain","xhrFields","withCredentials","namespace","surrogateKey","session","window","user_data","namespaceKey","index","_keys","JSON","parse","localStorage","getItem","add","key","keys","Date","setItem","stringify","invalidate","each","k","removeItem","cache","value","callback","val","defer","cached","success","cachedValue","resp","status","xhr","responseText","log","debug","syncAbort","self","_xhr","abort","apply","always","delayedSaveSync","delay","dsync","debounce","saveAbort","_saving","Model","prototype","save","console"],"mappings":"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","file":"app.js","sourcesContent":["//i18n\n//\nfunction _t(s) {\n  return s;\n}\n\nvar i18n = {\n  // format('hello, {0}', 'rambo') -> \"hello, rambo\"\n  format: function (str) {\n    for(var i = 1; i < arguments.length; ++i) {\n      var attrs = arguments[i];\n      for(var attr in attrs) {\n        str = str.replace(RegExp('\\\\{' + attr + '\\\\}', 'g'), attrs[attr]);\n      }\n    }\n    return str;\n  }\n};\n\n(function() {\n\n  // helper functions needed from backbone (they are not exported)\n  var getValue = function(object, prop, method) {\n    if (!(object && object[prop])) return null;\n    return _.isFunction(object[prop]) ? object[prop](method) : object[prop];\n  };\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n\n  // backbone.sync replacement to control url prefix\n  Backbone.originalSync = Backbone.sync;\n  Backbone.sync = function(method, model, options) {\n    var url = options.url || getValue(model, 'url', method) || urlError();\n    // prefix if http is not present\n    var absoluteUrl = url.indexOf('http') === 0 || url.indexOf(\"//\") === 0;\n    if (!absoluteUrl) {\n      options.url = cdb.config.prefixUrl() + url;\n    } else {\n      options.url = url;\n    }\n    if (method !== 'read') {\n      // remove everything related\n      if (model.surrogateKeys) {\n        Backbone.cachedSync.invalidateSurrogateKeys(getValue(model, 'surrogateKeys'));\n      }\n    }\n    return Backbone.originalSync(method, model, options);\n  };\n\n  Backbone.currentSync = Backbone.sync;\n  Backbone.withCORS = function(method, model, options) {\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.crossDomain) {\n      options.crossDomain = true;\n    }\n\n    if (!options.xhrFields) {\n      options.xhrFields = { withCredentials: true };\n    }\n\n    return Backbone.currentSync(method, model, options);\n  };\n\n  // this method returns a cached version of backbone sync\n  // take a look at https://github.com/teambox/backbone.memoized_sync/blob/master/backbone.memoized_sync.js\n  // this is the same concept but implemented as a wrapper for ``Backbone.sync``\n  // usage:\n  // initialize: function() {\n  //    this.sync = Backbone.cachedSync(this.user_name);\n  // }\n  Backbone.cachedSync = function(namespace, sync) {\n\n    if (!namespace) {\n      throw new Error(\"cachedSync needs a namespace as argument\");\n    }\n\n    var surrogateKey = namespace;\n    var session = window.user_data && window.user_data.username;\n    // no user session, no cache\n    // there should be a session to have cache so we avoid\n    // cache collision for someone with more than one account\n    if (session) {\n      namespace += \"-\" + session;\n    } else {\n      return Backbone.sync;\n    }\n\n    var namespaceKey = \"cdb-cache/\" + namespace;\n\n    // saves all the localstore references to the namespace\n    // inside localstore. It allows to remove all the references\n    // at a time\n    var index = {\n\n      // return a list of references for the namespace\n      _keys: function() {\n        return JSON.parse(localStorage.getItem(namespaceKey) || '{}');\n      },\n\n      // add a new reference for the namespace\n      add: function(key) {\n        var keys = this._keys();\n        keys[key] = +new Date();\n        localStorage.setItem(namespaceKey, JSON.stringify(keys));\n      },\n\n      // remove all the references for the namespace\n      invalidate: function() {\n        var keys = this._keys();\n        _.each(keys, function(v, k) {\n          localStorage.removeItem(k);\n        });\n        localStorage.removeItem(namespaceKey);\n      }\n\n    }\n\n    // localstore-like cache wrapper\n    var cache = {\n\n      setItem: function(key, value) {\n        localStorage.setItem(key, value);\n        index.add(key);\n        return this;\n      },\n\n      // this is async in case the data needs to be compressed\n      getItem: function(key, callback) {\n        var val = localStorage.getItem(key);\n        _.defer(function() {\n          callback(val);\n        });\n      },\n\n      removeItem: function(key) {\n        localStorage.removeItem(key);\n        index.invalidate();\n      }\n    }\n\n    var cached = function(method, model, options) {\n      var url = options.url || getValue(model, 'url') || urlError();\n      var key = namespaceKey + \"/\" + url;\n\n      if (method === 'read') {\n        var success = options.success;\n        var cachedValue = null;\n\n        options.success = function(resp, status, xhr) {\n           // if cached value is ok\n           if (cachedValue && xhr.responseText === cachedValue) {\n             return;\n           }\n           cache.setItem(key, xhr.responseText);\n           success(resp, status, xhr);\n        }\n\n        cache.getItem(key, function(val) {\n          cachedValue = val;\n          if (val) {\n            success(JSON.parse(val), \"success\");\n          }\n        });\n      } else {\n        cache.removeItem(key);\n      }\n      return (sync || Backbone.sync)(method, model, options);\n    }\n\n    // create a public function to invalidate all the namespace\n    // items\n    cached.invalidate = function() {\n      index.invalidate();\n    }\n\n    // for testing and debugging porpuposes\n    cached.cache = cache;\n\n    // have a global namespace -> sync function in order to avoid invalidation\n    Backbone.cachedSync.surrogateKeys[surrogateKey] = cached;\n\n    return cached;\n  }\n\n  Backbone.cachedSync.surrogateKeys = {};\n\n  Backbone.cachedSync.invalidateSurrogateKeys = function(keys) {\n    _.each(keys, function(k) {\n      var s = Backbone.cachedSync.surrogateKeys[k];\n      if (s) {\n        s.invalidate();\n      } else {\n        cdb.log.debug(\"surrogate key not found: \" + k);\n      }\n    });\n  }\n\n})();\n\nBackbone.syncAbort = function() {\n  var self = arguments[1];\n  if (self._xhr) {\n    self._xhr.abort();\n  }\n  self._xhr = Backbone.sync.apply(this, arguments);\n  self._xhr.always(function() { self._xhr = null; });\n  return self._xhr;\n};\n\nBackbone.delayedSaveSync = function(sync, delay) {\n  var dsync = _.debounce(sync, delay);\n  return function(method, model, options) {\n    if (method === 'create' || method === 'update') {\n      return dsync(method, model, options);\n    } else {\n      return sync(method, model, options);\n    }\n  }\n}\n\nBackbone.saveAbort = function() {\n  var self = this;\n  if (this._saving && this._xhr) {\n    this._xhr.abort();\n  }\n  this._saving = true;\n  var xhr = Backbone.Model.prototype.save.apply(this, arguments);\n  this._xhr = xhr;\n  xhr.always(function() { self._saving = false; });\n  return xhr;\n};\n","cdb.common = {};\ncdb.admin = {};\ncdb.admin.dashboard = {};\ncdb.forms = {};\ncdb.open = {};\ncdb.dashboard = {};\n\ncdb.config.setUrlVersion = function(modelName, method, v) {\n  cdb.config.set(modelName + '_' + method + '_url_version', v || 'v1');\n}\n\ncdb.config.urlVersion = function(modelName, method, defaultVersion) {\n  method = method || ''\n  var version = cdb.config.get(modelName + \"_\" + method + '_url_version')\n  return version || defaultVersion || 'v1';\n}\n\n// return prefixUrl for all the queries to the rest api\ncdb.config.prefixUrl = function() {\n  return this.get('url_prefix') || '';\n};\n\n// if the prefixUrl is like http://host.com/u/o returns\n// /u/o part\ncdb.config.prefixUrlPathname = function() {\n  var prefix = this.prefixUrl();\n  if (prefix !== '') {\n    try {\n      if (prefix && prefix.indexOf('/') === -1) throw new TypeError('invalid URL');\n      var a = document.createElement('a');\n      a.href = prefix;\n      var url = a.pathname;\n      // remove trailing slash\n      return url.replace(/\\/$/, '');\n    } catch(e) {\n      // not an url\n    }\n  }\n  return prefix;\n};\n\n/**\n *  returns the maps API resource name, removing protocol.\n *  {user}.carto.com:3333 || carto.com:3333/{user} || ...\n */\ncdb.config.getMapsResourceName = function(username) {\n  var url;\n  var mapsApiTemplate = this.get('maps_api_template');\n  if (mapsApiTemplate) {\n    url = mapsApiTemplate.replace(/(http|https)?:\\/\\//, '').replace(/{user}/g, username);\n  }\n  return url;\n}\n","cdb.config.set('assets_url', '/assets/4.7.15');\nconsole.log('cartodbui v4.7.15');"]}
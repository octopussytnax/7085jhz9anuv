{"version":3,"sources":["../../../../lib/assets/javascripts/cartodb/public/authenticated_user.js","../../../../lib/assets/javascripts/cartodb/models/cartodb_layer.js","../../../../lib/assets/javascripts/cartodb/models/map.js","../../../../lib/assets/javascripts/cartodb/models/group.js","../../../../lib/assets/javascripts/cartodb/models/user_groups.js","../../../../lib/assets/javascripts/cartodb/models/organization_groups.js","../../../../lib/assets/javascripts/cartodb/models/user.js","../../../../lib/assets/javascripts/cartodb/models/permissions.js","../../../../lib/assets/javascripts/cartodb/models/group_users.js","../../../../lib/assets/javascripts/cartodb/models/grantable.js","../../../../lib/assets/javascripts/cartodb/models/grantables.js","../../../../lib/assets/javascripts/cartodb/models/organization.js","../../../../lib/assets/javascripts/cartodb/models/like.js","../../../../lib/assets/javascripts/cartodb/models/export_map_model.js","../../../../lib/assets/javascripts/cartodb/old_common/dropdown_menu.js","../../../../lib/assets/javascripts/cartodb/old_common/urls/url.js","../../../../lib/assets/javascripts/cartodb/old_common/urls/dashboard_vis_url.js","../../../../lib/assets/javascripts/cartodb/old_common/urls/dashboard_datasets_url.js","../../../../lib/assets/javascripts/cartodb/old_common/urls/dashboard_url.js","../../../../lib/assets/javascripts/cartodb/old_common/urls/dataset_url.js","../../../../lib/assets/javascripts/cartodb/old_common/urls/map_url.js","../../../../lib/assets/javascripts/cartodb/old_common/urls/organization_url.js","../../../../lib/assets/javascripts/cartodb/old_common/urls/user_url.js"],"names":["cdb","open","AuthenticatedUser","core","Model","extend","defaults","username","avatar_url","url","host","this","get","_getCurrentHost","window","location","admin","CartoDBLayer","geo","MAX_HISTORY","MAX_HISTORY_QUERY","MAX_HISTORY_TILE_STYLE","initialize","sync","_","debounce","error","set","initHistory","table","CartoDBTableMetadata","id","infowindow","ui","InfowindowModel","template_name","tooltip","wizard_properties","WizardProperties","layer","bind","_manageInteractivity","legend","LegendModel","fetch","bindInfowindow","bindLegend","bindTable","table_attr","attributes","isTableLoaded","toLayerGroup","attr","clone","layer_definition","version","layers","push","getLayerDef","type","query","Utils","safeTableNameQuoting","table_name","query_wrapper","template","sql","options","cartocss","cartocss_version","interactivity","property","localStorage","addToHistory","value","length","trimHistory","limit","toUpperCase","removedValue","splice","add","moveHistoryPosition","n","newPosition","Math","abs","getCurrentHistoryPosition","currentPosition","redoHistory","undoHistory","h","isHistoryAtLastPosition","isHistoryAtFirstPosition","stored","storedSize","minimumPos","toJSON","c","extra_params","api_key","map_key","d","kind","toLowerCase","order","supportsInteractivity","undefined","parse","data","xhr","_saving","isNew","attrs","wp","properties","metadata","method","model","JSON","stringify","contentType","Backbone","syncAbort","unbindSQLView","sqlView","unbind","getCurrentState","bindSQLView","self","errorSQLView","isInSQLView","modify_rows","invalidate","useSQLView","force_data_fetch","trigger","save","getSQL","sql_source","sqlSource","applySQLView","add_to_history","success","updateCartoCss","previous","containsColumn","tooltipColumns","getInteractivity","concat","join","previousName","newName","tileStyle","replaceRegexp","RegExp","replace","tile_style","silent","infowindowData","pos","each","v","contains","addField","linkToInfowindow","watchedFields","deferredSave","removeMissingFields","columnNames","resetQuery","m","e","clearSQLView","setSQL","moveToFront","opts","collection","dataLayers","getDataLayers","moveLayer","to","createDefaultLayerForTable","tableName","userName","user_name","CartoStyles","DEFAULT_GEOMETRY_STYLE","style_version","visible","maps_api_template","config","no_cdn","prototype","fields","disabled","alternative_names","old_fields","old_template_name","width","maxHeight","columns","columnsSet","i","name","removeField","addMissingFields","fieldsSet","mergeFields","GMapsBaseLayer","parent_id","WMSLayer","_generateClassName","urlTemplate","className","parseInt","isNumber","PlainLayer","TileLayer","validateTemplateURL","callbacks","subdomains","image","Image","onload","onerror","src","floor","random","byCustomURL","tms","indexOf","TypeError","attribution","maxZoom","minZoom","TorqueLayer","Layers","_DATA_LAYERS","typeClass","Tiled","CartoDB","Plain","GMapsBase","WMS","torque","typeMap","Layer::Tiled","Layer::Carto","Layer::Background","tiled","carto","wms","background","gmapsbase","_isSorted","sort","call","models","Collection","apply","arguments","getTorqueLayers","where","getTiledLayers","getLayerDefIndex","cartodbLayers","getLayersByType","cid","layerDef","filter","lyr","getTotalDataLayers","getTotalDataLegends","log","info","isLayerOnTopOfDataLayers","dataLayerOnTop","urlVersion","map","saveLayers","array","unset","a","b","isEqual","movingLayer","newIndex","layerAtNewIndex","at","remove","size","complete","Map","urlRoot","constructor","__super__","delayedSaveSync","_fetchLayers","_layersChanged","_updateAttributions","none","_adjustZoomtoLayer","dataLayer","relatedTo","_fetchOrCreate","bounding_box_ne","bounding_box_sw","view_bounds_ne","view_bounds_sw","center","map_id","create","setBaseLayer","baseLayer","isBaseLayerAdded","newBaseLayer","currentBaseLayer","newBaseLayerHasLabels","_updateBaseLayer","_replaceBaseLayer","_addBaseLayer","_hasLabelsLayer","_updateLabelsLayer","_addLabelsLayer","_destroyLabelsLayer","newAttributes","clear","last","labelsLayer","_labelsLayerNameFromBaseLayer","destroy","addDataLayer","addLayer","table_id","autoSave","changeProvider","provider","baselayer","_changeBaseLayer","change","resp","_t","isProviderGmaps","notice","msg","timeout","err","responseText","errors","addCartodbLayerFromTable","layerReady","newLayer","active","wait","clamp","fmod","Number","toPrecision","latlng","lon","Group","display_name","users","GroupUsers","group","UserGroups","organization","OrganizationGroups","Error","response","total_entries","groups","newGroupById","totalCount","UserLayers","user","custom","category","User","tables","email","Organization","currentUserId","result","isInsideOrg","isOrgOwner","owner","isOrgAdmin","isViewer","isBuilder","nameOrUsername","renderData","currentUser","fetchTables","_fetchingTables","Visualizations","u","hasCreateDatasetsFeature","canCreateDatasets","hasCreateMapsFeature","canAddLayerTo","getMaxLayers","max_layers","getMaxConcurrentImports","concurrent_imports","featureEnabled","featureFlags","isCloseToLimits","quota","remainingQuota","getMaxLayersPerMap","canStartTrial","canCreatePrivateDatasets","actions","private_tables","equals","otherUser","viewUrl","common","UserUrl","base_url","is_org_admin","upgradeContactEmail","usedQuotaPercentage","assignedQuotaInRoundedMb","toFixed","assignedQuotaPercentage","Permission","acl","_generateOwner","_generateAcl","reset","aclItem","entity","_grantAccess","access","cleanPermissions","hasAccess","hasReadAccess","findRepresentableAclItem","hasWriteAccess","READ_WRITE","canChangeReadAccess","_canChangeAccess","canChangeWriteAccess","representableAclItem","isOwner","_ownAclItem","grantWriteAccess","grantReadAccess","READ_ONLY","revokeWriteAccess","revokeAccess","getUsersWithAnyPermission","chain","_hasTypeUser","_getEntity","isSharedWithOrganization","any","_hasTypeOrg","overwriteAcl","otherPermission","_newAclItem","checkList","_findMostPrivilegedAclItem","fnName","_isOrganization","object","isFunction","find","_organizationAclItem","org","_mostPrivilegedGroupAclItem","list","iteratee","x","isValid","ACLItem","isOwn","validate","p","pick","total_user_entries","addInBatch","userIds","_batchAsyncProcessUsers","removeInBatch","done","ids","deferred","$","Deferred","ajax","prefixUrl","args","resolve","reject","Grantable","_createEntity","capitalize","Grantables","reduce","grantables","memo","display_email","admin_email","collectionOpts","Users","_setOrganizationOnModel","containsUser","OrganizationUrl","_DEFAULT_EXCLUDE_CURRENT_USER","elder","_excludeCurrentUser","comparator","mdl","excludeCurrentUser","exclude","restoreExcludeCurrentUser","r","Invites","users_emails","welcome_text","organizationId","Like","likeable","bindAll","on","liked","likes","_onSaveError","status","statusText","toggleLiked","newByVisData","vis_id","omit","ExportMapModel","_loadAttributes","requestExport","_requestExportSuccessHandler","user_data","god","cancelExport","_interrupt","_pollPID","setInterval","_checkState","_errorHandler","_finishExport","clearInterval","visualization_id","DropdownMenu","Dropdown","show","dfd","delegateEvents","$el","css","marginTop","vertical_position","opacity","display","animate","margin","duration","speedIn","el","promise","openAt","y","top","left","addClass","horizontal_position","tick","isOpen","when","hide","speedOut","target","removeClass","Url","urlToPath","byBaseUrl","toString","pathname","match","_joinArgumentsWithSlashes","Array","slice","flatten","compact","DashboardVisUrl","lockedItems","sharedItems","likedItems","DashboardDatasetsUrl","dataLibrary","DashboardUrl","datasets","maps","deepInsights","DatasetUrl","edit","public","MapUrl","isUndefined","accountSettings","publicProfile","apiKeys","logout","dashboard"],"mappings":"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","file":"public_map_deps.js","sourcesContent":["\n/**\n *  Model for authenticated user endpoint\n *\n */\n\ncdb.open.AuthenticatedUser = cdb.core.Model.extend({\n\n  defaults: {\n    username: '',\n    avatar_url: ''\n  },\n\n  url: function() {\n    var host = this.get('host') ? this.get('host') : this._getCurrentHost();\n    return \"//\" + host + \"/api/v1/get_authenticated_users\";\n  },\n\n  _getCurrentHost: function() {\n    return window.location.host;\n  }\n});\n","cdb.admin.CartoDBLayer = cdb.geo.CartoDBLayer.extend({\n  MAX_HISTORY: 5,\n  MAX_HISTORY_QUERY: 5,\n  MAX_HISTORY_TILE_STYLE: 5,\n\n  initialize: function() {\n    this.sync = _.debounce(this.sync, 1000);\n    this.error = false;\n\n    this.set('use_server_style', true);\n\n    this.initHistory('query');\n    this.initHistory('tile_style');\n\n    this.table = new cdb.admin.CartoDBTableMetadata({\n      id: this.get('table_name')\n    });\n\n    this.infowindow = new cdb.geo.ui.InfowindowModel({\n      template_name:  'infowindow_light'\n    });\n\n    this.tooltip = new cdb.geo.ui.InfowindowModel({\n      template_name:  'tooltip_light'\n    });\n\n    var wizard_properties = this.get('wizard_properties');\n\n    this.wizard_properties = new cdb.admin.WizardProperties(_.extend({},\n      wizard_properties, {\n        table: this.table,\n        layer: this\n      }\n    ));\n\n    //this.wizard_properties.properties(wizard_properties);\n\n    this.wizard_properties.bind('change:type', this._manageInteractivity, this);\n\n    this.legend = new cdb.geo.ui.LegendModel();\n\n    // Bindings\n    this.bind('change:table_name', function() {\n      this.table.set('id', this.get('table_name')).fetch();\n    }, this);\n\n    // schema changes should affect first to infowindow, tooltip\n    // and legend before table\n    this.bindInfowindow(this.infowindow, 'infowindow');\n    this.bindInfowindow(this.tooltip, 'tooltip');\n    this.bindLegend(this.legend);\n    this.bindTable(this.table);\n\n    this.tooltip.bind('change:fields', this._manageInteractivity, this);\n\n    if (this.get('table')) {\n      table_attr = this.get('table');\n      delete this.attributes.table;\n      this.table.set(table_attr);\n    }\n    if (!this.isTableLoaded()) {\n      this.table.fetch();\n    }\n  },\n\n  isTableLoaded: function() {\n    return this.table.get('id') && this.table.get('privacy');\n  },\n\n  toLayerGroup: function() {\n    var attr = _.clone(this.attributes);\n    attr.layer_definition = {\n      version: '1.0.1',\n      layers: []\n    };\n    if (this.get('visible')) {\n      attr.layer_definition.layers.push(this.getLayerDef());\n    }\n    attr.type = 'layergroup'\n    return attr;\n  },\n\n  getLayerDef: function() {\n    var attr = this.attributes;\n    var query = attr.query || 'select * from ' + cdb.Utils.safeTableNameQuoting(attr.table_name);\n    if(attr.query_wrapper) {\n      query = _.template(attr.query_wrapper)({ sql: query });\n    }\n    return {\n      type: 'cartodb',\n      options: {\n        sql: query,\n        cartocss: this.get('tile_style'),\n        cartocss_version: '2.1.1',\n        interactivity: this.get('interactivity')\n      }\n    }\n  },\n\n  /**\n   * Initializes the history if it doesn't exits and sets the position pointer to 0\n   * @param  {string} property\n   */\n  initHistory: function(property) {\n    if(!this.get(property+'_history')) {\n      this.set(property+'_history', []);\n    }\n    this[property+'_history_position'] = 0;\n    this[property+'_storage'] = new cdb.admin.localStorage(property+'_storage_'+this.get('table_name'));\n  },\n  /**\n   * Add a value to the property history if it's not the same than the last one\n   * @param {string} property\n   * @param {string} value\n   */\n  addToHistory: function(property, value) {\n    if(value != this.get(property+'_history')[this.get(property+'_history').length - 1]) {\n      this.get(property+'_history').push(value);\n      this.trimHistory(property);\n      this[property+'_history_position'] = this.get(property+'_history').length - 1;\n    }\n  },\n  /**\n   * Trim the history array to make sure its length isn't over MAX_HISTORY\n   * @param  {String} property [description]\n   */\n  trimHistory: function(property) {\n    var limit = this['MAX_HISTORY_'+property.toUpperCase()] ?\n      this['MAX_HISTORY_'+property.toUpperCase()] :\n      this.MAX_HISTORY;\n    while(this.get(property+'_history').length > limit) {\n      var removedValue = this.get(property+'_history').splice(0,1);\n      this[property+'_storage'].add(removedValue[0]);\n    }\n  },\n  /**\n   * Moves the history position pointer n positions and notify that the property needs to be refreshed on views\n   * @param  {String} property\n   * @param  {Integer} n\n   */\n  moveHistoryPosition: function(property, n) {\n      var newPosition = this[property+'_history_position'] + n;\n    if(newPosition >= 0 && newPosition < this.get(property+'_history').length) {\n      this[property+'_history_position'] = newPosition;\n    } else {\n      if(newPosition < 0 && Math.abs(newPosition) <= this[property+'_storage'].get().length) {\n        this[property+'_history_position'] = newPosition;\n      }\n    }\n  },\n  /**\n   * returns the value saved on the position of the current _history_position, either from memory of from localStorage\n   * @param  {String} property\n   * @return {String}\n   */\n  getCurrentHistoryPosition: function(property) {\n    var currentPosition = this[property+'_history_position'];\n    if(this[property+'_history_position'] >= 0) {\n      return this.get(property+'_history')[currentPosition];\n    } else {\n      if(Math.abs(currentPosition) <= this[property+'_storage'].get().length) {\n\n        return this[property+'_storage'].get(this[property+'_storage'].get().length - Math.abs(currentPosition));\n      } else {\n        return this.get(property+'_history')[0]\n      }\n    }\n\n  },\n  /**\n   * Advances by one the history_position and returns the value saved on that pos\n   * @param  {String} property\n   * @return {String}\n   */\n  redoHistory: function(property) {\n    this.moveHistoryPosition(property, 1);\n    return this.getCurrentHistoryPosition(property);\n  },\n  /**\n   * Reduces by one the history_position and returns the value saved on that pos\n   * @param  {String} property\n   * @return {String}\n   */\n  undoHistory: function(property) {\n    var h = this.getCurrentHistoryPosition(property);\n    this.moveHistoryPosition(property, -1);\n    return h;\n  },\n\n  isHistoryAtLastPosition: function(property) {\n    if(this.get(property+'_history').length === 0) {\n      return true;\n    }\n    return ((this.get(property+'_history').length-1) == this[property+'_history_position']);\n  },\n\n  isHistoryAtFirstPosition: function(property) {\n    if(this.get(property+'_history').length === 0) {\n      return true;\n    }\n    var stored = this[property+'_storage'].get();\n    if(stored && stored.length === 0) {\n      if(this[property+'_history_position'] === 0) {\n        return true;\n      }\n    } else {\n      var storedSize = stored ? 1*stored.length : 0;\n      var minimumPos = -1* storedSize;\n      return (minimumPos == this[property+'_history_position']);\n    }\n    return false;\n  },\n\n  clone: function() {\n    var attr = _.clone(this.attributes);\n    delete attr.id;\n    attr.table = this.table.toJSON();\n    return new cdb.admin.CartoDBLayer(attr);\n  },\n\n  toJSON: function() {\n    var c = _.clone(this.attributes);\n    // remove api key\n    if(c.extra_params) {\n      c.extra_params = _.clone(this.attributes.extra_params);\n      if(c.extra_params.api_key) {\n        delete c.extra_params.api_key;\n      }\n      if(c.extra_params.map_key) {\n        delete c.extra_params.map_key;\n      }\n    }\n\n    delete c.infowindow;\n    delete c.tooltip;\n    c.wizard_properties = this.wizard_properties.toJSON();\n    c.legend = this.legend.toJSON();\n    var d = {\n      // for some reason backend does not accept cartodb as layer type\n      kind: c.type.toLowerCase() === 'cartodb' ? 'carto': c.type,\n      options: c,\n      order: c.order,\n      infowindow: null,\n      tooltip: this.tooltip.toJSON()\n    };\n\n    // Don't send infowindow data if wizard doesn't support it\n    // It will make the tiler fails\n    if (this.wizard_properties.supportsInteractivity()) {\n      d.infowindow = this.infowindow.toJSON();\n    }\n\n    if(c.id !== undefined) {\n      d.id = c.id;\n    }\n    return d;\n  },\n\n  parse: function(data, xhr) {\n    var c = {};\n    // in case this is a response of saving the layer discard\n    // values from the server\n    if (!data || this._saving && !this.isNew()) {\n      return c;\n    }\n\n    // if api_key exist alread, set in params to not lose it\n    if(data.options.extra_params && this.attributes && this.attributes.extra_params) {\n      data.options.extra_params.map_key = this.attributes.extra_params.map_key;\n    }\n\n    var attrs = this.attributes;\n    var wp = attrs && attrs.wizard_properties;\n\n    if(wp && wp.properties && wp.properties.metadata) {\n      if (data.options.wizard_properties && data.options.wizard_properties.properties) {\n        data.options.wizard_properties.properties.metadata = wp.properties.metadata;\n      }\n    }\n\n    if (this.wizard_properties && data.options.wizard_properties) {\n      this.wizard_properties.properties(data.options.wizard_properties);\n    }\n\n    _.extend(c, data.options, {\n      id: data.id,\n      type: data.kind === 'carto' ? 'CartoDB': data.kind,\n      infowindow: data.infowindow,\n      tooltip: data.tooltip,\n      order: data.order\n    });\n\n    return c;\n  },\n\n  sync: function(method, model, options) {\n    if(method != 'read') {\n      options.data =  JSON.stringify(model.toJSON());\n    }\n    options.contentType = 'application/json';\n    options.url = model.url();\n    return Backbone.syncAbort(method, this, options);\n  },\n\n  unbindSQLView: function(sqlView) {\n    this.sqlView.unbind(null, null, this);\n    this.sqlView = null;\n  },\n\n  getCurrentState: function() {\n    if (this.error) {\n      return \"error\";\n    }\n    return \"success\";\n  },\n\n  bindSQLView: function(sqlView) {\n    var self = this;\n    this.sqlView = sqlView;\n    this.sqlView.bind('error', this.errorSQLView, this);\n\n    // on success and no modify rows save the query!\n    this.sqlView.bind('reset', function() {\n      // if the query was cleared while fetchin the data\n      if (!self.table.isInSQLView()) return;\n      self.error = false;\n      if(self.sqlView.modify_rows) {\n        self.set({ query: null });\n        self.invalidate();\n        self.table.useSQLView(null, { force_data_fetch: true });\n        self.trigger('clearSQLView');\n      } else {\n        self.save({\n          query: sqlView.getSQL(),\n          sql_source: sqlView.sqlSource()\n        });\n      }\n    }, this);\n\n    // Set sql view if query was applied\n    var sql = this.get('query');\n    if (sql) {\n      this.applySQLView(sql, { add_to_history: false });\n    } else {\n      this.table.data().fetch();\n    }\n  },\n\n  bindTable: function(table) {\n    this.table = table;\n    var self = this;\n    self.table.bind('change:name', function() {\n      if (self.get('table_name') != self.table.get('name')) {\n        self.fetch({\n          success: function() {\n            self.updateCartoCss(self.table.previous('name'), self.table.get('name'));\n          }\n        });\n      }\n    });\n\n    this.table.bind('change:schema', this._manageInteractivity, this);\n  },\n\n  _manageInteractivity: function() {\n    var interactivity = null;\n    if (this.wizard_properties.supportsInteractivity()) {\n      if(this.table.containsColumn('cartodb_id')) {\n        interactivity = ['cartodb_id'];\n      }\n      var tooltipColumns = this.tooltip.getInteractivity();\n      if (tooltipColumns.length) {\n        interactivity = (interactivity || []).concat(tooltipColumns);\n      }\n      if (interactivity) {\n        interactivity = interactivity.join(',');\n      }\n    }\n    if(this.get('interactivity') !== interactivity) {\n      if (this.isNew()) {\n        this.set({ interactivity: interactivity });\n      } else {\n        this.save({ interactivity: interactivity });\n      }\n    }\n  },\n\n  /**\n   * Updates the style chaging the table name for a new one\n   * @param  {String} previousName\n   * @param  {String} newName\n   */\n  updateCartoCss: function(previousName, newName) {\n    var tileStyle = this.get('tile_style');\n    if (!tileStyle) return;\n    var replaceRegexp = new RegExp('#'+previousName, 'g');\n    tileStyle = tileStyle.replace(replaceRegexp, '#'+newName);\n    this.save({'tile_style': tileStyle});\n  },\n\n  bindLegend: function(legend) {\n\n    var data = this.get('legend');\n\n    if (data) {\n      this.legend.set(data);\n    }\n\n    this.legend.bind('change:template change:type change:title change:show_title change:items', _.debounce(function() {\n      // call with silent so the layer is no realoded\n      // if some view needs to be changed when the legend is changed it should be\n      // subscribed to the legend model not to dataLayer\n      // (which is only a data container for the legend)\n      if (!this.isNew()) {\n        this.save(null, { silent: true });\n      }\n    }, 250), this);\n\n  },\n\n  bindInfowindow: function(infowindow, attr) {\n    attr = attr || 'infowindow';\n    var infowindowData = this.get(attr);\n    if(infowindowData) {\n      infowindow.set(infowindowData);\n    } else {\n      // assign a position from start\n      var pos = 0;\n      _(this.table.get('schema')).each(function(v) {\n        if(!_.contains(['the_geom', 'created_at', 'updated_at', 'cartodb_id'], v[0])) {\n          infowindow.addField(v[0], pos);\n          ++pos;\n        }\n      });\n    }\n\n    this.table.linkToInfowindow(infowindow);\n\n    var watchedFields = 'change:fields change:template_name change:alternative_names change:template change:disabled change:width change:maxHeight';\n    var deferredSave = _.debounce(function() {\n      // call with silent so the layer is no realoded\n      // if some view needs to be changed when infowindow is changed it should be\n      // subscribed to infowindow model not to dataLayer\n      // (which is only a data container for infowindow)\n\n      // since removeMissingFields changes fields, unbind changes temporally\n      infowindow.unbind(watchedFields, deferredSave, this);\n      // assert all the fields are where they should\n      infowindow.removeMissingFields(this.table.columnNames());\n      infowindow.bind(watchedFields, deferredSave, this);\n      if (!this.isNew()) {\n        this.save(null, { silent: true });\n      }\n    }, 250);\n\n    infowindow.bind(watchedFields, deferredSave, this);\n  },\n\n  resetQuery: function() {\n    if (this.get('query')) {\n      this.save({\n        query: undefined,\n        sql_source: null\n      });\n    }\n  },\n\n  errorSQLView: function(m, e) {\n    this.save({ query: null }, { silent: true });\n    this.trigger('errorSQLView', e);\n    this.error = true;\n  },\n\n  clearSQLView: function() {\n    // before reset query we should remove the view\n    this.table.useSQLView(null);\n    this.addToHistory(\"query\", 'SELECT * FROM ' + cdb.Utils.safeTableNameQuoting(this.table.get('name')));\n    // undo history to move backwards the history pointer\n    this.undoHistory(\"query\");\n    this.resetQuery();\n    this.trigger('clearSQLView');\n  },\n\n  applySQLView: function(sql, options) {\n    options = options || {\n      add_to_history: true,\n      sql_source: null\n    };\n    // if the sql change the table data do not save in the data layer\n    // pass though and launch the query directly to the table\n    this.table.useSQLView(this.sqlView);\n    this.sqlView.setSQL(sql, {\n      silent: true,\n      sql_source: options.sql_source || null\n    });\n    if(options.add_to_history) {\n      this.addToHistory(\"query\", sql);\n    }\n    // if there is some error the query is rollbacked\n    this.sqlView.fetch();\n    this.trigger('applySQLView', sql);\n  },\n\n  moveToFront: function(opts) {\n    var layers = this.collection;\n    var dataLayers = layers.getDataLayers();\n\n    layers.moveLayer(this, { to: dataLayers.length });\n  }\n}, {\n\n  createDefaultLayerForTable: function(tableName, userName) {\n    return new cdb.admin.CartoDBLayer({\n      user_name: userName,\n      table_name: tableName,\n      tile_style: \"#\" + tableName + cdb.admin.CartoStyles.DEFAULT_GEOMETRY_STYLE,\n      style_version: '2.1.0',\n      visible: true,\n      interactivity: 'cartodb_id',\n      maps_api_template: cdb.config.get('maps_api_template'),\n      no_cdn: true\n    });\n  }\n\n});\n","\n/*\n * extend infowindow to serialize only the data we need\n */\n_.extend(cdb.geo.ui.InfowindowModel.prototype, {\n  toJSON: function() {\n    var fields = [];\n\n    if (!this.attributes.disabled) {\n      fields = _.clone(this.attributes.fields);\n    }\n\n    return {\n      fields:             fields,\n      template_name:      this.attributes.template_name,\n      template:           this.attributes.template,\n      alternative_names:  this.attributes.alternative_names,\n      old_fields:         this.attributes.old_fields,\n      old_template_name:  this.attributes.old_template_name,\n      width:              this.attributes.width,\n      maxHeight:          this.attributes.maxHeight\n    };\n  },\n\n  removeMissingFields: function(columns) {\n    var columnsSet = {}\n    for(var i = 0; i < columns.length; ++i) {\n      var c = columns[i];\n      columnsSet[c] = true;\n    }\n    var fields = this.get('fields');\n    if (!fields) {\n      return;\n    }\n    for(var i = 0; i < fields.length; ++i) {\n      var name = fields[i].name;\n      if (! (name in columnsSet)) {\n        this.removeField(name);\n      }\n    }\n  },\n\n  addMissingFields: function(columns) {\n    var fieldsSet = {};\n    var fields = this.get('fields');\n\n    for(var i = 0; i < fields.length; ++i) {\n      var c = fields[i].name;\n      fieldsSet[c] = true;\n    }\n\n    for(var i = 0; i < columns.length; ++i) {\n      var name = columns[i];\n      if (! (name in fieldsSet)) {\n        this.addField(name);\n      }\n    }\n  },\n\n  mergeFields: function(columns) {\n    // remove fields that no longer exist\n    this.removeMissingFields(columns);\n    // add new fields that exists\n    this.addMissingFields(columns);\n  },\n\n  // return the list of columns involved in the infowindow\n  // ready to set interactivity in a cartodb layer\n  getInteractivity: function() {\n    var fields = this.get('fields') || [];\n    var columns = [];\n    for(var i = 0; i < fields.length; ++i) {\n      columns.push(fields[i].name);\n    }\n    return columns;\n  }\n});\n\n/**\n * extend gmaps layer for data serialization\n */\ncdb.admin.GMapsBaseLayer = cdb.geo.GMapsBaseLayer.extend({\n\n  clone: function() {\n    return new cdb.admin.GMapsBaseLayer(_.clone(this.attributes));\n  },\n\n  parse: function(data) {\n    var c = {};\n    _.extend(c, data.options, {\n      id: data.id,\n      type: 'GMapsBase',\n      order: data.order,\n      parent_id: data.parent_id\n    });\n    return c;\n  },\n\n  toJSON: function() {\n    var c = _.clone(this.attributes);\n\n    var d = {\n      kind:  'gmapsbase',\n      options: c,\n      order: c.order\n    };\n\n    if(c.id !== undefined) {\n      d.id = c.id;\n    }\n    return d;\n  }\n});\n\n/**\n * extend wms layer for data serialization\n */\ncdb.admin.WMSLayer = cdb.geo.WMSLayer.extend({\n\n  clone: function() {\n    return new cdb.admin.WMSLayer(_.clone(this.attributes));\n  },\n\n  /*\n  * Create className from the urlTemplate of the basemap\n  */\n  _generateClassName: function(urlTemplate) {\n    if (urlTemplate) {\n      var className = urlTemplate;\n\n      if (className && parseInt(className) && _.isNumber(parseInt(className))) {\n        className = \"w\" + className;\n      }\n\n      return className.replace(/\\s+/g, '').replace(/[^a-zA-Z_0-9 ]/g, \"\").toLowerCase();\n\n    } else return \"\";\n  },\n\n  parse: function(data) {\n\n    var self = this;\n    var c = {};\n\n    _.extend(c, data.options, {\n      id: data.id,\n      className: self._generateClassName(data.options.layers),\n      type: 'WMS',\n      order: data.order,\n      parent_id: data.parent_id\n    });\n\n    return c;\n  },\n\n  toJSON: function() {\n    var c = _.clone(this.attributes);\n\n    var d = {\n      kind:  'wms',\n      options: c,\n      order: c.order\n    };\n\n    if(c.id !== undefined) {\n      d.id = c.id;\n    }\n    return d;\n  }\n\n});\n\n/**\n * extend plain layer for data serialization\n */\ncdb.admin.PlainLayer = cdb.geo.PlainLayer.extend({\n\n  parse: function(data) {\n    var c = {};\n    _.extend(c, data.options, {\n      id: data.id,\n      type: 'Plain',\n      order: data.order,\n      parent_id: data.parent_id\n    });\n    return c;\n  },\n\n  toJSON: function() {\n    var c = _.clone(this.attributes);\n\n    var d = {\n      kind:  'background',\n      options: c,\n      order: c.order\n    };\n\n    if(c.id !== undefined) {\n      d.id = c.id;\n    }\n    return d;\n  }\n});\n\n/**\n * extend tiled layer to adapt serialization\n */\ncdb.admin.TileLayer = cdb.geo.TileLayer.extend({\n\n  clone: function() {\n    return new cdb.admin.TileLayer(_.clone(this.attributes));\n  },\n\n  /*\n  * Create className from the urlTemplate of the basemap\n  */\n  _generateClassName: function(urlTemplate) {\n    if (urlTemplate) {\n      return urlTemplate.replace(/\\s+/g, '').replace(/[^a-zA-Z_0-9 ]/g, \"\").toLowerCase();\n    } else return \"\";\n  },\n\n  parse: function(data) {\n    var self = this;\n    var c = {};\n\n    _.extend(c, data.options, {\n      id: data.id,\n      className: self._generateClassName(data.options.urlTemplate),\n      type: 'Tiled',\n      order: data.order,\n      parent_id: data.parent_id\n    });\n\n    return c;\n  },\n\n  toJSON: function() {\n    var c = _.clone(this.attributes);\n\n    var d = {\n      kind:  'tiled',\n      options: c,\n      order: c.order\n    };\n\n    if(c.id !== undefined) {\n      d.id = c.id;\n    }\n    return d;\n  },\n\n  /**\n   * validateTemplateURL - Validates current urlTemplate of layer.\n   *\n   * @param {Object} callbacks with success and error functions defined to be called depending on validation outcome.\n   */\n  validateTemplateURL: function(callbacks) {\n    var subdomains = ['a', 'b', 'c'];\n    var image = new Image();\n    image.onload = callbacks.success;\n    image.onerror = callbacks.error;\n    image.src = this.get('urlTemplate').replace(/\\{s\\}/g, function() {\n      return subdomains[Math.floor(Math.random() * 3)];\n    })\n      .replace(/\\{x\\}/g, '0')\n      .replace(/\\{y\\}/g, '0')\n      .replace(/\\{z\\}/g, '0');\n  }\n\n}, {\n\n  /**\n   * @param {String} url\n   * @param {Boolean} tms\n   * @return {cdb.admin.TileLayer}\n   */\n  byCustomURL: function(url, tms) {\n    // Minimal test for \"valid URL\" w/o having to complicate it with regex\n    if (url && url.indexOf('/') === -1) throw new TypeError('invalid URL');\n\n    // Only lowercase the placeholder variables, since the URL may contain case-sensitive data (e.g. API keys and such)\n    url = url.replace(/\\{S\\}/g, \"{s}\")\n      .replace(/\\{X\\}/g, \"{x}\")\n      .replace(/\\{Y\\}/g, \"{y}\")\n      .replace(/\\{Z\\}/g, \"{z}\");\n\n    var layer = new cdb.admin.TileLayer({\n      urlTemplate: url,\n      attribution: null,\n      maxZoom: 21,\n      minZoom: 0,\n      name: '',\n      tms: tms\n    });\n    layer.set('className', layer._generateClassName(url));\n\n    return layer;\n  }\n});\n\ncdb.admin.TorqueLayer = cdb.admin.CartoDBLayer.extend({\n\n  /*parse: function(data, options) {\n    var c = cdb.admin.CartoDBLayer.prototype.parse.call(this, data, options);\n    c.type = 'torque';\n    return c;\n  }*/\n\n});\n\ncdb.admin.Layers = cdb.geo.Layers.extend({\n\n  _DATA_LAYERS: ['CartoDB', 'torque'],\n\n  // the model class works here like a factory\n  // depending on the kind of layer creates a\n  // type of layer or other\n  model: function(attrs, options) {\n    var typeClass = {\n      'Tiled': cdb.admin.TileLayer,\n      'CartoDB': cdb.admin.CartoDBLayer,\n      'Plain': cdb.admin.PlainLayer,\n      'GMapsBase': cdb.admin.GMapsBaseLayer,\n      'WMS': cdb.admin.WMSLayer,\n      'torque': cdb.admin.CartoDBLayer\n    };\n    var typeMap = {\n      'Layer::Tiled': 'Tiled',\n      'Layer::Carto': 'CartoDB',\n      'Layer::Background': 'Plain',\n      'tiled': 'Tiled',\n      'carto': 'CartoDB',\n      'wms': 'WMS',\n      'background': 'Plain',\n      'gmapsbase': 'GMapsBase',\n      'torque': 'torque'\n    };\n\n    return new typeClass[typeMap[attrs.kind]](attrs, options);\n  },\n\n  initialize: function() {\n    this.bind('change:order', function() {\n      if (!this._isSorted()) this.sort();\n    });\n    cdb.geo.Layers.prototype.initialize.call(this);\n  },\n\n  add: function(models, options) {\n    return Backbone.Collection.prototype.add.apply(this, arguments);\n  },\n\n  getTorqueLayers: function() {\n    return this.where({ type: 'torque' });\n  },\n\n  getTiledLayers: function() {\n    return this.where({ type: 'Tiled' });\n  },\n\n  // given layer model returns the index inside the layer definition\n  getLayerDefIndex: function(layer) {\n    var cartodbLayers = this.getLayersByType('CartoDB');\n    if(!cartodbLayers.length) return -1;\n    for(var i = 0, c = 0; i < cartodbLayers.length; ++i) {\n      if(cartodbLayers[i].get('visible')) {\n        if(cartodbLayers[i].cid === layer.cid) {\n          return c;\n        }\n        ++c;\n      }\n    }\n    return -1;\n  },\n\n  getLayerDef: function() {\n    var cartodbLayers = this.getLayersByType('CartoDB');\n    var layerDef = {\n      version:'1.0.1',\n      layers: []\n    };\n\n    for(var i = 0; i < cartodbLayers.length; ++i) {\n      if(cartodbLayers[i].get('visible')) {\n        layerDef.layers.push(cartodbLayers[i].getLayerDef());\n      }\n    }\n    return layerDef;\n  },\n\n  /** return non-base layers */\n  getDataLayers: function() {\n    var self = this;\n    return this.filter(function(lyr) {\n      return _.contains(self._DATA_LAYERS, lyr.get('type'));\n    });\n  },\n\n  /** without non-base layers */\n  getTotalDataLayers: function() {\n    return this.getDataLayers().length;\n  },\n\n  /** without non-base layers */\n  getTotalDataLegends: function() {\n    var self = this;\n    return this.filter(function(lyr) {\n      return _.contains(self._DATA_LAYERS, lyr.get('type')) &&\n            lyr.get('legend') &&\n            lyr.get('legend').type &&\n            lyr.get('legend').type.toLowerCase() !== \"none\";\n    }).length;\n  },\n\n  getLayersByType: function(type) {\n    if (!type || type === '' ) {\n      cdb.log.info(\"a layer type is necessary to get layers\");\n      return 0;\n    }\n\n    return this.filter(function(lyr) {\n      return lyr.get('type') === type;\n    });\n  },\n\n  isLayerOnTopOfDataLayers: function(layer) {\n    var dataLayerOnTop = this.getDataLayers().splice(-1)[0];\n    return dataLayerOnTop.cid === layer.cid;\n  },\n\n  url: function(method) {\n    var version = cdb.config.urlVersion('layer', method);\n    return '/api/' + version + '/maps/' +  this.map.id + '/layers';\n  },\n\n  parse: function(data) {\n    return data.layers;\n  },\n\n  saveLayers: function(opts) {\n    opts = opts || {};\n    this.save(null, opts);\n  },\n\n  save: function(attrs, opts) {\n    Backbone.sync('update', this, opts);\n  },\n\n  toJSON: function(options) {\n    // We can't use the default toJSON because it uses this.map(function(){...})\n    // function within it but we override it using map containing all map stuff there.\n    // And we have to send all layers data within a variable called layers. \n    var array = _.map(this.models, function(model) {\n      return model.toJSON(options);\n    });\n\n    return { layers: array }\n  },\n\n  clone: function(layers) {\n    layers = layers || new cdb.admin.Layers();\n    this.each(function(layer) {\n      if(layer.clone) {\n        var lyr = layer.clone();\n        lyr.unset('id');\n        layers.add(lyr);\n      } else {\n        var attrs = _.clone(layer.attributes);\n        delete attrs.id;\n        layers.add(attrs);\n      }\n    });\n    return layers;\n  },\n\n  _isSorted: function() {\n    var sorted = true;\n\n    var layers = _(this.models).map(function(m) {\n      return { cid: m.cid,  order: m.get('order')}\n    });\n\n    layers.sort(function(a, b) {\n      return a.order - b.order;\n    })\n\n    return _.isEqual(\n      _(layers).map(function(m) { return m.cid; }),\n      _(this.models).map(function(m) { return m.cid; })\n    )\n  },\n\n  moveLayer: function(movingLayer, options) {\n    options = options || {};\n    var newIndex = options.to;\n    var layerAtNewIndex = this.at(newIndex);\n    movingLayer.set('order', layerAtNewIndex.get('order'), { silent: true });\n\n    // Remove and add the layer again at the new position\n    this.remove(movingLayer, { silent: true });\n    this.add(movingLayer, { at: newIndex, silent: true });\n\n    // Update the order of all layers\n    for (var i = 0; i < this.size(); i++) {\n      var layer = this.at(i);\n      layer.set('order', i);\n    }\n\n    this.trigger('reset');\n    this.saveLayers({\n      complete: options.complete,\n      error: function() {\n        throw 'Error saving layers after moving them'\n      }\n    });\n  }\n});\n\n/**\n * this is a specialization of generic map prepared to hold two layers:\n *  - a base layer\n *  - a data layer which contains the table data\n *\n * cartodb only supports one data layer per map so this will change when\n * that changes\n */\n\ncdb.admin.Map = cdb.geo.Map.extend({\n\n  urlRoot: '/api/v1/maps',\n\n  initialize: function() {\n    this.constructor.__super__.initialize.apply(this);\n    this.sync = Backbone.delayedSaveSync(Backbone.syncAbort, 500);\n    this.bind('change:id', this._fetchLayers, this);\n\n    this.layers = new cdb.admin.Layers();\n    this.layers.map = this;\n    this.layers.bind('reset add change', this._layersChanged, this);\n    this.layers.bind('reset add remove change:attribution', this._updateAttributions, this);\n  },\n\n  saveLayers: function(opts) {\n    opts = opts || {};\n    var none = function() {}\n    this.layers.saveLayers({\n      success: opts.success || none,\n      error: opts.error || none\n    });\n  },\n\n  _layersChanged: function() {\n    if(this.layers.size() >= 1) {\n      this._adjustZoomtoLayer(this.layers.at(0));\n      if(this.layers.size() >= 2) {\n        this.set({ dataLayer: this.layers.at(1) });\n      }\n    }\n  },\n\n  // fetch related layers\n  _fetchLayers: function() {\n    this.layers.fetch();\n  },\n\n  /**\n   * link to a table\n   */\n  relatedTo: function(table) {\n    this.table = table;\n    this.table.bind('change:map_id', this._fetchOrCreate, this);\n  },\n\n  parse: function(data) {\n    data.bounding_box_ne = JSON.parse(data.bounding_box_ne);\n    data.bounding_box_sw = JSON.parse(data.bounding_box_sw);\n    data.view_bounds_ne = JSON.parse(data.view_bounds_ne);\n    data.view_bounds_sw = JSON.parse(data.view_bounds_sw);\n    data.center = JSON.parse(data.center);\n    return data;\n  },\n\n  _fetchOrCreate: function() {\n    var self = this;\n    var map_id = this.table.get('map_id');\n    if(!map_id) {\n      this.create();\n    } else {\n      this.set({ id: map_id });\n      this.fetch({\n        error: function() {\n          cdb.log.info(\"creating map for table\");\n          self.create();\n        }\n      });\n    }\n  },\n\n  /**\n   * change base layer and save all the layers to preserve the order\n   */\n  setBaseLayer: function(baseLayer) {\n    this.trigger('savingLayers');\n\n    // Check if the selected base layer is already selected\n    if (this.isBaseLayerAdded(baseLayer)) {\n      this.trigger('savingLayersFinish');\n      return false;\n    }\n\n    var self = this;\n    var newBaseLayer = baseLayer;\n    var currentBaseLayer = this.layers.at(0);\n    var newBaseLayerHasLabels = newBaseLayer.get('labels') && newBaseLayer.get('labels').url;\n\n    // Sets the base layer\n    var options = {\n      success: function() {\n        if (!newBaseLayerHasLabels) {\n          self.trigger('savingLayersFinish');\n        }\n      },\n      error: function() {\n        cdb.log.error(\"error changing the basemap\");\n        self.trigger('savingLayersFinish');\n      }\n    }\n\n    if (currentBaseLayer) {\n      if (currentBaseLayer.get('type') === newBaseLayer.get('type')) {\n        this._updateBaseLayer(currentBaseLayer, newBaseLayer, options);\n      } else {\n        this._replaceBaseLayer(currentBaseLayer, newBaseLayer, options);\n      }\n    } else {\n      this._addBaseLayer(newBaseLayer, options);\n    }\n\n\n    // Adds/updates/removes layer with labels at the top\n    options.success = function() {\n      self.trigger('savingLayersFinish');\n    }\n\n    if (newBaseLayerHasLabels) {\n      if (this._hasLabelsLayer()) {\n        this._updateLabelsLayer(newBaseLayer, options);\n      } else {\n        this._addLabelsLayer(newBaseLayer, options);\n      }\n    } else {\n      if (this._hasLabelsLayer()) {\n        this._destroyLabelsLayer(options);\n      }\n    }\n\n    return newBaseLayer;\n  },\n\n  _updateBaseLayer: function(currentBaseLayer, newBaseLayer, opts) {\n    var newAttributes = _.extend(_.clone(newBaseLayer.attributes), {\n      id: currentBaseLayer.get('id'),\n      order: currentBaseLayer.get('order')\n    });\n    currentBaseLayer.clear({ silent: true });\n    currentBaseLayer.set(newAttributes);\n    currentBaseLayer.save(null, opts);\n  },\n\n  _replaceBaseLayer: function(currentBaseLayer, newBaseLayer, opts) {\n    this.layers.remove(currentBaseLayer);\n    newBaseLayer.set({\n      id: currentBaseLayer.get('id'),\n      order: currentBaseLayer.get('order')\n    });\n    this.layers.add(newBaseLayer, { at: 0 });\n    newBaseLayer.save(null, opts);\n  },\n\n  _addBaseLayer: function(newBaseLayer, opts) {\n    this.layers.add(newBaseLayer, { at: 0 });\n    newBaseLayer.save(null, opts);\n  },\n\n  _hasLabelsLayer: function() {\n    return this.layers.size() > 1 && this.layers.last().get('type') === 'Tiled';\n  },\n\n  _updateLabelsLayer: function(baseLayer, opts) {\n    var labelsLayer = this.layers.last();\n    labelsLayer.set({\n      name: this._labelsLayerNameFromBaseLayer(baseLayer),\n      urlTemplate: baseLayer.get('labels').url,\n      attribution: baseLayer.get('attribution'),\n      minZoom: baseLayer.get('minZoom'),\n      maxZoom: baseLayer.get('maxZoom'),\n      subdomains: baseLayer.get('subdomains')\n    });\n    labelsLayer.save(null, opts);\n  },\n\n  _addLabelsLayer: function(baseLayer, opts) {\n    this.layers.add({\n      name: this._labelsLayerNameFromBaseLayer(baseLayer),\n      urlTemplate: baseLayer.get('labels').url,\n      attribution: baseLayer.get('attribution'),\n      minZoom: baseLayer.get('minZoom'),\n      maxZoom: baseLayer.get('maxZoom'),\n      subdomains: baseLayer.get('subdomains'),\n      kind: \"tiled\"\n    });\n    var labelsLayer = this.layers.last();\n    labelsLayer.save(null, opts);\n  },\n\n  _destroyLabelsLayer: function(opts) {\n    this.layers.last().destroy(opts);\n  },\n\n  _labelsLayerNameFromBaseLayer: function(baseLayer) {\n    return baseLayer.get('name') + \" Labels\";\n  },\n\n  /**\n   * the first version of cartodb contains one single layer\n   * per table with information.\n   */\n  addDataLayer: function(lyr) {\n    this.addLayer(lyr);\n    this.set({ dataLayer: lyr });\n  },\n\n  /**\n   * create a new map. this is a helper to use from javascript command line\n   */\n  create: function() {\n    this.unset('id');\n    this.set({ table_id: this.table.id });\n    this.save();\n  },\n\n  /**\n   * enable save map each time the viewport changes\n   * not working\n   */\n  autoSave: function() {\n    this.bind('change:center', this.save);\n    this.bind('change:zoom', this.save);\n  },\n\n  toJSON: function() {\n    var c = _.clone(this.attributes);\n    // data layer is a helper to work in local\n    delete c.dataLayer;\n    return c;\n  },\n\n  /**\n   * change provider and optionally baselayer\n   */\n  changeProvider: function(provider, baselayer) {\n    var self = this;\n\n    if(baselayer && baselayer.get('id')) {\n      cdb.log.error(\"the baselayer should not be saved in the server\");\n      return;\n    }\n    var _changeBaseLayer = function() {\n      if(baselayer) {\n        self.setBaseLayer(baselayer);\n      }\n    }\n    if(this.get('provider') !== provider) {\n      this.save({ provider: provider }, {\n        success: function() {\n          _changeBaseLayer();\n          self.change();\n        },\n        error: function(e, resp) {\n          self.error(_t('error switching base layer'), resp);\n        },\n        silent: true\n      });\n    } else {\n      _changeBaseLayer();\n    }\n  },\n\n  isProviderGmaps: function() {\n    var provider = this.get(\"provider\");\n    return provider && provider.toLowerCase().indexOf(\"googlemaps\") !== -1\n  },\n\n  clone: function(m) {\n    m = m || new cdb.admin.Map();\n    var attrs = _.clone(this.attributes)\n    delete attrs.id;\n    m.set(attrs);\n\n    // clone lists\n    m.set({\n      center:           _.clone(this.attributes.center),\n      bounding_box_sw:  _.clone(this.attributes.bounding_box_sw),\n      bounding_box_ne:  _.clone(this.attributes.bounding_box_ne),\n      view_bounds_sw:   _.clone(this.attributes.view_bounds_sw),\n      view_bounds_ne:   _.clone(this.attributes.view_bounds_ne),\n      attribution:      _.clone(this.attributes.attribution)\n    });\n\n    // layers\n    this.layers.clone(m.layers);\n    m.layers.map = m;\n\n    return m;\n  },\n\n  notice: function(msg, type, timeout) {\n    this.trigger('notice', msg, type, timeout);\n  },\n\n  error: function(msg, resp) {\n    var err =  resp && JSON.parse(resp.responseText).errors[0];\n    this.trigger('notice', msg + \" \" + err, 'error');\n  },\n\n  addCartodbLayerFromTable: function(tableName, userName, opts) {\n    opts = opts || {};\n    /*var newLayer = cdb.admin.CartoDBLayer.createDefaultLayerForTable(tableName, userName);\n    this.layers.add(newLayer);\n    newLayer.save(null, opts);\n    */\n\n    var self = this;\n    var table = new cdb.admin.CartoDBTableMetadata({ id: tableName });\n    table.fetch({\n      success: function() {\n        // Get the layers for the map\n        var map = new cdb.admin.Map({ id: table.get('map_id') });\n        map.layers.bind('reset', function() {\n          var newLayer = map.layers.at(1).clone();\n          newLayer.unset('order');\n\n          function layerReady() {\n            newLayer.table.unbind('change:geometry_types', layerReady);\n            // when the layer is torque and there are other torque layers in the map, switch it to a\n            // simple visualization layer\n            if (newLayer.wizard_properties.get('type') === 'torque' && self.layers.getTorqueLayers().length) {\n              newLayer.wizard_properties.active('polygon');\n            }\n            // wait: true is used to make sure the layer is not added until confirmed it was added successfully\n            // pass opts for success/error callbacks to be triggered as expected\n            self.layers.create(newLayer, _.extend({ wait: true }, opts));\n          }\n\n          // Wait until the layer is totally ready in order to add it to the layers and save it\n          if (newLayer.isTableLoaded()) {\n            layerReady();\n          } else {\n            newLayer.table.bind('change:geometry_types', layerReady);\n            newLayer.table.data().fetch();\n          }\n        });\n        map.layers.fetch();\n      }\n    });\n  },\n\n  // moves the map to interval [-180, 180]\n  clamp: function() {\n    var fmod = function (a,b) { return Number((a - (Math.floor(a / b) * b)).toPrecision(8)); };\n    var latlng = this.get('center');\n    var lon = latlng[1];\n    if(lon < -180 || lon > 180) {\n      lon = fmod(180 + lon, 360) - 180;\n      this.set('center', [latlng[0], lon]);\n    }\n    return this;\n  }\n});\n","/**\n * Model representing a group.\n * Expected to be used in the context of a groups collection (e.g. cdb.admin.OrganizationGroups),\n * which defines its API endpoint path.\n */\ncdb.admin.Group = cdb.core.Model.extend({\n\n  defaults: {\n    display_name: '' // UI name, as given by\n    // name: '', // internal alphanumeric representation, converted from display_name internally\n    // organization_id: '',\n  },\n\n  initialize: function(attrs) {\n    this.parse(attrs || {}); // handle given attrs in the same way as for .fetch()\n  },\n\n  parse: function(attrs) {\n    this.users = new cdb.admin.GroupUsers(attrs.users, {\n      group: this\n    });\n    return attrs;\n  }\n\n});\n","/**\n * Collection of a User's groups.\n */\ncdb.admin.UserGroups = Backbone.Collection.extend({\n\n  model: cdb.admin.Group,\n\n  initialize: function(models, opts) {\n    this.organization = opts.organization;\n  }\n\n});\n","/**\n * A collection that holds a set of organization groups\n */\ncdb.admin.OrganizationGroups = Backbone.Collection.extend({\n\n  model: cdb.admin.Group,\n\n  url: function(method) {\n    var version = cdb.config.urlVersion('organizationGroups', method);\n    return '/api/' + version + '/organization/' + this.organization.id + '/groups';\n  },\n\n  initialize: function(models, opts) {\n    if (!opts.organization) throw new Error('organization is required');\n    this.organization = opts.organization;\n  },\n\n  parse: function(response) {\n    this.total_entries = response.total_entries;\n    return response.groups;\n  },\n\n  // @return {Object} A instance of cdb.admin.Group. If group wasn't already present a new model with id and collection\n  //  set will be returned, i.e. group.fetch() will be required to get the data or handle the err case (e.g. non-existing)\n  newGroupById: function(id) {\n    var group = this.get(id);\n    if (!group) {\n      group = new this.model({\n        id: id\n      });\n      // collection set on model, but not added to collection yet\n      group.collection = this;\n    }\n    return group;\n  },\n\n  // @return {Number, undefined} may be undefined until a first fetch is done\n  totalCount: function() {\n    return this.total_entries;\n  }\n\n});\n","\n/**\n * the user has some base layers saved\n */\ncdb.admin.UserLayers = cdb.admin.Layers.extend({\n  url: function(method) {\n    var version = cdb.config.urlVersion('layer', method);\n    return '/api/' + version + '/users/' +  this.user.id + '/layers';\n  },\n\n  custom: function() {\n    return this.where({ category: undefined });\n  }\n});\n\ncdb.admin.User = cdb.core.Model.extend({\n\n  urlRoot: '/api/v1/users',\n\n  defaults: {\n    avatar_url: 'http://cartodb.s3.amazonaws.com/static/public_dashboard_default_avatar.png',\n    username:   ''\n  },\n\n  initialize: function(attrs) {\n    attrs = attrs || {};\n    this.tables = [];\n    // Removing avatar_url attribute if it comes as null\n    // Due to a Backbone Model constructor uses _.extends\n    // instead of _.defaults\n    if (this.get(\"avatar_url\") === null) {\n      this.set(\"avatar_url\", this.defaults.avatar_url);\n    }\n\n    if (this.get(\"get_layers\")) {\n      this.layers = new cdb.admin.UserLayers();\n      this.layers.user = this;\n      this._fetchLayers();\n    }\n\n    this.email = (typeof attrs.email !== 'undefined') ? attrs.email : '';\n\n    if (this.get('organization')) {\n      this.organization = new cdb.admin.Organization(\n        this.get('organization'),\n        {\n          currentUserId: this.id\n        }\n      );\n    }\n\n    this.groups = new cdb.admin.UserGroups(attrs.groups, {\n      organization: _.result(this.collection, 'organization') || this.organization\n    });\n  },\n\n  isInsideOrg: function() {\n    if (this.organization) {\n      return this.organization.id != false || this.isOrgOwner();\n    }\n    return false;\n  },\n\n  isOrgOwner: function() {\n    if (this.organization) {\n      return this.organization.owner.get('id') === this.get('id')\n    }\n    return false;\n  },\n\n  isOrgAdmin: function () {\n    if (this.organization) {\n      return this.organization.isOrgAdmin(this);\n    }\n    return false;\n  },\n\n  isViewer: function() {\n    return this.get('viewer') == true;\n  },\n\n  isBuilder: function() {\n    return !this.isViewer();\n  },\n\n  nameOrUsername: function() {\n    return this.get('name') || this.get('username');\n  },\n\n  renderData: function(currentUser) {\n    var name = this.get('username');\n    if (currentUser && currentUser.id === this.id) {\n      name = _t('You');\n    }\n    return {\n      username: name,\n      avatar_url: this.get('avatar_url')\n    }\n\n  },\n\n  _fetchLayers: function() {\n    this.layers.fetch({ add: true });\n  },\n\n  fetchTables: function() {\n    var self = this;\n    if (this._fetchingTables)  return;\n    var tables = new cdb.admin.Visualizations();\n    tables.options.set('type', 'table')\n    tables.bind('reset', function() {\n      self.tables = tables.map(function(u) { return u.get('name'); })\n    })\n    this._fetchingTables = true;\n    tables.fetch();\n  },\n\n  hasCreateDatasetsFeature: function() {\n    return this.isBuilder();\n  },\n\n  canCreateDatasets: function() {\n    if (!this.get('remaining_byte_quota') || this.get('remaining_byte_quota') <= 0) {\n      return false\n    }\n    return this.hasCreateDatasetsFeature();\n  },\n\n  hasCreateMapsFeature: function() {\n    return this.isBuilder();\n  },\n\n  canAddLayerTo: function(map) {\n    if (!map || !map.layers || !map.layers.getDataLayers) {\n      throw new Error(\"Map model is not defined or wrong\");\n    }\n    var dataLayers = map.layers.getDataLayers();\n    return dataLayers.length < this.getMaxLayers();\n  },\n\n  getMaxLayers: function() {\n    return ( this.get('limits') && this.get('limits').max_layers ) || 5;\n  },\n\n  getMaxConcurrentImports: function() {\n    return ( this.get('limits') && this.get('limits').concurrent_imports ) || 1;\n  },\n\n  featureEnabled: function(name) {\n    var featureFlags = this.get('feature_flags');\n    if (!featureFlags || featureFlags.length === 0 || !name) {\n      return false;\n    }\n\n    return _.contains(featureFlags, name)\n  },\n\n  isCloseToLimits: function() {\n    var quota = this.get(\"quota_in_bytes\");\n    var remainingQuota = this.get(\"remaining_byte_quota\");\n    return ( (remainingQuota * 100) / quota ) < 20\n  },\n\n  getMaxLayersPerMap: function() {\n    return this.get('max_layers') || 4;\n  },\n\n  canStartTrial: function() {\n    return !this.isInsideOrg() && this.get(\"account_type\") === 'FREE' && this.get(\"table_count\") > 0\n  },\n\n  canCreatePrivateDatasets: function() {\n    var actions = this.get('actions');\n    return actions && actions.private_tables;\n  },\n\n  equals: function(otherUser) {\n    if (otherUser.get) {\n      return this.get('id') === otherUser.get('id');\n    }\n  },\n\n  viewUrl: function() {\n    return new cdb.common.UserUrl({\n      base_url: this.get('base_url'),\n      is_org_admin: this.isOrgAdmin()\n    });\n  },\n\n  upgradeContactEmail: function() {\n    if (this.isInsideOrg()) {\n      if (this.isOrgOwner()) {\n        return 'enterprise-support@carto.com';\n      } else {\n        return this.organization.owner.get('email');\n      }\n    } else {\n      return 'support@carto.com';\n    }\n  },\n\n  usedQuotaPercentage: function() {\n    return (this.get('db_size_in_bytes') * 100) / this.organization.get('available_quota_for_user');\n  },\n\n  assignedQuotaInRoundedMb: function () {\n    return Math.floor(this.get('quota_in_bytes')/1024/1024).toFixed(0);\n  },\n\n  assignedQuotaPercentage: function() {\n    return (this.get('quota_in_bytes') * 100) / this.organization.get('available_quota_for_user');\n  }\n\n});\n","\n/**\n * manages a cartodb permission object, it contains:\n * - owner: an cdb.admin.User instance\n * - acl: a collection which includes the user and their permission.\n *\n *   see https://github.com/Vizzuality/cartodb-management/wiki/multiuser-REST-API#permissions-object\n *\n *   this object is not created to work alone, it should be a member of an object like visualization\n *   table\n */\ncdb.admin.Permission = cdb.core.Model.extend({\n\n\n  urlRoot: '/api/v1/perm',\n\n  initialize: function() {\n    this.acl = new Backbone.Collection();\n    this.owner = null;\n    this._generateOwner();\n    this._generateAcl();\n    this.bind('change:owner', this._generateOwner, this);\n    this.bind('change:acl', this._generateAcl, this);\n  },\n\n  _generateOwner: function() {\n    if (!this.owner) {\n      this.owner = new cdb.admin.User();\n    }\n    this.owner.set(this.get('owner'));\n  },\n\n  _generateAcl: function() {\n    this.acl.reset([], { silent: true });\n    _.each(this.get('acl'), function(aclItem) {\n      var model;\n      switch (aclItem.type) {\n        case 'user':\n          model = new cdb.admin.User(aclItem.entity);\n          break;\n        case 'org':\n          model = new cdb.admin.Organization(aclItem.entity);\n          break;\n        case 'group':\n          model = new cdb.admin.Group(aclItem.entity);\n          break;\n        default:\n          throw new Error(\"Unknown ACL item type: \" + aclItem.type);\n      }\n      this._grantAccess(model, aclItem.access);\n    }, this);\n  },\n\n  cleanPermissions: function() {\n    this.acl.reset();\n  },\n\n  hasAccess: function(model) {\n    // Having at least read access is the same as having any access\n    return this.hasReadAccess(model);\n  },\n\n  hasReadAccess: function(model) {\n    // If there is a representable ACL item it must be one of at least READ_ONLY access\n    return !!this.findRepresentableAclItem(model);\n  },\n\n  hasWriteAccess: function(model) {\n    var access = cdb.Utils.result(this.findRepresentableAclItem(model), 'get', 'access');\n    return access === cdb.admin.Permission.READ_WRITE;\n  },\n\n  canChangeReadAccess: function(model) {\n    return this._canChangeAccess(model);\n  },\n\n  canChangeWriteAccess: function(model) {\n    return (!model.isBuilder || model.isBuilder()) && this._canChangeAccess(model, function(representableAclItem) {\n      return cdb.Utils.result(representableAclItem, 'get', 'access') !== cdb.admin.Permission.READ_WRITE;\n    })\n  },\n\n  _canChangeAccess: function(model) {\n    var representableAclItem = this.findRepresentableAclItem(model);\n    return this.isOwner(model) || !representableAclItem ||\n      representableAclItem === this._ownAclItem(model) || cdb.Utils.result(arguments, 1, representableAclItem) || false;\n  },\n\n  grantWriteAccess: function(model) {\n    this._grantAccess(model, this.constructor.READ_WRITE);\n  },\n\n  grantReadAccess: function(model) {\n    this._grantAccess(model, this.constructor.READ_ONLY);\n  },\n\n  revokeWriteAccess: function(model) {\n    // Effectively \"downgrades\" to READ_ONLY\n    this.grantReadAccess(model);\n  },\n\n  /**\n   * Revokes access to a set of items\n   * @param {Object} model A single model or an array of models\n   */\n  revokeAccess: function(model) {\n    var aclItem = this._ownAclItem(model);\n    if (aclItem) {\n      this.acl.remove(aclItem);\n    }\n  },\n\n  isOwner: function(model) {\n    return _.result(this.owner, 'id') === _.result(model, 'id');\n  },\n\n  toJSON: function() {\n    return {\n      entity: this.get('entity'),\n      acl: this.acl.toJSON()\n    };\n  },\n\n  getUsersWithAnyPermission: function() {\n    return this.acl.chain()\n      .filter(this._hasTypeUser)\n      .map(this._getEntity)\n      .value();\n  },\n\n  isSharedWithOrganization: function() {\n    return this.acl.any(this._hasTypeOrg);\n  },\n\n  clone: function() {\n    var attrs = _.clone(this.attributes);\n    delete attrs.id;\n    return new cdb.admin.Permission(attrs);\n  },\n\n  /**\n   * Overwrite this ACL list from other permission object\n   * @param otherPermission {Object} instance of cdb.admin.Permission\n   */\n  overwriteAcl: function(otherPermission) {\n    this.acl.reset(otherPermission.acl.models);\n  },\n\n  // Note that this may return an inherited ACL item\n  // use ._ownAclItem instead if only model's own is wanted (if there is any)\n  findRepresentableAclItem: function(model) {\n    if (this.isOwner(model)) {\n      return this._newAclItem(model, this.constructor.READ_WRITE);\n    } else {\n      var checkList = ['_ownAclItem', '_organizationAclItem', '_mostPrivilegedGroupAclItem'];\n      return this._findMostPrivilegedAclItem(checkList, function(fnName) {\n        return this[fnName](model);\n      });\n    }\n  },\n\n  _hasTypeUser: function(m) {\n    return m.get('type') === 'user';\n  },\n\n  _getEntity: function(m) {\n    return m.get('entity');\n  },\n\n  _hasTypeOrg: function(m) {\n    return m.get('type') === 'org';\n  },\n\n  _isOrganization: function(object) {\n    return object instanceof cdb.admin.Organization;\n  },\n\n  _ownAclItem: function(model) {\n    if (!model || !_.isFunction(model.isNew)) {\n      cdb.log.error('model is required to find an ACL item');\n    }\n    if (!model.isNew()) {\n      return this.acl.find(function(aclItem) {\n        return aclItem.get('entity').id === model.id;\n      });\n    }\n  },\n\n  _organizationAclItem: function(m) {\n    var org = _.result(m.collection, 'organization') || m.organization;\n    if (org) {\n      return this._ownAclItem(org);\n    }\n  },\n\n  _mostPrivilegedGroupAclItem: function(m) {\n    var groups = _.result(m.groups, 'models');\n    if (groups) {\n      return this._findMostPrivilegedAclItem(groups, this._ownAclItem);\n    }\n  },\n\n  /**\n   * Iterates over a items in given list using the iteratee, stops and returns when found the ACL item with best access (i.e. READ_WRITE), or the\n   * list is completed.\n   * @param {Array} list\n   * @param {Function} iteratee that takes an item from list and returns an access\n   *   iteratee is called in context of this model.\n   * @Return {String} 'r', 'rw', or undefined if there were no access for given item\n   */\n  _findMostPrivilegedAclItem: function(list, iteratee) {\n    var aclItem;\n    for (var i = 0, x = list[i]; x && cdb.Utils.result(aclItem, 'get', 'access') !== cdb.admin.Permission.READ_WRITE; x = list[++i]) {\n      // Keep last ACL item if iteratee returns nothing\n      aclItem = iteratee.call(this, x) || aclItem;\n    }\n    return aclItem;\n  },\n\n  /**\n   * Grants access to a set of items\n   * @param {Object} model\n   * @param {String} access can take the following values:\n   * - 'r': read only\n   * - 'rw': read and write permission\n   */\n  _grantAccess: function(model, access) {\n    var aclItem = this._ownAclItem(model);\n    if (aclItem) {\n      aclItem.set('access', access);\n    } else {\n      aclItem = this._newAclItem(model, access);\n      if (aclItem.isValid()) {\n        this.acl.add(aclItem);\n      } else {\n        throw new Error(access + ' is not a valid ACL access');\n      }\n    }\n  },\n\n  _newAclItem: function(model, access) {\n    var type;\n    if (model instanceof cdb.admin.User) {\n      type = 'user'\n    } else if (model instanceof cdb.admin.Group) {\n      type = 'group';\n    } else if (this._isOrganization(model)) {\n      type = 'org';\n    } else {\n      throw new Error('model not recognized as a valid ACL entity ' + model);\n    }\n\n    return new cdb.admin.ACLItem({\n      type: type,\n      entity: model,\n      access: access\n    });\n  }\n\n}, {\n\n  READ_ONLY: 'r',\n  READ_WRITE: 'rw'\n\n});\n\n//TODO: add validation\ncdb.admin.ACLItem = Backbone.Model.extend({\n  defaults: {\n    access: 'r'\n  },\n\n  isOwn: function(model) {\n    return model.id === this.get('entity').id;\n  },\n\n  validate: function(attrs, options) {\n    var p = cdb.admin.Permission;\n    if (attrs.access !== p.READ_ONLY && attrs.access !== p.READ_WRITE) {\n      return \"access can't take 'r' or 'rw' values\";\n    }\n  },\n\n  toJSON: function() {\n    var entity = _.pick(this.get('entity').toJSON(), 'id', 'username', 'avatar_url', 'name');\n    // translate name to username\n    if (!entity.username) {\n      entity.username = entity.name;\n      delete entity.name;\n    }\n    return {\n      type: this.get('type') || 'user',\n      entity: entity,\n      access: this.get('access')\n    };\n  }\n});\n","/**\n * A collection representing a set of users in a group.\n */\ncdb.admin.GroupUsers = Backbone.Collection.extend({\n\n  model: cdb.admin.User,\n\n  initialize: function(models, opts) {\n    if (!opts.group) throw new Error('group is required');\n    this.group = opts.group;\n  },\n\n  url: function() {\n    return this.group.url.apply(this.group, arguments) + '/users';\n  },\n\n  parse: function(response) {\n    this.total_entries = response.total_entries;\n    this.total_user_entries = response.total_user_entries;\n\n    return response.users;\n  },\n\n  /**\n   * Batch add users\n   * @param {Array} userIds\n   * @return {Object} a deferred jqXHR object\n   */\n  addInBatch: function(userIds) {\n    return this._batchAsyncProcessUsers('POST', userIds);\n  },\n\n  removeInBatch: function(userIds) {\n    var self = this;\n    return this._batchAsyncProcessUsers('DELETE', userIds)\n      .done(function() {\n        _.each(userIds, self.remove.bind(self));\n      });\n  },\n\n  _batchAsyncProcessUsers: function(method, ids) {\n    var self = this;\n\n    // postpone relving promise since the fetch is requries for collection to have accurate state\n    var deferred = $.Deferred();\n    $.ajax({\n      type: method,\n      url: cdb.config.prefixUrl() + this.url(),\n      data: {\n        users: ids\n      },\n      success: function() {\n        var args = arguments;\n\n        // because add/remove don't return any data, so need to fetch to get accurate state\n        self.fetch({\n          success: function() {\n            deferred.resolve.apply(deferred, args);\n          },\n          error: function() {\n            // could not update state, but resolve anyway since batch operation worked\n            // might have inconsistent state though\n            deferred.resolve.apply(deferred, args);\n          }\n        })\n      },\n      error: function() {\n        deferred.reject.apply(deferred, arguments);\n      }\n    });\n\n    return deferred;\n  },\n\n  // @return {Number, undefined} may be undefined until a first fetch is done\n  totalCount: function() {\n    return this.total_user_entries;\n  }\n\n});\n","/**\n * Model representing an entity (user, group, etc.) that may share a Visualization.\n * Actual model is wrapped with additional metadata for the grantable context.\n */\ncdb.admin.Grantable = cdb.core.Model.extend({\n\n  initialize: function() {\n    this.entity = this._createEntity();\n  },\n\n  // @return {Object} instance of the real model this grantable entitity represents\n  //   Keep in mind that this returns a new instance of that model (i.e. not a cache version)\n  _createEntity: function() {\n    var className = cdb.Utils.capitalize(this.get('type'));\n    var model = new cdb.admin[className](this.get('model'));\n    model.organization = this.collection.organization;\n    return model;\n  }\n\n});\n","/**\n * A collection of Grantable objects.\n */\ncdb.admin.Grantables = Backbone.Collection.extend({\n\n  model: cdb.admin.Grantable,\n\n  url: function(method) {\n    var version = cdb.config.urlVersion('organizationGrantables', method);\n    return '/api/' + version + '/organization/' + this.organization.id + '/grantables';\n  },\n\n  initialize: function(users, opts) {\n    if (!opts.organization) throw new Error('organization is required');\n    this.organization = opts.organization;\n    this.currentUserId = opts.currentUserId;\n    this.sync = Backbone.syncAbort; // adds abort behaviour\n  },\n\n  parse: function(response) {\n    this.total_entries = response.total_entries;\n\n    return _.reduce(response.grantables, function(memo, m) {\n      if (m.id === this.currentUserId) {\n        this.total_entries--;\n      } else {\n        memo.push(m);\n      }\n\n      return memo;\n    }, [], this);\n  },\n\n  // @return {Number, undefined} may be undefined until a first fetch is done\n  totalCount: function() {\n    return this.total_entries;\n  }\n\n});\n","/**\n * this model contains information about the organization for\n * the current user and the users who are inside the organizacion.\n *\n * Attributes:\n * - users: collection with user instances whithin the organization (see cdb.admin.Organization.Users\n */\ncdb.admin.Organization = cdb.core.Model.extend({\n\n  url: '/api/v1/org/',\n\n  initialize: function(attrs, opts) {\n    attrs = attrs || {}\n    this.owner = new cdb.admin.User(this.get('owner'));\n\n    this.display_email = (typeof attrs.admin_email != 'undefined') && attrs.admin_email != null && (attrs.admin_email == '' ? this.owner.email : attrs.admin_email);\n\n    var collectionOpts = {\n      organization: this,\n      currentUserId: opts && opts.currentUserId\n    };\n    this.users = new cdb.admin.Organization.Users(attrs.users, collectionOpts);\n    this.groups = new cdb.admin.OrganizationGroups(attrs.groups, collectionOpts);\n    this.grantables = new cdb.admin.Grantables(undefined, collectionOpts);\n\n    // make sure all the users/groups have a reference to this organization\n    this.users.each(this._setOrganizationOnModel, this);\n    this.groups.each(this._setOrganizationOnModel, this);\n  },\n\n  _setOrganizationOnModel: function(m) {\n    m.organization = this;\n  },\n\n  fetch: function() {\n    throw new Error(\"organization should not be fetch, should be static\");\n  },\n\n  containsUser: function(user) {\n    return !!this.users.find(function(u) {\n      return u.id === user.id;\n    })\n  },\n\n  isOrgAdmin: function (user) {\n    return this.owner.id === user.id || !!_.find(this.get('admins'), function (u) {\n      return u.id === user.id;\n    });\n  },\n\n  viewUrl: function() {\n    return new cdb.common.OrganizationUrl({\n      base_url: this.get('base_url')\n    })\n  }\n\n});\n\n// helper to manage organization users\ncdb.admin.Organization.Users = Backbone.Collection.extend({\n\n  model: cdb.admin.User,\n  _DEFAULT_EXCLUDE_CURRENT_USER: true,\n\n  url: function() {\n    return '/api/v1/organization/' + this.organization.id + '/users';\n  },\n\n  initialize: function(models, opts) {\n    if (!opts.organization) {\n      throw new Error('Organization is needed for fetching organization users');\n    }\n    this.elder('initialize');\n    this.organization = opts.organization;\n\n    this.currentUserId = opts.currentUserId;\n    this._excludeCurrentUser = this._DEFAULT_EXCLUDE_CURRENT_USER;\n\n    // Let's add abort behaviour\n    this.sync = Backbone.syncAbort;\n  },\n\n  comparator: function(mdl) {\n    return mdl.get('username');\n  },\n\n  excludeCurrentUser: function(exclude) {\n    exclude = !!exclude;\n    this._excludeCurrentUser = exclude;\n    if (exclude && !this.currentUserId) {\n      cdb.log.error('set excludeCurrentUser to true, but there is no current user id set to exclude!');\n    }\n  },\n\n  restoreExcludeCurrentUser: function() {\n    this.excludeCurrentUser(this._DEFAULT_EXCLUDE_CURRENT_USER);\n  },\n\n  parse: function(r) {\n    this.total_entries = r.total_entries;\n    this.total_user_entries = r.total_user_entries;\n\n    return _.reduce(r.users, function(memo, user) {\n      if (this._excludeCurrentUser && user.id === this.currentUserId) {\n        this.total_user_entries--;\n        this.total_entries--;\n      } else {\n        memo.push(user);\n      }\n      return memo;\n    }, [], this);\n  },\n\n  // @return {Number, undefined} may be undefined until a first fetch is done\n  totalCount: function() {\n    return this.total_user_entries;\n  }\n});\n\ncdb.admin.Organization.Invites = cdb.core.Model.extend({\n\n  defaults: {\n    users_emails: [],\n    welcome_text: 'I\\'d like to invite you to my CARTO organization,\\nBest regards'\n  },\n\n  url: function() {\n    return '/api/v1/organization/' + this.organizationId + '/invitations';\n  },\n\n  initialize: function(attrs, opts) {\n    if (!opts.organizationId) {\n      throw new Error('Organization id is needed for fetching organization users');\n    } else {\n      this.organizationId = opts.organizationId;\n    }\n  }\n\n});\n","cdb.admin.Like = cdb.core.Model.extend({\n\n  defaults: {\n    likeable: true\n  },\n\n  url: function(method) {\n    var version = cdb.config.urlVersion('like', method)\n    return '/api/' + version + '/viz/' + this.get(\"vis_id\") + '/like';\n  },\n\n  initialize: function() {\n\n    _.bindAll(this, \"_onSaveError\");\n\n    this.on(\"destroy\", function() {\n      this.set({ liked: false, likes: this.get(\"likes\") - 1 });\n    }, this);\n\n  },\n\n  _onSaveError: function(model, response) {\n    this.trigger(\"error\", {\n      status: response.status,\n      statusText: response.statusText\n    });\n  },\n\n  toggleLiked: function() {\n\n    if (this.get(\"liked\")) {\n      this.destroy();\n    } else {\n      this.set({ id: null }, { silent: true });\n      this.save({}, { error: this._onSaveError });\n    }\n  }\n\n}, {\n\n  newByVisData: function(opts) {\n    var d = _.defaults({\n      id: opts.liked ? opts.vis_id : null\n    }, _.omit(opts, 'url'));\n\n    var m = new cdb.admin.Like(d);\n\n    if (opts.url) {\n      m.url = opts.url;\n    }\n\n    return m;\n  }\n});\n","/* global cdb */\n\ncdb.admin.ExportMapModel = cdb.core.Model.extend({\n  /*\n   * Creates an export_visualization job and polls until it finishes.\n   * Results in zip download containing visualization metadata + data.\n  */\n  urlRoot: '/api/v3/visualization_exports',\n\n  initialize: function (attrs) {\n    this._loadAttributes(attrs);\n  },\n\n  requestExport: function () {\n    this.save(null, { success: this._requestExportSuccessHandler.bind(this) });\n\n    if (window.user_data && window.user_data.email) {\n      cdb.god.trigger('metrics', 'export_map', {\n        email: window.user_data.email\n      });\n    } else {\n      cdb.god.trigger('metrics', 'export_map_public', {});\n    }\n  },\n\n  cancelExport: function () {\n    this._interrupt();\n  },\n\n  _requestExportSuccessHandler: function () {\n    this._pollPID = setInterval(function () {\n      this.fetch({\n        success: this._checkState.bind(this),\n        error: this._errorHandler.bind(this)\n      });\n    }.bind(this), 2000);\n  },\n\n  _checkState: function () {\n    if (this.get('state') === 'complete') {\n      this._finishExport();\n    } else if (this.get('state') === 'failure') {\n      this._errorHandler();\n    }\n  },\n\n  _finishExport: function () {\n    clearInterval(this._pollPID);\n  },\n\n  _errorHandler: function () {\n    this._interrupt();\n\n    throw new Error('There is a problem with your export. Please try again.');\n  },\n\n  _interrupt: function () {\n    clearInterval(this._pollPID);\n  },\n\n  _loadAttributes: function (attrs) {\n    if (!attrs) throw new Error('no attributes were specified');\n\n    if (!attrs.visualization_id) throw new Error('\\'visualization_id\\' is required');\n\n    this.visualization_id = attrs.visualization_id;\n  }\n});\n","\n\n  /**\n   * User options dropdown (extends Dropdown)\n   *\n   * It shows the content in a dropdown (or dropup) with a special effect.\n   *\n   * Usage example:\n   *\n      var user_menu = new cdb.admin.DropdownMenu({\n        target: $('a.account'),\n        model: {username: username}, // No necessary indeed\n        template_base: 'common/views/settings_item'\n      });\n   *\n   */\n\n\n  cdb.admin.DropdownMenu = cdb.ui.common.Dropdown.extend({\n\n    show: function() {\n      var dfd = $.Deferred();\n      var self = this;\n      //sometimes this dialog is child of a node that is removed\n      //for that reason we link again DOM events just in case\n      this.delegateEvents();\n      this.$el\n        .css({\n          marginTop: self.options.vertical_position == \"down\" ? \"-10px\" : \"10px\",\n          opacity:0,\n          display:\"block\"\n        })\n        .animate({\n          margin: \"0\",\n          opacity: 1\n        }, {\n          \"duration\": this.options.speedIn,\n          \"complete\": function(){\n            dfd.resolve();\n          }\n        });\n      this.trigger(\"onDropdownShown\",this.el);\n\n      return dfd.promise();\n    },\n\n    /**\n     * open the dialog at x, y\n     */\n    openAt: function(x, y) {\n      var dfd = $.Deferred();\n\n      this.$el.css({\n        top: y,\n        left: x,\n        width: this.options.width\n      })\n      .addClass(\n        (this.options.vertical_position == \"up\" ? \"vertical_top\" : \"vertical_bottom\" )\n        + \" \" +\n        (this.options.horizontal_position == \"right\" ? \"horizontal_right\" : \"horizontal_left\" )\n        + \" \" +\n        // Add tick class\n        \"tick_\" + this.options.tick\n      )\n\n      this.isOpen = true;\n\n      // Show\n      $.when(this.show()).done(function(){ dfd.resolve();})\n      // xabel: I've add the deferred to make it easily testable\n\n      return dfd.promise();\n    },\n\n\n    hide: function(done) {\n\n      // don't attempt to hide the dropdown if it's already hidden\n      if (!this.isOpen) { done && done(); return; }\n\n      var self    = this;\n      this.isOpen = false;\n\n      this.$el.animate({\n\n        marginTop: self.options.vertical_position == \"down\" ? \"10px\" : \"-10px\",\n        opacity: 0\n\n      }, this.options.speedOut, function(){\n\n        // Remove selected class\n        $(self.options.target).removeClass(\"selected\");\n\n        // And hide it\n        self.$el.hide();\n        done && done();\n\n        self.trigger(\"onDropdownHidden\", self.el);\n\n      });\n    }\n  });\n","\n/**\n * Represents a URL.\n * Provides common semantics to manipulate a URL without having to resort to manipulating strings manually.\n * Rather don't subclass but you composition if you need to extend some functionality.\n *\n * Can safely be coerced into a string implicitly, e.g.:\n *   var myUrl = cdb.common.Url.byBasePath('http://foobar.com/some/path')\n *   alert(myUrl); // will output 'http://foobar.com/some/path'\n */\ncdb.common.Url = cdb.core.Model.extend({\n\n  initialize: function (attrs) {\n    if (!attrs.base_url) {\n      throw new Error('base_url is required')\n    }\n  },\n\n  /**\n   * Get a new URL object with new basepath.\n   * @param {String,*} path new sub path. Slashes are not necessary, e.g. 'my_path'\n   * @return {Object} instance of cdb.common.Url\n   */\n  urlToPath: function() {\n    return cdb.common.Url.byBaseUrl(this.toString.apply(this, arguments));\n  },\n\n  /**\n   * @return {String} Path of this URL, e.g. '/some/path'\n   */\n  pathname: function() {\n    return this.toString().match(/^.+\\/\\/[^\\/]+(.*)$/)[1];\n  },\n\n  toString: function() {\n    return this._joinArgumentsWithSlashes(\n      this.get('base_url'),\n      Array.prototype.slice.call(arguments, 0)\n    );\n  },\n\n  _joinArgumentsWithSlashes: function() {\n    return _.chain(arguments).flatten().compact().value().join('/');\n  }\n\n}, {\n\n  byBaseUrl: function(url) {\n    return new cdb.common.Url({ base_url: url });\n  }\n});\n","/**\n * URLs associated with the dashboard visualizations.\n */\ncdb.common.DashboardVisUrl = cdb.common.Url.extend({\n\n  lockedItems: function() {\n    return this.urlToPath('locked');\n  },\n\n  sharedItems: function() {\n    return this.urlToPath('shared');\n  },\n\n  likedItems: function() {\n    return this.urlToPath('liked');\n  }\n});\n","/**\n * URL representing dashboard datasets\n */\ncdb.common.DashboardDatasetsUrl = cdb.common.DashboardVisUrl.extend({\n\n  dataLibrary: function() {\n    return this.urlToPath('library');\n  }\n});\n","/**\n * URLs associated with the dashboard.\n */\ncdb.common.DashboardUrl = cdb.common.Url.extend({\n\n  datasets: function() {\n    return new cdb.common.DashboardDatasetsUrl({\n      base_url: this.urlToPath('datasets')\n    });\n  },\n\n  maps: function() {\n    return new cdb.common.DashboardVisUrl({\n      base_url: this.urlToPath('maps')\n    });\n  },\n\n  deepInsights: function() {\n    return new cdb.common.DashboardVisUrl({\n      base_url: this.urlToPath('deep-insights')\n    });\n  }\n});\n","/**\n * URL for a dataset (standard vis).\n */\ncdb.common.DatasetUrl = cdb.common.Url.extend({\n\n  edit: function() {\n    return this.urlToPath();\n  },\n\n  public: function() {\n    return this.urlToPath('public');\n  }\n});\n","/**\n * URL for a map (derived vis).\n */\ncdb.common.MapUrl = cdb.common.Url.extend({\n\n  edit: function() {\n    return this.urlToPath('map');\n  },\n\n  public: function() {\n    return this.urlToPath('public_map');\n  },\n\n  deepInsights: function() {\n    return this.urlToPath('deep-insights');\n  }\n});\n","/**\n * URL for a map (derived vis).\n */\ncdb.common.OrganizationUrl = cdb.common.Url.extend({\n\n  edit: function(user) {\n    if (!user) {\n      throw new Error('User is needed to create the url');\n    }\n    return this.urlToPath(user.get('username') + '/edit');\n  },\n\n  create: function() {\n    return this.urlToPath('new');\n  },\n\n  groups: function() {\n    return this.urlToPath('groups');\n  }\n\n});\n","/**\n * URLs associated with a particular user.\n */\ncdb.common.UserUrl = cdb.common.Url.extend({\n\n  initialize: function (attrs) {\n    cdb.common.Url.prototype.initialize.apply(this, arguments);\n    if (_.isUndefined(attrs.is_org_admin)) {\n      throw new Error('is_org_admin is required')\n    }\n  },\n\n  organization: function() {\n    if (this.get('is_org_admin')) {\n      return new cdb.common.OrganizationUrl({\n        base_url: this.urlToPath('organization')\n      });\n    } else {\n      return this.urlToPath('account');\n    }\n  },\n\n  accountSettings: function() {\n    return this.urlToPath('profile');\n  },\n\n  publicProfile: function() {\n    return this.urlToPath('me');\n  },\n\n  apiKeys: function() {\n    return this.urlToPath('your_apps');\n  },\n\n  logout: function() {\n    return this.urlToPath('logout');\n  },\n\n  dashboard: function() {\n    return new cdb.common.DashboardUrl({\n      base_url: this.urlToPath('dashboard')\n    });\n  }\n});\n"]}
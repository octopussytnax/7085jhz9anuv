{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "lib/assets/javascripts/cartodb/common/view_helpers/random_quote.js",
    "lib/assets/javascripts/cartodb/common/views/mapcard_preview.js",
    "lib/assets/javascripts/cartodb/data_library/content/list/dataset_item_view.js",
    "lib/assets/javascripts/cartodb/data_library/content/list/placeholder_item_view.js",
    "lib/assets/javascripts/cartodb/data_library/content/list/view.js",
    "lib/assets/javascripts/cartodb/data_library/content/view.js",
    "lib/assets/javascripts/cartodb/data_library/datasets_collection.js",
    "lib/assets/javascripts/cartodb/data_library/entry.js",
    "lib/assets/javascripts/cartodb/data_library/filters/dropdown/view.js",
    "lib/assets/javascripts/cartodb/data_library/filters/view.js",
    "lib/assets/javascripts/cartodb/data_library/header/view.js",
    "lib/assets/javascripts/cartodb/data_library/main_view.js",
    "lib/assets/javascripts/cartodb/public_common/user_industries/dropdown_view.js",
    "lib/assets/javascripts/cartodb/public_common/user_industries_view.js",
    "lib/assets/javascripts/cartodb/public_common/user_settings/dropdown_view.js",
    "lib/assets/javascripts/cartodb/public_common/user_settings_view.js",
    "lib/assets/javascripts/cartodb/public_dashboard/user_info/breadcrumb_dropdown_view.js",
    "lib/assets/javascripts/cartodb/public_dashboard/user_info_view.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC9IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AChvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACfrlvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "/**\n * Random quote\n */\nmodule.exports = function() {\n\n  var template  = _.template('<p class=\"CDB-Text CDB-Size-medium u-altTextColor\">\"<%= quote %>\"</p><% if (author) { %><p class=\"CDB-Text CDB-Size-medium u-altTextColor u-tSpace\"><em>â€“ <%- author %></em></p><% } %>');\n\n  var quotes = [\n    { quote: \"Geographers never get lost. They just do accidental field work.\", author: \"Nicholas Chrisman\" },\n    { quote: \"Geography is just physics slowed down, with a couple of trees stuck in it.\", author: \"Terry Pratchett\" },\n    { quote: \"Not all those who wander are lost.\", author: \"J. R. R. Tolkien\" },\n    { quote: \"In that Empire, the Art of Cartography attained such Perfection that the map of a single Province occupied the entirety of a City.\", author: \"Jorge Luis Borges\" },\n    { quote: \"X marks the spot\", author: \"Indiana Jones\" },\n    { quote: \"It's turtles all the way down.\", author: null },\n    { quote: \"Remember: no matter where you go, there you are.\", author: null },\n    { quote: \"Without geography, you're nowhere!\", author: \"Jimmy Buffett\" },\n    { quote: \"our earth is a globe / whose surface we probe /<br />no map can replace her / but just try to trace her\", author: \"Steve Waterman\" },\n    { quote: \"Everything happens somewhere.\", author: \"Doctor Who\" },\n    { quote: \"A map is the greatest of all epic poems. Its lines and colors show the realization of great dreams.\", author: \"Gilbert H. Grosvenor\" },\n    { quote: \"Everything is related to everything else,<br />but near things are more related than distant things.\", author: \"Tobler's first law of geography\" },\n    { quote: \"Hic Sunt Dracones\", author: null },\n    { quote: \"Here be dragons\", author: null },\n    { quote: \"Stand in the place where you live / Now face North /<br/>Think about direction / Wonder why you haven't before\", author: \"R.E.M\" },\n    { quote: \"The virtue of maps, they show what can be done with limited space, they foresee that everything can happen therein.\", author: \"JosÃ© Saramago\" }\n  ];\n\n  var r = Math.round(Math.random() * (quotes.length - 1));\n\n  return template(quotes[r]);\n};\n",
    "var $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\n/**\n *  MapCard previews\n *\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  options: {\n    width: 300,\n    height: 170,\n    privacy: 'PUBLIC',\n    username: '',\n    visId: '',\n    mapsApiResource: '',\n    className: '',\n    authTokens: []\n  },\n\n  _TEMPLATES: {\n    // Using <%= %> instead of <%- %> because if not / characters (for example) will be escaped\n    regular: '<%- protocol %>://<%= mapsApiResource %>/api/v1/map/static/named/<%- tpl %>/<%- width %>/<%- height %>.png<%= authTokens %>',\n    cdn: '<%- protocol %>://<%- cdn %>/<%- username %>/api/v1/map/static/named/<%- tpl %>/<%- width %>/<%- height %>.png<%= authTokens %>'\n  },\n\n  initialize: function() {\n    _.each(['visId', 'mapsApiResource', 'username'], function(name) {\n      if (!this.options[name]) {\n        console.log(name + ' is required for Static Map instantiation');\n      }\n    }, this);\n  },\n\n  load: function() {\n    this._startLoader();\n    this._loadFromVisId();\n\n    return this;\n  },\n\n  _generateImageTemplate: function() {\n    return 'tpl_' + this.options.visId.replace(/-/g, '_');\n  },\n\n  _loadFromVisId: function() {\n    var protocol = this._isHTTPS() ? 'https': 'http';\n    var cdnConfig = cdb.config.get('cdn_url');\n    var template = _.template(cdnConfig ? this._TEMPLATES['cdn'] : this._TEMPLATES['regular']);\n\n    var options = {\n      protocol: protocol,\n      username: this.options.username,\n      mapsApiResource: this.options.mapsApiResource,\n      tpl: this._generateImageTemplate(),\n      width: this.options.width,\n      height: this.options.height,\n      authTokens: this._generateAuthTokensParams()\n    };\n\n    if (cdnConfig) {\n      options = _.extend(options, { cdn: cdnConfig[protocol] });\n    }\n\n    var url = template(options);\n\n    this._loadImage({}, url);\n  },\n\n  _generateAuthTokensParams: function () {\n    var authTokens = this.options.authTokens;\n    if (authTokens && authTokens.length > 0) {\n      return '?' + _.map(authTokens, function (t) { return 'auth_token=' + t; }).join('&');\n    } else {\n      return '';\n    }\n  },\n\n  _isHTTPS: function() {\n    return location.protocol.indexOf(\"https\") === 0;\n  },\n\n  loadURL: function(url) {\n    var $img = $('<img class=\"MapCard-preview\" src=\"' + url + '\" />');\n    this.$el.append($img);\n\n    if (this.options.className) {\n      $img.addClass(this.options.className);\n    }\n\n    $img.fadeIn(250);\n  },\n\n  showError: function() {\n    this._onError();\n  },\n\n  _startLoader: function() {\n    this.$el.addClass(\"is-loading\");\n  },\n\n  _stopLoader: function() {\n    this.$el.removeClass(\"is-loading\");\n  },\n\n  _onSuccess: function(url) {\n    this._stopLoader();\n    this.loadURL(url);\n    this.trigger(\"loaded\", url);\n  },\n\n  _onError: function(error) {\n    this._stopLoader();\n    this.$el.addClass(\"has-error\");\n    var $error = $('<div class=\"MapCard-error\" />');\n    this.$el.append($error);\n    $error.fadeIn(250);\n    this.trigger(\"error\");\n  },\n\n  _loadImage: function(error, url) {\n    var self = this;\n    var img  = new Image();\n\n    img.onerror = function() {\n      self._onError(error);\n    };\n\n    img.onload = function() {\n      self._onSuccess(url);\n    };\n\n    try {\n      img.src = url;\n    } catch(err) {\n      this._onError(err);\n    }\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar MapCardPreview = require('../../../common/views/mapcard_preview');\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\n\n/**\n * View representing an item in the list under datasets route.\n */\nmodule.exports = cdb.core.View.extend({\n\n  tagName: 'li',\n  className: 'MapsList-item',\n\n  initialize: function() {\n    this.template = cdb.templates.getTemplate('data_library/content/list/dataset_item_template');\n  },\n\n  render: function() {\n    this.clearSubViews();\n\n    var vis = this.model;\n\n    var d = {\n      vis: vis.attributes,\n      date: vis.get('order') === 'updated_at' ? vis.get('updated_at') : vis.get('created_at'),\n      datasetSize: this._getDatasetSize(vis.get('table')['size']),\n      geomType: this._getGeometryType(vis.get('table')['geometry_types']),\n      account_host: cdb.config.get('account_host'),\n      dataset_base_url: cdb.config.get('dataset_base_url')\n    };\n\n    this.$el.html(this.template(d));\n\n    this._renderMapThumbnail();\n\n    return this;\n  },\n\n  _renderMapThumbnail: function() {\n    var username = this.model.get('permission')['owner']['username'];\n    var mapCardPreview = new MapCardPreview({\n      el: this.$('.js-header'),\n      username: username,\n      width: 298,\n      height: 220,\n      visId: this.model.get('id'),\n      mapsApiResource: cdb.config.getMapsResourceName(username)\n    });\n\n    if (this.imageURL) {\n      mapCardPreview.loadURL(this.imageURL);\n    } else {\n      mapCardPreview.load();\n    }\n\n    mapCardPreview.bind(\"loaded\", function(url) {\n      this.imageURL = url;\n    }, this);\n\n    this.addView(mapCardPreview);\n  },\n\n  _getGeometryType: function(geomTypes) {\n    if (geomTypes && geomTypes.length > 0) {\n      var types = ['point', 'polygon', 'line', 'raster'];\n      var geomType = geomTypes[0];\n\n      return _.find(types, function(type) {\n        return geomType.toLowerCase().indexOf(type) !== -1;\n      });\n\n    } else {\n      return null;\n    }\n  },\n\n  _getDatasetSize: function(size) {\n    return size ? cdb.Utils.readablizeBytes(size, true).split(' ') : 0;\n  },\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * Represents a map card on data library.\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  className: 'MapsList-item MapsList-item--fake',\n  tagName: 'li',\n\n  initialize: function() {\n    this.template = cdb.templates.getTemplate('data_library/content/list/placeholder_item_template');\n  },\n\n  render: function() {\n    this.clearSubViews();\n\n    this.$el.html(\n      this.template()\n    );\n\n    return this;\n  },\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar DatasetsItem = require('./dataset_item_view');\nvar PlaceholderItem = require('./placeholder_item_view');\nvar MAP_CARDS_PER_ROW = 3;\n\n/**\n *  View representing the list of items\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  tagName: 'ul',\n\n  initialize: function() {\n    this._initBinds();\n  },\n\n  render: function() {\n    if (this.collection.options.get('page') === 1) {\n      this.clearSubViews();\n    }\n\n    this.collection.each(this._addItem, this);\n\n    var klass = 'MapsList';\n\n    if (this.collection._ITEMS_PER_PAGE * this.collection.options.get('page') >= this.collection.total_entries) {\n      klass += ' is-bottom';\n    }\n\n    this.$el.attr('class', klass);\n\n    if (this.collection.size() > 0) {\n      this._fillEmptySlotsWithPlaceholderItems();\n    }\n\n    return this;\n  },\n\n  show: function() {\n    this.$el.removeClass('is-hidden');\n  },\n\n  hide: function() {\n    this.$el.addClass('is-hidden');\n  },\n\n  _addItem: function(m) {\n    var item = new DatasetsItem({\n      model: m\n    });\n\n    this.addView(item);\n    this.$el.append(item.render().el);\n  },\n\n  _initBinds: function() {\n    this.collection.bind('reset', this.render, this);\n    this.add_related_model(this.collection);\n  },\n\n  _fillEmptySlotsWithPlaceholderItems: function() {\n    _.times(this._emptySlotsCount(), function(i) {\n      var view = new PlaceholderItem();\n      this.$el.append(view.render().el);\n      this.addView(view);\n    }, this);\n  },\n\n  _emptySlotsCount: function() {\n    return (this.collection._ITEMS_PER_PAGE - this.collection.size()) % MAP_CARDS_PER_ROW;\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar randomQuote = require('../../common/view_helpers/random_quote');\n\n/*\n *  Content result default view\n */\n\nmodule.exports = cdb.core.View.extend({\n\n  initialize: function() {\n    this.template = cdb.templates.getTemplate(this.options.template);\n\n    this._initBinds();\n  },\n\n  render: function() {\n    this.$el.html(this.template({\n      // defaultUrl:     this.router.currentDashboardUrl(),\n      defaultUrl:     '',\n      page:           this.collection.options.get('page'),\n      isSearching:    this.model.get('is_searching'),\n      tag:            this.collection.options.get('tags'),\n      q:              this.collection.options.get('q'),\n      quote:          randomQuote(),\n      type:           this.collection.options.get('type'),\n      totalItems:     this.collection.size(),\n      totalEntries:   this.collection.total_entries\n    }));\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.collection.bind('change', this.render, this);\n    this.collection.bind('remove add reset', this.render, this);\n    this.add_related_model(this.collection);\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\nmodule.exports = cdb.admin.Visualizations.extend({\n\n  _ITEMS_PER_PAGE: 12,\n\n  model: cdb.core.Model,\n\n  url: function() {\n    var u = '//' + cdb.config.get('data_library_user') + '.' + cdb.config.get('account_host') + '/api/v1/viz';\n    u += \"?\" + this._createUrlOptions();\n    return u;\n  }\n\n});\n",
    "var $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar UserInfoView = require('../public_dashboard/user_info_view');\nvar UserSettingsView = require('../public_common/user_settings_view');\nvar UserIndustriesView = require('../public_common/user_industries_view');\nvar DataLibrary = require('./main_view');\n\n/**\n * Entry point for data-library index\n */\n\n$(function() {\n  cdb.init(function() {\n    cdb.templates.namespace = 'cartodb/';\n    cdb.config.set(window.config);\n    cdb.config.set('data_library_user', window.config.common_data_user);\n    cdb.config.set('dataset_base_url', window.dataset_base_url);\n\n    var userIndustriesView = new UserIndustriesView({\n      el: $('.js-user-industries'),\n    });\n\n    $(document.body).bind('click', function() {\n      cdb.god.trigger('closeDialogs');\n    });\n\n    var authenticatedUser = new cdb.open.AuthenticatedUser({ host: cdb.config.get('data_library_user') + '.' + cdb.config.get('account_host')});\n\n    authenticatedUser.sync = Backbone.withCORS;\n\n    authenticatedUser.bind('change', function() {\n      if (authenticatedUser.get('username')) {\n        var user = new cdb.admin.User(authenticatedUser.attributes);\n        var userSettingsView = new UserSettingsView({\n          el: $('.js-user-settings'),\n          model: user\n        });\n        userSettingsView.render();\n\n        $('.js-login').hide();\n        $('.js-learn').show();\n      }\n    });\n\n    var userInfoView = new UserInfoView({\n      el: $('.js-user-info')\n    });\n    userInfoView.render();\n\n    var data_library = new DataLibrary({\n      el: $('.js-data_library')\n    });\n\n    data_library.render();\n\n    authenticatedUser.fetch();\n  });\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\n/**\n * The content of the dropdown menu opened by the user in the data-library filters, e.g.:\n *   Category â–¼\n *      ______/\\____\n *     |            |\n *     |    this    |\n *     |____________|\n */\nmodule.exports = cdb.admin.DropdownMenu.extend({\n  className: 'CDB-Text Dropdown Dropdown--public',\n\n  events: {\n    'click': 'killEvent',\n    'click .js-all': '_onClickAll',\n    'click .js-categoryLink': '_onClickLink'\n  },\n\n  initialize: function() {\n    this.elder('initialize');\n    this.template_base = cdb.templates.getTemplate('data_library/filters/dropdown/template');\n\n    // TODO: fetch tags dynamically\n\n    // Necessary to hide dialog on click outside popup, for example.\n    cdb.god.bind('closeDialogs', this.hide, this);\n\n    this._initBinds();\n  },\n\n  _initBinds: function() {\n    this.add_related_model(this.collection);\n  },\n\n  _onClickAll: function(e) {\n    this.collection.options.set({\n      tags: '',\n      page: 1\n    });\n    this.hide();\n  },\n\n  _onClickLink: function(e) {\n    var tag = $(e.target).text();\n\n    this.collection.options.set({\n      tags: tag,\n      page: 1\n    });\n    this.hide();\n  },\n\n  render: function() {\n    this.$el.html(this.template_base({ }));\n\n    // TODO: taken from existing code, how should dropdowns really be added to the DOM?\n    $('body').append(this.el);\n\n    return this;\n  },\n\n  clean: function() {\n    this.elder('clean');\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar DropdownView = require('./dropdown/view');\nvar Utils = (typeof window !== \"undefined\" ? window['cdb']['Utils'] : typeof global !== \"undefined\" ? global['cdb']['Utils'] : null);\n\n/**\n *  Dashboard filters.\n *\n *  - 'Filter by' collection.\n *  - 'Search' any pattern within collection.\n *\n */\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'submit .js-search-form': '_submitSearch',\n    'keydown .js-search-form': '_onSearchKeyDown',\n    'click .js-search-form': 'killEvent',\n    'click .js-search-link': '_onSearchClick',\n    'click .js-clean-search': '_onCleanSearchClick',\n    'click .js-categoriesDropdown': '_createDropdown'\n  },\n\n  initialize: function() {\n    this.template = cdb.templates.getTemplate('data_library/filters/template');\n\n    this._preRender();\n    this._initBinds();\n  },\n\n  _preRender: function() {\n    var $uInner = $('<div>').addClass('u-inner');\n    var $filtersInner = $('<div>').addClass('Filters-inner');\n    this.$el.append($uInner.append($filtersInner));\n  },\n\n  render: function() {\n    this.$('.Filters-inner').html(\n      this.template({\n        tag: this.collection.options.get('tags'),\n        q: this.collection.options.get('q')\n      })\n    );\n\n    return this;\n  },\n\n  _initBinds: function() {\n    this.collection.bind('add remove change reset', this.render, this);\n    this.collection.options.bind('change:tags', this.render, this);\n    this.add_related_model(this.collection);\n    this.add_related_model(this.collection.options);\n    this.add_related_model(cdb.god);\n  },\n\n  _createDropdown: function(ev) {\n    this.killEvent(ev);\n    this._setupDropdown(new DropdownView({\n      target: $(ev.target).closest('.js-categoriesDropdown'),\n      horizontal_position: 'horizontal_left',\n      horizontal_offset: -90,\n      tick: 'center',\n      collection: this.collection,\n      position: 'offset',\n      vertical_offset: -20\n    }));\n  },\n\n  _setupDropdown: function(dropdownView) {\n    this._closeAnyOtherOpenDialogs();\n\n    this.addView(dropdownView);\n    cdb.god.bind('closeDialogs', function() {\n      dropdownView.clean();\n    }, this);\n\n    this.add_related_model(cdb.god);\n\n    dropdownView.render();\n    dropdownView.open();\n  },\n\n  _closeAnyOtherOpenDialogs: function() {\n    cdb.god.trigger(\"closeDialogs\");\n  },\n\n  _onSearchClick: function(e) {\n    this.killEvent(e);\n\n    this.$('.js-search-input').val('');\n    this.$('.js-search-input').focus();\n  },\n\n  _onSearchKeyDown: function(e) {\n    if (e.keyCode === 27) {\n      this._onSearchClick(e);\n    }\n  },\n\n  // Filter actions\n\n  _onCleanSearchClick: function(e) {\n    this.killEvent(e);\n    this._cleanSearch();\n  },\n\n  _submitSearch: function(e) {\n    this.killEvent(e);\n\n    this.model.set('is_searching', true);\n\n    this.collection.options.set({\n      q: Utils.stripHTML(this.$('.js-search-input').val().trim(),''),\n      page: 1\n    });\n\n    this.render();\n  },\n\n  _cleanSearch: function() {\n    this.model.set('is_searching', false);\n\n    this.collection.options.set({\n      q: '',\n      page: 1\n    });\n\n    this.render();\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\n/**\n * The header map in the data-library page, where the user can filter by country, e.g.:\n */\n module.exports = cdb.core.View.extend({\n\n  className: 'DataLibrary-header',\n\n  initialize: function() {\n    _.bindAll(this, '_addGeojsonData');\n\n    this.ACTIVE_CARTODB_ID = null;\n\n    this.template_base = cdb.templates.getTemplate('data_library/header/template');\n\n    this._initBindings();\n  },\n\n  events: {\n    'click .js-country': '_onClickCountry',\n    'click .js-back': '_onClickBack'\n  },\n\n  _initBindings: function() {\n    var self = this;\n\n    this.model.bind('change:show_more', this._onChangeShowMore, this);\n    this.model.bind('change:vis_count', this._onChangeVisCount, this);\n    this.model.bind('change:show_countries', this._onChangeCountries, this);\n  },\n\n  load: function() {\n    this.map = L.map(this.$(\"#DataLibraryMap\")[0], {\n      zoomControl: false,\n      attributionControl: false\n    }).setView([44,-31], 3);\n\n    var sqlDomain = cdb.config.get('sql_api_template').replace('{user}', cdb.config.get('data_library_user'));\n    var geojsonURL = sqlDomain + '/api/v2/sql?q=' + encodeURIComponent(\"select * from world_borders\") + '&format=geojson&filename=world_borders';\n    $.getJSON(geojsonURL).done(this._addGeojsonData);\n  },\n\n  _addGeojsonData: function(geojsonData) {\n    var _this = this;\n\n    var style = {\n      color: '#2E3C43',\n      weight: 1,\n      opacity: 1,\n      fillColor: '#242D32',\n      fillOpacity: 1,\n    };\n\n    this.layer = L.geoJson(geojsonData, {\n      style: style,\n      onEachFeature: function(feature, featureLayer) {\n        featureLayer\n          .on('click', function (e) {\n            if (feature.properties.cartodb_id != _this.ACTIVE_CARTODB_ID) {\n              _this._onClickFeature(feature, featureLayer, e.layer);\n            }\n          })\n          .on('mouseover', function (e) {\n            _this._onMouseOverFeature(featureLayer, e.target);\n          })\n          .on('mouseout', function () {\n            _this._onMouseOutFeature();\n          });\n      }\n    }).addTo(this.map);\n  },\n\n  _onClickFeature: function(feature, featureLayer, eventLayer) {\n    this.ACTIVE_CARTODB_ID = feature.properties.cartodb_id;\n\n    this.layer.eachLayer(function (layer) {\n      layer.setStyle({ fillColor : '#242D32' });\n    });\n\n    featureLayer.setStyle({\n      fillColor: '#fff'\n    });\n\n    var bbox = eventLayer.getBounds();\n\n    this.map.fitBounds(bbox);\n\n    this._updateBounds([\n      bbox._southWest.lng,\n      bbox._southWest.lat,\n      bbox._northEast.lng,\n      bbox._northEast.lat\n    ]);\n  },\n\n  _onMouseOverFeature: function(featureLayer, target) {\n    var _this = this;\n\n    this.layer.eachLayer(function (layer) {\n      if (layer.feature.properties.cartodb_id != _this.ACTIVE_CARTODB_ID) {\n        layer.setStyle({ fillColor : '#242D32' });\n      }\n    });\n\n    if (target.feature.properties.cartodb_id != this.ACTIVE_CARTODB_ID) {\n      featureLayer.setStyle({ fillColor : '#616567' });\n    }\n  },\n\n  _onMouseOutFeature: function() {\n    var _this = this;\n\n    this.layer.eachLayer(function (layer) {\n      if (layer.feature.properties.cartodb_id != _this.ACTIVE_CARTODB_ID) {\n        layer.setStyle({ fillColor : '#242D32' });\n      }\n    });\n  },\n\n  show: function() {\n    $('.js-Header-title').removeClass('is-hidden');\n    $('.js-Header-footer').removeClass('is-hidden');\n    this.$el.addClass('is-active');\n  },\n\n  hide: function() {\n    $('.js-Header-title').addClass('is-hidden');\n    $('.js-Header-footer').addClass('is-hidden');\n\n    this.$el.removeClass('is-active');\n  },\n\n  _updateBounds: function(bounds) {\n    this.collection.options.set({\n      bbox: bounds.join(','),\n      page: 1\n    });\n\n  },\n\n  _onClickCountry: function() {\n    this.model.set('show_countries', true);\n  },\n\n  _onClickBack: function() {\n    this.model.set('show_countries', false);\n    this.ACTIVE_CARTODB_ID = null;\n    this.collection.options.set({\n      bbox: '',\n      page: 1\n    });\n\n    this.map.setView([44,-31], 3);\n\n    this.layer.eachLayer(function (layer) {\n      layer.setStyle({ fillColor : '#242D32' });\n    });\n  },\n\n  render: function() {\n    this.$el.html(this.template_base({ }));\n\n    return this;\n  },\n\n  _onChangeCountries: function() {\n    this.$('.js-Header-title').toggleClass('is-hidden', this.model.get('show_countries'));\n    this.$('.js-CountrySelector').toggleClass('is-hidden', this.model.get('show_countries'));\n    this.$('.js-CountrySelector-back').toggleClass('is-hidden', !this.model.get('show_countries'));\n    this.$el.toggleClass('is-active', this.model.get('show_countries'));\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar FiltersView = require('./filters/view');\nvar ListView = require('./content/list/view');\nvar ContentView = require('./content/view');\nvar DatasetsCollection = require('./datasets_collection');\nvar DataLibraryHeader = require('./header/view');\n\n\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-more': '_onClickMore'\n  },\n\n  initialize: function() {\n    this._initModels();\n    this._initViews();\n\n    this._initBindings();\n  },\n\n  _initViews: function() {\n    this.controlledViews = {};  // All available views\n    this.enabledViews = [];     // Visible views\n\n    var dataLibraryHeader = new DataLibraryHeader({\n      model: this.model,\n      collection: this.collection\n    });\n\n    this.addView(dataLibraryHeader);\n    $('.js-Header--datalibrary').append(dataLibraryHeader.render().el);\n    dataLibraryHeader.load();\n\n    var filtersView = new FiltersView({\n      el: this.$('.Filters'),\n      collection: this.collection,\n      model: this.model\n    });\n    filtersView.render();\n    this.addView(filtersView);\n\n    var moreView = new ContentView({\n      model: this.model,\n      collection: this.collection,\n      template: 'data_library/content/more_template',\n    });\n    this.$el.append(moreView.render().el);\n    this.addView(moreView);\n\n    var listView = new ListView({\n      collection: this.collection\n    });\n    this.$('.js-DataLibrary-content').append(listView.render().el);\n    this.addView(listView);\n    this.controlledViews['list'] = listView;\n\n    var noResultsView = new ContentView({\n      model: this.model,\n      collection: this.collection,\n      template: 'data_library/content/no_results_template',\n    });\n    this.$el.append(noResultsView.render().el);\n    this.addView(noResultsView);\n    this.controlledViews['no_results'] = noResultsView;\n\n    var errorView = new ContentView({\n      model: this.model,\n      collection: this.collection,\n      template: 'data_library/content/error_template'\n    });\n    this.$el.append(errorView.render().el);\n    this.addView(errorView);\n    this.controlledViews['error'] = errorView;\n\n    var mainLoaderView = new ContentView({\n      model: this.model,\n      collection: this.collection,\n      template: 'data_library/content/loader_template'\n    });\n    this.$el.append(mainLoaderView.render().el);\n    this.addView(mainLoaderView);\n    this.controlledViews['main_loader'] = mainLoaderView;\n  },\n\n  _fetchCollection: function() {\n    this.collection.fetch();\n  },\n\n  render: function() {\n    this._fetchCollection();\n\n    return this;\n  },\n\n  _initBindings: function() {\n    this.model.bind('change:show_more', this._onChangeShowMore, this);\n    this.model.bind('change:vis_count', this._onChangeVisCount, this);\n\n    this.collection.options.bind('change:tags', function() {\n      this.model.set({ vis_count: 0 });\n    }, this);\n    this.collection.options.bind('change:bbox', function() {\n      this.model.set({ vis_count: 0 });\n    }, this);\n\n    this.collection.options.bind('change', function() {\n      this.model.set({ show_more: false });\n      this._fetchCollection();\n    }, this);\n    this.collection.bind('reset', function() {\n      this._onDataFetched();\n    }, this);\n    this.collection.bind('loading', function() {\n      if (this.collection.options.get('page') === 1) {\n        this._showLoader();\n      } else {\n        this._showLoaderOnly();\n      }\n    }, this);\n    this.collection.bind('error', function(coll, e, opts) {\n      if (!e || (e && e.statusText !== \"abort\")) {\n        this._onDataError(e);\n      }\n    }, this);\n\n    this.add_related_model(this.collection);\n    this.add_related_model(this.collection.options);\n  },\n\n  _onChangeVisCount: function() {\n    if (this.model.get('vis_count') >= this.collection.total_entries) {\n      this.model.set({ show_more: false });\n    } else {\n      this.model.set({ show_more: true });\n    }\n  },\n\n  _onChangeShowMore: function() {\n    this.$('.js-more').toggleClass('is-hidden', !this.model.get('show_more'));\n  },\n\n  _onDataFetched: function() {\n    var activeViews = [ ];\n\n    if (this.collection.size() === 0) {\n      activeViews.push('no_results');\n    } else {\n      this.model.set({ vis_count: this.model.get('vis_count') + this.collection.length, show_more: true });\n      activeViews.push('list');\n    }\n\n    this._hideBlocks();\n    this._showBlocks(activeViews);\n  },\n\n  _onDataError: function(e) {\n    // Send error to TrackJS\n    if (window.trackJs && window.trackJs.track) {\n      window.trackJs.track(e);\n    }\n\n    this._hideBlocks();\n    this._showBlocks([ 'error' ]);\n  },\n\n  _showBlocks: function(views) {\n    var self = this;\n\n    if (views) {\n      _.each(views, function(v){\n        self.controlledViews[v].show();\n        self.enabledViews.push(v);\n      });\n    } else {\n      self.enabledViews = [];\n      _.each(this.controlledViews, function(v){\n        v.show();\n        self.enabledViews.push(v);\n      });\n    }\n  },\n\n  _hideBlocks: function(views) {\n    var self = this;\n    if (views) {\n      _.each(views, function(v){\n        self.controlledViews[v].hide();\n        self.enabledViews = _.without(self.enabledViews, v);\n      });\n    } else {\n      _.each(this.controlledViews, function(v){\n        v.hide();\n      });\n      self.enabledViews = [];\n    }\n  },\n\n  _isBlockEnabled: function(name) {\n    if (name) {\n      return _.contains(this.enabledViews, name);\n    }\n\n    return false;\n  },\n\n  _showLoader: function() {\n    this._hideBlocks();\n    this._showBlocks([ 'main_loader' ]);\n  },\n\n  _showLoaderOnly: function() {\n    this._showBlocks([ 'main_loader' ]);\n  },\n\n  _hideLoader: function() {\n    this._hideBlocks([ 'main_loader' ]);\n  },\n\n  _initModels: function() {\n    this.model = new cdb.core.Model({\n      vis_count: 0,\n      show_countries: false,\n      is_searching: false\n    });\n\n    this.collection = new DatasetsCollection();\n\n    this._resetOptions();\n  },\n\n  _resetOptions: function() {\n    this.collection.options.set({\n      q: '',\n      order: 'updated_at',\n      page: 1,\n      tags: '',\n      bbox: '',\n      source: [],\n      type: 'table'\n    });\n  },\n\n  _onClickMore: function(e) {\n    this.killEvent(e);\n\n    this.model.set({ show_more: false });\n\n    this.collection.options.set({\n      page: this.collection.options.get('page') + 1\n    });\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\n/**\n * The content of the dropdown menu opened by the industries link in the header, e.g.:\n *   CartoDB, Industries, Explore, Pricing\n *             ______/\\____\n *            |            |\n *            |    this    |\n *            |____________|\n */\nmodule.exports = cdb.admin.DropdownMenu.extend({\n  className: 'CDB-Text Dropdown Dropdown--public',\n\n  initialize: function() {\n    this.elder('initialize');\n    this.template_base = cdb.templates.getTemplate('public_common/user_industries/dropdown_template');\n\n    // Necessary to hide dialog on click outside popup, for example.\n    cdb.god.bind('closeDialogs', this.hide, this);\n  },\n\n  render: function() {\n    this.$el.html(this.template_base());\n\n    // TODO: taken from existing code, how should dropdowns really be added to the DOM?\n    $('body').append(this.el);\n\n    return this;\n  },\n\n  clean: function() {\n    // Until https://github.com/CartoDB/cartodb.js/issues/238 is resolved:\n    $(this.options.target).unbind('click', this._handleClick);\n    this.constructor.__super__.clean.apply(this);\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar IndustriesDropdown = require('./user_industries/dropdown_view');\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\n/**\n * View to render the user industries section in the header.\n * Expected to be created from existing DOM element.\n */\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-dropdown-target': '_createDropdown'\n  },\n\n  _createDropdown: function(ev) {\n    this.killEvent(ev);\n    cdb.god.trigger('closeDialogs');\n\n    var view = new IndustriesDropdown({\n      target: $(ev.target),\n      vertical_offset: -10,\n      horizontal_offset: $(ev.target).width()-100,\n      horizontal_position: 'left',\n      tick: 'center'\n    });\n    view.render();\n\n    view.on('onDropdownHidden', function() {\n      view.clean();\n    }, this);\n\n    view.open();\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\ncdb.admin = (typeof window !== \"undefined\" ? window['cdb']['admin'] : typeof global !== \"undefined\" ? global['cdb']['admin'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\n/**\n * The content of the dropdown menu opened by the user avatar in the top-right of the header, e.g.:\n *   Explore, Learn, â™ž\n *             ______/\\____\n *            |            |\n *            |    this    |\n *            |____________|\n */\nmodule.exports = cdb.admin.DropdownMenu.extend({\n  className: 'CDB-Text Dropdown',\n\n  initialize: function() {\n    this.elder('initialize');\n    this.template_base = cdb.templates.getTemplate('public_common/user_settings/dropdown_template');\n\n    // Necessary to hide dialog on click outside popup, for example.\n    cdb.god.bind('closeDialogs', this.hide, this);\n  },\n\n  render: function() {\n    var user = this.model;\n    var userUrl = user.viewUrl();\n\n    this.$el.html(this.template_base({\n      name: user.get('name') || user.get('username'),\n      email: user.get('email'),\n      isOrgOwner: user.isOrgOwner(),\n      dashboardUrl: userUrl.dashboard(),\n      publicProfileUrl: userUrl.publicProfile(),\n      accountSettingsUrl: userUrl.accountSettings(),\n      logoutUrl: userUrl.logout()\n    }));\n\n    // TODO: taken from existing code, how should dropdowns really be added to the DOM?\n    $('body').append(this.el);\n\n    return this;\n  },\n\n  clean: function() {\n    // Until https://github.com/CartoDB/cartodb.js/issues/238 is resolved:\n    $(this.options.target).unbind('click', this._handleClick);\n    this.constructor.__super__.clean.apply(this);\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar SettingsDropdown = require('./user_settings/dropdown_view');\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\n/**\n * View to render the user settings section in the header.\n * Expected to be created from existing DOM element.\n */\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-dropdown-target': '_createDropdown'\n  },\n\n  render: function() {\n    var dashboardUrl = this.model.viewUrl().dashboard();\n    var datasetsUrl = dashboardUrl.datasets();\n    var mapsUrl = dashboardUrl.maps();\n\n    this.$el.html(\n      cdb.templates.getTemplate('public_common/user_settings_template')({\n        avatarUrl: this.model.get('avatar_url'),\n        mapsUrl: mapsUrl,\n        datasetsUrl: datasetsUrl\n      })\n    );\n\n    return this;\n  },\n\n  _createDropdown: function(ev) {\n    this.killEvent(ev);\n    cdb.god.trigger('closeDialogs');\n\n    var view = new SettingsDropdown({\n      target: $(ev.target),\n      model: this.model, // user\n      horizontal_offset: 18\n    });\n    view.render();\n\n    view.on('onDropdownHidden', function() {\n      view.clean();\n    }, this);\n\n    view.open();\n  }\n\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\n\n/**\n * The content of the dropdown menu opened by the link at the end of the breadcrumbs menu, e.g.\n *   username / Maps v\n *            ______/\\____\n *           |            |\n *           |    this    |\n *           |____________|\n */\nmodule.exports = cdb.admin.DropdownMenu.extend({\n  className: 'Dropdown',\n\n  initialize: function() {\n    this.elder('initialize');\n\n    // Necessary to hide dialog on click outside popup, for example.\n    cdb.god.bind('closeDialogs', this.hide, this);\n  },\n\n  render: function() {\n    this.$el.show();\n\n    return this;\n  },\n\n  clean: function() {\n    this.$el.hide();\n  }\n});\n",
    "var cdb = (typeof window !== \"undefined\" ? window['cdb'] : typeof global !== \"undefined\" ? global['cdb'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar BreadcrumbDropdown = require('./user_info/breadcrumb_dropdown_view');\n\n/**\n * View to render the user info section.\n * Expected to be created from existing DOM element.\n */\nmodule.exports = cdb.core.View.extend({\n\n  events: {\n    'click .js-breadcrumb-dropdown-target': '_createBreadcrumbDropdown'\n  },\n\n  render: function() {\n    return this;\n  },\n\n  _createBreadcrumbDropdown: function(ev) {\n    this.killEvent(ev);\n    var dropdown = new BreadcrumbDropdown({\n      target: $('.js-breadcrumb-dropdown-target'),\n      el: $('.js-breadcrumb-dropdown-content'),\n      horizontal_offset: 3, // to match the dropdown indicator/arrow\n      horizontal_position: 'right',\n      tick: 'right'\n    });\n    this.addView(dropdown);\n    dropdown.on('onDropdownShown', function () {\n      cdb.god.trigger('closeDialogs');\n    }, this);\n    dropdown.open();\n  }\n});\n"
  ]
}
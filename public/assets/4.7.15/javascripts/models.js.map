{"version":3,"sources":["../../../../lib/assets/javascripts/cartodb/models/carto.js","../../../../lib/assets/javascripts/cartodb/models/wizard.js","../../../../lib/assets/javascripts/cartodb/models/table.js","../../../../lib/assets/javascripts/cartodb/models/tabledata.js","../../../../lib/assets/javascripts/cartodb/models/sqlview.js","../../../../lib/assets/javascripts/cartodb/models/cartodb_layer.js","../../../../lib/assets/javascripts/cartodb/models/map.js","../../../../lib/assets/javascripts/cartodb/models/group.js","../../../../lib/assets/javascripts/cartodb/models/user_groups.js","../../../../lib/assets/javascripts/cartodb/models/organization_groups.js","../../../../lib/assets/javascripts/cartodb/models/user.js","../../../../lib/assets/javascripts/cartodb/models/permissions.js","../../../../lib/assets/javascripts/cartodb/models/group_users.js","../../../../lib/assets/javascripts/cartodb/models/grantable.js","../../../../lib/assets/javascripts/cartodb/models/grantables.js","../../../../lib/assets/javascripts/cartodb/models/organization.js","../../../../lib/assets/javascripts/cartodb/models/like.js","../../../../lib/assets/javascripts/cartodb/models/carto/category.js","../../../../lib/assets/javascripts/cartodb/models/carto/torque.js","../../../../lib/assets/javascripts/cartodb/models/carto/torque_cat.js","../../../../lib/assets/javascripts/cartodb/models/assets.js","../../../../lib/assets/javascripts/cartodb/models/color_ramps.js","../../../../lib/assets/javascripts/cartodb/models/common_tables.js","../../../../lib/assets/javascripts/cartodb/models/export_map_model.js","../../../../lib/assets/javascripts/cartodb/models/filter.js","../../../../lib/assets/javascripts/cartodb/models/geocodings.js","../../../../lib/assets/javascripts/cartodb/models/import.js","../../../../lib/assets/javascripts/cartodb/models/slide.js","../../../../lib/assets/javascripts/cartodb/models/synchronization.js","../../../../lib/assets/javascripts/cartodb/models/tile_json.js","../../../../lib/assets/javascripts/cartodb/models/vis.js","../../../../lib/assets/javascripts/cartodb/models/wkt.js","../../../../lib/assets/javascripts/cartodb/models/wms_service_model.js","../../../../lib/assets/javascripts/cartodb/table/overlays/overlays.js"],"names":["manage_choropleth_props","type","props","carto_props","marker-width","marker-fill-opacity","marker-line-width","marker-line-color","marker-line-opacity","marker-allow-overlap","line-color","line-opacity","line-width","polygon-opacity","text-name","text-halo-fill","text-halo-radius","text-face-name","text-size","text-dy","text-allow-overlap","text-placement","text-placement-type","text-label-position-tolerance","text-fill","_","each","v","k","undefined","getProp","obj","prop","p","push","concat","manage_carto_properies","test","isTextProperty","zoom","translate_carto_properties","pick","_cartocss_spec_props","generate_carto_properties","map","include","carto_quotables","carto_variables","filter_props","fn","simple_polygon_generator","table","changed","callback","text_properties","general_properties","generalLayerProps","textLayerProps","generalLayer","getUnqualifiedName","join","textLayer","size","intensity_generator","marker-fill","marker-comp-op","marker-type","marker-placement","marker-clip","marker-multi-policy","table_name","css","name","cluster_sql","nquartiles","grids","bucket","mainBucket","sizes","step","i","sql","j","bucket2","template","get","cluster_generator","methodMap","2 Buckets","3 Buckets","4 Buckets","5 Buckets","c","Math","round","min","max","bubble_generator","carto_functionMap","DEFAULT_QFUNCTION","values","NPOINS","t","data","quartiles","toFixed","normalizeQuartiles","maxNumber","normalized","length","q","abs","String","indexOf","choropleth_generator","geomColumnTypes","7 Buckets","ramp","cdb","admin","color_ramps","log","error","density_sql","z","density_generator","polygon-comp-op","polygon_size","density_sql_gen","tmpl","slots","_sqlQuery","rows","maxdensity","columnExistsValidatorFor","column_name","form","field","property","extra","SQL","username","this","options","user_data","window","user_name","api_key","cartodb","user","sql_api_template","config","getSqlApiBaseUrl","Column","core","Model","extend","idAttribute","url","method","version","urlVersion","collection","base","isNew","id","initialize","unset","silent","toJSON","clone","attributes","_name","CartoDBTableMetadata","ui","common","TableProperties","currentLoading","sqlApiClass","_TEXTS","columnDeleted","columnDeleting","columnAdded","columnAdding","hiddenColumns","bindAll","readOnly","bind","_prepareSchema","sqlView","synchronization","TableSynchronization","linkToTable","trigger","isSync","no_data_fetch","e","resp","_data","notice","view","set","schema","schemaFromData","geometry_types","getGeometryTypes","retrigger","permission","Permission","parse","xhr","stats_geometry_types","msg","timeout","setReadOnly","isReadOnly","tk","split","getUnquotedName","replace","sortSchema","err","responseText","JSON","errors","self","_columnType","s","isInSQLView","columnNames","sc","pluck","containsColumn","contains","columnNamesByType","filter","statsGeomColumnTypes","geometryTypes","types","geomTypes","isArray","_map","st_multipolygon","st_polygon","st_multilinestring","st_linestring","st_multipoint","st_point","a","toLowerCase","uniq","addGeomColumnType","opts","nonReservedColumnNames","isReservedColumn","columnTypes","_getColumn","columnName","getColumnType","addColumn","columnType","save","success","mdl","fetch","wait","deleteColumn","destroy","renameColumn","newName","oldName","new_name","old_name","isTypeChangeAllowed","newType","deactivateMatrix","number","boolean","date","deactivated","isTypeChangeDestructive","destructiveMatrix","string","changeColumnType","saveNewColumnType","column","originalData","CartoDBTableData","bindData","bindedReset","useSQLView","unbind","modify_rows","affected_rows","_t","dataModel","elder","$","when","done","old_success","fail","Row","linkToInfowindow","infowindow","containsField","removeField","addField","_hash","str","hash","charCodeAt","columns","SYSTEM_COLUMNS","has","saveFields","current_schema_key","sort","previous_schema_key","previous","restoreFields","mergeFields","removeMissingFields","embedURL","viewUrl","prefixUrl","hasTheGeom","currentSchema","n","fetchGeoreferenceStatus","dfd","Deferred","sqlApi","execute","resolve","promise","isGeoreferenced","geoColumns","any","row","hasGeometry","geometryTypeChanged","normalize","geoTypes","prevGeoTypes","previousAttributes","o","duplicate","callbacks","query","getSQL","Utils","safeTableNameQuoting","table_copy","importModel","Import","model","changes","checkImportModel","item_queue_id","newTable","apply","arguments","pollCheck","dependentVisualizations","chain","union","compact","value","createFromQuery","priority","priorities","cartodb_id","the_geom","__default__","created_at","updated_at","b","prioA","prioB","alterTable","trim","search","alterTableData","_CREATED_EVENT","_GEOMETRY_TYPES","point","multipoint","linestring","multilinestring","polygon","multipolygon","extra_params","no_geom","without","skipfields","attr","isGeometryGeoJSON","isGeomLoaded","geojson","column_types_WKT","WKT","coordinates","g","getFeatureType","info","getGeomType","RESERVED_COLUMNS","TableData","_ADDED_ROW_TEXT","_ADDING_ROW_TEXT","_GEOMETRY_UPDATED","models","prototype","initOptions","_fetching","pages","lastPage","newPage","floor","gt","rows_per_page","page","sort_order","order_by","filter_column","filter_value","opt","hasChanged","add","changingPage","at","_coll","d","fields","_schemaFromQueryFields","_createUrlOptions","params","encodeURIComponent","_geometryColumnSQL","wrappedSQL","exclude","fetchGeometry","select_columns","omit","mode","sqlApiUrl","sync","query_schema","Backbone","call","getSqlApiUrl","setOptions","refresh","isFetchingPage","loadPageAtTop","first","loadPageAtBottom","last","currentPage","direction","Number","rowspp","max_items","pop","remove","slice","shift","addRow","create","newRow","attrs","r","_saved","getRow","no_add","getRowAt","index","deleteRow","row_id","nslots","equalInterval","range","l","_quantificationMethod","functionName","distinct","simplify_fn","discreteHistogram","nbuckets","count","reached_limit","date_histogram","agg_array","parseFloat","val","buckets","hist","bounds","upper","lower","tz","span","bucket_size","histogram","jenkBins","headTails","quantileBins","categoriesForColumn","max_values","categories","geometryBounds","result","lon0","maxx","lat0","maxy","lon1","minx","lat1","miny","minlat","maxlat","minlon","maxlon","clampNum","x","ajax","_previousAttributes","fetched","_fetch","MAX_GET_LENGTH","originalTableSchema","geometryTypeFromGeoJSON","geo","geometryTypeFromWKT","wkt","toUpperCase","geometryTypeFromWKB","wkb","typeMap","0001","0002","0003","0004","0005","0006","bigendian","substring","geom","geoType","SQLViewData","UNDEFINED_TYPE_COLUMN","reset","setSQL","_parseSQL","res","ext","sqlSource","sql_source","CartoDBLayer","MAX_HISTORY","MAX_HISTORY_QUERY","MAX_HISTORY_TILE_STYLE","debounce","initHistory","InfowindowModel","template_name","tooltip","wizard_properties","WizardProperties","layer","_manageInteractivity","legend","LegendModel","bindInfowindow","bindLegend","bindTable","table_attr","isTableLoaded","toLayerGroup","layer_definition","layers","getLayerDef","query_wrapper","cartocss","cartocss_version","interactivity","localStorage","addToHistory","trimHistory","limit","removedValue","splice","moveHistoryPosition","newPosition","getCurrentHistoryPosition","currentPosition","redoHistory","undoHistory","h","isHistoryAtLastPosition","isHistoryAtFirstPosition","stored","storedSize","minimumPos","map_key","kind","order","supportsInteractivity","_saving","wp","properties","metadata","stringify","contentType","syncAbort","unbindSQLView","getCurrentState","bindSQLView","errorSQLView","invalidate","force_data_fetch","applySQLView","add_to_history","updateCartoCss","tooltipColumns","getInteractivity","previousName","tileStyle","replaceRegexp","RegExp","tile_style","infowindowData","pos","watchedFields","deferredSave","resetQuery","m","clearSQLView","moveToFront","dataLayers","getDataLayers","moveLayer","to","createDefaultLayerForTable","tableName","userName","CartoStyles","DEFAULT_GEOMETRY_STYLE","style_version","visible","maps_api_template","no_cdn","disabled","alternative_names","old_fields","old_template_name","width","maxHeight","columnsSet","addMissingFields","fieldsSet","GMapsBaseLayer","parent_id","WMSLayer","_generateClassName","urlTemplate","className","parseInt","isNumber","PlainLayer","TileLayer","validateTemplateURL","subdomains","image","Image","onload","onerror","src","random","byCustomURL","tms","TypeError","attribution","maxZoom","minZoom","TorqueLayer","Layers","_DATA_LAYERS","typeClass","Tiled","CartoDB","Plain","GMapsBase","WMS","torque","Layer::Tiled","Layer::Carto","Layer::Background","tiled","carto","wms","background","gmapsbase","_isSorted","Collection","getTorqueLayers","where","getTiledLayers","getLayerDefIndex","cartodbLayers","getLayersByType","cid","layerDef","lyr","getTotalDataLayers","getTotalDataLegends","isLayerOnTopOfDataLayers","dataLayerOnTop","saveLayers","array","isEqual","movingLayer","newIndex","layerAtNewIndex","complete","Map","urlRoot","constructor","__super__","delayedSaveSync","_fetchLayers","_layersChanged","_updateAttributions","none","_adjustZoomtoLayer","dataLayer","relatedTo","_fetchOrCreate","bounding_box_ne","bounding_box_sw","view_bounds_ne","view_bounds_sw","center","map_id","setBaseLayer","baseLayer","isBaseLayerAdded","newBaseLayer","currentBaseLayer","newBaseLayerHasLabels","_updateBaseLayer","_replaceBaseLayer","_addBaseLayer","_hasLabelsLayer","_updateLabelsLayer","_addLabelsLayer","_destroyLabelsLayer","newAttributes","clear","labelsLayer","_labelsLayerNameFromBaseLayer","addDataLayer","addLayer","table_id","autoSave","changeProvider","provider","baselayer","_changeBaseLayer","change","isProviderGmaps","addCartodbLayerFromTable","layerReady","newLayer","active","clamp","fmod","toPrecision","latlng","lon","Group","defaults","display_name","users","GroupUsers","group","UserGroups","organization","OrganizationGroups","Error","response","total_entries","groups","newGroupById","totalCount","UserLayers","custom","category","User","avatar_url","tables","email","Organization","currentUserId","isInsideOrg","isOrgOwner","owner","isOrgAdmin","isViewer","isBuilder","nameOrUsername","renderData","currentUser","fetchTables","_fetchingTables","Visualizations","u","hasCreateDatasetsFeature","canCreateDatasets","hasCreateMapsFeature","canAddLayerTo","getMaxLayers","max_layers","getMaxConcurrentImports","concurrent_imports","featureEnabled","featureFlags","isCloseToLimits","quota","remainingQuota","getMaxLayersPerMap","canStartTrial","canCreatePrivateDatasets","actions","private_tables","equals","otherUser","UserUrl","base_url","is_org_admin","upgradeContactEmail","usedQuotaPercentage","assignedQuotaInRoundedMb","assignedQuotaPercentage","acl","_generateOwner","_generateAcl","aclItem","entity","_grantAccess","access","cleanPermissions","hasAccess","hasReadAccess","findRepresentableAclItem","hasWriteAccess","READ_WRITE","canChangeReadAccess","_canChangeAccess","canChangeWriteAccess","representableAclItem","isOwner","_ownAclItem","grantWriteAccess","grantReadAccess","READ_ONLY","revokeWriteAccess","revokeAccess","getUsersWithAnyPermission","_hasTypeUser","_getEntity","isSharedWithOrganization","_hasTypeOrg","overwriteAcl","otherPermission","_newAclItem","checkList","_findMostPrivilegedAclItem","fnName","_isOrganization","object","isFunction","find","_organizationAclItem","org","_mostPrivilegedGroupAclItem","list","iteratee","isValid","ACLItem","isOwn","validate","total_user_entries","addInBatch","userIds","_batchAsyncProcessUsers","removeInBatch","ids","deferred","args","reject","Grantable","_createEntity","capitalize","Grantables","reduce","grantables","memo","display_email","admin_email","collectionOpts","Users","_setOrganizationOnModel","containsUser","OrganizationUrl","_DEFAULT_EXCLUDE_CURRENT_USER","_excludeCurrentUser","comparator","excludeCurrentUser","restoreExcludeCurrentUser","Invites","users_emails","welcome_text","organizationId","Like","likeable","on","liked","likes","_onSaveError","status","statusText","toggleLiked","newByVisData","vis_id","others_value","category_generator","fill","cartocss_props","get_categories","colors","generate_categories","cat","column_type","showOthers","title","title_type","color","color_brewer","value_type","default","property_name","_normalizeValue","torque_generator","torque_props","trail","torque_cat","generate","torque_categories","gen","cats","property_cat","Asset","state","Assets","assets","StaticAsset","public_url","host","folder","StaticAssets","Equal Interval","Jenks","Heads/Tails","Quantile","default_reference","latest","polygon-fill","_generateCarto","generators","registerGenerator","old","_generateHeader","regenerate","gen_type","changedAttributes","style","CartoParser","parse_env","ruleset","RESERVED_VARIABLES","validation_data","frames","line","Parser","extractErrorLine","defs","tree","Reference","setData","_parseError","message","existing","definitions","toList","mapDef","elements","symbolizers","cartocss_reference","rules","forEach","key","element","_checkValidType","inheritDefinitions","sortStyles","toXML","Array","checkValidColor","_checkValidColor","expectedArguments","rgb","hsl","rgba","hsla","parsedErrors","match","_colorsFromRule","rule","searchRecursiveByType","ev","Color","_varsFromRule","Field","_extract","extractVariables","def","filters","columnList","f","filter_key","colorsUsed","rgbToHex","variablesUsed","getDefaultRules","attachment","rulesMap","getRuleByName","definition","ruleName","_rulesByName","green","3","4","5","6","7","blue","pink","black","red","inverted_green","inverted_blue","inverted_pink","inverted_black","inverted_red","spectrum1","spectrum2","purple_states","red_states","blue_states","inverted_purple_states","inverted_red_states","inverted_blue_states","CommonTables","ExportMapModel","_loadAttributes","requestExport","_requestExportSuccessHandler","god","cancelExport","_interrupt","_pollPID","setInterval","_checkState","_errorHandler","_finishExport","clearInterval","visualization_id","Filter","DEFAULT_HIST_BUCKETS","_fetchHist","_fetchDateHist","_fetchNumericHist","_changeHist","_changeDateHist","previousBounds","isNaN","lower_limit","upper_limit","per_bar","ceil","_getDateFromTimestamp","timestamp","Date","interpolate","fitToBucket","getSQLCondition","getSQLConditionForDate","getSQLConditionForNumber","_getTimeZone","getTimezoneOffset","lowerDateWithOffset","moment","format","toString","upperDateWithOffset","FilterDiscrete","list_view","items","_updateHist","selected","_sanitize","getSQLConditionForBoolean","getSQLConditionForString","selected_items","true_false_selected_items","null_selected_items","_containsNull","containsNull","_nullIsNotSelected","origin","destiny","difference","nullIsNotSelected","that","text","free_text","Filters","col","FilterClass","_getFilterModelforColumnType","sqls","removeFilters","Geocoding","_POLLTIMER","formatter","_checkFinish","setUrlRoot","tries","pollTimer","destroyCheck","cancelGeocoding","resetGeocoding","isGeocoding","Geocodings","AvailableGeometries","available_geometries","Estimation","costInCredits","mayHaveCost","costInDollars","SlideTransition","time","Slide","_tracked","visualization","isActive","master","changeTo","unload","loaded","_trackObject","serialize","listen","setMaster","vis","Visualization","bindMap","setNext","next_visualization_id","_reorder","insertIndex","currentIndex","Slides","master_visualization_id","_setMaster","slide","setActive","_onRemoveSlide","initializeModels","_createSlide","slide2","prev_id","copy","copy_overlays","existsTorqueLayer","_X","_INTERVAL","_STATES","run_at","ran_at","retried_times","interval","error_code","error_message","service_name","service_item_id","content_guessing","type_guessing","create_vis","remote_visualization_id","syncNow","always","request","TileJSON","newTileLayer","_isFetched","_urlTemplate","bounding_boxes","VisualizationOrder","INHERIT_TABLE_ATTRIBUTES","overlays","Overlays","initSlides","transition","like","generateRelatedTables","_bindMap","_changeAttributes","_initBinds","slides","activeSlide","master_vis","privacy","enableOverlays","_fetchOverlays","isLoaded","related_tables","getRelatedTables","force","tableMetadata","_metadata","_fetchMap","isVisualization","new_vis","changeToVisualization","description","transition_options","stats","children","createChild","source_visualization_id","publicURL","deepInsightsUrl","vizjsonURL","sharedWithEntities","toArray","privacyOptions","ALL_PRIVACY_OPTIONS","option","isOwnedByUser","userUrl","isUndefined","MapUrl","urlToPath","DatasetUrl","_canonicalViewUrl","isMap","UrlModel","_PREVIEW_TABLES_PER_PAGE","_TABLES_PER_PAGE","_PREVIEW_ITEMS_PER_PAGE","_ITEMS_PER_PAGE","default_options","tag_name","exclude_shared","per_page","_changeOptions","_checkPage","_fetchAgain","getTotalPages","total","total_shared","total_likes","visualizations","alwaysTrueValidator","columnExistsValidator","FormSchema","validators","cluster","intensity","bubble","choropleth","density","torque_heat","form_data","defaultFor","_fillColumns","extra_default","default_column","customColumns","forms","default_data","wasValid","dynamicProperties","changedDinamycProperty","dinamycProperty","keys","dinamycValues","_savedStates","cartoStylesGeneration","isDisabled","geoTypeChanged","prev","current","persist","linkLayer","bindGenerator","_updateForm","_fillGenerator","_form","propertiesChanged","form_p","st","restore","geomType","__geomType","formData","defaultStyleForType","saveCurrent","getSaved","currentGeom","geomForm","geometry_type","enableGeneration","vars","_updateGenerator","unbindGenerator","changeLayerStyle","layerType","meta","tile_style_custom","query_generated","unlinkLayer","getEnabledWizards","_enableMap","propertiesFromStyle","parser","parsed","_getTypeFromCSS","valid_attrs","validValue","is","WMSService","_PROXY_URL","_PROXY_TILES","methodToURL","read","dataType","req","document","createElement","href","substr","hasCapabilities","hasService","isWMTS","supportedMatrixSets","proxy","SUPPORTED_MATRIX_SETS","matrixSets","intersection","Overlay","_clone","len","Object","hasOwnProperty","cloneAttributes","y","device","display","item","_bindOverlays","headers","overlay","_getMarkdown","getOverlaysZIndex","createOverlayByType","overlay_type","byType","fullscreen","_createFullScreenOverlay","header","_createHeaderOverlay","layer_selector","_createLayerSelectorOverlay","share","_createShareOverlay","_createSearchOverlay","_createZoomOverlay","logo","_createLogoOverlay","markdown","toHTML","html","show_title","show_description"],"mappings":"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","file":"models.js","sourcesContent":["\n\ncarto_quotables = [\n  'text-face-name'\n];\n\ncarto_variables = [\n  'text-name'\n];\n\nvar carto_functionMap= {\n  'Equal Interval': 'equalInterval',\n  'Jenks': 'jenkBins',\n  'Heads/Tails': 'headTails',\n  'Quantile': 'quantileBins'\n};\n\nDEFAULT_QFUNCTION = 'Quantile';\n\n/**\n *  Manage some carto properties depending on\n *  type (line, polygon or point), for choropleth.\n */\nfunction manage_choropleth_props(type, props) {\n  var carto_props = {\n    'marker-width': props['marker-width'],\n    'marker-fill-opacity': props['marker-opacity'],\n    'marker-line-width': props['marker-line-width'],\n    'marker-line-color': props['marker-line-color'],\n    'marker-line-opacity': props['marker-line-opacity'],\n    'marker-allow-overlap': props['marker-allow-overlap'],\n    'line-color': props['line-color'],\n    'line-opacity': props['line-opacity'],\n    'line-width': props['line-width'],\n    'polygon-opacity': type == \"line\" ? 0 : props['polygon-opacity'],\n    'text-name': props['text-name'],\n    'text-halo-fill': props['text-halo-fill'],\n    'text-halo-radius': props['text-halo-radius'],\n    'text-face-name': props['text-face-name'],\n    'text-size': props['text-size'],\n    'text-dy': props['text-dy'],\n    'text-allow-overlap': props['text-allow-overlap'],\n    'text-placement': props['text-placement'],\n    'text-placement-type': props['text-placement-type'],\n    'text-label-position-tolerance': props['text-label-position-tolerance'],\n    'text-fill': props['text-fill']\n  }\n\n  // Remove all undefined properties\n  _.each(carto_props, function(v, k){\n    if(v === undefined) delete carto_props[k];\n  });\n\n  return carto_props;\n}\n\nfunction getProp(obj, prop) {\n  var p = [];\n  for(var k in obj) {\n    var v = obj[k];\n    if (k === prop) {\n      p.push(v);\n    } else if (typeof(v) === 'object') {\n      p = p.concat(getProp(v, prop));\n    }\n  }\n  return p;\n}\n\nvar _cartocss_spec_props = getProp(carto.default_reference.version.latest, 'css');\n\n/**\n * some carto properties depends on others, this function\n * remove or add properties needed to carto works\n */\nfunction manage_carto_properies(props) {\n\n  if(/none/i.test(props['text-name']) || !props['text-name']) {\n    // remove all text-* properties\n    for(var p in props) {\n      if(isTextProperty(p)) {\n        delete props[p];\n      }\n    }\n  }\n\n  if(/none/i.test(props['polygon-comp-op'])) {\n    delete props['polygon-comp-op'];\n  }\n  if(/none/i.test(props['line-comp-op'])) {\n    delete props['line-comp-op'];\n  }\n  if(/none/i.test(props['marker-comp-op'])) {\n    delete props['marker-comp-op'];\n  }\n\n  // if polygon-pattern-file is present polygon-fill should be removed\n  if('polygon-pattern-file' in props) {\n    delete props['polygon-fill'];\n  }\n\n  delete props.zoom;\n\n  // translate props\n  props = translate_carto_properties(props);\n\n  return _.pick(props, _cartocss_spec_props);\n\n}\n\nfunction isTextProperty(p) {\n  return /^text-/.test(p);\n}\n\nfunction generate_carto_properties(props) {\n  return _(props).map(function(v, k) {\n    if(_.include(carto_quotables, k)) {\n      v = \"'\" + v + \"'\";\n    }\n    if(_.include(carto_variables, k)) {\n      v = \"[\" + v + \"]\";\n    }\n    return \"  \" + k + \": \" + v + \";\";\n  });\n}\n\nfunction filter_props(props, fn) {\n  var p = {};\n  for(var k in props) {\n    var v = props[k];\n    if(fn(k, v)) {\n      p[k] = v;\n    }\n  }\n  return p;\n}\n\nfunction translate_carto_properties(props) {\n  if ('marker-opacity' in props) {\n    props['marker-fill-opacity'] = props['marker-opacity'];\n    delete props['marker-opacity'];\n  }\n  return props;\n}\n\nfunction simple_polygon_generator(table, props, changed, callback) {\n\n  // remove unnecesary properties, for example\n  // if the text-name is not present remove all the\n  // properties related to text\n  props = manage_carto_properies(props);\n\n  var text_properties = filter_props(props, function(k, v) { return isTextProperty(k); });\n  var general_properties = filter_props(props, function(k, v) { return !isTextProperty(k); });\n\n\n  // generate cartocss with the properties\n  generalLayerProps = generate_carto_properties(general_properties);\n  textLayerProps = generate_carto_properties(text_properties);\n\n\n  // layer with non-text properties\n  var generalLayer = \"#\" + table.getUnqualifiedName() + \"{\\n\" + generalLayerProps.join('\\n') + \"\\n}\";\n  var textLayer = '';\n  if (_.size(textLayerProps)) {\n    textLayer = \"\\n\\n#\" + table.getUnqualifiedName() + \"::labels {\\n\" + textLayerProps.join('\\n') + \"\\n}\\n\";\n  }\n\n  // text properties layer\n  callback(generalLayer + textLayer);\n}\n\nfunction intensity_generator(table, props, changed, callback) {\n\n  // remove unnecesary properties, for example\n  // if the text-name is not present remove all the\n  // properties related to text\n  props = manage_carto_properies(props);\n\n  var carto_props = {\n    'marker-fill': props['marker-fill'],\n    'marker-width': props['marker-width'],\n    'marker-line-color': props['marker-line-color'],\n    'marker-line-width': props['marker-line-width'],\n    'marker-line-opacity': props['marker-line-opacity'],\n    'marker-fill-opacity': props['marker-fill-opacity'],\n    'marker-comp-op': 'multiply',\n    'marker-type': 'ellipse',\n    'marker-placement': 'point',\n    'marker-allow-overlap': true,\n    'marker-clip': false,\n    'marker-multi-policy': 'largest'\n  };\n\n  var table_name = table.getUnqualifiedName();\n  var css = \"\\n#\" + table_name +\"{\\n\";\n\n  _(carto_props).each(function(prop, name) {\n    css += \"  \" + name + \": \" + prop + \"; \\n\";\n  });\n\n  css += \"}\";\n  callback(css);\n\n}\n\nfunction cluster_sql(table, zoom, props, nquartiles) {\n\n  var grids = [\"A\", \"B\", \"C\", \"D\", \"E\"];\n  var bucket = \"bucket\" + grids[0];\n  var mainBucket = bucket;\n\n  var sizes = [];\n  var step = 1 / (nquartiles + 1);\n\n  for (var i = 0; i < nquartiles; i++) {\n    sizes.push( 1 - step * i)\n  }\n\n  var sql = \"WITH meta AS ( \" +\n    \"   SELECT greatest(!pixel_width!,!pixel_height!) as psz, ext, ST_XMin(ext) xmin, ST_YMin(ext) ymin FROM (SELECT !bbox! as ext) a \" +\n    \" ), \" +\n    \" filtered_table AS ( \" +\n    \"   SELECT t.* FROM <%= table %> t, meta m WHERE t.the_geom_webmercator && m.ext \" +\n    \" ), \";\n\n  for (var i = 0; i<nquartiles; i++) {\n    bucket = \"bucket\" + grids[i];\n\n    if (i == 0){\n      sql += mainBucket + \"_snap AS (SELECT ST_SnapToGrid(f.the_geom_webmercator, 0, 0, m.psz * <%= size %>, m.psz * <%= size %>) the_geom_webmercator, count(*) as points_count, 1 as cartodb_id, array_agg(f.cartodb_id) AS id_list \"\n    }\n    if (i > 0){\n      sql += \"\\n\" + bucket + \"_snap AS (SELECT ST_SnapToGrid(f.the_geom_webmercator, 0, 0, m.psz * \" + sizes[i] + \" * <%= size %>, m.psz * \" + sizes[i] + \" * <%= size %>) the_geom_webmercator, count(*) as points_count, 1 as cartodb_id, array_agg(f.cartodb_id) AS id_list \"\n    }\n\n    sql += \" FROM filtered_table f, meta m \"\n\n    if (i == 0){\n      sql += \" GROUP BY ST_SnapToGrid(f.the_geom_webmercator, 0, 0, m.psz * <%= size %>, m.psz * <%= size %>), m.xmin, m.ymin), \";\n    }\n\n    if (i > 0){\n      sql += \" WHERE cartodb_id NOT IN (select unnest(id_list) FROM \" + mainBucket + \") \";\n\n      for (var j = 1; j<i; j++) {\n        bucket2 = \"bucket\" + grids[j];\n        sql += \" AND cartodb_id NOT IN (select unnest(id_list) FROM \" + bucket2 + \") \";\n      }\n\n      sql += \" GROUP BY ST_SnapToGrid(f.the_geom_webmercator, 0, 0, m.psz * \" + sizes[i] + \" * <%= size %>, m.psz * \" + sizes[i] + \" * <%= size %>), m.xmin, m.ymin), \";\n\n    }\n\n    sql +=  bucket + \"  AS (SELECT * FROM \" + bucket + \"_snap WHERE points_count > \";\n\n    if (i == nquartiles - 1) {\n      sql += \" GREATEST(<%= size %> * 0.1, 2) \";\n    } else {\n      sql += \" <%= size %> * \" + sizes[i];\n    }\n\n    sql += \" ) \";\n\n    if (i < nquartiles - 1) sql += \", \";\n\n  }\n\n  sql += \" SELECT the_geom_webmercator, 1 points_count, cartodb_id, ARRAY[cartodb_id] as id_list, 'origin' as src, cartodb_id::text cdb_list FROM filtered_table WHERE \";\n\n  for (var i = 0; i < nquartiles; i++) {\n    bucket = \"bucket\" + grids[i];\n    sql += \"\\n\" + (i > 0 ? \"AND \" : \"\") + \"cartodb_id NOT IN (select unnest(id_list) FROM \" + bucket + \") \";\n  }\n\n  for (var i = 0; i < nquartiles; i++) {\n    bucket = \"bucket\" + grids[i];\n    sql += \" UNION ALL SELECT *, '\" + bucket + \"' as src, array_to_string(id_list, ',') cdb_list FROM \" + bucket\n  }\n\n  return _.template(sql, {\n    name: table.get(\"name\"),\n    //size: props[\"radius_min\"],\n    size: 48,\n    table: \"__wrapped\"\n  });\n}\n\nfunction cluster_generator(table, props, changed, callback) {\n\n  var methodMap = {\n    '2 Buckets': 2,\n    '3 Buckets': 3,\n    '4 Buckets': 4,\n    '5 Buckets': 5,\n  };\n\n  var grids = [\"A\", \"B\", \"C\", \"D\", \"E\"];\n\n  var nquartiles = methodMap[props['method']];\n  var table_name = table.getUnqualifiedName();\n\n  var sql = cluster_sql(table, props.zoom, props, nquartiles);\n\n  var c = \"#\" + table_name + \"{\\n\";\n  c += \"  marker-width: \" + (Math.round(props[\"radius_min\"]/2)) + \";\\n\";\n  c += \"  marker-fill: \" + props['marker-fill'] + \";\\n\";\n  c += \"  marker-line-width: 1.5;\\n\";\n\n  c += \"  marker-fill-opacity: \" + props['marker-opacity'] + \";\\n\";\n  c += \"  marker-line-opacity: \" + props['marker-line-opacity'] + \";\\n\";\n  c += \"  marker-line-color: \" + props['marker-line-color'] + \";\\n\";\n  c += \"  marker-allow-overlap: true;\\n\";\n\n  var base = 20;\n  var min = props[\"radius_min\"];\n  var max = props[\"radius_max\"];\n  var sizes = [min];\n\n  var step = Math.round((max-min)/ (nquartiles - 1));\n\n  for (var i = 1; i < nquartiles - 1; i++) {\n    sizes.push(min + step * i);\n  }\n\n  sizes.push(max);\n\n  for (var i = 0; i < nquartiles; i++) {\n    c += \"\\n  [src = 'bucket\"+grids[nquartiles - i - 1]+\"'] {\\n\";\n    c += \"    marker-line-width: \" + props['marker-line-width'] + \";\\n\";\n    c += \"    marker-width: \" + sizes[i] + \";\\n\";\n    c += \"  } \\n\";\n  }\n\n  c += \"}\\n\\n\";\n\n  // Generate label properties\n  c += \"#\" + table.getUnqualifiedName() + \"::labels { \\n\";\n  c += \"  text-size: 0; \\n\";\n  c += \"  text-fill: \" + props['text-fill'] + \"; \\n\";\n  c += \"  text-opacity: 0.8;\\n\";\n  c += \"  text-name: [points_count]; \\n\";\n  c += \"  text-face-name: '\" + props['text-face-name'] + \"'; \\n\";\n  c += \"  text-halo-fill: \" + props['text-halo-fill'] + \"; \\n\";\n  c += \"  text-halo-radius: 0; \\n\";\n\n  for (var i = 0; i < nquartiles; i++) {\n    c += \"\\n  [src = 'bucket\"+grids[nquartiles - i - 1]+\"'] {\\n\";\n    c += \"    text-size: \" + (i * 5 + 12) + \";\\n\";\n    c += \"    text-halo-radius: \" + props['text-halo-radius'] + \";\";\n    c += \"\\n  }\\n\";\n  }\n\n  c += \"\\n  text-allow-overlap: true;\\n\\n\";\n  c += \"  [zoom>11]{ text-size: \" + Math.round(props[\"radius_min\"] * 0.66) + \"; }\\n\";\n  c += \"  [points_count = 1]{ text-size: 0; }\\n\";\n  c += \"}\\n\";\n\n  callback(c, {}, sql);\n\n}\n\nfunction bubble_generator(table, props, changed, callback) {\n  var carto_props = {\n   'marker-fill': props['marker-fill'],\n   'marker-line-color': props['marker-line-color'],\n   'marker-line-width': props['marker-line-width'],\n   'marker-line-opacity': props['marker-line-opacity'],\n   'marker-fill-opacity': props['marker-opacity'],\n   'marker-comp-op': props['marker-comp-op'],\n   'marker-placement': 'point',\n   'marker-type': 'ellipse',\n   'marker-allow-overlap': true,\n   'marker-clip':false,\n   'marker-multi-policy':'largest'\n  };\n\n  var prop = props['property'];\n  var min = props['radius_min'];\n  var max = props['radius_max'];\n  var fn = carto_functionMap[props['qfunction'] || DEFAULT_QFUNCTION];\n\n  if(/none/i.test(props['marker-comp-op'])) {\n    delete carto_props['marker-comp-op'];\n  }\n\n  var values = [];\n\n  var NPOINS = 10;\n  // TODO: make this related to the quartiles size\n  // instead of linear. The circle area should be related\n  // to the data and a little correction due to the problems\n  // humans have to measure the area of a circle\n\n  //calculate the bubles sizes\n  for(var i = 0; i < NPOINS; ++i) {\n    var t = i/(NPOINS-1);\n    values.push(min + t*(max - min));\n  }\n\n  // generate carto\n  simple_polygon_generator(table, carto_props, changed, function(css) {\n    var table_name = table.getUnqualifiedName();\n    table.data()[fn](NPOINS, prop, function(quartiles)  {\n      for(var i = NPOINS - 1; i >= 0; --i) {\n        if(quartiles[i] !== undefined && quartiles[i] != null) {\n          css += \"\\n#\" + table_name +\" [ \" + prop + \" <= \" + quartiles[i] + \"] {\\n\"\n          css += \"   marker-width: \" + values[i].toFixed(1) + \";\\n}\"\n        }\n      }\n      callback(css, quartiles);\n    });\n  });\n}\n\n/**\n * when quartiles are greater than 1<<31 cast to float added .01\n * at the end. If you append only .0 it is casted to int and it\n * does not work\n */\nfunction normalizeQuartiles(quartiles) {\n  var maxNumber = 2147483648; // unsigned (1<<31);\n  var normalized = [];\n  for(var i = 0;  i < quartiles.length; ++i) {\n    var q = quartiles[i];\n    if(q > Math.abs(maxNumber) && String(q).indexOf('.') === -1) {\n      q = q + \".01\";\n    }\n    normalized.push(q);\n  }\n  return normalized;\n}\n\nfunction choropleth_generator(table, props, changed, callback) {\n  var type = table.geomColumnTypes() && table.geomColumnTypes()[0] || \"polygon\";\n\n  var carto_props = manage_choropleth_props(type,props);\n\n  if(props['polygon-comp-op'] && !/none/i.test(props['polygon-comp-op'])) {\n    carto_props['polygon-comp-op'] = props['polygon-comp-op'];\n  }\n  if(props['line-comp-op'] && !/none/i.test(props['line-comp-op'])) {\n    carto_props['line-comp-op'] = props['line-comp-op'];\n  }\n  if(props['marker-comp-op'] && !/none/i.test(props['marker-comp-op'])) {\n    carto_props['marker-comp-op'] = props['marker-comp-op'];\n  }\n\n  var methodMap = {\n    '3 Buckets': 3,\n    '5 Buckets': 5,\n    '7 Buckets': 7\n  };\n\n\n  if(!props['color_ramp']) {\n    return;\n  }\n\n  var fn = carto_functionMap[props['qfunction'] || DEFAULT_QFUNCTION];\n  var prop = props['property'];\n  var nquartiles = methodMap[props['method']];\n  var ramp = cdb.admin.color_ramps[props['color_ramp']][nquartiles];\n\n  if(!ramp) {\n    cdb.log.error(\"no color ramp defined for \" + nquartiles + \" quartiles\");\n  } else {\n\n    if (type == \"line\") {\n      carto_props[\"line-color\"] = ramp[0];\n    } else if (type == \"polygon\") {\n      carto_props[\"polygon-fill\"] = ramp[0];\n    } else {\n      carto_props[\"marker-fill\"] = ramp[0];\n    }\n\n  }\n\n  simple_polygon_generator(table, carto_props, changed, function(css) {\n    var table_name = table.getUnqualifiedName();\n    table.data()[fn](nquartiles, prop, function(quartiles)  {\n      quartiles = normalizeQuartiles(quartiles);\n      for(var i = nquartiles - 1; i >= 0; --i) {\n        if(quartiles[i] !== undefined && quartiles[i] != null) {\n          css += \"\\n#\" + table_name +\" [ \" + prop + \" <= \" + quartiles[i] + \"] {\\n\";\n\n          if (type == \"line\") {\n            css += \"   line-color: \" + ramp[i] + \";\\n}\"\n          } else if (type == \"polygon\") {\n            css += \"   polygon-fill: \" + ramp[i] + \";\\n}\"\n          } else {\n            css += \"   marker-fill: \" + ramp[i] + \";\\n}\"\n          }\n        }\n      }\n      callback(css, quartiles);\n    });\n  });\n}\n\n\nfunction density_sql(table, zoom, props) {\n    var prop = 'cartodb_id';\n    var sql;\n\n    // we generate a grid and get the number of points\n    // for each cell. With that the density is generated\n    // and calculated for zoom level 10, which is taken as reference when we calculate the quartiles for the style buclets\n    // see models/carto.js\n    if(props['geometry_type'] === 'Rectangles') {\n      sql = \"WITH hgrid AS (SELECT CDB_RectangleGrid(ST_Expand(!bbox!, greatest(!pixel_width!,!pixel_height!) * <%= size %>), greatest(!pixel_width!,!pixel_height!) * <%= size %>, greatest(!pixel_width!,!pixel_height!) * <%= size %>) as cell) SELECT hgrid.cell as the_geom_webmercator, count(i.<%=prop%>) as points_count,count(i.<%=prop%>)/power( <%= size %> * CDB_XYZ_Resolution(<%= z %>), 2 )  as points_density, 1 as cartodb_id FROM hgrid, <%= table %> i where ST_Intersects(i.the_geom_webmercator, hgrid.cell) GROUP BY hgrid.cell\";\n    } else {\n      sql = \"WITH hgrid AS (SELECT CDB_HexagonGrid(ST_Expand(!bbox!, greatest(!pixel_width!,!pixel_height!) * <%= size %>), greatest(!pixel_width!,!pixel_height!) * <%= size %>) as cell) SELECT hgrid.cell as the_geom_webmercator, count(i.<%=prop%>) as points_count, count(i.<%=prop%>)/power( <%= size %> * CDB_XYZ_Resolution(<%= z %>), 2 ) as points_density, 1 as cartodb_id FROM hgrid, <%= table %> i where ST_Intersects(i.the_geom_webmercator, hgrid.cell) GROUP BY hgrid.cell\";\n    }\n    return _.template(sql, {\n      prop: prop,\n      table: '__wrapped',\n      size: props['polygon-size'],\n      z: zoom\n    });\n}\n\n/*\n *\n */\nfunction density_generator(table, props, changed, callback) {\n  var carto_props = {\n   'line-color': props['line-color'],\n   'line-opacity': props['line-opacity'],\n   'line-width': props['line-width'],\n   'polygon-opacity': props['polygon-opacity'],\n   'polygon-comp-op': props['polygon-comp-op']\n  }\n\n  if(/none/i.test(props['polygon-comp-op'])) {\n    delete carto_props['polygon-comp-op'];\n  }\n\n  var methodMap = {\n    '3 Buckets': 3,\n    '5 Buckets': 5,\n    '7 Buckets': 7\n  };\n\n  var polygon_size = props['polygon-size'];\n  var nquartiles = methodMap[props['method']];\n  var ramp = cdb.admin.color_ramps[props['color_ramp']][nquartiles];\n\n  if(!ramp) {\n    cdb.log.error(\"no color ramp defined for \" + nquartiles + \" quartiles\");\n  }\n\n  carto_props['polygon-fill'] = ramp[ramp.length - 1];\n\n  var density_sql_gen = density_sql(table, props.zoom, props);\n\n  simple_polygon_generator(table, carto_props, changed, function(css) {\n\n    // density\n    var tmpl = _.template(\"\" +\n    \"WITH clusters as ( \" +\n    \"SELECT  \" +\n        \"cartodb_id,   \" +\n        \"st_snaptogrid(the_geom_webmercator, <%= polygon_size %>*CDB_XYZ_Resolution(<%= z %>)) as center  \" +\n    \"FROM <%= table_name %>\" +\n    \"), \" +\n    \"points as ( \" +\n        \"SELECT  \" +\n            \"count(cartodb_id) as npoints,  \" +\n            \"count(cartodb_id)/power( <%= polygon_size %> * CDB_XYZ_Resolution(<%= z %>), 2 ) as density  \" +\n        \"FROM  \" +\n            \"clusters  \" +\n        \"group by  \" +\n            \"center \" +\n    \"), \" +\n    \"stats as ( \" +\n        \"SELECT  \" +\n            \"npoints,  \" +\n            \"density,  \" +\n            \"ntile(<%= slots %>) over (order by density) as quartile  \" +\n        \"FROM points  \" +\n    \")  \" +\n    \"SELECT  \" +\n        \"quartile,  \" +\n        \"max(npoints) as maxAmount,  \" +\n        \"max(density) as maxDensity   \" +\n    \"FROM stats  \" +\n    \"GROUP BY quartile ORDER BY quartile \");\n\n    var sql = tmpl({\n        slots: nquartiles,\n        table_name: table.get('name'),\n        polygon_size: polygon_size,\n        z: props.zoom\n    });\n\n    table.data()._sqlQuery(sql, function(data) {\n      // extract quartiles by zoom level\n      var rows = data.rows;\n      var quartiles = [];\n      for(var i = 0; i < rows.length; ++i) {\n        quartiles.push(rows[i].maxdensity);\n      }\n\n      quartiles = normalizeQuartiles(quartiles);\n      var table_name = table.getUnqualifiedName();\n\n      css += \"\\n#\" + table_name + \"{\\n\"\n      for(var i = nquartiles - 1; i >= 0; --i) {\n        if(quartiles[i] !== undefined) {\n          css += \"  [points_density <= \" + quartiles[i] + \"] { polygon-fill: \" + ramp[i] + \";  }\\n\";\n        }\n      }\n      css += \"\\n}\"\n\n      callback(css, quartiles, density_sql_gen);\n    });\n  });\n}\n\ncdb.admin.CartoStyles = Backbone.Model.extend({\n\n    defaults: {\n      type: 'polygon',\n      properties: {\n        'polygon-fill': '#FF6600',\n        'line-color': '#FFFFFF',\n        'line-width': 1,\n        'polygon-opacity': 0.7,\n        'line-opacity':1\n      }\n    },\n\n    initialize: function() {\n      this.table = this.get('table');\n\n      if (!this.table) {\n        throw \"table must be passed as param\"\n        return;\n      }\n\n      this.properties = new cdb.core.Model(this.get('properties'));\n      this.bind('change:properties', this._generateCarto, this);\n\n      this.generators = {};\n      this.registerGenerator('polygon',    simple_polygon_generator);\n      this.registerGenerator('cluster',    cluster_generator);\n      this.registerGenerator('bubble',     bubble_generator);\n      this.registerGenerator('intensity',  intensity_generator);\n      this.registerGenerator('choropleth', choropleth_generator);\n      this.registerGenerator('color',      cdb.admin.carto.category.category_generator.bind(cdb.admin.carto.category)),\n      this.registerGenerator('category',   cdb.admin.carto.category.category_generator.bind(cdb.admin.carto.category)),\n      this.registerGenerator('density',    density_generator); // the same generator than choroplet\n      this.registerGenerator('torque',     cdb.admin.carto.torque.torque_generator.bind(cdb.admin.carto.torque));\n      this.registerGenerator('torque_heat',     cdb.admin.carto.torque.torque_generator.bind(cdb.admin.carto.torque));\n      this.registerGenerator('torque_cat',     cdb.admin.carto.torque_cat.generate.bind(cdb.admin.carto.torque_cat));\n    },\n\n    // change a property attribute\n    attr: function(name, val) {\n      var old = this.attributes.properties[name];\n      this.attributes.properties[name] = val;\n      if(old != val) {\n        this.trigger('change:properties', this, this.attributes.properties);\n        this.trigger('changes', this);\n      }\n    },\n\n    registerGenerator: function(name, gen) {\n      this.generators[name] = gen;\n    },\n\n    /**\n     * generate a informative header\n     */\n    _generateHeader: function() {\n      var typeMap = {\n        'polygon': 'simple'\n      }\n      var t = this.get('type');\n      t = typeMap[t] || t;\n      var c = \"/** \" + t + \" visualization */\\n\\n\";\n      return c;\n    },\n\n    regenerate: function() {\n      //TODO: apply patch if it's possible\n      this._generateCarto();\n    },\n\n    _generateCarto: function(){\n      var self = this;\n      var gen = this.generators[this.get('type')];\n\n      var gen_type = this.get('type');\n\n      if(!gen) {\n        cdb.log.info(\"can't get style generator for \" + this.get('type'));\n        return;\n      }\n\n      // Get changed properties\n      var changed = {};\n      this.properties.bind('change', function() {\n        changed = this.properties.changedAttributes();\n      }, this);\n      this.properties.set(this.get('properties'));\n      this.properties.unbind('change', null, this);\n      this.trigger('loading');\n\n\n      gen(this.table, this.get('properties'), changed, function(style, metadata, sql) {\n        if (self.get('type') !== gen_type) {\n          return;\n        }\n        var attrs = {\n          style: self._generateHeader() + style\n        };\n\n        if(sql) {\n          attrs.sql = sql;\n        } else {\n          self.unset('sql', { silent: true });\n        }\n\n        if (metadata) {\n          attrs.metadata = metadata;\n        }\n\n        self.set(attrs, { silent: true });\n\n        self.change({ changes: {'style': ''}});\n        self.trigger('load');\n      })\n    }\n\n}, {\n    DEFAULT_GEOMETRY_STYLE: \"{\\n // points\\n [mapnik-geometry-type=point] {\\n    marker-fill: #FF6600;\\n    marker-opacity: 1;\\n    marker-width: 12;\\n    marker-line-color: white;\\n    marker-line-width: 3;\\n    marker-line-opacity: 0.9;\\n    marker-placement: point;\\n    marker-type: ellipse;marker-allow-overlap: true;\\n  }\\n\\n //lines\\n [mapnik-geometry-type=linestring] {\\n    line-color: #FF6600; \\n    line-width: 2; \\n    line-opacity: 0.7;\\n  }\\n\\n //polygons\\n [mapnik-geometry-type=polygon] {\\n    polygon-fill:#FF6600;\\n    polygon-opacity: 0.7;\\n    line-opacity:1;\\n    line-color: #FFFFFF;\\n   }\\n }\",\n});\n\n\n/**\n * this class provides methods to parse and extract information from the\n * cartocss like expressions used, filters, colors and errors\n */\n\ncdb.admin.CartoParser = function(cartocss) {\n  this.parse_env = null;\n  this.ruleset = null;\n  if(cartocss) {\n    this.parse(cartocss);\n  }\n}\n\ncdb.admin.CartoParser.prototype = {\n\n  RESERVED_VARIABLES: ['mapnik-geometry-type', 'points_density', 'points_count', 'src', 'value'], // value due to torque\n\n  parse: function(cartocss) {\n    var self = this;\n    var parse_env = this.parse_env = {\n      validation_data: false,\n      frames: [],\n      errors: [],\n      error: function(obj) {\n        obj.line =  carto.Parser().extractErrorLine(cartocss, obj.index);\n        this.errors.push(obj);\n      }\n    };\n\n    var ruleset = null;\n    var defs = null;\n    try {\n      // set default reference\n      carto.tree.Reference.setData(carto.default_reference.version.latest);\n      ruleset = (new carto.Parser(parse_env)).parse(cartocss);\n    } catch(e) {\n      // add the style.mss string to match the response from the server\n      this.parse_env.errors = this._parseError([\"style\\.mss\" + e.message])\n      return;\n    }\n    if(ruleset) {\n      var existing = {}\n      this.definitions = defs = ruleset.toList(parse_env);\n      var mapDef;\n      for(var i in defs){\n        if(defs[i].elements.length > 0){\n            if(defs[i].elements[0].value === \"Map\"){\n                mapDef = defs.splice(i, 1)[0];\n            }\n        }\n      }\n      var symbolizers = torque.cartocss_reference.version.latest.layer;\n      if (mapDef){\n        mapDef.rules.forEach(function(r){\n          var key = r.name;\n          if (!(key in symbolizers)) {\n              parse_env.error({\n                  message: 'Rule ' + key + ' not allowed for Map.',\n                  index: r.index\n              });\n          }\n          else{\n            var type = symbolizers[r.name].type;\n            var element = r.value.value[0].value[0];\n            if(!self._checkValidType(element, type)){\n              parse_env.error({\n                  message: 'Expected type ' + type + '.' ,\n                  index: r.index\n              });\n            }\n          }\n        });\n      }\n      var defs = carto.inheritDefinitions(defs, parse_env);\n      defs = carto.sortStyles(defs, parse_env);\n      for (var i in defs) {\n        for (var j in defs[i]) {\n          var r = defs[i][j]\n          if(r && r.toXML) {\n            r.toXML(parse_env, existing);\n          }\n        }\n      }\n\n      // toList uses parse_env.errors.message to put messages\n      if (parse_env.errors.message) {\n        _(parse_env.errors.message.split('\\n')).each(function(m) {\n          parse_env.errors.push(m);\n        });\n      }\n    }\n    this.ruleset = ruleset;\n    return this;\n  },\n\n  _checkValidType: function(e, type){\n    if ([\"number\", \"float\"].indexOf(type) > -1) {\n      return typeof e.value === \"number\";\n    }\n    else if (type === \"string\"){\n      return e.value !== \"undefined\" && typeof e.value === \"string\";\n    } \n    else if (type.constructor === Array){\n      return type.indexOf(e.value) > -1 || e.value === \"linear\";\n    }\n    else if (type === \"color\"){\n      return checkValidColor(e);\n    }\n    return true;\n  },\n\n  _checkValidColor: function(e){\n    var expectedArguments = { rgb: 3, hsl: 3, rgba: 4, hsla: 4};\n    return typeof e.rgb !== \"undefined\" || expectedArguments[e.name] === e.args;\n  },\n\n  /**\n   * gets an array of parse errors from windshaft\n   * and returns an array of {line:1, error: 'string'] with user friendly\n   * strings. Parses errors in format:\n   *\n   *  'style.mss:7:2 Invalid code: asdasdasda'\n   */\n  _parseError: function(errors) {\n    var parsedErrors = [];\n    for(var i in errors) {\n      var err = errors[i];\n      if(err && err.length > 0) {\n        var g = err.match(/.*:(\\d+):(\\d+)\\s*(.*)/);\n        if(g) {\n          parsedErrors.push({\n            line: parseInt(g[1], 10),\n            message: g[3]\n          });\n        } else {\n          parsedErrors.push({\n            line: null,\n            message: err\n          })\n        }\n      }\n    }\n    // sort by line\n    parsedErrors.sort(function(a, b) { return a.line - b.line; });\n    parsedErrors = _.uniq(parsedErrors, true, function(a) { return a.line + a.message; });\n    return parsedErrors;\n  },\n\n  /**\n   * return the error list, empty if there were no errors\n   */\n  errors: function() {\n    return this.parse_env ? this.parse_env.errors : [];\n  },\n\n  _colorsFromRule: function(rule) {\n    var self = this;\n    function searchRecursiveByType(v, t) {\n      var res = []\n      for(var i in v) {\n        if(v[i] instanceof t) {\n          res.push(v[i]);\n        } else if(typeof(v[i]) === 'object') {\n          var r = searchRecursiveByType(v[i], t);\n          if(r.length) {\n            res = res.concat(r);\n          }\n        }\n      }\n      return res;\n    }\n    return searchRecursiveByType(rule.ev(this.parse_env), carto.tree.Color);\n  },\n\n  _varsFromRule: function(rule) {\n    function searchRecursiveByType(v, t) {\n      var res = []\n      for(var i in v) {\n        if(v[i] instanceof t) {\n          res.push(v[i]);\n        } else if(typeof(v[i]) === 'object') {\n          var r = searchRecursiveByType(v[i], t);\n          if(r.length) {\n            res = res.concat(r);\n          }\n        }\n      }\n      return res;\n    }\n    return searchRecursiveByType(rule, carto.tree.Field);\n  },\n\n  /**\n   * Extract information from the carto using the provided method.\n   * */\n  _extract: function(method, extractVariables) {\n    var columns = [];\n    if (this.ruleset) {\n      var definitions = this.ruleset.toList(this.parse_env);\n      for (var d in definitions) {\n        var def = definitions[d];\n\n         if(def.filters) {\n          // extract from rules\n          for(var r in def.rules) {\n            var rule = def.rules[r];\n            var columnList = method(this, rule);\n            columns = columns.concat(columnList);\n          }\n\n          if (extractVariables) {\n            for(var f in def.filters) {\n              var filter = def.filters[f];\n              for (var k in filter) {\n                var filter_key = filter[k]\n                if (filter_key.key && filter_key.key.value) {\n                  columns.push(filter_key.key.value);\n                }\n              }\n          }\n        }\n      }\n    }\n    var self = this;\n    return _.reject(_.uniq(columns), function(v) {\n      return _.contains(self.RESERVED_VARIABLES, v);\n    });\n    }\n  },\n\n  /**\n   * return a list of colors used in cartocss\n   */\n  colorsUsed: function(opt) {\n\n    // extraction method\n    var method = function(self, rule) {\n      return _.map(self._colorsFromRule(rule), function(f) {\n        return f.rgb;\n      })\n    };\n\n    var colors =  this._extract(method, false);\n\n    if (opt && opt.mode == 'hex') {\n      colors = _.map(colors, function(color) {\n        return cdb.Utils.rgbToHex(color[0], color[1], color[2]);\n      });\n\n    }\n\n    return colors;\n\n  },\n\n  /**\n   * return a list of variables used in cartocss\n   */\n  variablesUsed: function() {\n\n    // extraction method\n    var method = function(self, rule) {\n      return _.map(self._varsFromRule(rule), function(f) {\n        return f.value;\n      });\n    };\n\n    return this._extract(method, true);\n   },\n\n  /**\n   * returns the default layer\n   */\n  getDefaultRules: function() {\n    var rules = [];\n    for(var i = 0; i < this.definitions.length; ++i) {\n      var def = this.definitions[i];\n      // all zooms and default attachment so we don't get conditional variables\n      if (def.zoom === 8388607 && _.size(def.filters.filters) === 0 && def.attachment === '__default__') {\n        rules = rules.concat(def.rules);\n      }\n    }\n\n    var rulesMap = {};\n    for (var r in rules) {\n      var rule = rules[r];\n      rulesMap[rule.name] = rule;\n    }\n    return rulesMap;\n  },\n\n  getRuleByName: function(definition, ruleName) {\n    if (!definition._rulesByName) {\n      var rulesMap = definition._rulesByName = {};\n      for (var r in definition.rules) {\n        var rule = definition.rules[r];\n        rulesMap[rule.name] = rule;\n      }\n    }\n    return definition._rulesByName[ruleName];\n  }\n\n\n};\n\n","// form validation\n\nvar alwaysTrueValidator = function(form) { return true };\n\nfunction columnExistsValidatorFor(column_name) {\n  return function(form) {\n    var field = form[column_name];\n    return field.form.property.extra.length > 0;\n  };\n}\nvar columnExistsValidator = columnExistsValidatorFor('Column');\n\n//\n// defines a form schema, what fields contains and so on\n//\ncdb.admin.FormSchema = cdb.core.Model.extend({\n\n  validators: {\n    polygon: alwaysTrueValidator,\n    cluster: alwaysTrueValidator,\n    intensity: alwaysTrueValidator,\n    bubble: columnExistsValidator,\n    choropleth: columnExistsValidator,\n    color: columnExistsValidator,\n    category: columnExistsValidator,\n    density: alwaysTrueValidator,\n    torque: columnExistsValidatorFor('Time Column'),\n    torque_cat: columnExistsValidatorFor('Time Column'),\n    torque_heat: columnExistsValidatorFor('Time Column')\n  },\n\n  initialize: function() {\n    this.table = this.get('table');\n    this.unset('table');\n    if(!this.table) throw new Error('table is undefined');\n\n    // validate type\n    // it should be polygon, bubble or some of the defined wizard types\n    var type = this.get('type');\n    if(!type) {\n      throw new Error('type is undefined');\n    }\n\n    // get the default values\n    var form_data = this.defaultFor(type);\n    if (!form_data) {\n      throw new Error('invalid type: ' + type);\n    }\n    // assign index to be able to compose the order\n    form_data.forEach(function(v, i) { v.index = i });\n    this.set(_.object(_.pluck(form_data, 'name'), form_data),  { silent: true });\n\n    this._fillColumns();\n\n    this.table.bind('change:schema', function() {\n      var opts = {};\n      if (!this.table.previous('schema')) {\n        opts.silent = true;\n      }\n      this._fillColumns(opts);\n      if (opts.silent) {\n        this._previousAttributes = _.clone(this.attributes);\n      }\n    }, this);\n\n  },\n\n  toJSON: function() {\n    var form_data = _.values(_.omit(this.attributes, 'type'));\n    form_data.sort(function(a, b) { return a.index - b.index; });\n    return form_data;\n  },\n\n  _fillColumns: function(opts) {\n    var self = this;\n    // lazy shallow copy\n    var attrs = JSON.parse(JSON.stringify(this.attributes));\n    _.each(attrs, function(field) {\n      for (var k in field.form) {\n        var f = field.form[k];\n        if (f.columns) {\n          var types = f.columns.split('|');\n          var extra = [];\n          if (f.extra_default) extra = f.extra_default.slice();\n          for(var i in types) {\n            var type = types[i];\n            var columns = self.table.columnNamesByType(type);\n            extra = extra.concat(\n              _.without(columns, 'cartodb_id')\n            )\n            if (f.default_column === type) {\n              var customColumns = _.without(columns, 'cartodb_id', 'created_at', 'updated_at');\n              if (customColumns.length) {\n                f.value = customColumns[0];\n              }\n            }\n          }\n          if (!f.value) f.value = extra[0];\n          else if (!_.contains(extra, f.value)) {\n            f.value = extra[0];\n          }\n          f.extra = extra;\n        }\n      }\n    });\n    this.set(attrs, opts);\n  },\n\n  defaultFor: function(type) {\n    var form_data = cdb.admin.forms.get(type)[this.table.geomColumnTypes()[0] || 'point'];\n    return form_data;\n  },\n\n  // return the default style properties\n  // based on forms value\n  style: function(props) {\n    var default_data = {};\n    _(this.attributes).each(function(field) {\n      if (props && !_.contains(props, field)) return;\n      _(field.form).each(function(v, k) {\n        default_data[k] =  v.value;\n      });\n    });\n    return default_data;\n  },\n\n  isValid: function(type) {\n    return this.validators[type || 'polygon'](this.attributes);\n  },\n\n  // return true if this form was valid before the current change\n  // this method should be only called during a change event\n  wasValid: function(type) {\n    return this.validators[type](this.previousAttributes());\n  },\n\n  dynamicProperties: function() {\n    var props = [];\n    _.each(this.attributes, function(field) {\n      for (var k in field.form) {\n        var f = field.form[k];\n        if (f.columns) {\n          props.push(field);\n        }\n      }\n    });\n    return props;\n  },\n\n  // return true is some property used to regenerate style has been changed\n  changedDinamycProperty: function() {\n    var changed = [];\n    var d = this.dynamicProperties();\n    for(var i in d) {\n      if (this.changedAttributes(d[i])) {\n        changed.push(d[i]);\n      }\n    }\n    return changed;\n  },\n\n  dinamycProperty: function(c) {\n    return _.keys(this.get(c.name).form)[0];\n  },\n\n  dinamycValues: function(c) {\n    var v = this.get(c.name);\n    var k = this.dinamycProperty(c);\n    return v.form[k].extra;\n  }\n\n\n});\n\ncdb.admin.WizardProperties = cdb.core.Model.extend({\n\n  initialize: function() {\n    // params\n    this.table = this.get('table');\n    this.unset('table');\n    if(!this.table) throw new Error('table is undefined');\n\n    this.layer = this.get('layer');\n    this.unset('layer');\n    if(!this.layer) throw new Error('layer is undefined');\n\n    // stores forms for geometrys and type\n    this.forms = {};\n    this._savedStates = {};\n\n    this.cartoStylesGeneration = new cdb.admin.CartoStyles(_.extend({},\n      this.layer.get('wizard_properties'), {\n      table: this.table\n    })\n    );\n\n    if (this.attributes.properties && _.keys(this.attributes.properties).length !== 0) {\n      this.properties(this.attributes);\n    }\n    delete this.attributes.properties;\n\n    // bind loading and load\n    this.cartoStylesGeneration.bind('load', function() { this.trigger('load'); }, this)\n    this.cartoStylesGeneration.bind('loading', function() { this.trigger('loading'); }, this)\n\n    this.table.bind('columnRename', function(newName, oldName) {\n      if (this.isDisabled()) return;\n      var attrs = {};\n      // search for columns\n      for(var k in this.attributes) {\n        if(this.get(k) === oldName) {\n          attrs[k] = newName;\n        }\n      }\n      this.set(attrs);\n    }, this);\n    // when table schema changes regenerate styles\n    // notice this not update properties, only regenerate\n    // the style\n    this.table.bind('change:schema', function() {\n      if (!this.isDisabled() && this.table.previous('schema') !== undefined) this.cartoStylesGeneration.regenerate();\n    }, this);\n\n    this.table.bind('change:geometry_types', function() {\n      if(!this.table.changedAttributes()) {\n        return;\n      }\n      var geoTypeChanged = this.table.geometryTypeChanged();\n      if(geoTypeChanged) this.trigger('change:form');\n      var prev = this.table.previous('geometry_types');\n      var current = this.table.geomColumnTypes();\n      // wizard non initialized\n      if((!prev || prev.length === 0) && !this.get('type')) {\n        this.active('polygon');\n        return;\n      }\n      if (!current || current.length === 0) {\n        if (!this.table.isInSQLView()) {\n          // empty table\n          this.unset('type', { silent: true });\n        }\n        return;\n      }\n      if (!prev || prev.length === 0) return;\n      if (geoTypeChanged) {\n        this.active('polygon', {}, { persist: false });\n      }\n    }, this);\n\n    this.linkLayer(this.layer);\n\n    this.bindGenerator();\n\n    // unbind previous form and bind the new one\n    this.bind('change:type', this._updateForm);\n    this.table.bind('change:geometry_types', this._updateForm, this);\n    this._updateForm();\n\n    // generator should be always filled in case sql\n    // or table schema is changed\n    this._fillGenerator({ silent: true });\n\n  },\n\n  _updateForm: function() {\n    //unbind all forms\n    for(var k in this.forms) {\n      var forms = this.forms[k];\n      for(var f in forms) {\n        var form = forms[f];\n        form.unbind(null, null, this);\n      }\n    }\n\n    var t = this.get('type');\n    if (t) {\n      var f = this._form(t);\n      f.bind('change', function() {\n        if (!f.isValid(this.get('type'))) {\n          this.active('polygon');\n        }\n        else if(!f.wasValid(this.get('type'))) {\n          if(!this.isDisabled()) {\n            // when the form had no column previously\n            // that means the wizard was invalid\n            this.active(this.get('type'), null, { persist: false, restore: false });\n          }\n        } else {\n          var self = this;\n          var c = f.changedDinamycProperty();\n          var propertiesChanged = [];\n          if(c.length) {\n            _.each(c, function(form_p) {\n              var k = f.dinamycProperty(form_p);\n              if (self.has(k) && !_.contains(f.dinamycValues(form_p), self.get(k))) {\n                propertiesChanged.push(form_p);\n              }\n            });\n            if (propertiesChanged.length) {\n              var st = f.style(propertiesChanged);\n              this.set(st);\n            }\n          }\n        }\n        this.trigger('change:form');\n      }, this);\n    }\n  },\n\n  _form: function(type, geomType) {\n    var form = this.forms[type] || (this.forms[type] = {});\n    geomType = geomType || this.table.geomColumnTypes()[0] || 'point';\n    if (!form[geomType]) {\n      form[geomType] = new cdb.admin.FormSchema({\n        table: this.table,\n        type: type || 'polygon'\n      });\n      form[geomType].__geomType = geomType;\n    }\n    return form[geomType];\n  },\n\n  formData: function(type) {\n    var self = this;\n    var form = this._form(type);\n    return form.toJSON();\n  },\n\n  defaultStyleForType: function(type) {\n    return this._form(type).style();\n  },\n\n  // save current state\n  saveCurrent: function(type, geom) {\n    var k = type + \"_\" + geom;\n    this._savedStates[k] = _.clone(this.attributes);\n  },\n\n  getSaved: function(type, geom) {\n    var k = type + \"_\" + geom;\n    return this._savedStates[k] || {};\n  },\n\n  // active a wizard type\n  active: function(type, props, opts) {\n    opts = _.defaults(opts || {}, { persist: true });\n\n    // if the geometry is undefined the wizard can't be applied\n    var currentGeom = this.table.geomColumnTypes()[0];\n    if (!currentGeom) {\n      return;\n    }\n    opts = _.defaults(opts || {}, { persist: true, restore: true });\n\n    // previously category map was called color. this avoids\n    // color wizard is enabled since it's compatible with category\n    if (type === \"color\") type = 'category';\n\n    // if the geometry type has changed do not allow to persist previous\n    // properties. This avoids cartocss properties from different\n    // geometries are mixed\n    if (this.get('geometry_type') && currentGeom !== this.get('geometry_type')) {\n      opts.persist = false;\n    }\n\n    // get the default props for current type and use previously saved\n    // attributes to override them\n    var geomForm = this.defaultStyleForType(type);\n    var current = (opts.persist && type === this.get('type')) ? this.attributes: {};\n    _.extend(geomForm, opts.restore ? this.getSaved(type, currentGeom): {}, current, props);\n    geomForm.type = type;\n    geomForm.geometry_type = currentGeom;\n\n    // if the geometry is invalid, do not save previous attributes\n    var t = this.get('type');\n    var gt = this.get('geometry_type');\n    if(t && gt && this._form(t, gt).isValid(t)) {\n      this.saveCurrent(t, gt);\n    }\n    this.clear({ silent: true });\n    this.cartoStylesGeneration.unset('metadata', {silent: true});\n    this.cartoStylesGeneration.unset('properties', { silent: true });\n    // set layer as enabled to change style\n    this.enableGeneration();\n    this.set(geomForm);\n  },\n\n  enableGeneration: function() {\n    this.layer.set('tile_style_custom', false, { silent: true });\n  },\n\n  // the style generation can be disabled because of a custom style\n  isDisabled: function() {\n    return this.layer.get('tile_style_custom');\n  },\n\n  properties: function(props) {\n    if (!props) return this;\n    var t = props.type === 'color' ? 'category': props.type;\n    var vars = _.extend(\n      { type: t },\n      props.properties\n    );\n    return this.set(vars);\n  },\n\n  _fillGenerator: function(opts) {\n      opts = opts || {}\n      this.cartoStylesGeneration.set({\n        'properties': _.clone(this.attributes),\n        'type': this.get('type')\n      }, opts);\n  },\n\n  _updateGenerator: function() {\n      var t = this.get('type');\n      var isValid = this._form(t).isValid(t);\n      this._fillGenerator({ silent: !isValid || this.isDisabled() });\n  },\n\n  bindGenerator: function() {\n    // every time properties change update the generator\n    this.bind('change', this._updateGenerator, this);\n  },\n\n  unbindGenerator: function() {\n    this.unbind('change', this._updateGenerator, this);\n  },\n\n  toJSON: function() {\n    return {\n      type: this.get('type'),\n      properties: _.omit(this.attributes, 'type', 'metadata')\n    };\n  },\n\n  linkLayer: function(layer) {\n    var self = this;\n    /*\n     * this is disabled because we need to improve propertiesFromStyle method\n     * in order to not override properties which shouldn't be, see CDB-1566\n     *\n     layer.bind('change:tile_style', function() {\n      if(this.isDisabled()) {\n        this.unbindGenerator();\n        this.set(this.propertiesFromStyle(layer.get('tile_style')));\n        this.bindGenerator();\n      }\n    }, this);\n    */\n\n    layer.bind('change:query', function() {\n      if(!this.isDisabled()) this.cartoStylesGeneration.regenerate();\n    }, this);\n\n    var changeLayerStyle = function(st, sql, layerType) {\n      layerType = layerType || 'CartoDB';\n\n      // update metadata from cartocss generation\n      self.unbindGenerator();\n      var meta = self.cartoStylesGeneration.get('metadata');\n      if (meta) {\n        self.set('metadata', meta);\n      } else {\n        self.unset('metadata');\n      }\n      self.bindGenerator();\n\n      var attrs = {\n        tile_style: st,\n        type: layerType,\n        tile_style_custom: false\n      };\n\n      if(sql) {\n        attrs.query_wrapper = sql.replace(/__wrapped/g, '(<%= sql %>)');//\"with __wrapped as (<%= sql %>) \" + sql;\n      } else {\n        attrs.query_wrapper = null;\n      }\n      attrs.query_generated = attrs.query_wrapper !== null;\n\n      // update the layer model\n      if (layer.isNew() || !layer.collection) {\n        layer.set(attrs);\n      } else {\n        layer.save(attrs);\n      }\n    };\n\n    // this is the sole entry point where the cartocss is changed.\n    this.cartoStylesGeneration.bind('change:style change:sql', function() {\n      var st = this.cartoStylesGeneration.get('style');\n      if(st) {\n        changeLayerStyle(\n          st,\n          this.cartoStylesGeneration.get('sql'),\n          this.get('layer-type')\n        );\n      }\n    }, this);\n\n\n  },\n\n  unlinkLayer: function(layer) {\n    this.unbind(null, null, layer);\n    layer.unbind(null, null, this);\n  },\n\n  getEnabledWizards: function() {\n    var _enableMap = {\n      'point': ['polygon', 'cluster', 'choropleth', 'bubble', 'density', 'category', 'intensity', 'torque', 'torque_cat', 'torque_heat'],\n      'line':['polygon', 'choropleth', 'category', 'bubble'],\n      'polygon': ['polygon', 'choropleth', 'category', 'bubble']\n    };\n    return _enableMap[this.table.geomColumnTypes()[0] || 'point'];\n  },\n\n  //MOVE to the model\n  propertiesFromStyle: function(cartocss) {\n    var parser = new cdb.admin.CartoParser();\n    var parsed = parser.parse(cartocss);\n    if (!parsed) return {};\n    var rules = parsed.getDefaultRules();\n    if(parser.errors().length) return {};\n    var props = {};\n    var t = this._getTypeFromCSS(cartocss);\n    var valid_attrs =_.uniq(_.keys(this.attributes).concat(_.keys(this._form(t).style())));\n    if (rules) {\n      for(var p in valid_attrs) {\n        var prop = valid_attrs[p];\n        var rule = rules[prop];\n        if (rule) {\n          rule = rule.ev();\n          if (!carto.tree.Reference.validValue(parser.parse_env, rule.name, rule.value)) {\n            return {};\n          }\n          var v = rule.value.ev(this.parse_env);\n          if (v.is === 'color') {\n            v = v.toString();\n          } else if (v.is === 'uri') {\n            v = 'url(' + v.toString() + ')';\n          } else {\n            v = v.value;\n          }\n          props[prop] = v;\n        }\n      }\n      if(\"image-filters\" in props && !props[\"image-filters\"]){\n        props[\"image-filters\"] = rules[\"image-filters\"].value.value[0].value[0]\n      }\n      return props;\n    }\n    return {};\n  },\n\n  _getTypeFromCSS: function(css) {\n    if (css.indexOf(\"colorize-alpha\") > -1) {\n      return \"torque_heat\";\n    }\n    else if (css.indexOf(\"torque-time-attribute\") > -1) {\n      return \"torque\";\n    }\n    else {\n      return this.get('type');\n    } \n  },\n\n  // returns true if current wizard supports user\n  // interaction\n  supportsInteractivity: function() {\n    var t = this.get('type');\n    if (_.contains(['torque', 'cluster', 'density', 'torque_cat'], t)) {\n      return false;\n    }\n    return true;\n  }\n\n});\n","/**\n * models for cartodb admin\n */\n\n(function() {\n\n  cdb.admin.SQL = function() {\n      var username = (this.options && this.options.user_data)? this.options.user_data.username :\n        (window.user_data? window.user_data.username : window.user_name);\n      var api_key = (this.options && this.options.user_data)? this.options.user_data.api_key :\n        (window.user_data? window.user_data.api_key : window.api_key);\n\n\n      return new cartodb.SQL({\n        user: username,\n        api_key: api_key,\n        sql_api_template: cdb.config.getSqlApiBaseUrl()\n      });\n  }\n\n  cdb.admin.Column = cdb.core.Model.extend({\n\n    idAttribute: 'name',\n\n    url: function(method) {\n      var version = cdb.config.urlVersion('column', method);\n      var table = this.table || this.collection.table;\n      if(!table) {\n        cdb.log.error(\"column has no table assigned\");\n      }\n\n      var base = '/api/' + version + '/tables/' + table.get('name') + '/columns/';\n      if (this.isNew()) {\n        return base;\n      }\n      return base + this.id;\n    },\n\n\n    initialize: function() {\n      this.table = this.get('table');\n      if(!this.table) {\n        throw \"you should specify a table model\";\n      }\n      this.unset('table', { silent: true });\n    },\n\n    toJSON: function() {\n      var c = _.clone(this.attributes);\n      // this hack is created to create new column\n      // if you set _name instead name backbone does not get\n      // it as idAttribute so launch a POST instead of a PUT\n      if(c._name) {\n        c.name = c._name;\n        delete c._name;\n      }\n      return c;\n    },\n\n  });\n\n\n  /**\n   * contains information about the table, not the data itself\n   */\n  cdb.admin.CartoDBTableMetadata = cdb.ui.common.TableProperties.extend({\n\n    currentLoading: 0, // class variable (shared). I'm still not sure if this is messy as hell or powerfull as a transformer\n    sqlApiClass: cartodb.SQL,\n\n    _TEXTS: {\n      columnDeleted: 'Your column has been deleted',\n      columnDeleting: 'Deleting your column',\n      columnAdded: 'Your column has been added',\n      columnAdding: 'Adding new column'\n    },\n\n    hiddenColumns: [\n      'the_geom',\n      'the_geom_webmercator',\n      'cartodb_georef_status',\n      'created_at',\n      'updated_at',\n      'cartodb_id'\n    ],\n\n    initialize: function() {\n      _.bindAll(this, 'notice');\n      this.readOnly = false;\n      this.bind('change:schema', this._prepareSchema, this);\n      this._prepareSchema();\n      this.sqlView = null;\n      this.synchronization = new cdb.admin.TableSynchronization();\n      this.synchronization.linkToTable(this);\n      this.synchronization.bind('change:id', function isSyncChanged() {\n        this.trigger('change:isSync', this, this.synchronization.isSync());\n      }, this);\n      if (this.get('no_data_fetch')) {\n        this.no_data_fetch = true;\n        delete this.attributes.no_data_fetch;\n      }\n      this.data();\n      this.bind('error', function(e, resp) {\n        this.error('', resp);\n      }, this);\n      this._data.bind('error', function(e, resp) {\n        this.notice('error loading rows, check your SQL query', 'error', 5000);\n      }, this);\n\n      this._data.bind('reset', function() {\n        var view = this._data;\n        this.set({\n          schema: view.schemaFromData(this.get('schema')),\n          geometry_types: view.getGeometryTypes()\n        });\n      }, this);\n\n      this.retrigger('change', this._data, 'data:changed');\n      this.retrigger('saved', this._data, 'data:saved');\n\n      this.bind('change:table_visualization', function() {\n        this.permission = new cdb.admin.Permission(this.get('table_visualization').permission);\n        this.trigger('change:permission', this, this.permission);\n      }, this);\n\n      // create permission if permission is set\n      this.permission = new cdb.admin.Permission(this.get('permission'));\n    },\n\n    url: function(method) {\n      var version = cdb.config.urlVersion('table', method);\n      var base = '/api/' + version + '/tables';\n      if (this.isNew()) {\n        return base;\n      }\n      return base + '/' + this.id;\n    },\n\n    // use the name as the id since the api works\n    // in the same way to table name and id\n    parse: function(resp, xhr) {\n      if(resp.name) {\n        resp.id = resp.name;\n      }\n      // move geometry_types to stats one\n      // geometry_types from backend are not reliable anymore and it can only be used\n      // for non editing stuff (showing icons, general checks on table list)\n      resp.stats_geometry_types = resp.geometry_types;\n      delete resp.geometry_types;\n      delete resp.schema;\n      return resp;\n    },\n\n    notice: function(msg, type, timeout) {\n      this.trigger('notice', msg, type, timeout);\n    },\n\n    setReadOnly: function(_) {\n      var trigger = false;\n      if (this.readOnly !== _) {\n        trigger = true;\n      }\n      this.readOnly = _;\n      if (trigger) {\n        this.trigger('change:readOnly', this, _);\n      }\n    },\n\n    isReadOnly: function() {\n      return this.readOnly || this.data().isReadOnly() || this.synchronization.isSync();\n    },\n\n    isSync: function() {\n      return this.synchronization.isSync();\n    },\n\n    getUnqualifiedName: function() {\n      var name = this.get('name');\n      if (!name) return null;\n      var tk = name.split('.');\n      if (tk.length == 2) {\n        return tk[1];\n      }\n      return name;\n    },\n\n    // \"user\".table -> user.table\n    getUnquotedName: function() {\n      var name = this.get('name');\n      return name && name.replace(/\"/g, '');\n    },\n\n    sortSchema: function() {\n      this.set('schema', cdb.admin.CartoDBTableMetadata.sortSchema(this.get('schema')));\n    },\n\n    error: function(msg, resp) {\n      var err =  resp && resp.responseText && JSON.parse(resp.responseText).errors[0];\n      this.trigger('notice', msg + \": \" + err, 'error');\n    },\n\n    _prepareSchema: function() {\n      var self = this;\n      this._columnType = {};\n\n      _(this.get('schema')).each(function(s) {\n        self._columnType[s[0]] = s[1];\n      });\n\n      if (!this.isInSQLView()) {\n        self.set('original_schema', self.get('schema'));\n      }\n    },\n\n    columnNames: function(sc) {\n      sc = sc || 'schema'\n      return _(this.get(sc)).pluck(0);\n    },\n\n    containsColumn: function(name) {\n      return _.contains(this.columnNames(), name);\n    },\n\n    columnNamesByType: function(type, sc) {\n      sc = sc || 'schema';\n      var t = _(this.get(sc)).filter(function(c) {\n        return c[1] == type;\n      });\n      return _(t).pluck(0);\n    },\n\n    // return geometry columns calculated backend stats\n    // use geomColumnTypes if you need something reliable (but slower and async)\n    statsGeomColumnTypes: function(geometryTypes) {\n      return this.geomColumnTypes(this.get('stats_geometry_types'))\n    },\n\n    // return the current column types in an array\n    // the values inside the array can be:\n    //  'point', 'line', 'polygon'\n    geomColumnTypes: function(geometryTypes) {\n      var types = geometryTypes || this.get('geometry_types');\n      var geomTypes = [];\n      if (!_.isArray(types)) {\n        return [];\n      }\n      var _map = {\n        'st_multipolygon': 'polygon',\n        'st_polygon': 'polygon',\n        'st_multilinestring': 'line',\n        'st_linestring': 'line',\n        'st_multipoint': 'point',\n        'st_point': 'point'\n      };\n      for(var t in types) {\n        var type = types[t];\n        // when there are rows with no geo type null is returned as geotype\n        if(type) {\n          var a = _map[type.toLowerCase()]\n          if(a) {\n            geomTypes.push(a)\n          }\n        }\n      }\n      return _.uniq(geomTypes);\n    },\n\n    /**\n     *  Adding a new geometry type to the table\n     *  @param geom type {st_polygon, st_point,...}\n     *  @param set options\n     */\n    addGeomColumnType: function(t, opts) {\n      if(!t) return;\n      var types = _.clone(this.get('geometry_types')) || [];\n      if(!_.contains(types, t)) {\n        types.push(t);\n\n        this.set({\n          'geometry_types': types\n        }, opts);\n      }\n    },\n\n    nonReservedColumnNames: function() {\n\n      var self = this;\n      return _.filter(this.columnNames(), function(c) {\n        return !self.isReservedColumn(c);\n      });\n    },\n\n    columnTypes: function() {\n      return _.clone(this._columnType);\n    },\n\n    _getColumn: function(columnName) {\n      if(this._columnType[columnName] === undefined) {\n        return\n        // throw \"the column does not exists\";\n      }\n      var c = new cdb.admin.Column({\n        table: this,\n        name: columnName,\n        type: this._columnType[columnName]\n      });\n      return c;\n    },\n\n    getColumnType: function(columnName, sc) {\n      sc = sc || 'schema';\n      var t = _(this.get(sc)).filter(function(c) {\n        return c[0] == columnName;\n      });\n      if(t.length > 0)\n        return t[0][1];\n      return;\n    },\n\n    addColumn: function(columnName, columnType, opts) {\n      var self = this;\n      var c = new cdb.admin.Column({\n        table: this,\n        _name: columnName,\n        type: columnType || 'string'\n      });\n      this.notice(self._TEXTS.columnAdding, 'load', 0);\n      c.save(null, {\n          success: function(mdl, obj) {\n            self.notice(self._TEXTS.columnAdded, 'info');\n            self.trigger('columnAdd', columnName);\n            self.data().fetch();\n            opts && opts.success && opts.success(mdl,obj);\n          },\n          error: function(e, resp) {\n            self.error('error adding column', resp);\n            opts && opts.error && opts.error(e);\n          },\n          wait: true\n      });\n    },\n\n    deleteColumn: function(columnName, opts) {\n      var self = this;\n      var c = this._getColumn(columnName);\n      if (c !== undefined) {\n        this.notice(self._TEXTS.columnDeleting, 'load', 0);\n        c.destroy({\n            success: function() {\n              self.trigger('columnDelete', columnName);\n              self.notice(self._TEXTS.columnDeleted, 'info');\n              self.data().fetch();\n              opts && opts.success && opts.success();\n            },\n            error: function(e, resp) {\n              self.error('error deleting column', resp);\n              opts && opts.error && opts.error();\n            },\n            wait: true\n        });\n      }\n    },\n\n    renameColumn: function(columnName, newName, opts) {\n      if(columnName == newName) return;\n      var self = this;\n      var c = this._getColumn(columnName);\n      var oldName = c.get('name');\n      c.set({\n        new_name: newName,\n        old_name: c.get('name')\n      });\n      this.notice('renaming column', 'load', 0);\n      c.save(null,  {\n          success: function(mdl, data) {\n            self.notice('Column has been renamed', 'info');\n            self.trigger('columnRename', newName, oldName);\n            self.data().fetch();\n            opts && opts.success && opts.success(mdl, data);\n          },\n          error: function(e, resp) {\n            cdb.log.error(\"can't rename column\");\n            self.error('error renaming column', resp);\n            opts && opts.error && opts.error(e, resp);\n          },\n          wait: true\n      });\n    },\n\n    isTypeChangeAllowed: function(columnName, newType) {\n      var deactivateMatrix = {\n        'number': ['date'],\n        'boolean': ['date'],\n        'date': ['boolean']\n      };\n      var c = this._getColumn(columnName);\n      if (!c) {\n        return true;\n      }\n      var type = c.get('type');\n      var deactivated = deactivateMatrix[type] || [];\n      deactivated = deactivated.concat([type])\n      return !_.contains(deactivated, newType);\n    },\n\n    isTypeChangeDestructive: function(columnName, newType) {\n      var columnType = this.getColumnType(columnName);\n\n      var destructiveMatrix = {\n        \"string\": {\n          \"string\": false,\n          \"number\": true,\n          \"date\": true,\n          \"boolean\": true,\n        },\n        \"number\": {\n          \"string\": false,\n          \"number\": false,\n          \"date\": true,\n          \"boolean\": true,\n        },\n        \"date\": {\n          \"string\": false,\n          \"number\": true,\n          \"date\": false,\n          \"boolean\": true,\n        },\n        \"boolean\": {\n          \"string\": false,\n          \"number\": false,\n          \"date\": true,\n          \"boolean\": false,\n        },\n      }\n      return destructiveMatrix[columnType][newType]\n    },\n\n    changeColumnType: function(columnName, newType, opts) {\n      var self = this;\n      var c = this._getColumn(columnName);\n\n      if(this.getColumnType(columnName) == newType) {\n        opts && opts.success && opts.success();\n        return;\n      }\n      this.saveNewColumnType(c, newType, opts);\n    },\n\n    saveNewColumnType: function(column, newType, opts) {\n      var self = this;\n      column.set({ type: newType});\n      this.notice('Changing column type', 'load', 0);\n      column.save(null, {\n          success: function() {\n            self.notice('Column type has been changed', 'info');\n            self.trigger('typeChanged', newType); // to make it testable\n            self.data().fetch();\n            opts && opts.success && opts.success();\n          },\n          error: function(e, resp) {\n            self.trigger('typeChangeFailed', newType, e); // to make it testable\n            self.error('error changing column type', resp);\n            opts && opts.error && opts.error(e, resp);\n          },\n          wait: true\n      });\n    },\n\n    /**\n     * returns the original data for the table not the current applied view\n     */\n    originalData: function() {\n      return this._data;\n    },\n\n    data: function() {\n      var self = this;\n      if(this._data === undefined) {\n        this._data = new cdb.admin.CartoDBTableData(null, {\n          table: this\n        });\n        this.bindData();\n      }\n      if(this.sqlView) {\n        return this.sqlView;\n      }\n      return this._data;\n    },\n\n    bindData: function(data) {\n      var self = this;\n      if(this._data && !this._data.bindedReset) {\n\n        this.retrigger('reset', this._data, 'dataLoaded');\n        this.retrigger('add', this._data, 'dataAdded');\n        this._data.bindedReset = true;\n\n      }\n      if(this.sqlView && !this.sqlView.bindedReset) {\n        this.retrigger('reset', this.sqlView, 'dataLoaded');\n        this.retrigger('add', this.sqlView, 'dataAdded');\n        this.sqlView.bindedReset = true;\n      }\n\n    },\n\n    useSQLView: function(view, options) {\n      if (!view && !this.sqlView) return;\n      options = options || {};\n      var self = this;\n      var data = this.data();\n\n      if(this.sqlView) {\n        this.sqlView.unbind(null, null, this);\n        this.sqlView.unbind(null, null, this._data);\n      }\n\n      // reset previous\n      if(!view && this.sqlView) {\n        this.sqlView.table = null;\n      }\n\n      this.sqlView = view;\n      this.bindData();\n\n      if(view) {\n        view.bind('reset', function() {\n          if(!view.modify_rows) {\n            this.set({\n              schema: view.schemaFromData(this.get('schema')),\n              geometry_types: view.getGeometryTypes()\n            });\n          }\n        }, this);\n        // listen for errors\n        view.bind('error', function(e, resp) {\n          this.notice('error loading rows, check your SQL query', 'error', 5000);\n        }, this);\n\n        view.bind('loading', function() {\n          //this.notice(_t('loading query'), 'load', 0);\n        }, this);\n\n        view.bind('reset loaded', function() {\n          if(view.modify_rows) {\n            this.notice(view.affected_rows + ' rows affected');\n            this.useSQLView(null);\n          } else {\n            this.notice(_t('loaded'));\n          }\n        }, this);\n\n        // swicth source data\n        this.dataModel = this.sqlView;\n        view.table = this;\n      } else {\n        this.dataModel = this._data;\n        // get the original schema\n        self.set({\n          'schema': self.get('original_schema')\n        });///*, { silent: true });\n        self.data().fetch();\n      }\n      this.trigger('change:dataSource', this.dataModel, this);\n    },\n\n    isInSQLView: function() {\n      return this.sqlView ? true: false;\n    },\n\n    /**\n     * replace fetch functionally to add some extra call for logging\n     * it can be used in the same way fetch is\n     */\n    fetch: function(opts) {\n      var self = this;\n      silent = opts? opts.silent : false;\n      if(!silent) {\n        this.notice('loading table', 'load', this, 0, 0);\n      }\n      var xhr = this.elder('fetch', opts)\n      $.when(xhr).done(function() {\n        opts && opts.success && opts.success.old_success && opts.success.old_success();\n        if(!silent) {\n          self.notice('loaded');\n        }\n      }).fail(function(){\n        if(!silent) {\n          self.notice('error loading the table');\n        }\n      });\n      return xhr;\n\n    },\n\n    isReservedColumn: function(c) {\n      return cdb.admin.Row.isReservedColumn(c);\n    },\n\n    /**\n     * when a table is linked to a infowindow each time a column\n     * is renamed or removed the table pings to infowindow to remove\n     * or rename the fields\n     */\n    linkToInfowindow: function(infowindow) {\n      var self = this;\n      this.bind('columnRename', function(newName, oldName) {\n        if(infowindow.containsField(oldName)) {\n          infowindow.removeField(oldName);\n          infowindow.addField(newName);\n        }\n      }, infowindow);\n      this.bind('columnDelete', function(oldName, newName) {\n        infowindow.removeField(oldName);\n      }, infowindow);\n\n      this.bind('change:schema', function() {\n        var self = this;\n        var columns = _(this.columnNames()).filter(function(c) {\n          return !_.contains(infowindow.SYSTEM_COLUMNS, c);\n        });\n\n        function _hash(str){\n            var hash = 0, c;\n            for (i = 0; i < str.length; i++) {\n                c = str.charCodeAt(i);\n                hash = c + (hash << 6) + (hash << 16) - hash;\n            }\n            return hash;\n        }\n\n        if (this.isInSQLView()) {\n          if (!infowindow.has('defaul_schema_fields')) {\n            infowindow.saveFields('defaul_schema_fields');\n          }\n          var current_schema_key = 'schema_' + _hash(self.columnNames().sort().join(''));\n          var previous_schema_key = 'schema_' + _hash(\n            _(self.previous('schema')).pluck(0).sort().join('')\n          );\n\n          if(!infowindow.has(previous_schema_key)) {\n            infowindow.saveFields(previous_schema_key);\n          }\n          if(infowindow.has(current_schema_key)) {\n            infowindow.restoreFields(null, current_schema_key);\n          }\n        } else {\n          infowindow.restoreFields(null, 'defaul_schema_fields');\n        }\n\n        if (infowindow.get('template')) {\n          // merge fields checking actual schema\n          infowindow.mergeFields(columns);\n        } else {\n          // remove fields that no longer exist\n          infowindow.removeMissingFields(columns);\n        }\n      }, this);\n\n    },\n\n    embedURL: function() {\n      return \"/tables/\" + this.get('name') + \"/embed_map\"\n    },\n\n    /**\n     * @deprecated use vis.viewUrl() or vis.viewUrl(currentUser) instead.\n     */\n    viewUrl: function() {\n      return cdb.config.prefixUrl() + \"/tables/\" + this.getUnqualifiedName()\n    },\n\n    hasTheGeom: function() {\n      var currentSchema = this.get('schema');\n      // if we have \"the_geom\" in our current schema, returnstrue\n      for(var n in currentSchema) {\n        if(currentSchema[n][0] === 'the_geom') {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Checks the server to see if the table has any georeferenced row, independently of the applyed query\n     * @return {promise}\n     */\n    fetchGeoreferenceStatus: function() {\n      var dfd = $.Deferred();\n      var username = (this.options && this.options.user_data)? this.options.user_data.username :\n        (window.user_data? window.user_data.username : window.user_name);\n      var api_key = (this.options && this.options.user_data)? this.options.user_data.api_key :\n        (window.user_data? window.user_data.api_key : window.api_key);\n\n\n      this.sqlApi = new this.sqlApiClass({\n        user: username,\n        version: 'v1',\n        api_key: api_key,\n        sql_api_template: cdb.config.getSqlApiBaseUrl()\n      });\n\n      var sql = 'SELECT the_geom FROM ' + this.get('name') + ' WHERE the_geom is not null';\n      this.sqlApi.execute(sql).done(function(data){\n        if(data.rows.length > 0) {\n          dfd.resolve(true);\n        } else {\n          dfd.resolve(false);\n        }\n      });\n\n      return dfd.promise();\n\n    },\n\n    /**\n     * Checks the current loaded records to see if they are georeferenced\n     * @return {boolean}\n     */\n    isGeoreferenced: function() {\n      var geoColumns = this.geomColumnTypes();\n      if(geoColumns && geoColumns.length > 0) {\n        return true;\n      } else {\n        if (!this.isInSQLView()) {\n          // sometimes the columns are changed in the frontend site\n          // and the geocolumns are not updated.\n          // check the columns in local\n          return this._data.any(function(row) {\n            return row.hasGeometry();\n          });\n        }\n      }\n      return false;\n    },\n\n    /**\n     * this function can only be called during change event\n     * returns true if the geometry type has changed\n     * for this method multipolygon and polygon are the same geometry type\n     */\n    geometryTypeChanged: function() {\n      if (!('geometry_types' in this.changed)) return false;\n      var geoTypes = this.get('geometry_types')\n      var prevGeoTypes = this.previousAttributes().geometry_types;\n      function normalize(e) {\n        e = e.toLowerCase();\n        if (e === 'st_multipolygon') {\n          return 'st_polygon'\n        }\n        if (e === 'st_multilinestring') {\n          return 'st_linestring'\n        }\n        if (e === 'st_multipoint') {\n          return 'st_point'\n        }\n        return e;\n      }\n\n      if(!geoTypes ||\n        geoTypes.length === 0 ||\n        !prevGeoTypes ||\n        prevGeoTypes.length === 0) {\n        return true;\n      }\n\n      var n = normalize(geoTypes[0]);\n      var o = normalize(prevGeoTypes[0]);\n      return n !== o;\n    },\n\n    /**\n     * Get necessary data create a duplicated dataset from this table.\n     *\n     * @param {Object} newName name of new dataset.\n     * @param {Object} callbacks\n     * @returns {Object}\n     */\n    duplicate: function(newName, callbacks) {\n      callbacks = callbacks || {};\n\n      // Extracted from duplicate_table_dialog\n      var data = {\n        table_name: newName\n      };\n\n      // Set correct data object, depending on if the app has a query applied or not\n      if (this.isInSQLView()) {\n        var query = this.data().getSQL();\n        data.sql = ( !query || query == \"\" ) ? 'SELECT * FROM ' + cdb.Utils.safeTableNameQuoting(this.get('name')) : query;\n      } else {\n        data.table_copy = this.get('name');\n      }\n\n      var importModel = new cdb.admin.Import();\n      importModel.save(data, {\n        error: callbacks.error,\n        success: function(model, changes) {\n          var checkImportModel = new cdb.admin.Import({\n            item_queue_id: changes.item_queue_id\n          });\n\n          checkImportModel.bind('importComplete', function() {\n            checkImportModel.unbind();\n\n            // So import is done, create new table object from the new table and fetch, callback once finished.\n            var newTable = new cdb.admin.CartoDBTableMetadata({\n              id: checkImportModel.get('table_id')\n            });\n\n            newTable.fetch({\n              success: function() {\n                callbacks.success(newTable);\n              },\n              error: callbacks.error\n            });\n          });\n\n          checkImportModel.bind('importError', function() {\n            checkImportModel.unbind();\n            callbacks.error.apply(this, arguments);\n          });\n\n          checkImportModel.pollCheck();\n        }\n      });\n    },\n\n    /**\n     * Get the visualizations that are using this table dataset.\n     * Note! a .fetch() is required to be sure the data to be available.\n     * @return {Array}\n     */\n    dependentVisualizations: function() {\n      // dependent = visualizations with a single layer\n      // non-dependant = have more than this dataset as a layer\n      return _.chain(this.get('dependent_visualizations'))\n        .union(this.get('non_dependent_visualizations'))\n        .compact()\n        .value() || [];\n    }\n\n  }, {\n    /**\n     * creates a new table from query\n     * the called is responsable of calling save to create\n     * the table in the server\n     */\n    createFromQuery: function(name, query) {\n      return new cdb.admin.CartoDBTableMetadata({\n        sql: query,\n        name: name\n      });\n    },\n\n    sortSchema: function(schema) {\n      var priorities = {\n        'cartodb_id': 1,\n        'the_geom': 2,\n        '__default__': 3,\n        'created_at': 4,\n        'updated_at': 5\n      };\n\n      function priority(v) {\n        return priorities[v] || priorities['__default__'];\n      }\n\n      return _.chain(schema)\n        .clone()\n        .sort(function(a, b) { // ..and then re-sort by priorities defined above\n          var prioA = priority(a[0]);\n          var prioB = priority(b[0]);\n          if (prioA < prioB) {\n            return -1;\n          } else if (prioA > prioB) {\n            return 1;\n          } else { //priority is the same (i.e. __default__), so compare alphabetically\n            return a[0] < b[0] ? -1 : 1;\n          }\n        })\n        .value();\n    },\n\n    /**\n     * return true if the sql query alters table schema in some way\n     */\n    alterTable: function(sql) {\n      sql = sql.trim();\n      return sql.search(/alter\\s+[\\w\\.\"]+\\s+/i) !== -1   ||\n             sql.search(/drop\\s+[\\w\\.\\\"]+/i)  !== -1  ||\n             sql.search(/^vacuum\\s+[\\w\\.\\\"]+/i)  !== -1 ||\n             sql.search(/^create\\s+[\\w\\.\\\"]+/i)  !== -1 ||\n             sql.search(/^reindex\\s+[\\w\\.\\\"]+/i)  !== -1 ||\n             sql.search(/^grant\\s+[\\w\\.\\\"]+/i)  !== -1 ||\n             sql.search(/^revoke\\s+[\\w\\.\\\"]+/i)  !== -1 ||\n             sql.search(/^cluster\\s+[\\w\\.\\\"]+/i)  !== -1 ||\n             sql.search(/^comment\\s+on\\s+[\\w\\.\\\"]+/i)  !== -1 ||\n             sql.search(/^explain\\s+[\\w\\.\\\"]+/i)  !== -1;\n    },\n\n    /**\n     * return true if the sql query alters table data\n     */\n    alterTableData: function(sql) {\n      return this.alterTable(sql)       ||\n             sql.search(/^refresh\\s+materialized\\s+view\\s+[\\w\\.\\\"]+/i)  !== -1 ||\n             sql.search(/^truncate\\s+[\\w\\.\\\"]+/i)  !== -1 ||\n             sql.search(/insert\\s+into/i) !== -1  ||\n             sql.search(/update\\s+[\\w\\.\\-\"]+\\s+.*set/i) !== -1  ||\n             sql.search(/delete\\s+from/i) !== -1;\n    }\n\n  });\n\n  cdb.admin.Row = cdb.core.Model.extend({\n\n    _CREATED_EVENT: 'created',\n    _CREATED_EVENT: 'creating',\n    sqlApiClass: cartodb.SQL,\n\n    _GEOMETRY_TYPES: {\n      'point': 'st_point',\n      'multipoint': 'st_multipoint',\n      'linestring': 'st_linestring',\n      'multilinestring': 'st_multilinestring',\n      'polygon': 'st_polygon',\n      'multipolygon': 'st_multipolygon'\n    },\n\n    url: function(method) {\n      var version = cdb.config.urlVersion('record', method);\n      var table = this.table || this.collection.table;\n      if(!table) {\n        cdb.log.error(\"row has no table assigned\");\n      }\n\n      var base = '/api/' + version + '/tables/' + table.get('name') + '/records/';\n      if (this.isNew()) {\n        return base;\n      }\n      return base + this.id;\n    },\n\n    fetch: function(opts) {\n      opts = opts || {}\n      var self = this;\n      var silent = opts && opts.silent;\n      var username = (this.options && this.options.user_data)? this.options.user_data.username :\n        (window.user_data? window.user_data.username : window.user_name);\n      var api_key = (this.options && this.options.user_data)? this.options.user_data.api_key :\n        (window.user_data? window.user_data.api_key : window.api_key);\n\n      var table = this.table || this.collection.table;\n\n      var sqlApi = new this.sqlApiClass({\n        user: username,\n        version: 'v2',\n        api_key: api_key,\n        sql_api_template: cdb.config.getSqlApiBaseUrl(),\n        extra_params: ['skipfields']\n      });\n      // this.trigger('loading')\n      var sql = null;\n      var columns = table.columnNames()\n      if (opts.no_geom) {\n        columns = _.without(columns, 'the_geom', 'the_geom_webmercator');\n      } else {\n        columns = _.without(columns, 'the_geom');\n      }\n      sql = 'SELECT ' + columns.join(',') + \" \"\n      if(table.containsColumn('the_geom') && !opts.no_geom) {\n        sql += ',ST_AsGeoJSON(the_geom, 8) as the_geom '\n      }\n      sql += ' from (' + table.data().getSQL() + ') _table_sql WHERE cartodb_id = ' + this.get('cartodb_id');\n      // Added opts to sql execute function to apply\n      // parameters ( like cache ) to the ajax request\n      if (opts.no_geom) {\n        opts.skipfields = 'the_geom,the_geom_webmercator';\n      } else {\n        opts.skipfields = 'the_geom_webmercator';\n      }\n      sqlApi.execute(sql, {}, opts).done(function(data){\n        if(self.parse(data.rows[0])) {\n          self.set(data.rows[0]);//, {silent: silent});\n          self.trigger('sync');\n        }\n      });\n\n    },\n\n    toJSON: function() {\n      var attr = _.clone(this.attributes);\n      // remove read-only attributes\n      delete attr['updated_at'];\n      delete attr['created_at'];\n      delete attr['the_geom_webmercator'];\n      if(!this.isGeometryGeoJSON()) {\n        delete attr['the_geom'];\n      }\n      return attr;\n    },\n\n    isGeomLoaded: function() {\n      var geojson = this.get('the_geom');\n      var column_types_WKT = cdb.admin.WKT.types\n      return  (geojson !== 'GeoJSON' && geojson !== -1 && !_.contains(column_types_WKT, geojson));\n    },\n\n    hasGeometry: function() {\n      var the_geom = this.get('the_geom');\n      return !!(the_geom != null && the_geom != undefined && the_geom != '')\n      // in fact, if the_geom has anything but null or '', the row is georeferenced\n\n      // if(typeof the_geom === 'string') {\n      //   // if the geom contains GeoJSON, the row has a valid geometry, but is not loaded yet\n      //   if(the_geom === 'GeoJSON')  {\n      //     return true\n      //   }\n\n      //   try {\n      //     var g = JSON.parse(the_geom);\n      //     return !!g.coordinates;\n      //   } catch(e) {\n      //     return false;\n      //   }\n      // } else {\n      //   if(the_geom) {\n      //     return !!the_geom.coordinates;\n      //   }\n      //   return false;\n      // }\n    },\n    /**\n     * Checks if the_geom contains a valid geoJson\n     */\n    isGeometryGeoJSON: function() {\n      var the_geom = this.get('the_geom');\n      if(the_geom && typeof the_geom === 'object') {\n        return !!the_geom.coordinates;\n      } else if(typeof the_geom !== 'string') {\n        return false;\n      }\n      // if the geom contains GeoJSON, the row has a valid geometry, but is not loaded yet\n      if(the_geom === 'GeoJSON')  {\n        return true\n      }\n\n      try {\n        var g = JSON.parse(the_geom);\n        return !!g.coordinates;\n      } catch(e) {\n        return false;\n      }\n\n      return false;\n\n    },\n\n    getFeatureType: function() {\n      if (this.isGeomLoaded()) {\n        // Problem geometry type from a WKB format\n        // Not possible for the moment\n        try {\n          var geojson = JSON.parse(this.get('the_geom'));\n          return geojson.type.toLowerCase();\n        } catch(e) {\n          cdb.log.info(\"Not possible to parse geometry type\");\n        }\n      }\n      return null;\n    },\n\n    getGeomType: function() {\n      try {\n        return this._GEOMETRY_TYPES[this.getFeatureType()];\n      } catch(e) {\n        cdb.log.info(\"Not possible to parse geometry type\");\n      }\n    }\n\n  }, {\n    RESERVED_COLUMNS: 'the_geom the_geom_webmercator cartodb_id created_at updated_at'.split(' '),\n    isReservedColumn: function(c) {\n      return _(cdb.admin.Row.RESERVED_COLUMNS).indexOf(c) !== -1;\n    }\n  });\n\n})();\n","cdb.admin.CartoDBTableData = cdb.ui.common.TableData.extend({\n  _ADDED_ROW_TEXT: 'Row added correctly',\n  _ADDING_ROW_TEXT: 'Adding a new row',\n  _GEOMETRY_UPDATED: 'Table geometry updated',\n\n  model: cdb.admin.Row,\n\n  initialize: function(models, options) {\n    var self = this;\n    this.table = options ? options.table: null;\n    this.model.prototype.idAttribute = 'cartodb_id';\n    this.initOptions();\n    this.filter = null;\n    this._fetching = false;\n    this.pages = [];\n    this.lastPage = false;\n    this.bind('newPage', this.newPage, this);\n    this.bind('reset', function() {\n      var pages = Math.floor(this.size()/this.options.get('rows_per_page'))\n      this.pages = [];\n\n      for(var i = 0; i < pages; ++i) {\n        this.pages.push(i);\n      }\n    }, this);\n\n    if(this.table) {\n      this.bind('add change:the_geom', function(row) {\n        var gt = this.table.get('geometry_types')\n        if(gt && gt.length > 0) return;\n        if(row.get('the_geom')) {\n          // we set it to silent because a change in geometry_types\n          // raises rendering and column feching\n          this.table.addGeomColumnType(row.getGeomType());\n        }\n      }, this);\n    }\n    this.elder('initialize');\n  },\n\n  initOptions: function() {\n    var self = this;\n    this.options = new cdb.core.Model({\n      rows_per_page:40,\n      page: 0,\n      sort_order: 'asc',\n      order_by: 'cartodb_id',\n      filter_column: '',\n      filter_value: ''\n    });\n    this.options.bind('change', function() {\n      if(self._fetching) {\n        return;\n      }\n      self._fetching = true;\n      opt = {};\n      var previous = this.options.previous('page');\n\n      if(this.options.hasChanged('page')) {\n        opt.add = true;\n        opt.changingPage = true;\n        // if user is going backwards insert new rows at the top\n        if(previous > this.options.get('page')) {\n          opt.at = 0;\n        }\n      } else {\n        if(this.options.hasChanged('mode')) {\n          this.options.set({\n            'page': 0\n          }, { silent: true });\n        }\n      }\n\n      opt.success = function(_coll, resp) {\n        self.trigger('loaded');\n        if(resp.rows && resp.rows.length !== 0) {\n          if(opt.changingPage) {\n            self.trigger('newPage', self.options.get('page'), opt.at === 0? 'up': 'down');\n          }\n        } else {\n          // no data so do not change the page\n          self.options.set({page: previous});//, { silent: true });\n        }\n        self.trigger('endLoadingRows', self.options.get('page'), opt.at === 0? 'up': 'down');\n        self._fetching = false;\n      };\n\n      opt.error = function() {\n        cdb.log.error(\"there was some problem fetching rows\");\n        self.trigger('endLoadingRows');\n        self._fetching = false;\n      };\n\n      self.trigger('loadingRows', opt.at === 0 ? 'up': 'down');\n      this.fetch(opt);\n\n    }, this);\n  },\n\n  parse: function(d) {\n    // when the query modifies the data modified flag is true\n    // TODO: change this when SQL API was able to say if a\n    // query modify some data\n    // HACK, it will fail if using returning sql statement\n    this.modify_rows = d.rows.length === 0 && _.size(d.fields) === 0;\n    this.affected_rows = d.affected_rows;\n    this.lastPage = false;\n    if(d.rows.length < this.options.get('rows_per_page')) {\n      this.lastPage = true;\n    }\n    return d.rows;\n  },\n\n  // given fields array as they come from SQL create a map name -> type\n  _schemaFromQueryFields: function(fields) {\n    var sc = {};\n    for(k in fields) {\n      sc[k] = fields[k].type;\n    }\n    return sc;\n  },\n\n  _createUrlOptions: function(filter) {\n    var attr;\n    if (filter) {\n      var a = {}\n      for (var k in this.options.attributes) {\n        if (filter(k)) {\n          a[k] = this.options.attributes[k];\n        }\n      }\n      attr = _(a);\n    } else {\n      attr = _(this.options.attributes);\n    }\n    var params = attr.map(function(v, k) {\n      return k + \"=\" + encodeURIComponent(v);\n    }).join('&');\n    params += \"&api_key=\" + cdb.config.get('api_key');\n    return params;\n  },\n\n  _geometryColumnSQL: function(c) {\n      return [\n        \"CASE\",\n        \"WHEN GeometryType(\" + c + \") = 'POINT' THEN\",\n          \"ST_AsGeoJSON(\" + c + \",8)\",\n        \"WHEN (\" + c + \" IS NULL) THEN\",\n          \"NULL\",\n        \"ELSE\",\n          \"GeometryType(\" + c + \")\",\n        \"END \" + c\n      ].join(' ');\n  },\n\n  // return wrapped SQL removing the_geom and the_geom_webmercator\n  // to avoid fetching those columns.\n  // So for a sql like\n  // select * from table the returned value is\n  // select column1, column2, column3... from table\n  wrappedSQL: function(schema, exclude, fetchGeometry) {\n    var self = this;\n    exclude = exclude || ['the_geom_webmercator'];\n    schema = _.clone(schema);\n\n    var select_columns = _.chain(schema).omit(exclude).map(function(v, k) {\n      if (v === 'geometry') {\n        if(fetchGeometry) {\n          return \"st_astext(\\\"\" + k + \"\\\") \" + \"as \" + k\n        }\n        return self._geometryColumnSQL(k);\n      }\n      return '\"' + k + '\"';\n    }).value();\n\n    select_columns = select_columns.join(',');\n\n    var mode = this.options.get('sort_order') === 'desc' ? 'desc': 'asc';\n\n    var q = \"select \" + select_columns + \" from (\" + this.getSQL() + \") __wrapped\";\n    var order_by = this.options.get('order_by');\n    if (order_by && order_by.length > 0) {\n      q += \" order by \" + order_by + \" \" + mode;\n    }\n    return q;\n\n  },\n\n  url: function() {\n    return this.sqlApiUrl();\n  },\n\n  /**\n  * we need to override sync to avoid the sql request to be sent by GET.\n  * For security reasons, we need them to be send as a PUT request.\n  * @method sync\n  * @param method {'save' || 'read' || 'delete' || 'create'}\n  * @param model {Object}\n  * @param options {Object}\n  */\n  sync: function(method, model, options) {\n    if(!options) { options = {}; }\n    options.data = this._createUrlOptions(function(d) {\n      return d !== 'sql';\n    });\n\n    if (cdb.admin.CartoDBTableMetadata.alterTableData(this.options.get('sql') || '')) {\n      options.data += \"&q=\" + encodeURIComponent(this.options.get('sql'));\n      options.type = 'POST';\n    } else {\n      // when a geometry can be lazy fetched, don't fetch it\n      var fetchGeometry = 'cartodb_id' in this.query_schema;\n      options.data += \"&q=\" + encodeURIComponent(this.wrappedSQL(this.query_schema, [], !fetchGeometry));\n\n      if (options.data.length > 2048) {\n        options.type = 'POST';\n      }\n    }\n\n    return Backbone.sync.call(this, method, this, options);\n  },\n\n  sqlApiUrl: function() {\n    return cdb.config.getSqlApiUrl();\n  },\n\n  setOptions: function(opt) {\n    this.options.set(opt);\n  },\n\n  // Refresh all table data\n  refresh: function() {\n    this.fetch();\n  },\n\n  isFetchingPage: function() {\n    return this._fetching;\n  },\n\n  loadPageAtTop: function() {\n\n    if(!this._fetching) {\n      var first = this.pages[0];\n\n      if(first > 0) {\n        this.options.set('page', first - 1);\n      }\n    }\n  },\n\n  loadPageAtBottom: function() {\n    if(!this._fetching) {\n      var last = this.pages[this.pages.length - 1];\n\n      if(!this.lastPage) {\n        this.options.set('page', last + 1);\n      }\n    }\n  },\n\n  /**\n   * called when a new page is loaded\n   * removes the models to max\n   */\n  newPage: function(currentPage, direction) {\n    if(this.pages.indexOf(currentPage) < 0) {\n      this.pages.push(currentPage);\n    };\n     this.pages.sort(function(a, b) {\n      return Number(a) > Number(b);\n     });\n     // remove blocks if there are more rows than allowed\n     var rowspp = this.options.get('rows_per_page');\n     var max_items = rowspp*4;\n     if(this.size() > max_items) {\n       if(direction == 'up') {\n         // remove page from the bottom (the user is going up)\n         this.pages.pop();\n         this.remove(this.models.slice(max_items, this.size()));\n       } else {\n         // remove page from the top (the user is going down)\n         this.pages.shift();\n         this.remove(this.models.slice(0, rowspp));\n       }\n     }\n  },\n\n  /*setPage: function(p) {\n    if(!this._fetching && p >= 0) {\n      this.setOptions({page: p});\n    }\n  },\n\n  getPage: function(p) {\n    return this.options.get('page');\n  },*/\n  addRow: function(opts) {\n    var self = this;\n    this.table.notice(self._ADDING_ROW_TEXT, 'load', 0)\n    var self = this;\n    opts = opts || {};\n    _.extend(opts, {\n      wait: true,\n      success: function() {\n        self.table.notice(self._ADDED_ROW_TEXT)\n      },\n      error: function(e, resp) {\n        //TODO: notice user\n        self.table.error(self._ADDING_ROW_TEXT, resp);\n      }\n    });\n    return this.create(null, opts);\n  },\n\n  /**\n   * creates a new row model in local, it is NOT serialized to the server\n   */\n  newRow: function(attrs) {\n    r = new cdb.admin.Row(attrs);\n    r.table = this.table;\n    r.bind('saved', function _saved() {\n      if(r.table.data().length == 0) {\n        r.table.data().fetch();\n        r.unbind('saved', _saved, r.table);\n      }\n    }, r.table);\n    return r;\n  },\n\n  /**\n   * return a model row\n   */\n  getRow: function(id, options) {\n    options = options || {};\n    var r = this.get(id);\n    if(!r) {\n      r = new cdb.admin.Row({cartodb_id: id});\n    }\n    if(!options.no_add) {\n      this.table._data.add(r);\n    }\n    r.table = this.table;\n    return r;\n  },\n\n  getRowAt: function(index) {\n    var r = this.at(index);\n    r.table = this.table;\n    return r;\n  },\n\n  deleteRow: function(row_id) {\n  },\n\n  isReadOnly: function() {\n    return false;\n  },\n\n  quartiles: function(nslots, column, callback, error) {\n    var tmpl = _.template('select quartile, max(<%= column %>) as maxamount from (select <%= column %>, ntile(<%= slots %>) over (order by <%= column %>) as quartile from (<%= sql %>) _table_sql where <%= column %> is not null) x group by quartile order by quartile');\n    this._sqlQuery(tmpl({\n      slots: nslots,\n      sql: this.getSQL(),\n      column: column\n    }),\n    function(data) {\n      callback(_(data.rows).pluck('maxamount'));\n    },\n    error);\n  },\n\n  equalInterval: function(nslots, column, callback, error) {\n    var tmpl = _.template(' \\\n      with params as (select min(a), max(a) from ( select <%= column %> as a from (<%= sql %>) _table_sql where <%= column %> is not null ) as foo ) \\\n      select (max-min)/<%= slots %> as s, min, max from params'\n    );\n    this._sqlQuery(tmpl({\n      slots: nslots,\n      sql: this.getSQL(),\n      column: column\n    }),\n    function(data) {\n      var min = data.rows[0].min;\n      var max = data.rows[0].max;\n      var range = data.rows[0].s;\n      var values = [];\n\n      for (var i = 1, l = nslots; i < l; i++) {\n        values.push((range*i) + min);\n      }\n\n      // Add last value\n      values.push(max);\n      // Callback\n      callback(values);\n    },\n    error);\n  },\n\n  _quantificationMethod: function(functionName, nslots, column, distinct, callback, error) {\n    var tmpl = _.template('select unnest(<%= functionName %>(array_agg(<%= simplify_fn %>((<%= column %>::numeric))), <%= slots %>)) as buckets from (<%= sql %>) _table_sql where <%= column %> is not null');\n    this._sqlQuery(tmpl({\n      slots: nslots,\n      sql: this.getSQL(),\n      column: column,\n      functionName: functionName,\n      simplify_fn: 'distinct'\n    }),\n    function(data) {\n      callback(_(data.rows).pluck('buckets'));\n    },\n    error);\n  },\n\n  discreteHistogram: function(nbuckets, column, callback, error) {\n\n    var query = 'SELECT DISTINCT(<%= column %>) AS bucket, count(*) AS value FROM (<%= sql %>) _table_sql GROUP BY <%= column %> ORDER BY value DESC LIMIT <%= nbuckets %> + 1';\n\n    var sql = _.template( query, {\n      column: column,\n      nbuckets: nbuckets,\n      sql: this.getSQL(),\n    });\n\n    this._sqlQuery(sql, function(data) {\n\n      var count = data.rows.length;\n      var reached_limit = false;\n\n      if (count > nbuckets) {\n        data.rows = data.rows.slice(0, nbuckets);\n        reached_limit = true;\n      }\n\n      callback({ rows: data.rows, reached_limit: reached_limit });\n\n    });\n\n  },\n\n  date_histogram: function(nbuckets, column, callback, error) {\n\n    column = \"EXTRACT(EPOCH FROM \" + column + \"::TIMESTAMP WITH TIME ZONE )\";\n\n    var tmpl = _.template(\n    'with bounds as ( ' +\n     'SELECT  ' +\n      'current_timestamp as tz, ' +\n      'min(<%= column %>) as lower,  ' +\n      'max(<%= column %>) as upper,  ' +\n      '(max(<%= column %>) - min(<%= column %>)) as span,  ' +\n      'CASE WHEN ABS((max(<%= column %>) - min(<%= column %>))/<%= nbuckets %>) <= 0 THEN 1 ELSE GREATEST(1.0, pow(10,ceil(log((max(<%= column %>) - min(<%= column %>))/<%= nbuckets %>)))) END as bucket_size ' +\n      'FROM  (<%= sql %>) _table_sql ' +\n    ')  ' +\n    'select array_agg(v) val, array_agg(bucket) buckets, tz, bounds.upper, bounds.lower, bounds.span, bounds.bucket_size from ' +\n    '( ' +\n    'select  ' +\n      'count(<%= column %>) as v,   ' +\n      'round((<%= column %> - bounds.lower)/bounds.bucket_size) as bucket  ' +\n       'from (<%= sql %>) _table_sql, bounds  ' +\n       'where <%= column %> is not null ' +\n       'group by bucket order by bucket ' +\n    ') a, bounds ' +\n     'group by ' +\n    'bounds.upper, bounds.lower, bounds.span, bounds.bucket_size, bounds.tz ');\n\n    // transform array_agg from postgres to a js array\n    function agg_array(a) {\n      return a.map(function(v) { return parseFloat(v) });\n    }\n\n    this._sqlQuery(tmpl({\n      nbuckets: nbuckets,\n      sql: this.getSQL(),\n      column: column\n    }),\n\n    function(data) {\n\n      if (!data.rows || data.rows.length === 0) {\n        callback(null, null);\n        return;\n      }\n\n      var data     = data.rows[0];\n      data.val     = agg_array(data.val);\n      data.buckets = agg_array(data.buckets);\n\n      var hist   = [];\n      var bounds = {};\n\n      // create a sorted array and normalize\n      var upper = data.upper;\n      var lower = data.lower;\n      var span  = data.span;\n      var tz    = data.tz;\n      var bucket_size = data.bucket_size\n      var max, min;\n\n      max = data.val[0];\n\n      for (var r = 0; r < data.buckets.length; ++r) {\n        var b = data.buckets[r];\n        var v = hist[b] = data.val[r];\n        max = Math.max(max, v);\n      }\n\n      //var maxBucket = _.max(data.buckets)\n      for (var i = 0; i < hist.length; ++i) {\n        if (hist[i] === undefined) {\n          hist[i] = 0;\n        } else {\n          hist[i] = hist[i]/max;\n        }\n      }\n\n      bounds.upper       = parseFloat(upper);\n      bounds.lower       = parseFloat(lower);\n      bounds.bucket_size = parseFloat(bucket_size)\n      bounds.tz          = tz;\n\n      callback(hist, bounds);\n\n    },\n\n    error);\n  },\n\n  histogram: function(nbuckets, column, callback, error) {\n\n    var tmpl = _.template(\n    'with bounds as ( ' +\n     'SELECT  ' +\n      'min(<%= column %>) as lower,  ' +\n      'max(<%= column %>) as upper,  ' +\n      '(max(<%= column %>) - min(<%= column %>)) as span,  ' +\n      'CASE WHEN ABS((max(<%= column %>) - min(<%= column %>))/<%= nbuckets %>) <= 0 THEN 1 ELSE GREATEST(1.0, pow(10,ceil(log((max(<%= column %>) - min(<%= column %>))/<%= nbuckets %>)))) END as bucket_size ' +\n      'FROM  (<%= sql %>) _table_sql  ' +\n    ')  ' +\n    'select array_agg(v) val, array_agg(bucket) buckets, bounds.upper, bounds.lower, bounds.span, bounds.bucket_size from ' +\n    '( ' +\n    'select  ' +\n      'count(<%= column %>) as v,   ' +\n      'round((<%= column %> - bounds.lower)/bounds.bucket_size) as bucket  ' +\n       'from (<%= sql %>) _table_sql, bounds  ' +\n       'where <%= column %> is not null ' +\n       'group by bucket order by bucket ' +\n    ') a, bounds ' +\n     'group by ' +\n    'bounds.upper, ' +\n    'bounds.lower, bounds.span, bounds.bucket_size ');\n\n    // transform array_agg from postgres to a js array\n    function agg_array(a) {\n      return a.map(function(v) { return parseFloat(v) });\n      //return JSON.parse(a.replace('{', '[').replace('}', ']'))\n    }\n\n    this._sqlQuery(tmpl({\n      nbuckets: nbuckets,\n      sql: this.getSQL(),\n      column: column\n    }),\n\n    function(data) {\n\n      if(!data.rows || data.rows.length === 0) {\n        callback(null, null);\n        return;\n      }\n\n      var data = data.rows[0];\n\n      data.val = agg_array(data.val);\n      data.buckets = agg_array(data.buckets);\n\n      var hist = [];\n      var bounds = {};\n\n      // create a sorted array and normalize\n      var upper = data.upper;\n      var lower = data.lower;\n      var span = data.span;\n      var bucket_size = data.bucket_size\n      var max, min;\n\n      max = data.val[0];\n\n      for(var r = 0; r < data.buckets.length; ++r) {\n        var b = data.buckets[r];\n        var v = hist[b] = data.val[r];\n        max = Math.max(max, v);\n      }\n\n\n      //var maxBucket = _.max(data.buckets)\n      for (var i = 0; i < hist.length; ++i) {\n        if (hist[i] === undefined) {\n          hist[i] = 0;\n        } else {\n          hist[i] = hist[i]/max;\n        }\n      }\n\n      bounds.upper = parseFloat(upper);\n      bounds.lower = parseFloat(lower);\n      bounds.bucket_size = parseFloat(bucket_size)\n\n      callback(hist, bounds);\n\n    },\n\n    error);\n  },\n\n  jenkBins: function(nslots, column, callback, error) {\n    this._quantificationMethod('CDB_JenksBins', nslots, column, true, callback, error);\n  },\n\n  headTails: function(nslots, column, callback, error) {\n    this._quantificationMethod('CDB_HeadsTailsBins', nslots, column, false, callback, error);\n  },\n\n  quantileBins: function(nslots, column, callback, error) {\n    this._quantificationMethod('CDB_QuantileBins', nslots, column, false, callback, error);\n  },\n\n  categoriesForColumn: function(max_values, column, callback, error) {\n\n    var tmpl = _.template('\\\n      SELECT <%= column %>, count(<%= column %>) FROM (<%= sql %>) _table_sql ' +\n      'GROUP BY <%= column %> ORDER BY count DESC LIMIT <%= max_values %> '\n    );\n\n    this._sqlQuery(tmpl({\n      sql: this.getSQL(),\n      column: column,\n      max_values: max_values + 1\n    }),\n    function(data) {\n      callback({\n        type: data.fields[column].type || 'string',\n        categories: _(data.rows).pluck(column)\n      });\n    },\n    error);\n\n  },\n\n  /**\n   * call callback with the geometry bounds\n   */\n  geometryBounds: function(callback) {\n    var tmpl = _.template('SELECT ST_XMin(ST_Extent(the_geom)) as minx,ST_YMin(ST_Extent(the_geom)) as miny, ST_XMax(ST_Extent(the_geom)) as maxx,ST_YMax(ST_Extent(the_geom)) as maxy from (<%= sql %>) _table_sql');\n    this._sqlQuery(tmpl({\n      sql: this.getSQL()\n      }),\n      function(result) {\n         var coordinates = result.rows[0];\n\n          var lon0 = coordinates.maxx;\n          var lat0 = coordinates.maxy;\n          var lon1 = coordinates.minx;\n          var lat1 = coordinates.miny;\n\n          var minlat = -85.0511;\n          var maxlat =  85.0511;\n          var minlon = -179;\n          var maxlon =  179;\n\n          var clampNum = function(x, min, max) {\n            return x < min ? min : x > max ? max : x;\n          };\n\n          lon0 = clampNum(lon0, minlon, maxlon);\n          lon1 = clampNum(lon1, minlon, maxlon);\n          lat0 = clampNum(lat0, minlat, maxlat);\n          lat1 = clampNum(lat1, minlat, maxlat);\n          callback([ [lat0, lon0], [lat1, lon1]]);\n      }\n    );\n  },\n\n  _sqlQuery: function(sql, callback, error, type) {\n    var s = encodeURIComponent(sql);\n    return $.ajax({\n      type: type || \"POST\",\n      data: \"q=\" + s + \"&api_key=\" + cdb.config.get('api_key'),\n      url: this.url(),\n      success: callback,\n      error: error\n    });\n  },\n\n  getSQL: function() {\n    // use table.id to fetch data because if always contains the real table name\n    return 'select * from ' + cdb.Utils.safeTableNameQuoting(this.table.get('id'));\n  },\n\n  fetch: function(opts) {\n    var self = this;\n    opts = opts || {};\n    if(!opts || !opts.add) {\n      this.options.attributes.page = 0;\n      this.options._previousAttributes.page = 0;\n      this.pages = [];\n    }\n   var error = opts.error;\n    opts.error = function(model, resp) {\n      self.fetched = true;\n      self.trigger('error', model, resp);\n      error && error(model, resp);\n    }\n    var success = opts.success;\n    opts.success = function(model, resp) {\n      self.fetched = true;\n      success && success.apply(self, arguments);\n    }\n    this._fetch(opts);\n  },\n\n  _fetch: function(opts) {\n    var MAX_GET_LENGTH = 1024;\n    var self = this;\n    this.trigger('loading', opts);\n\n    var sql = this.getSQL();\n    // if the query changes the database just send it\n    if (cdb.admin.CartoDBTableMetadata.alterTableData(sql)) {\n      cdb.ui.common.TableData.prototype.fetch.call(self, opts);\n      return;\n    }\n\n    // use get to fetch the schema, probably cached\n    this._sqlQuery(_.template('select * from (<%= sql %>) __wrapped limit 0')({ sql: sql }), function(data) {\n      // get schema\n      self.query_schema = self._schemaFromQueryFields(data.fields);\n      if (!self.table.isInSQLView()) {\n        if ('the_geom' in self.query_schema) {\n          delete self.query_schema['the_geom_webmercator'];\n        }\n      }\n      cdb.ui.common.TableData.prototype.fetch.call(self, opts);\n    }, function (err) {\n      self.trigger('error', self, err);\n    }, sql.length > MAX_GET_LENGTH ? \"POST\" : \"GET\");\n  },\n\n  /**\n   * with the data from the rows fetch create an schema\n   * if the schema from original table is passed the method\n   * set the column types according to it\n   * return an empty list if no data was fetch\n   */\n  schemaFromData: function(originalTableSchema) {\n    // build schema in format [ [field, type] , ...]\n    return cdb.admin.CartoDBTableMetadata.sortSchema(_(this.query_schema).map(function(v, k) {\n      return [k, v];\n    }));\n  },\n\n  geometryTypeFromGeoJSON: function(geojson) {\n    try {\n      var geo = JSON.parse(geojson);\n      return geo.type\n    } catch(e) {\n    }\n  },\n\n  geometryTypeFromWKT: function(wkt) {\n    if(!wkt) return null;\n    var types = cdb.admin.WKT.types;\n    wkt = wkt.toUpperCase();\n    for(var i = 0; i < types.length; ++i) {\n      var t = types[i];\n      if (wkt.indexOf(t) !== -1) {\n        return t;\n      }\n    }\n  },\n\n  geometryTypeFromWKB: function(wkb) {\n    if(!wkb) return null;\n\n    var typeMap = {\n      '0001': 'Point',\n      '0002': 'LineString',\n      '0003': 'Polygon',\n      '0004': 'MultiPoint',\n      '0005': 'MultiLineString',\n      '0006': 'MultiPolygon'\n    };\n\n    var bigendian = wkb[0] === '0' && wkb[1] === '0';\n    var type = wkb.substring(2, 6);\n    if(!bigendian) {\n      // swap '0100' => '0001'\n      type = type[2] + type[3] + type[0] + type[1];\n    }\n    return typeMap[type];\n\n  },\n\n\n  //\n  // guesses from the first row the geometry types involved\n  // returns an empty array where there is no rows\n  // return postgist types, like st_GEOTYPE\n  //\n  getGeometryTypes: function() {\n    var row = null;\n    var i = this.size();\n    while (i-- && !(row && row.get('the_geom'))) {\n      row = this.at(i);\n    }\n    if(!row) return [];\n    var geom = row.get('the_geom') || row.get('the_geom_webmercator');\n    var geoType = this.geometryTypeFromWKB(geom) || this.geometryTypeFromWKT(geom);\n    if(geoType) {\n      return ['ST_' + geoType[0].toUpperCase() + geoType.substring(1).toLowerCase()];\n    }\n    return [];\n  },\n\n});\n","/**\n * contains data for a sql view\n * var s = new cdb.admin.SQLViewData({ sql : \"select....\" });\n * s.fetch();\n */\ncdb.admin.SQLViewData = cdb.admin.CartoDBTableData.extend({\n\n  UNDEFINED_TYPE_COLUMN: 'undefined',\n\n  initialize: function(models, options) {\n    this.model.prototype.idAttribute = 'cartodb_id';\n    // this.elder('initialize', models, options);\n    cdb.admin.CartoDBTableData.prototype.initialize.call(this, models, options);\n\n    this.bind('error', function() {\n      this.reset([]);\n    });\n    //this.initOptions();\n    if(options && options.sql) {\n      this.setSQL(options.sql);\n    }\n  },\n\n\n  _parseSQL: function(sql) {\n    sql = sql.replace(/([^\\\\]){x}/g, '$10').replace(/\\\\{x}/g, '{x}')\n    sql = sql.replace(/([^\\\\]){y}/g, '$10').replace(/\\\\{y}/g, '{y}')\n    sql = sql.replace(/([^\\\\]){z}/g, '$10').replace(/\\\\{z}/g, '{z}')\n\n    // Substitute mapnik tokens\n    // resolution at zoom level 0\n    var res = '156543.03515625';\n    // full webmercator extent\n    var ext = 'ST_MakeEnvelope(-20037508.5,-20037508.5,20037508.5,20037508.5,3857)';\n    sql = sql.replace('!bbox!', ext)\n             .replace('!pixel_width!', res)\n             .replace('!pixel_height!', res);\n\n    return sql\n  },\n\n  sqlSource: function() {\n    return this.options.get('sql_source');\n  },\n\n  setSQL: function(sql, opts) {\n    opts = opts || {}\n    // reset options whiout changing raising a new fetchs\n    this.options.set({\n      page: 0,\n      sort_order: 'asc',\n      order_by: '',\n      filter_column: '',\n      filter_value: '',\n      sql_source: opts.sql_source || null\n    }, { silent: true } );\n\n    var silent = opts.silent;\n    opts.silent = true;\n    this.options.set({ sql : sql ? this._parseSQL(sql): '' }, opts);\n    if(!silent) {\n      this.options.trigger('change:sql', this.options, sql);\n    }\n  },\n\n  getSQL: function() {\n    return this.options.get('sql');\n  },\n\n  url: function() {\n    return this.sqlApiUrl();\n  },\n\n  isReadOnly: function() {\n    return this.sqlSource() !== 'filters';\n  },\n\n  quartiles: function(nslots, column, callback, error) {\n    var tmpl = _.template('SELECT quartile, max(<%= column %>) as maxAmount FROM (SELECT <%= column %>, ntile(<%= slots %>) over (order by <%= column %>) as quartile FROM (<%= sql %>) as _rambo WHERE <%= column %> IS NOT NULL) x GROUP BY quartile ORDER BY quartile');\n    this._sqlQuery(tmpl({\n      slots: nslots,\n      sql: this.options.get('sql'),\n      column: column\n    }),\n    function(data) {\n      callback(_(data.rows).pluck('maxamount'));\n    },\n    error);\n  },\n\n  // returns if the query contains geo data\n  isGeoreferenced: function() {\n    return this.getGeometryTypes().length > 0;\n  }\n\n  /*url: function() {\n    if(!this.sql) {\n      throw \"sql must be provided\";\n    }\n    return '/api/v1/queries?sql=' +\n      encodeURIComponent(this.sql) +\n      '&limit=20&rows_per_page=40&page=0'\n  }*/\n\n});\n","cdb.admin.CartoDBLayer = cdb.geo.CartoDBLayer.extend({\n  MAX_HISTORY: 5,\n  MAX_HISTORY_QUERY: 5,\n  MAX_HISTORY_TILE_STYLE: 5,\n\n  initialize: function() {\n    this.sync = _.debounce(this.sync, 1000);\n    this.error = false;\n\n    this.set('use_server_style', true);\n\n    this.initHistory('query');\n    this.initHistory('tile_style');\n\n    this.table = new cdb.admin.CartoDBTableMetadata({\n      id: this.get('table_name')\n    });\n\n    this.infowindow = new cdb.geo.ui.InfowindowModel({\n      template_name:  'infowindow_light'\n    });\n\n    this.tooltip = new cdb.geo.ui.InfowindowModel({\n      template_name:  'tooltip_light'\n    });\n\n    var wizard_properties = this.get('wizard_properties');\n\n    this.wizard_properties = new cdb.admin.WizardProperties(_.extend({},\n      wizard_properties, {\n        table: this.table,\n        layer: this\n      }\n    ));\n\n    //this.wizard_properties.properties(wizard_properties);\n\n    this.wizard_properties.bind('change:type', this._manageInteractivity, this);\n\n    this.legend = new cdb.geo.ui.LegendModel();\n\n    // Bindings\n    this.bind('change:table_name', function() {\n      this.table.set('id', this.get('table_name')).fetch();\n    }, this);\n\n    // schema changes should affect first to infowindow, tooltip\n    // and legend before table\n    this.bindInfowindow(this.infowindow, 'infowindow');\n    this.bindInfowindow(this.tooltip, 'tooltip');\n    this.bindLegend(this.legend);\n    this.bindTable(this.table);\n\n    this.tooltip.bind('change:fields', this._manageInteractivity, this);\n\n    if (this.get('table')) {\n      table_attr = this.get('table');\n      delete this.attributes.table;\n      this.table.set(table_attr);\n    }\n    if (!this.isTableLoaded()) {\n      this.table.fetch();\n    }\n  },\n\n  isTableLoaded: function() {\n    return this.table.get('id') && this.table.get('privacy');\n  },\n\n  toLayerGroup: function() {\n    var attr = _.clone(this.attributes);\n    attr.layer_definition = {\n      version: '1.0.1',\n      layers: []\n    };\n    if (this.get('visible')) {\n      attr.layer_definition.layers.push(this.getLayerDef());\n    }\n    attr.type = 'layergroup'\n    return attr;\n  },\n\n  getLayerDef: function() {\n    var attr = this.attributes;\n    var query = attr.query || 'select * from ' + cdb.Utils.safeTableNameQuoting(attr.table_name);\n    if(attr.query_wrapper) {\n      query = _.template(attr.query_wrapper)({ sql: query });\n    }\n    return {\n      type: 'cartodb',\n      options: {\n        sql: query,\n        cartocss: this.get('tile_style'),\n        cartocss_version: '2.1.1',\n        interactivity: this.get('interactivity')\n      }\n    }\n  },\n\n  /**\n   * Initializes the history if it doesn't exits and sets the position pointer to 0\n   * @param  {string} property\n   */\n  initHistory: function(property) {\n    if(!this.get(property+'_history')) {\n      this.set(property+'_history', []);\n    }\n    this[property+'_history_position'] = 0;\n    this[property+'_storage'] = new cdb.admin.localStorage(property+'_storage_'+this.get('table_name'));\n  },\n  /**\n   * Add a value to the property history if it's not the same than the last one\n   * @param {string} property\n   * @param {string} value\n   */\n  addToHistory: function(property, value) {\n    if(value != this.get(property+'_history')[this.get(property+'_history').length - 1]) {\n      this.get(property+'_history').push(value);\n      this.trimHistory(property);\n      this[property+'_history_position'] = this.get(property+'_history').length - 1;\n    }\n  },\n  /**\n   * Trim the history array to make sure its length isn't over MAX_HISTORY\n   * @param  {String} property [description]\n   */\n  trimHistory: function(property) {\n    var limit = this['MAX_HISTORY_'+property.toUpperCase()] ?\n      this['MAX_HISTORY_'+property.toUpperCase()] :\n      this.MAX_HISTORY;\n    while(this.get(property+'_history').length > limit) {\n      var removedValue = this.get(property+'_history').splice(0,1);\n      this[property+'_storage'].add(removedValue[0]);\n    }\n  },\n  /**\n   * Moves the history position pointer n positions and notify that the property needs to be refreshed on views\n   * @param  {String} property\n   * @param  {Integer} n\n   */\n  moveHistoryPosition: function(property, n) {\n      var newPosition = this[property+'_history_position'] + n;\n    if(newPosition >= 0 && newPosition < this.get(property+'_history').length) {\n      this[property+'_history_position'] = newPosition;\n    } else {\n      if(newPosition < 0 && Math.abs(newPosition) <= this[property+'_storage'].get().length) {\n        this[property+'_history_position'] = newPosition;\n      }\n    }\n  },\n  /**\n   * returns the value saved on the position of the current _history_position, either from memory of from localStorage\n   * @param  {String} property\n   * @return {String}\n   */\n  getCurrentHistoryPosition: function(property) {\n    var currentPosition = this[property+'_history_position'];\n    if(this[property+'_history_position'] >= 0) {\n      return this.get(property+'_history')[currentPosition];\n    } else {\n      if(Math.abs(currentPosition) <= this[property+'_storage'].get().length) {\n\n        return this[property+'_storage'].get(this[property+'_storage'].get().length - Math.abs(currentPosition));\n      } else {\n        return this.get(property+'_history')[0]\n      }\n    }\n\n  },\n  /**\n   * Advances by one the history_position and returns the value saved on that pos\n   * @param  {String} property\n   * @return {String}\n   */\n  redoHistory: function(property) {\n    this.moveHistoryPosition(property, 1);\n    return this.getCurrentHistoryPosition(property);\n  },\n  /**\n   * Reduces by one the history_position and returns the value saved on that pos\n   * @param  {String} property\n   * @return {String}\n   */\n  undoHistory: function(property) {\n    var h = this.getCurrentHistoryPosition(property);\n    this.moveHistoryPosition(property, -1);\n    return h;\n  },\n\n  isHistoryAtLastPosition: function(property) {\n    if(this.get(property+'_history').length === 0) {\n      return true;\n    }\n    return ((this.get(property+'_history').length-1) == this[property+'_history_position']);\n  },\n\n  isHistoryAtFirstPosition: function(property) {\n    if(this.get(property+'_history').length === 0) {\n      return true;\n    }\n    var stored = this[property+'_storage'].get();\n    if(stored && stored.length === 0) {\n      if(this[property+'_history_position'] === 0) {\n        return true;\n      }\n    } else {\n      var storedSize = stored ? 1*stored.length : 0;\n      var minimumPos = -1* storedSize;\n      return (minimumPos == this[property+'_history_position']);\n    }\n    return false;\n  },\n\n  clone: function() {\n    var attr = _.clone(this.attributes);\n    delete attr.id;\n    attr.table = this.table.toJSON();\n    return new cdb.admin.CartoDBLayer(attr);\n  },\n\n  toJSON: function() {\n    var c = _.clone(this.attributes);\n    // remove api key\n    if(c.extra_params) {\n      c.extra_params = _.clone(this.attributes.extra_params);\n      if(c.extra_params.api_key) {\n        delete c.extra_params.api_key;\n      }\n      if(c.extra_params.map_key) {\n        delete c.extra_params.map_key;\n      }\n    }\n\n    delete c.infowindow;\n    delete c.tooltip;\n    c.wizard_properties = this.wizard_properties.toJSON();\n    c.legend = this.legend.toJSON();\n    var d = {\n      // for some reason backend does not accept cartodb as layer type\n      kind: c.type.toLowerCase() === 'cartodb' ? 'carto': c.type,\n      options: c,\n      order: c.order,\n      infowindow: null,\n      tooltip: this.tooltip.toJSON()\n    };\n\n    // Don't send infowindow data if wizard doesn't support it\n    // It will make the tiler fails\n    if (this.wizard_properties.supportsInteractivity()) {\n      d.infowindow = this.infowindow.toJSON();\n    }\n\n    if(c.id !== undefined) {\n      d.id = c.id;\n    }\n    return d;\n  },\n\n  parse: function(data, xhr) {\n    var c = {};\n    // in case this is a response of saving the layer discard\n    // values from the server\n    if (!data || this._saving && !this.isNew()) {\n      return c;\n    }\n\n    // if api_key exist alread, set in params to not lose it\n    if(data.options.extra_params && this.attributes && this.attributes.extra_params) {\n      data.options.extra_params.map_key = this.attributes.extra_params.map_key;\n    }\n\n    var attrs = this.attributes;\n    var wp = attrs && attrs.wizard_properties;\n\n    if(wp && wp.properties && wp.properties.metadata) {\n      if (data.options.wizard_properties && data.options.wizard_properties.properties) {\n        data.options.wizard_properties.properties.metadata = wp.properties.metadata;\n      }\n    }\n\n    if (this.wizard_properties && data.options.wizard_properties) {\n      this.wizard_properties.properties(data.options.wizard_properties);\n    }\n\n    _.extend(c, data.options, {\n      id: data.id,\n      type: data.kind === 'carto' ? 'CartoDB': data.kind,\n      infowindow: data.infowindow,\n      tooltip: data.tooltip,\n      order: data.order\n    });\n\n    return c;\n  },\n\n  sync: function(method, model, options) {\n    if(method != 'read') {\n      options.data =  JSON.stringify(model.toJSON());\n    }\n    options.contentType = 'application/json';\n    options.url = model.url();\n    return Backbone.syncAbort(method, this, options);\n  },\n\n  unbindSQLView: function(sqlView) {\n    this.sqlView.unbind(null, null, this);\n    this.sqlView = null;\n  },\n\n  getCurrentState: function() {\n    if (this.error) {\n      return \"error\";\n    }\n    return \"success\";\n  },\n\n  bindSQLView: function(sqlView) {\n    var self = this;\n    this.sqlView = sqlView;\n    this.sqlView.bind('error', this.errorSQLView, this);\n\n    // on success and no modify rows save the query!\n    this.sqlView.bind('reset', function() {\n      // if the query was cleared while fetchin the data\n      if (!self.table.isInSQLView()) return;\n      self.error = false;\n      if(self.sqlView.modify_rows) {\n        self.set({ query: null });\n        self.invalidate();\n        self.table.useSQLView(null, { force_data_fetch: true });\n        self.trigger('clearSQLView');\n      } else {\n        self.save({\n          query: sqlView.getSQL(),\n          sql_source: sqlView.sqlSource()\n        });\n      }\n    }, this);\n\n    // Set sql view if query was applied\n    var sql = this.get('query');\n    if (sql) {\n      this.applySQLView(sql, { add_to_history: false });\n    } else {\n      this.table.data().fetch();\n    }\n  },\n\n  bindTable: function(table) {\n    this.table = table;\n    var self = this;\n    self.table.bind('change:name', function() {\n      if (self.get('table_name') != self.table.get('name')) {\n        self.fetch({\n          success: function() {\n            self.updateCartoCss(self.table.previous('name'), self.table.get('name'));\n          }\n        });\n      }\n    });\n\n    this.table.bind('change:schema', this._manageInteractivity, this);\n  },\n\n  _manageInteractivity: function() {\n    var interactivity = null;\n    if (this.wizard_properties.supportsInteractivity()) {\n      if(this.table.containsColumn('cartodb_id')) {\n        interactivity = ['cartodb_id'];\n      }\n      var tooltipColumns = this.tooltip.getInteractivity();\n      if (tooltipColumns.length) {\n        interactivity = (interactivity || []).concat(tooltipColumns);\n      }\n      if (interactivity) {\n        interactivity = interactivity.join(',');\n      }\n    }\n    if(this.get('interactivity') !== interactivity) {\n      if (this.isNew()) {\n        this.set({ interactivity: interactivity });\n      } else {\n        this.save({ interactivity: interactivity });\n      }\n    }\n  },\n\n  /**\n   * Updates the style chaging the table name for a new one\n   * @param  {String} previousName\n   * @param  {String} newName\n   */\n  updateCartoCss: function(previousName, newName) {\n    var tileStyle = this.get('tile_style');\n    if (!tileStyle) return;\n    var replaceRegexp = new RegExp('#'+previousName, 'g');\n    tileStyle = tileStyle.replace(replaceRegexp, '#'+newName);\n    this.save({'tile_style': tileStyle});\n  },\n\n  bindLegend: function(legend) {\n\n    var data = this.get('legend');\n\n    if (data) {\n      this.legend.set(data);\n    }\n\n    this.legend.bind('change:template change:type change:title change:show_title change:items', _.debounce(function() {\n      // call with silent so the layer is no realoded\n      // if some view needs to be changed when the legend is changed it should be\n      // subscribed to the legend model not to dataLayer\n      // (which is only a data container for the legend)\n      if (!this.isNew()) {\n        this.save(null, { silent: true });\n      }\n    }, 250), this);\n\n  },\n\n  bindInfowindow: function(infowindow, attr) {\n    attr = attr || 'infowindow';\n    var infowindowData = this.get(attr);\n    if(infowindowData) {\n      infowindow.set(infowindowData);\n    } else {\n      // assign a position from start\n      var pos = 0;\n      _(this.table.get('schema')).each(function(v) {\n        if(!_.contains(['the_geom', 'created_at', 'updated_at', 'cartodb_id'], v[0])) {\n          infowindow.addField(v[0], pos);\n          ++pos;\n        }\n      });\n    }\n\n    this.table.linkToInfowindow(infowindow);\n\n    var watchedFields = 'change:fields change:template_name change:alternative_names change:template change:disabled change:width change:maxHeight';\n    var deferredSave = _.debounce(function() {\n      // call with silent so the layer is no realoded\n      // if some view needs to be changed when infowindow is changed it should be\n      // subscribed to infowindow model not to dataLayer\n      // (which is only a data container for infowindow)\n\n      // since removeMissingFields changes fields, unbind changes temporally\n      infowindow.unbind(watchedFields, deferredSave, this);\n      // assert all the fields are where they should\n      infowindow.removeMissingFields(this.table.columnNames());\n      infowindow.bind(watchedFields, deferredSave, this);\n      if (!this.isNew()) {\n        this.save(null, { silent: true });\n      }\n    }, 250);\n\n    infowindow.bind(watchedFields, deferredSave, this);\n  },\n\n  resetQuery: function() {\n    if (this.get('query')) {\n      this.save({\n        query: undefined,\n        sql_source: null\n      });\n    }\n  },\n\n  errorSQLView: function(m, e) {\n    this.save({ query: null }, { silent: true });\n    this.trigger('errorSQLView', e);\n    this.error = true;\n  },\n\n  clearSQLView: function() {\n    // before reset query we should remove the view\n    this.table.useSQLView(null);\n    this.addToHistory(\"query\", 'SELECT * FROM ' + cdb.Utils.safeTableNameQuoting(this.table.get('name')));\n    // undo history to move backwards the history pointer\n    this.undoHistory(\"query\");\n    this.resetQuery();\n    this.trigger('clearSQLView');\n  },\n\n  applySQLView: function(sql, options) {\n    options = options || {\n      add_to_history: true,\n      sql_source: null\n    };\n    // if the sql change the table data do not save in the data layer\n    // pass though and launch the query directly to the table\n    this.table.useSQLView(this.sqlView);\n    this.sqlView.setSQL(sql, {\n      silent: true,\n      sql_source: options.sql_source || null\n    });\n    if(options.add_to_history) {\n      this.addToHistory(\"query\", sql);\n    }\n    // if there is some error the query is rollbacked\n    this.sqlView.fetch();\n    this.trigger('applySQLView', sql);\n  },\n\n  moveToFront: function(opts) {\n    var layers = this.collection;\n    var dataLayers = layers.getDataLayers();\n\n    layers.moveLayer(this, { to: dataLayers.length });\n  }\n}, {\n\n  createDefaultLayerForTable: function(tableName, userName) {\n    return new cdb.admin.CartoDBLayer({\n      user_name: userName,\n      table_name: tableName,\n      tile_style: \"#\" + tableName + cdb.admin.CartoStyles.DEFAULT_GEOMETRY_STYLE,\n      style_version: '2.1.0',\n      visible: true,\n      interactivity: 'cartodb_id',\n      maps_api_template: cdb.config.get('maps_api_template'),\n      no_cdn: true\n    });\n  }\n\n});\n","\n/*\n * extend infowindow to serialize only the data we need\n */\n_.extend(cdb.geo.ui.InfowindowModel.prototype, {\n  toJSON: function() {\n    var fields = [];\n\n    if (!this.attributes.disabled) {\n      fields = _.clone(this.attributes.fields);\n    }\n\n    return {\n      fields:             fields,\n      template_name:      this.attributes.template_name,\n      template:           this.attributes.template,\n      alternative_names:  this.attributes.alternative_names,\n      old_fields:         this.attributes.old_fields,\n      old_template_name:  this.attributes.old_template_name,\n      width:              this.attributes.width,\n      maxHeight:          this.attributes.maxHeight\n    };\n  },\n\n  removeMissingFields: function(columns) {\n    var columnsSet = {}\n    for(var i = 0; i < columns.length; ++i) {\n      var c = columns[i];\n      columnsSet[c] = true;\n    }\n    var fields = this.get('fields');\n    if (!fields) {\n      return;\n    }\n    for(var i = 0; i < fields.length; ++i) {\n      var name = fields[i].name;\n      if (! (name in columnsSet)) {\n        this.removeField(name);\n      }\n    }\n  },\n\n  addMissingFields: function(columns) {\n    var fieldsSet = {};\n    var fields = this.get('fields');\n\n    for(var i = 0; i < fields.length; ++i) {\n      var c = fields[i].name;\n      fieldsSet[c] = true;\n    }\n\n    for(var i = 0; i < columns.length; ++i) {\n      var name = columns[i];\n      if (! (name in fieldsSet)) {\n        this.addField(name);\n      }\n    }\n  },\n\n  mergeFields: function(columns) {\n    // remove fields that no longer exist\n    this.removeMissingFields(columns);\n    // add new fields that exists\n    this.addMissingFields(columns);\n  },\n\n  // return the list of columns involved in the infowindow\n  // ready to set interactivity in a cartodb layer\n  getInteractivity: function() {\n    var fields = this.get('fields') || [];\n    var columns = [];\n    for(var i = 0; i < fields.length; ++i) {\n      columns.push(fields[i].name);\n    }\n    return columns;\n  }\n});\n\n/**\n * extend gmaps layer for data serialization\n */\ncdb.admin.GMapsBaseLayer = cdb.geo.GMapsBaseLayer.extend({\n\n  clone: function() {\n    return new cdb.admin.GMapsBaseLayer(_.clone(this.attributes));\n  },\n\n  parse: function(data) {\n    var c = {};\n    _.extend(c, data.options, {\n      id: data.id,\n      type: 'GMapsBase',\n      order: data.order,\n      parent_id: data.parent_id\n    });\n    return c;\n  },\n\n  toJSON: function() {\n    var c = _.clone(this.attributes);\n\n    var d = {\n      kind:  'gmapsbase',\n      options: c,\n      order: c.order\n    };\n\n    if(c.id !== undefined) {\n      d.id = c.id;\n    }\n    return d;\n  }\n});\n\n/**\n * extend wms layer for data serialization\n */\ncdb.admin.WMSLayer = cdb.geo.WMSLayer.extend({\n\n  clone: function() {\n    return new cdb.admin.WMSLayer(_.clone(this.attributes));\n  },\n\n  /*\n  * Create className from the urlTemplate of the basemap\n  */\n  _generateClassName: function(urlTemplate) {\n    if (urlTemplate) {\n      var className = urlTemplate;\n\n      if (className && parseInt(className) && _.isNumber(parseInt(className))) {\n        className = \"w\" + className;\n      }\n\n      return className.replace(/\\s+/g, '').replace(/[^a-zA-Z_0-9 ]/g, \"\").toLowerCase();\n\n    } else return \"\";\n  },\n\n  parse: function(data) {\n\n    var self = this;\n    var c = {};\n\n    _.extend(c, data.options, {\n      id: data.id,\n      className: self._generateClassName(data.options.layers),\n      type: 'WMS',\n      order: data.order,\n      parent_id: data.parent_id\n    });\n\n    return c;\n  },\n\n  toJSON: function() {\n    var c = _.clone(this.attributes);\n\n    var d = {\n      kind:  'wms',\n      options: c,\n      order: c.order\n    };\n\n    if(c.id !== undefined) {\n      d.id = c.id;\n    }\n    return d;\n  }\n\n});\n\n/**\n * extend plain layer for data serialization\n */\ncdb.admin.PlainLayer = cdb.geo.PlainLayer.extend({\n\n  parse: function(data) {\n    var c = {};\n    _.extend(c, data.options, {\n      id: data.id,\n      type: 'Plain',\n      order: data.order,\n      parent_id: data.parent_id\n    });\n    return c;\n  },\n\n  toJSON: function() {\n    var c = _.clone(this.attributes);\n\n    var d = {\n      kind:  'background',\n      options: c,\n      order: c.order\n    };\n\n    if(c.id !== undefined) {\n      d.id = c.id;\n    }\n    return d;\n  }\n});\n\n/**\n * extend tiled layer to adapt serialization\n */\ncdb.admin.TileLayer = cdb.geo.TileLayer.extend({\n\n  clone: function() {\n    return new cdb.admin.TileLayer(_.clone(this.attributes));\n  },\n\n  /*\n  * Create className from the urlTemplate of the basemap\n  */\n  _generateClassName: function(urlTemplate) {\n    if (urlTemplate) {\n      return urlTemplate.replace(/\\s+/g, '').replace(/[^a-zA-Z_0-9 ]/g, \"\").toLowerCase();\n    } else return \"\";\n  },\n\n  parse: function(data) {\n    var self = this;\n    var c = {};\n\n    _.extend(c, data.options, {\n      id: data.id,\n      className: self._generateClassName(data.options.urlTemplate),\n      type: 'Tiled',\n      order: data.order,\n      parent_id: data.parent_id\n    });\n\n    return c;\n  },\n\n  toJSON: function() {\n    var c = _.clone(this.attributes);\n\n    var d = {\n      kind:  'tiled',\n      options: c,\n      order: c.order\n    };\n\n    if(c.id !== undefined) {\n      d.id = c.id;\n    }\n    return d;\n  },\n\n  /**\n   * validateTemplateURL - Validates current urlTemplate of layer.\n   *\n   * @param {Object} callbacks with success and error functions defined to be called depending on validation outcome.\n   */\n  validateTemplateURL: function(callbacks) {\n    var subdomains = ['a', 'b', 'c'];\n    var image = new Image();\n    image.onload = callbacks.success;\n    image.onerror = callbacks.error;\n    image.src = this.get('urlTemplate').replace(/\\{s\\}/g, function() {\n      return subdomains[Math.floor(Math.random() * 3)];\n    })\n      .replace(/\\{x\\}/g, '0')\n      .replace(/\\{y\\}/g, '0')\n      .replace(/\\{z\\}/g, '0');\n  }\n\n}, {\n\n  /**\n   * @param {String} url\n   * @param {Boolean} tms\n   * @return {cdb.admin.TileLayer}\n   */\n  byCustomURL: function(url, tms) {\n    // Minimal test for \"valid URL\" w/o having to complicate it with regex\n    if (url && url.indexOf('/') === -1) throw new TypeError('invalid URL');\n\n    // Only lowercase the placeholder variables, since the URL may contain case-sensitive data (e.g. API keys and such)\n    url = url.replace(/\\{S\\}/g, \"{s}\")\n      .replace(/\\{X\\}/g, \"{x}\")\n      .replace(/\\{Y\\}/g, \"{y}\")\n      .replace(/\\{Z\\}/g, \"{z}\");\n\n    var layer = new cdb.admin.TileLayer({\n      urlTemplate: url,\n      attribution: null,\n      maxZoom: 21,\n      minZoom: 0,\n      name: '',\n      tms: tms\n    });\n    layer.set('className', layer._generateClassName(url));\n\n    return layer;\n  }\n});\n\ncdb.admin.TorqueLayer = cdb.admin.CartoDBLayer.extend({\n\n  /*parse: function(data, options) {\n    var c = cdb.admin.CartoDBLayer.prototype.parse.call(this, data, options);\n    c.type = 'torque';\n    return c;\n  }*/\n\n});\n\ncdb.admin.Layers = cdb.geo.Layers.extend({\n\n  _DATA_LAYERS: ['CartoDB', 'torque'],\n\n  // the model class works here like a factory\n  // depending on the kind of layer creates a\n  // type of layer or other\n  model: function(attrs, options) {\n    var typeClass = {\n      'Tiled': cdb.admin.TileLayer,\n      'CartoDB': cdb.admin.CartoDBLayer,\n      'Plain': cdb.admin.PlainLayer,\n      'GMapsBase': cdb.admin.GMapsBaseLayer,\n      'WMS': cdb.admin.WMSLayer,\n      'torque': cdb.admin.CartoDBLayer\n    };\n    var typeMap = {\n      'Layer::Tiled': 'Tiled',\n      'Layer::Carto': 'CartoDB',\n      'Layer::Background': 'Plain',\n      'tiled': 'Tiled',\n      'carto': 'CartoDB',\n      'wms': 'WMS',\n      'background': 'Plain',\n      'gmapsbase': 'GMapsBase',\n      'torque': 'torque'\n    };\n\n    return new typeClass[typeMap[attrs.kind]](attrs, options);\n  },\n\n  initialize: function() {\n    this.bind('change:order', function() {\n      if (!this._isSorted()) this.sort();\n    });\n    cdb.geo.Layers.prototype.initialize.call(this);\n  },\n\n  add: function(models, options) {\n    return Backbone.Collection.prototype.add.apply(this, arguments);\n  },\n\n  getTorqueLayers: function() {\n    return this.where({ type: 'torque' });\n  },\n\n  getTiledLayers: function() {\n    return this.where({ type: 'Tiled' });\n  },\n\n  // given layer model returns the index inside the layer definition\n  getLayerDefIndex: function(layer) {\n    var cartodbLayers = this.getLayersByType('CartoDB');\n    if(!cartodbLayers.length) return -1;\n    for(var i = 0, c = 0; i < cartodbLayers.length; ++i) {\n      if(cartodbLayers[i].get('visible')) {\n        if(cartodbLayers[i].cid === layer.cid) {\n          return c;\n        }\n        ++c;\n      }\n    }\n    return -1;\n  },\n\n  getLayerDef: function() {\n    var cartodbLayers = this.getLayersByType('CartoDB');\n    var layerDef = {\n      version:'1.0.1',\n      layers: []\n    };\n\n    for(var i = 0; i < cartodbLayers.length; ++i) {\n      if(cartodbLayers[i].get('visible')) {\n        layerDef.layers.push(cartodbLayers[i].getLayerDef());\n      }\n    }\n    return layerDef;\n  },\n\n  /** return non-base layers */\n  getDataLayers: function() {\n    var self = this;\n    return this.filter(function(lyr) {\n      return _.contains(self._DATA_LAYERS, lyr.get('type'));\n    });\n  },\n\n  /** without non-base layers */\n  getTotalDataLayers: function() {\n    return this.getDataLayers().length;\n  },\n\n  /** without non-base layers */\n  getTotalDataLegends: function() {\n    var self = this;\n    return this.filter(function(lyr) {\n      return _.contains(self._DATA_LAYERS, lyr.get('type')) &&\n            lyr.get('legend') &&\n            lyr.get('legend').type &&\n            lyr.get('legend').type.toLowerCase() !== \"none\";\n    }).length;\n  },\n\n  getLayersByType: function(type) {\n    if (!type || type === '' ) {\n      cdb.log.info(\"a layer type is necessary to get layers\");\n      return 0;\n    }\n\n    return this.filter(function(lyr) {\n      return lyr.get('type') === type;\n    });\n  },\n\n  isLayerOnTopOfDataLayers: function(layer) {\n    var dataLayerOnTop = this.getDataLayers().splice(-1)[0];\n    return dataLayerOnTop.cid === layer.cid;\n  },\n\n  url: function(method) {\n    var version = cdb.config.urlVersion('layer', method);\n    return '/api/' + version + '/maps/' +  this.map.id + '/layers';\n  },\n\n  parse: function(data) {\n    return data.layers;\n  },\n\n  saveLayers: function(opts) {\n    opts = opts || {};\n    this.save(null, opts);\n  },\n\n  save: function(attrs, opts) {\n    Backbone.sync('update', this, opts);\n  },\n\n  toJSON: function(options) {\n    // We can't use the default toJSON because it uses this.map(function(){...})\n    // function within it but we override it using map containing all map stuff there.\n    // And we have to send all layers data within a variable called layers. \n    var array = _.map(this.models, function(model) {\n      return model.toJSON(options);\n    });\n\n    return { layers: array }\n  },\n\n  clone: function(layers) {\n    layers = layers || new cdb.admin.Layers();\n    this.each(function(layer) {\n      if(layer.clone) {\n        var lyr = layer.clone();\n        lyr.unset('id');\n        layers.add(lyr);\n      } else {\n        var attrs = _.clone(layer.attributes);\n        delete attrs.id;\n        layers.add(attrs);\n      }\n    });\n    return layers;\n  },\n\n  _isSorted: function() {\n    var sorted = true;\n\n    var layers = _(this.models).map(function(m) {\n      return { cid: m.cid,  order: m.get('order')}\n    });\n\n    layers.sort(function(a, b) {\n      return a.order - b.order;\n    })\n\n    return _.isEqual(\n      _(layers).map(function(m) { return m.cid; }),\n      _(this.models).map(function(m) { return m.cid; })\n    )\n  },\n\n  moveLayer: function(movingLayer, options) {\n    options = options || {};\n    var newIndex = options.to;\n    var layerAtNewIndex = this.at(newIndex);\n    movingLayer.set('order', layerAtNewIndex.get('order'), { silent: true });\n\n    // Remove and add the layer again at the new position\n    this.remove(movingLayer, { silent: true });\n    this.add(movingLayer, { at: newIndex, silent: true });\n\n    // Update the order of all layers\n    for (var i = 0; i < this.size(); i++) {\n      var layer = this.at(i);\n      layer.set('order', i);\n    }\n\n    this.trigger('reset');\n    this.saveLayers({\n      complete: options.complete,\n      error: function() {\n        throw 'Error saving layers after moving them'\n      }\n    });\n  }\n});\n\n/**\n * this is a specialization of generic map prepared to hold two layers:\n *  - a base layer\n *  - a data layer which contains the table data\n *\n * cartodb only supports one data layer per map so this will change when\n * that changes\n */\n\ncdb.admin.Map = cdb.geo.Map.extend({\n\n  urlRoot: '/api/v1/maps',\n\n  initialize: function() {\n    this.constructor.__super__.initialize.apply(this);\n    this.sync = Backbone.delayedSaveSync(Backbone.syncAbort, 500);\n    this.bind('change:id', this._fetchLayers, this);\n\n    this.layers = new cdb.admin.Layers();\n    this.layers.map = this;\n    this.layers.bind('reset add change', this._layersChanged, this);\n    this.layers.bind('reset add remove change:attribution', this._updateAttributions, this);\n  },\n\n  saveLayers: function(opts) {\n    opts = opts || {};\n    var none = function() {}\n    this.layers.saveLayers({\n      success: opts.success || none,\n      error: opts.error || none\n    });\n  },\n\n  _layersChanged: function() {\n    if(this.layers.size() >= 1) {\n      this._adjustZoomtoLayer(this.layers.at(0));\n      if(this.layers.size() >= 2) {\n        this.set({ dataLayer: this.layers.at(1) });\n      }\n    }\n  },\n\n  // fetch related layers\n  _fetchLayers: function() {\n    this.layers.fetch();\n  },\n\n  /**\n   * link to a table\n   */\n  relatedTo: function(table) {\n    this.table = table;\n    this.table.bind('change:map_id', this._fetchOrCreate, this);\n  },\n\n  parse: function(data) {\n    data.bounding_box_ne = JSON.parse(data.bounding_box_ne);\n    data.bounding_box_sw = JSON.parse(data.bounding_box_sw);\n    data.view_bounds_ne = JSON.parse(data.view_bounds_ne);\n    data.view_bounds_sw = JSON.parse(data.view_bounds_sw);\n    data.center = JSON.parse(data.center);\n    return data;\n  },\n\n  _fetchOrCreate: function() {\n    var self = this;\n    var map_id = this.table.get('map_id');\n    if(!map_id) {\n      this.create();\n    } else {\n      this.set({ id: map_id });\n      this.fetch({\n        error: function() {\n          cdb.log.info(\"creating map for table\");\n          self.create();\n        }\n      });\n    }\n  },\n\n  /**\n   * change base layer and save all the layers to preserve the order\n   */\n  setBaseLayer: function(baseLayer) {\n    this.trigger('savingLayers');\n\n    // Check if the selected base layer is already selected\n    if (this.isBaseLayerAdded(baseLayer)) {\n      this.trigger('savingLayersFinish');\n      return false;\n    }\n\n    var self = this;\n    var newBaseLayer = baseLayer;\n    var currentBaseLayer = this.layers.at(0);\n    var newBaseLayerHasLabels = newBaseLayer.get('labels') && newBaseLayer.get('labels').url;\n\n    // Sets the base layer\n    var options = {\n      success: function() {\n        if (!newBaseLayerHasLabels) {\n          self.trigger('savingLayersFinish');\n        }\n      },\n      error: function() {\n        cdb.log.error(\"error changing the basemap\");\n        self.trigger('savingLayersFinish');\n      }\n    }\n\n    if (currentBaseLayer) {\n      if (currentBaseLayer.get('type') === newBaseLayer.get('type')) {\n        this._updateBaseLayer(currentBaseLayer, newBaseLayer, options);\n      } else {\n        this._replaceBaseLayer(currentBaseLayer, newBaseLayer, options);\n      }\n    } else {\n      this._addBaseLayer(newBaseLayer, options);\n    }\n\n\n    // Adds/updates/removes layer with labels at the top\n    options.success = function() {\n      self.trigger('savingLayersFinish');\n    }\n\n    if (newBaseLayerHasLabels) {\n      if (this._hasLabelsLayer()) {\n        this._updateLabelsLayer(newBaseLayer, options);\n      } else {\n        this._addLabelsLayer(newBaseLayer, options);\n      }\n    } else {\n      if (this._hasLabelsLayer()) {\n        this._destroyLabelsLayer(options);\n      }\n    }\n\n    return newBaseLayer;\n  },\n\n  _updateBaseLayer: function(currentBaseLayer, newBaseLayer, opts) {\n    var newAttributes = _.extend(_.clone(newBaseLayer.attributes), {\n      id: currentBaseLayer.get('id'),\n      order: currentBaseLayer.get('order')\n    });\n    currentBaseLayer.clear({ silent: true });\n    currentBaseLayer.set(newAttributes);\n    currentBaseLayer.save(null, opts);\n  },\n\n  _replaceBaseLayer: function(currentBaseLayer, newBaseLayer, opts) {\n    this.layers.remove(currentBaseLayer);\n    newBaseLayer.set({\n      id: currentBaseLayer.get('id'),\n      order: currentBaseLayer.get('order')\n    });\n    this.layers.add(newBaseLayer, { at: 0 });\n    newBaseLayer.save(null, opts);\n  },\n\n  _addBaseLayer: function(newBaseLayer, opts) {\n    this.layers.add(newBaseLayer, { at: 0 });\n    newBaseLayer.save(null, opts);\n  },\n\n  _hasLabelsLayer: function() {\n    return this.layers.size() > 1 && this.layers.last().get('type') === 'Tiled';\n  },\n\n  _updateLabelsLayer: function(baseLayer, opts) {\n    var labelsLayer = this.layers.last();\n    labelsLayer.set({\n      name: this._labelsLayerNameFromBaseLayer(baseLayer),\n      urlTemplate: baseLayer.get('labels').url,\n      attribution: baseLayer.get('attribution'),\n      minZoom: baseLayer.get('minZoom'),\n      maxZoom: baseLayer.get('maxZoom'),\n      subdomains: baseLayer.get('subdomains')\n    });\n    labelsLayer.save(null, opts);\n  },\n\n  _addLabelsLayer: function(baseLayer, opts) {\n    this.layers.add({\n      name: this._labelsLayerNameFromBaseLayer(baseLayer),\n      urlTemplate: baseLayer.get('labels').url,\n      attribution: baseLayer.get('attribution'),\n      minZoom: baseLayer.get('minZoom'),\n      maxZoom: baseLayer.get('maxZoom'),\n      subdomains: baseLayer.get('subdomains'),\n      kind: \"tiled\"\n    });\n    var labelsLayer = this.layers.last();\n    labelsLayer.save(null, opts);\n  },\n\n  _destroyLabelsLayer: function(opts) {\n    this.layers.last().destroy(opts);\n  },\n\n  _labelsLayerNameFromBaseLayer: function(baseLayer) {\n    return baseLayer.get('name') + \" Labels\";\n  },\n\n  /**\n   * the first version of cartodb contains one single layer\n   * per table with information.\n   */\n  addDataLayer: function(lyr) {\n    this.addLayer(lyr);\n    this.set({ dataLayer: lyr });\n  },\n\n  /**\n   * create a new map. this is a helper to use from javascript command line\n   */\n  create: function() {\n    this.unset('id');\n    this.set({ table_id: this.table.id });\n    this.save();\n  },\n\n  /**\n   * enable save map each time the viewport changes\n   * not working\n   */\n  autoSave: function() {\n    this.bind('change:center', this.save);\n    this.bind('change:zoom', this.save);\n  },\n\n  toJSON: function() {\n    var c = _.clone(this.attributes);\n    // data layer is a helper to work in local\n    delete c.dataLayer;\n    return c;\n  },\n\n  /**\n   * change provider and optionally baselayer\n   */\n  changeProvider: function(provider, baselayer) {\n    var self = this;\n\n    if(baselayer && baselayer.get('id')) {\n      cdb.log.error(\"the baselayer should not be saved in the server\");\n      return;\n    }\n    var _changeBaseLayer = function() {\n      if(baselayer) {\n        self.setBaseLayer(baselayer);\n      }\n    }\n    if(this.get('provider') !== provider) {\n      this.save({ provider: provider }, {\n        success: function() {\n          _changeBaseLayer();\n          self.change();\n        },\n        error: function(e, resp) {\n          self.error(_t('error switching base layer'), resp);\n        },\n        silent: true\n      });\n    } else {\n      _changeBaseLayer();\n    }\n  },\n\n  isProviderGmaps: function() {\n    var provider = this.get(\"provider\");\n    return provider && provider.toLowerCase().indexOf(\"googlemaps\") !== -1\n  },\n\n  clone: function(m) {\n    m = m || new cdb.admin.Map();\n    var attrs = _.clone(this.attributes)\n    delete attrs.id;\n    m.set(attrs);\n\n    // clone lists\n    m.set({\n      center:           _.clone(this.attributes.center),\n      bounding_box_sw:  _.clone(this.attributes.bounding_box_sw),\n      bounding_box_ne:  _.clone(this.attributes.bounding_box_ne),\n      view_bounds_sw:   _.clone(this.attributes.view_bounds_sw),\n      view_bounds_ne:   _.clone(this.attributes.view_bounds_ne),\n      attribution:      _.clone(this.attributes.attribution)\n    });\n\n    // layers\n    this.layers.clone(m.layers);\n    m.layers.map = m;\n\n    return m;\n  },\n\n  notice: function(msg, type, timeout) {\n    this.trigger('notice', msg, type, timeout);\n  },\n\n  error: function(msg, resp) {\n    var err =  resp && JSON.parse(resp.responseText).errors[0];\n    this.trigger('notice', msg + \" \" + err, 'error');\n  },\n\n  addCartodbLayerFromTable: function(tableName, userName, opts) {\n    opts = opts || {};\n    /*var newLayer = cdb.admin.CartoDBLayer.createDefaultLayerForTable(tableName, userName);\n    this.layers.add(newLayer);\n    newLayer.save(null, opts);\n    */\n\n    var self = this;\n    var table = new cdb.admin.CartoDBTableMetadata({ id: tableName });\n    table.fetch({\n      success: function() {\n        // Get the layers for the map\n        var map = new cdb.admin.Map({ id: table.get('map_id') });\n        map.layers.bind('reset', function() {\n          var newLayer = map.layers.at(1).clone();\n          newLayer.unset('order');\n\n          function layerReady() {\n            newLayer.table.unbind('change:geometry_types', layerReady);\n            // when the layer is torque and there are other torque layers in the map, switch it to a\n            // simple visualization layer\n            if (newLayer.wizard_properties.get('type') === 'torque' && self.layers.getTorqueLayers().length) {\n              newLayer.wizard_properties.active('polygon');\n            }\n            // wait: true is used to make sure the layer is not added until confirmed it was added successfully\n            // pass opts for success/error callbacks to be triggered as expected\n            self.layers.create(newLayer, _.extend({ wait: true }, opts));\n          }\n\n          // Wait until the layer is totally ready in order to add it to the layers and save it\n          if (newLayer.isTableLoaded()) {\n            layerReady();\n          } else {\n            newLayer.table.bind('change:geometry_types', layerReady);\n            newLayer.table.data().fetch();\n          }\n        });\n        map.layers.fetch();\n      }\n    });\n  },\n\n  // moves the map to interval [-180, 180]\n  clamp: function() {\n    var fmod = function (a,b) { return Number((a - (Math.floor(a / b) * b)).toPrecision(8)); };\n    var latlng = this.get('center');\n    var lon = latlng[1];\n    if(lon < -180 || lon > 180) {\n      lon = fmod(180 + lon, 360) - 180;\n      this.set('center', [latlng[0], lon]);\n    }\n    return this;\n  }\n});\n","/**\n * Model representing a group.\n * Expected to be used in the context of a groups collection (e.g. cdb.admin.OrganizationGroups),\n * which defines its API endpoint path.\n */\ncdb.admin.Group = cdb.core.Model.extend({\n\n  defaults: {\n    display_name: '' // UI name, as given by\n    // name: '', // internal alphanumeric representation, converted from display_name internally\n    // organization_id: '',\n  },\n\n  initialize: function(attrs) {\n    this.parse(attrs || {}); // handle given attrs in the same way as for .fetch()\n  },\n\n  parse: function(attrs) {\n    this.users = new cdb.admin.GroupUsers(attrs.users, {\n      group: this\n    });\n    return attrs;\n  }\n\n});\n","/**\n * Collection of a User's groups.\n */\ncdb.admin.UserGroups = Backbone.Collection.extend({\n\n  model: cdb.admin.Group,\n\n  initialize: function(models, opts) {\n    this.organization = opts.organization;\n  }\n\n});\n","/**\n * A collection that holds a set of organization groups\n */\ncdb.admin.OrganizationGroups = Backbone.Collection.extend({\n\n  model: cdb.admin.Group,\n\n  url: function(method) {\n    var version = cdb.config.urlVersion('organizationGroups', method);\n    return '/api/' + version + '/organization/' + this.organization.id + '/groups';\n  },\n\n  initialize: function(models, opts) {\n    if (!opts.organization) throw new Error('organization is required');\n    this.organization = opts.organization;\n  },\n\n  parse: function(response) {\n    this.total_entries = response.total_entries;\n    return response.groups;\n  },\n\n  // @return {Object} A instance of cdb.admin.Group. If group wasn't already present a new model with id and collection\n  //  set will be returned, i.e. group.fetch() will be required to get the data or handle the err case (e.g. non-existing)\n  newGroupById: function(id) {\n    var group = this.get(id);\n    if (!group) {\n      group = new this.model({\n        id: id\n      });\n      // collection set on model, but not added to collection yet\n      group.collection = this;\n    }\n    return group;\n  },\n\n  // @return {Number, undefined} may be undefined until a first fetch is done\n  totalCount: function() {\n    return this.total_entries;\n  }\n\n});\n","\n/**\n * the user has some base layers saved\n */\ncdb.admin.UserLayers = cdb.admin.Layers.extend({\n  url: function(method) {\n    var version = cdb.config.urlVersion('layer', method);\n    return '/api/' + version + '/users/' +  this.user.id + '/layers';\n  },\n\n  custom: function() {\n    return this.where({ category: undefined });\n  }\n});\n\ncdb.admin.User = cdb.core.Model.extend({\n\n  urlRoot: '/api/v1/users',\n\n  defaults: {\n    avatar_url: 'http://cartodb.s3.amazonaws.com/static/public_dashboard_default_avatar.png',\n    username:   ''\n  },\n\n  initialize: function(attrs) {\n    attrs = attrs || {};\n    this.tables = [];\n    // Removing avatar_url attribute if it comes as null\n    // Due to a Backbone Model constructor uses _.extends\n    // instead of _.defaults\n    if (this.get(\"avatar_url\") === null) {\n      this.set(\"avatar_url\", this.defaults.avatar_url);\n    }\n\n    if (this.get(\"get_layers\")) {\n      this.layers = new cdb.admin.UserLayers();\n      this.layers.user = this;\n      this._fetchLayers();\n    }\n\n    this.email = (typeof attrs.email !== 'undefined') ? attrs.email : '';\n\n    if (this.get('organization')) {\n      this.organization = new cdb.admin.Organization(\n        this.get('organization'),\n        {\n          currentUserId: this.id\n        }\n      );\n    }\n\n    this.groups = new cdb.admin.UserGroups(attrs.groups, {\n      organization: _.result(this.collection, 'organization') || this.organization\n    });\n  },\n\n  isInsideOrg: function() {\n    if (this.organization) {\n      return this.organization.id != false || this.isOrgOwner();\n    }\n    return false;\n  },\n\n  isOrgOwner: function() {\n    if (this.organization) {\n      return this.organization.owner.get('id') === this.get('id')\n    }\n    return false;\n  },\n\n  isOrgAdmin: function () {\n    if (this.organization) {\n      return this.organization.isOrgAdmin(this);\n    }\n    return false;\n  },\n\n  isViewer: function() {\n    return this.get('viewer') == true;\n  },\n\n  isBuilder: function() {\n    return !this.isViewer();\n  },\n\n  nameOrUsername: function() {\n    return this.get('name') || this.get('username');\n  },\n\n  renderData: function(currentUser) {\n    var name = this.get('username');\n    if (currentUser && currentUser.id === this.id) {\n      name = _t('You');\n    }\n    return {\n      username: name,\n      avatar_url: this.get('avatar_url')\n    }\n\n  },\n\n  _fetchLayers: function() {\n    this.layers.fetch({ add: true });\n  },\n\n  fetchTables: function() {\n    var self = this;\n    if (this._fetchingTables)  return;\n    var tables = new cdb.admin.Visualizations();\n    tables.options.set('type', 'table')\n    tables.bind('reset', function() {\n      self.tables = tables.map(function(u) { return u.get('name'); })\n    })\n    this._fetchingTables = true;\n    tables.fetch();\n  },\n\n  hasCreateDatasetsFeature: function() {\n    return this.isBuilder();\n  },\n\n  canCreateDatasets: function() {\n    if (!this.get('remaining_byte_quota') || this.get('remaining_byte_quota') <= 0) {\n      return false\n    }\n    return this.hasCreateDatasetsFeature();\n  },\n\n  hasCreateMapsFeature: function() {\n    return this.isBuilder();\n  },\n\n  canAddLayerTo: function(map) {\n    if (!map || !map.layers || !map.layers.getDataLayers) {\n      throw new Error(\"Map model is not defined or wrong\");\n    }\n    var dataLayers = map.layers.getDataLayers();\n    return dataLayers.length < this.getMaxLayers();\n  },\n\n  getMaxLayers: function() {\n    return ( this.get('limits') && this.get('limits').max_layers ) || 5;\n  },\n\n  getMaxConcurrentImports: function() {\n    return ( this.get('limits') && this.get('limits').concurrent_imports ) || 1;\n  },\n\n  featureEnabled: function(name) {\n    var featureFlags = this.get('feature_flags');\n    if (!featureFlags || featureFlags.length === 0 || !name) {\n      return false;\n    }\n\n    return _.contains(featureFlags, name)\n  },\n\n  isCloseToLimits: function() {\n    var quota = this.get(\"quota_in_bytes\");\n    var remainingQuota = this.get(\"remaining_byte_quota\");\n    return ( (remainingQuota * 100) / quota ) < 20\n  },\n\n  getMaxLayersPerMap: function() {\n    return this.get('max_layers') || 4;\n  },\n\n  canStartTrial: function() {\n    return !this.isInsideOrg() && this.get(\"account_type\") === 'FREE' && this.get(\"table_count\") > 0\n  },\n\n  canCreatePrivateDatasets: function() {\n    var actions = this.get('actions');\n    return actions && actions.private_tables;\n  },\n\n  equals: function(otherUser) {\n    if (otherUser.get) {\n      return this.get('id') === otherUser.get('id');\n    }\n  },\n\n  viewUrl: function() {\n    return new cdb.common.UserUrl({\n      base_url: this.get('base_url'),\n      is_org_admin: this.isOrgAdmin()\n    });\n  },\n\n  upgradeContactEmail: function() {\n    if (this.isInsideOrg()) {\n      if (this.isOrgOwner()) {\n        return 'enterprise-support@carto.com';\n      } else {\n        return this.organization.owner.get('email');\n      }\n    } else {\n      return 'support@carto.com';\n    }\n  },\n\n  usedQuotaPercentage: function() {\n    return (this.get('db_size_in_bytes') * 100) / this.organization.get('available_quota_for_user');\n  },\n\n  assignedQuotaInRoundedMb: function () {\n    return Math.floor(this.get('quota_in_bytes')/1024/1024).toFixed(0);\n  },\n\n  assignedQuotaPercentage: function() {\n    return (this.get('quota_in_bytes') * 100) / this.organization.get('available_quota_for_user');\n  }\n\n});\n","\n/**\n * manages a cartodb permission object, it contains:\n * - owner: an cdb.admin.User instance\n * - acl: a collection which includes the user and their permission.\n *\n *   see https://github.com/Vizzuality/cartodb-management/wiki/multiuser-REST-API#permissions-object\n *\n *   this object is not created to work alone, it should be a member of an object like visualization\n *   table\n */\ncdb.admin.Permission = cdb.core.Model.extend({\n\n\n  urlRoot: '/api/v1/perm',\n\n  initialize: function() {\n    this.acl = new Backbone.Collection();\n    this.owner = null;\n    this._generateOwner();\n    this._generateAcl();\n    this.bind('change:owner', this._generateOwner, this);\n    this.bind('change:acl', this._generateAcl, this);\n  },\n\n  _generateOwner: function() {\n    if (!this.owner) {\n      this.owner = new cdb.admin.User();\n    }\n    this.owner.set(this.get('owner'));\n  },\n\n  _generateAcl: function() {\n    this.acl.reset([], { silent: true });\n    _.each(this.get('acl'), function(aclItem) {\n      var model;\n      switch (aclItem.type) {\n        case 'user':\n          model = new cdb.admin.User(aclItem.entity);\n          break;\n        case 'org':\n          model = new cdb.admin.Organization(aclItem.entity);\n          break;\n        case 'group':\n          model = new cdb.admin.Group(aclItem.entity);\n          break;\n        default:\n          throw new Error(\"Unknown ACL item type: \" + aclItem.type);\n      }\n      this._grantAccess(model, aclItem.access);\n    }, this);\n  },\n\n  cleanPermissions: function() {\n    this.acl.reset();\n  },\n\n  hasAccess: function(model) {\n    // Having at least read access is the same as having any access\n    return this.hasReadAccess(model);\n  },\n\n  hasReadAccess: function(model) {\n    // If there is a representable ACL item it must be one of at least READ_ONLY access\n    return !!this.findRepresentableAclItem(model);\n  },\n\n  hasWriteAccess: function(model) {\n    var access = cdb.Utils.result(this.findRepresentableAclItem(model), 'get', 'access');\n    return access === cdb.admin.Permission.READ_WRITE;\n  },\n\n  canChangeReadAccess: function(model) {\n    return this._canChangeAccess(model);\n  },\n\n  canChangeWriteAccess: function(model) {\n    return (!model.isBuilder || model.isBuilder()) && this._canChangeAccess(model, function(representableAclItem) {\n      return cdb.Utils.result(representableAclItem, 'get', 'access') !== cdb.admin.Permission.READ_WRITE;\n    })\n  },\n\n  _canChangeAccess: function(model) {\n    var representableAclItem = this.findRepresentableAclItem(model);\n    return this.isOwner(model) || !representableAclItem ||\n      representableAclItem === this._ownAclItem(model) || cdb.Utils.result(arguments, 1, representableAclItem) || false;\n  },\n\n  grantWriteAccess: function(model) {\n    this._grantAccess(model, this.constructor.READ_WRITE);\n  },\n\n  grantReadAccess: function(model) {\n    this._grantAccess(model, this.constructor.READ_ONLY);\n  },\n\n  revokeWriteAccess: function(model) {\n    // Effectively \"downgrades\" to READ_ONLY\n    this.grantReadAccess(model);\n  },\n\n  /**\n   * Revokes access to a set of items\n   * @param {Object} model A single model or an array of models\n   */\n  revokeAccess: function(model) {\n    var aclItem = this._ownAclItem(model);\n    if (aclItem) {\n      this.acl.remove(aclItem);\n    }\n  },\n\n  isOwner: function(model) {\n    return _.result(this.owner, 'id') === _.result(model, 'id');\n  },\n\n  toJSON: function() {\n    return {\n      entity: this.get('entity'),\n      acl: this.acl.toJSON()\n    };\n  },\n\n  getUsersWithAnyPermission: function() {\n    return this.acl.chain()\n      .filter(this._hasTypeUser)\n      .map(this._getEntity)\n      .value();\n  },\n\n  isSharedWithOrganization: function() {\n    return this.acl.any(this._hasTypeOrg);\n  },\n\n  clone: function() {\n    var attrs = _.clone(this.attributes);\n    delete attrs.id;\n    return new cdb.admin.Permission(attrs);\n  },\n\n  /**\n   * Overwrite this ACL list from other permission object\n   * @param otherPermission {Object} instance of cdb.admin.Permission\n   */\n  overwriteAcl: function(otherPermission) {\n    this.acl.reset(otherPermission.acl.models);\n  },\n\n  // Note that this may return an inherited ACL item\n  // use ._ownAclItem instead if only model's own is wanted (if there is any)\n  findRepresentableAclItem: function(model) {\n    if (this.isOwner(model)) {\n      return this._newAclItem(model, this.constructor.READ_WRITE);\n    } else {\n      var checkList = ['_ownAclItem', '_organizationAclItem', '_mostPrivilegedGroupAclItem'];\n      return this._findMostPrivilegedAclItem(checkList, function(fnName) {\n        return this[fnName](model);\n      });\n    }\n  },\n\n  _hasTypeUser: function(m) {\n    return m.get('type') === 'user';\n  },\n\n  _getEntity: function(m) {\n    return m.get('entity');\n  },\n\n  _hasTypeOrg: function(m) {\n    return m.get('type') === 'org';\n  },\n\n  _isOrganization: function(object) {\n    return object instanceof cdb.admin.Organization;\n  },\n\n  _ownAclItem: function(model) {\n    if (!model || !_.isFunction(model.isNew)) {\n      cdb.log.error('model is required to find an ACL item');\n    }\n    if (!model.isNew()) {\n      return this.acl.find(function(aclItem) {\n        return aclItem.get('entity').id === model.id;\n      });\n    }\n  },\n\n  _organizationAclItem: function(m) {\n    var org = _.result(m.collection, 'organization') || m.organization;\n    if (org) {\n      return this._ownAclItem(org);\n    }\n  },\n\n  _mostPrivilegedGroupAclItem: function(m) {\n    var groups = _.result(m.groups, 'models');\n    if (groups) {\n      return this._findMostPrivilegedAclItem(groups, this._ownAclItem);\n    }\n  },\n\n  /**\n   * Iterates over a items in given list using the iteratee, stops and returns when found the ACL item with best access (i.e. READ_WRITE), or the\n   * list is completed.\n   * @param {Array} list\n   * @param {Function} iteratee that takes an item from list and returns an access\n   *   iteratee is called in context of this model.\n   * @Return {String} 'r', 'rw', or undefined if there were no access for given item\n   */\n  _findMostPrivilegedAclItem: function(list, iteratee) {\n    var aclItem;\n    for (var i = 0, x = list[i]; x && cdb.Utils.result(aclItem, 'get', 'access') !== cdb.admin.Permission.READ_WRITE; x = list[++i]) {\n      // Keep last ACL item if iteratee returns nothing\n      aclItem = iteratee.call(this, x) || aclItem;\n    }\n    return aclItem;\n  },\n\n  /**\n   * Grants access to a set of items\n   * @param {Object} model\n   * @param {String} access can take the following values:\n   * - 'r': read only\n   * - 'rw': read and write permission\n   */\n  _grantAccess: function(model, access) {\n    var aclItem = this._ownAclItem(model);\n    if (aclItem) {\n      aclItem.set('access', access);\n    } else {\n      aclItem = this._newAclItem(model, access);\n      if (aclItem.isValid()) {\n        this.acl.add(aclItem);\n      } else {\n        throw new Error(access + ' is not a valid ACL access');\n      }\n    }\n  },\n\n  _newAclItem: function(model, access) {\n    var type;\n    if (model instanceof cdb.admin.User) {\n      type = 'user'\n    } else if (model instanceof cdb.admin.Group) {\n      type = 'group';\n    } else if (this._isOrganization(model)) {\n      type = 'org';\n    } else {\n      throw new Error('model not recognized as a valid ACL entity ' + model);\n    }\n\n    return new cdb.admin.ACLItem({\n      type: type,\n      entity: model,\n      access: access\n    });\n  }\n\n}, {\n\n  READ_ONLY: 'r',\n  READ_WRITE: 'rw'\n\n});\n\n//TODO: add validation\ncdb.admin.ACLItem = Backbone.Model.extend({\n  defaults: {\n    access: 'r'\n  },\n\n  isOwn: function(model) {\n    return model.id === this.get('entity').id;\n  },\n\n  validate: function(attrs, options) {\n    var p = cdb.admin.Permission;\n    if (attrs.access !== p.READ_ONLY && attrs.access !== p.READ_WRITE) {\n      return \"access can't take 'r' or 'rw' values\";\n    }\n  },\n\n  toJSON: function() {\n    var entity = _.pick(this.get('entity').toJSON(), 'id', 'username', 'avatar_url', 'name');\n    // translate name to username\n    if (!entity.username) {\n      entity.username = entity.name;\n      delete entity.name;\n    }\n    return {\n      type: this.get('type') || 'user',\n      entity: entity,\n      access: this.get('access')\n    };\n  }\n});\n","/**\n * A collection representing a set of users in a group.\n */\ncdb.admin.GroupUsers = Backbone.Collection.extend({\n\n  model: cdb.admin.User,\n\n  initialize: function(models, opts) {\n    if (!opts.group) throw new Error('group is required');\n    this.group = opts.group;\n  },\n\n  url: function() {\n    return this.group.url.apply(this.group, arguments) + '/users';\n  },\n\n  parse: function(response) {\n    this.total_entries = response.total_entries;\n    this.total_user_entries = response.total_user_entries;\n\n    return response.users;\n  },\n\n  /**\n   * Batch add users\n   * @param {Array} userIds\n   * @return {Object} a deferred jqXHR object\n   */\n  addInBatch: function(userIds) {\n    return this._batchAsyncProcessUsers('POST', userIds);\n  },\n\n  removeInBatch: function(userIds) {\n    var self = this;\n    return this._batchAsyncProcessUsers('DELETE', userIds)\n      .done(function() {\n        _.each(userIds, self.remove.bind(self));\n      });\n  },\n\n  _batchAsyncProcessUsers: function(method, ids) {\n    var self = this;\n\n    // postpone relving promise since the fetch is requries for collection to have accurate state\n    var deferred = $.Deferred();\n    $.ajax({\n      type: method,\n      url: cdb.config.prefixUrl() + this.url(),\n      data: {\n        users: ids\n      },\n      success: function() {\n        var args = arguments;\n\n        // because add/remove don't return any data, so need to fetch to get accurate state\n        self.fetch({\n          success: function() {\n            deferred.resolve.apply(deferred, args);\n          },\n          error: function() {\n            // could not update state, but resolve anyway since batch operation worked\n            // might have inconsistent state though\n            deferred.resolve.apply(deferred, args);\n          }\n        })\n      },\n      error: function() {\n        deferred.reject.apply(deferred, arguments);\n      }\n    });\n\n    return deferred;\n  },\n\n  // @return {Number, undefined} may be undefined until a first fetch is done\n  totalCount: function() {\n    return this.total_user_entries;\n  }\n\n});\n","/**\n * Model representing an entity (user, group, etc.) that may share a Visualization.\n * Actual model is wrapped with additional metadata for the grantable context.\n */\ncdb.admin.Grantable = cdb.core.Model.extend({\n\n  initialize: function() {\n    this.entity = this._createEntity();\n  },\n\n  // @return {Object} instance of the real model this grantable entitity represents\n  //   Keep in mind that this returns a new instance of that model (i.e. not a cache version)\n  _createEntity: function() {\n    var className = cdb.Utils.capitalize(this.get('type'));\n    var model = new cdb.admin[className](this.get('model'));\n    model.organization = this.collection.organization;\n    return model;\n  }\n\n});\n","/**\n * A collection of Grantable objects.\n */\ncdb.admin.Grantables = Backbone.Collection.extend({\n\n  model: cdb.admin.Grantable,\n\n  url: function(method) {\n    var version = cdb.config.urlVersion('organizationGrantables', method);\n    return '/api/' + version + '/organization/' + this.organization.id + '/grantables';\n  },\n\n  initialize: function(users, opts) {\n    if (!opts.organization) throw new Error('organization is required');\n    this.organization = opts.organization;\n    this.currentUserId = opts.currentUserId;\n    this.sync = Backbone.syncAbort; // adds abort behaviour\n  },\n\n  parse: function(response) {\n    this.total_entries = response.total_entries;\n\n    return _.reduce(response.grantables, function(memo, m) {\n      if (m.id === this.currentUserId) {\n        this.total_entries--;\n      } else {\n        memo.push(m);\n      }\n\n      return memo;\n    }, [], this);\n  },\n\n  // @return {Number, undefined} may be undefined until a first fetch is done\n  totalCount: function() {\n    return this.total_entries;\n  }\n\n});\n","/**\n * this model contains information about the organization for\n * the current user and the users who are inside the organizacion.\n *\n * Attributes:\n * - users: collection with user instances whithin the organization (see cdb.admin.Organization.Users\n */\ncdb.admin.Organization = cdb.core.Model.extend({\n\n  url: '/api/v1/org/',\n\n  initialize: function(attrs, opts) {\n    attrs = attrs || {}\n    this.owner = new cdb.admin.User(this.get('owner'));\n\n    this.display_email = (typeof attrs.admin_email != 'undefined') && attrs.admin_email != null && (attrs.admin_email == '' ? this.owner.email : attrs.admin_email);\n\n    var collectionOpts = {\n      organization: this,\n      currentUserId: opts && opts.currentUserId\n    };\n    this.users = new cdb.admin.Organization.Users(attrs.users, collectionOpts);\n    this.groups = new cdb.admin.OrganizationGroups(attrs.groups, collectionOpts);\n    this.grantables = new cdb.admin.Grantables(undefined, collectionOpts);\n\n    // make sure all the users/groups have a reference to this organization\n    this.users.each(this._setOrganizationOnModel, this);\n    this.groups.each(this._setOrganizationOnModel, this);\n  },\n\n  _setOrganizationOnModel: function(m) {\n    m.organization = this;\n  },\n\n  fetch: function() {\n    throw new Error(\"organization should not be fetch, should be static\");\n  },\n\n  containsUser: function(user) {\n    return !!this.users.find(function(u) {\n      return u.id === user.id;\n    })\n  },\n\n  isOrgAdmin: function (user) {\n    return this.owner.id === user.id || !!_.find(this.get('admins'), function (u) {\n      return u.id === user.id;\n    });\n  },\n\n  viewUrl: function() {\n    return new cdb.common.OrganizationUrl({\n      base_url: this.get('base_url')\n    })\n  }\n\n});\n\n// helper to manage organization users\ncdb.admin.Organization.Users = Backbone.Collection.extend({\n\n  model: cdb.admin.User,\n  _DEFAULT_EXCLUDE_CURRENT_USER: true,\n\n  url: function() {\n    return '/api/v1/organization/' + this.organization.id + '/users';\n  },\n\n  initialize: function(models, opts) {\n    if (!opts.organization) {\n      throw new Error('Organization is needed for fetching organization users');\n    }\n    this.elder('initialize');\n    this.organization = opts.organization;\n\n    this.currentUserId = opts.currentUserId;\n    this._excludeCurrentUser = this._DEFAULT_EXCLUDE_CURRENT_USER;\n\n    // Let's add abort behaviour\n    this.sync = Backbone.syncAbort;\n  },\n\n  comparator: function(mdl) {\n    return mdl.get('username');\n  },\n\n  excludeCurrentUser: function(exclude) {\n    exclude = !!exclude;\n    this._excludeCurrentUser = exclude;\n    if (exclude && !this.currentUserId) {\n      cdb.log.error('set excludeCurrentUser to true, but there is no current user id set to exclude!');\n    }\n  },\n\n  restoreExcludeCurrentUser: function() {\n    this.excludeCurrentUser(this._DEFAULT_EXCLUDE_CURRENT_USER);\n  },\n\n  parse: function(r) {\n    this.total_entries = r.total_entries;\n    this.total_user_entries = r.total_user_entries;\n\n    return _.reduce(r.users, function(memo, user) {\n      if (this._excludeCurrentUser && user.id === this.currentUserId) {\n        this.total_user_entries--;\n        this.total_entries--;\n      } else {\n        memo.push(user);\n      }\n      return memo;\n    }, [], this);\n  },\n\n  // @return {Number, undefined} may be undefined until a first fetch is done\n  totalCount: function() {\n    return this.total_user_entries;\n  }\n});\n\ncdb.admin.Organization.Invites = cdb.core.Model.extend({\n\n  defaults: {\n    users_emails: [],\n    welcome_text: 'I\\'d like to invite you to my CARTO organization,\\nBest regards'\n  },\n\n  url: function() {\n    return '/api/v1/organization/' + this.organizationId + '/invitations';\n  },\n\n  initialize: function(attrs, opts) {\n    if (!opts.organizationId) {\n      throw new Error('Organization id is needed for fetching organization users');\n    } else {\n      this.organizationId = opts.organizationId;\n    }\n  }\n\n});\n","cdb.admin.Like = cdb.core.Model.extend({\n\n  defaults: {\n    likeable: true\n  },\n\n  url: function(method) {\n    var version = cdb.config.urlVersion('like', method)\n    return '/api/' + version + '/viz/' + this.get(\"vis_id\") + '/like';\n  },\n\n  initialize: function() {\n\n    _.bindAll(this, \"_onSaveError\");\n\n    this.on(\"destroy\", function() {\n      this.set({ liked: false, likes: this.get(\"likes\") - 1 });\n    }, this);\n\n  },\n\n  _onSaveError: function(model, response) {\n    this.trigger(\"error\", {\n      status: response.status,\n      statusText: response.statusText\n    });\n  },\n\n  toggleLiked: function() {\n\n    if (this.get(\"liked\")) {\n      this.destroy();\n    } else {\n      this.set({ id: null }, { silent: true });\n      this.save({}, { error: this._onSaveError });\n    }\n  }\n\n}, {\n\n  newByVisData: function(opts) {\n    var d = _.defaults({\n      id: opts.liked ? opts.vis_id : null\n    }, _.omit(opts, 'url'));\n\n    var m = new cdb.admin.Like(d);\n\n    if (opts.url) {\n      m.url = opts.url;\n    }\n\n    return m;\n  }\n});\n","cdb.admin.carto = cdb.admin.carto || {};\n\ncdb.admin.carto.category = {\n  max_values: 10,\n  others_value: \"Others\",\n\n  /**\n   *  New category generator. It replaces Color wizard\n   */\n  category_generator: function(table, props, changed, callback) {\n\n    var self = this;\n\n    var type = table.geomColumnTypes() && table.geomColumnTypes()[0] || \"polygon\";\n\n\n    // Get fill cartocss parameter\n    var fill = 'polygon-fill';\n    switch (type) {\n      case 'polygon': fill = 'polygon-fill'; break;\n      case 'line':    fill = 'line-color'; break;\n      default:        fill = 'marker-fill';\n    }\n\n    // Generate default styles\n    var table_name = table.getUnqualifiedName();\n    var css = '#' + table_name + \" {\\n\";\n\n    var cartocss_props = manage_carto_properies(props);\n\n    for (var i in cartocss_props) {\n      if (i !== \"categories\" && i !==\"colors\" &&  i !== \"property\") {\n        css +=  \"   \" + i + \": \" + props[i] + \";\\n\";\n      }\n    }\n\n    // Close defaults\n    css += \"}\\n\";\n\n    if (changed.property || !props.categories || props.categories.length === 0) {\n      this.get_categories(props.property, table, function(colors) {\n        callback(css + self.generate_categories(props, table, colors), colors);\n      });\n    } else {\n      callback(css + this.generate_categories(props, table, props.categories), props.categories);\n    }\n  },\n\n  // Get values with default colors from the sql\n  get_categories: function(property, table, callback) {\n\n    var self = this;\n\n    // We request an extra category to determine if we need to display the \"Others\" legend\n    table.data().categoriesForColumn(this.max_values + 1, property, function(cat) {\n      var column_type = cat.type;\n      var showOthers = cat.categories.length > self.max_values;\n\n      // Limit the categories we display and sort them alphabetically\n      var categories = cat.categories.slice(0, self.max_values).sort();\n\n      var colors = [];\n\n      // Generate categories metadata\n      for (var i in categories) {\n        var obj = {};\n        obj.title = categories[i];\n        obj.title_type = column_type;\n        obj.color = cdb.admin.color_brewer[i];\n        obj.value_type = 'color';\n        colors.push(obj);\n      }\n      if (showOthers) {\n        colors.push({\n          title: self.others_value,\n          value_type: 'color',\n          color: cdb.admin.color_brewer[categories.length],\n          default: true\n        })\n      }\n      callback(colors);\n    });\n  },\n\n  // Generate categories css \n  generate_categories: function(props, table, metadata, property_name) {\n    property_name = property_name || props['property'];\n\n    function _normalizeValue(v) {\n      return v.replace(/\\n/g,'\\\\n')\n              // .replace(/\\'/g, \"\\\\'\") // Not necessary right now becuase tiler does it itself.\n              .replace(/\\\"/g, \"\\\\\\\"\");\n    }\n\n    var table_name = table.getUnqualifiedName();\n    var css = '';\n    var type = table.geomColumnTypes() && table.geomColumnTypes()[0] || \"polygon\";\n    var categories = metadata || props.categories;\n    if (categories) {\n      // type of the column, number -> no quotes, string -> quotes, boolean -> no quotes\n      for (var i in categories) {\n\n        var category = categories[i][categories[i].value_type];\n        var fill = 'polygon-fill';\n\n        switch (type) {\n          case 'polygon': fill = (categories[i].value_type == \"file\") ? 'polygon-pattern-file' : 'polygon-fill'; break;\n          case 'line':    fill = (categories[i].value_type == \"file\") ? 'line-pattern-file' : 'line-color'; break;\n          default:        fill = (categories[i].value_type == \"file\") ? 'marker-file' : 'marker-fill';\n        }\n\n        if (categories[i][\"default\"]) {\n          // Default category\n          css += \"\\n#\" + table_name + \" {\\n   \" + fill + \": \" + category + \";\\n}\";\n        } else {\n          // Set correct value type\n          var value = '';\n          if (categories[i].title_type != \"string\" || categories[i].title === null) {\n            value = categories[i].title;\n          } else {\n            value = \"\\\"\" + _normalizeValue(categories[i].title) + \"\\\"\";\n          }\n\n          // Custom category\n          css += \"\\n#\" + table_name + \"[\" + property_name + \"=\" + value + \"] {\\n   \" + fill + \": \" + category + \";\\n\";\n\n          // Trick!\n          // When polygon-pattern-file is applied, we have to\n          // remove the polygon fill opacity and apply polygon-pattern-opacity (-:(·):-)\n          if (type === \"polygon\" && fill === \"polygon-pattern-file\") {\n            css += \"   polygon-opacity:0;\\n\";\n            css += \"   polygon-pattern-opacity:\" + (props['polygon-opacity'] || 1) + \";\\n\";\n          }\n\n          css += \"}\";\n        }\n      }\n    }\n\n    return css;\n  }\n\n}\n","cdb.admin.carto = cdb.admin.carto || {};\n\ncdb.admin.carto.torque = {\n\n  torque_generator: function(table, props, changed, callback) {\n    var carto_props = _.omit(props, [\n      'property',\n      'torque-duration',\n      'torque-frame-count',\n      'torque-blend-mode',\n      'torque-trails',\n      'torque-cumulative',\n      'torque-resolution',\n      'torque-aggregation-function'\n    ]);\n\n    var torque_props =\n    \"Map {\\n\" +\n      [\n      '-torque-frame-count:' + props['torque-frame-count'],\n      '-torque-animation-duration:' + props['torque-duration'],\n      '-torque-time-attribute:\"' + props['property'] + '\"',\n      '-torque-aggregation-function:' + (props['torque-aggregation-function'] ? '\"' + props['torque-aggregation-function'] + '\"': '\"count(cartodb_id)\"'),\n      '-torque-resolution:' + props['torque-resolution'],\n      '-torque-data-aggregation:' + (props['torque-cumulative'] ? 'cumulative': 'linear')\n      ].join(';\\n') +\n    \";\\n}\";\n\n    if(props['torque-blend-mode']) {\n      carto_props['comp-op'] = props['torque-blend-mode'];\n    }\n\n    if (carto_props['type'] === 'torque_heat') {\n      if(typeof carto_props['marker-opacity'] === 'number'){\n        carto_props['marker-opacity'] += \"*[value]\";\n      }\n    }\n\n    simple_polygon_generator(table, carto_props, changed, function(css) {\n      // add trails\n      for (var i = 1; i <= props['torque-trails']; ++i) {\n       var trail = \"\\n#\" + table.getUnqualifiedName() + \"[frame-offset=\" + i  +\"] {\\n marker-width:\" + (props['marker-width'] + 2*i) + \";\\n marker-fill-opacity:\" + (props['marker-opacity']/(2*i)) +\"; \\n}\";\n       css += trail;\n      }\n      callback(torque_props + \"\\n\\n\" + css);\n    });\n  }\n\n};\n","cdb.admin.carto = cdb.admin.carto || {};\n\ncdb.admin.carto.torque_cat = {\n\n  sql: function(categories, column) {\n    function _normalizeValue(v) {\n      return v.replace(/\\n/g,'\\\\n').replace(/\\\"/g, \"\\\\\\\"\");\n    }\n    var s = ['select *, (CASE'];\n    torque_cat = 1;\n    for(var c in categories) {\n      var cat = categories[c];\n      var value;\n      if (cat.title_type !== \"string\" || cat.title === null) {\n        if (cat.title === cdb.admin.carto.category.others_value) {\n          value = undefined;\n        } else {\n          value = cat.title;\n        }\n      } else {\n        value = \"\\'\" + _normalizeValue(cat.title) + \"\\'\";\n      }\n      if (value !== undefined) {\n        if (value === null) {\n          s.push('WHEN \"' + column + '\" is ' + value + ' THEN ' + (torque_cat) );\n        } else {\n          s.push('WHEN \"' + column + '\" = ' + value + ' THEN ' + (torque_cat) );\n        }\n        torque_cat += 1;\n      }\n    }\n    s.push('ELSE ' + torque_cat + ' END) as torque_category FROM __wrapped _cdb_wrap');\n    return s.join(' ');\n  },\n\n  generate: function(table, props, changed, callback) {\n    var self = this;\n\n    // return torque cateogries form real categories\n    function torque_categories(categories) {\n      return _.map(categories, function(c, i) {\n        c = _.clone(c);\n        c.title = i + 1;\n        c.title_type = 'number';\n        return c;\n      });\n    }\n\n    var cat = cdb.admin.carto.category;\n    props['torque-aggregation-function'] = 'CDB_Math_Mode(torque_category)';\n    cdb.admin.carto.torque.torque_generator(table, props, changed, function(css) {\n      function gen(colors) {\n          // modify to assign one integer for each cat\n          var cats = torque_categories(colors);\n          var sql = self.sql(colors, props.property_cat);\n          callback(css + cat.generate_categories(props, table, cats, 'value'), colors, sql);\n      }\n\n      // if changed generate again if not reuse existing ones\n      if (changed.property_cat || !props.categories || props.categories.length === 0) {\n        cat.get_categories(props.property_cat, table, gen);\n      } else {\n        gen(props.categories);\n      }\n    });\n  }\n\n};\n","\n\n  /*\n   *  User asset Model\n   */\n\n  cdb.admin.Asset = cdb.core.Model.extend({\n    \n    defaults: {\n      state:  'idle',\n      name:   ''\n    }\n\n  });\n\n\n  /*\n   *  User assets Collection\n   */\n\n  cdb.admin.Assets = Backbone.Collection.extend({\n\n    model: cdb.admin.Asset,\n\n    url: function(method) {\n      var version = cdb.config.urlVersion('asset', method);\n      return '/api/' + version + '/users/' + this.user.id + '/assets'\n    },\n\n    initialize: function(models, opts) {\n      this.user = opts.user;\n    },\n\n    parse: function(resp, xhr) {\n      return resp.assets;\n    }\n\n  });\n\n\n  /**\n   *  Static assets\n   *\n   */\n\n  cdb.admin.StaticAsset = cdb.admin.Asset.extend({\n\n    defaults: {\n      state:      'idle',\n      public_url: '',\n      kind:       'marker',\n      name:       '',\n      host:       'http://com.cartodb.users-assets.production.s3.amazonaws.com',\n      folder:     'maki-icons',\n      ext:        'svg',\n      size:       '18'\n    },\n\n    toJSON: function() {\n      var c = _.clone(this.attributes);\n      c['public_url'] = this.get(\"host\") + '/' + this.get(\"folder\") + '/' + c['icon'] + (this.get(\"size\") ? '-' + this.get(\"size\") : '') + '.' + this.get(\"ext\");\n      return c;\n    },\n    \n    get: function(attr) {\n      var r = this.attributes[attr];\n\n      if (attr === \"public_url\") {\n        r = this.get(\"host\") + '/' + this.get(\"folder\") + '/' + this.attributes['icon'] + (this.get(\"size\") ? '-' + this.get(\"size\") : '') + '.' + this.get(\"ext\");\n      }\n\n      return r;\n    }\n\n  });\n\n\n\n  /*\n   *  Static assets Collection\n   */\n\n  cdb.admin.StaticAssets = cdb.admin.Assets.extend({\n\n    model: cdb.admin.StaticAsset,\n\n    url: function() { return '' },\n\n    initialize: function(models, opts) {},\n\n    parse: function(resp, xhr) { return [] }\n\n  });","/**\n * color ramps for choroplet visualization\n */\n\ncdb.admin.color_ramps = {\n  green: {\n   '3': ['#E5F5F9', '#99D8C9', '#2CA25F'],\n   '4': ['#EDF8FB', '#B2E2E2', '#66C2A4', '#238B45'],\n   '5': ['#EDF8FB', '#B2E2E2', '#66C2A4', '#2CA25F', '#006D2C'],\n   '6': ['#EDF8FB', '#CCECE6', '#99D8C9', '#66C2A4', '#2CA25F', '#006D2C'],\n   '7': ['#EDF8FB', '#D7FAF4', '#CCECE6', '#66C2A4', '#41AE76', '#238B45', '#005824']\n  },\n  blue: {\n    '3': ['#EDF8B1', '#7FCDBB', '#2C7FB8'],\n    '4': ['#FFFFCC', '#A1DAB4', '#41B6C4', '#225EA8'],\n    '5': ['#FFFFCC', '#A1DAB4', '#41B6C4', '#2C7FB8', '#253494'],\n    '6': ['#FFFFCC', '#C7E9B4', '#7FCDBB', '#41B6C4', '#2C7FB8', '#253494'],\n    '7': ['#FFFFCC', '#C7E9B4', '#7FCDBB', '#41B6C4', '#1D91C0', '#225EA8', '#0C2C84']\n        },\n  pink: {\n    '3': ['#E7E1EF', '#C994C7', '#DD1C77'],\n    '4': ['#F1EEF6', '#D7B5D8', '#DF65B0', '#CE1256'],\n    '5': ['#F1EEF6', '#D7B5D8', '#DF65B0', '#DD1C77', '#980043'],\n    '6': ['#F1EEF6', '#D4B9DA', '#C994C7', '#DF65B0', '#DD1C77', '#980043'],\n    '7': ['#F1EEF6', '#D4B9DA', '#C994C7', '#DF65B0', '#E7298A', '#CE1256', '#91003F']\n        },\n  black: {\n    '3': ['#F0F0F0', '#BDBDBD', '#636363'],\n    '4': ['#F7F7F7', '#CCCCCC', '#969696', '#525252'],\n    '5': ['#F7F7F7', '#CCCCCC', '#969696', '#636363', '#252525'],\n    '6': ['#F7F7F7', '#D9D9D9', '#BDBDBD', '#969696', '#636363', '#252525'],\n    '7': ['#F7F7F7', '#D9D9D9', '#BDBDBD', '#969696', '#737373', '#525252', '#252525']\n         },\n  red: {\n    '3': ['#FFEDA0', '#FEB24C', '#F03B20'],\n    '4': ['#FFFFB2', '#FECC5C', '#FD8D3C', '#E31A1C'],\n    '5': ['#FFFFB2', '#FECC5C', '#FD8D3C', '#F03B20', '#BD0026'],\n    '6': ['#FFFFB2', '#FED976', '#FEB24C', '#FD8D3C', '#F03B20', '#BD0026'],\n    '7': ['#FFFFB2', '#FED976', '#FEB24C', '#FD8D3C', '#FC4E2A', '#E31A1C', '#B10026']\n       },\n  inverted_green: {\n    '3':['#2CA25F','#99D8C9','#E5F5F9'],\n    '4':['#238B45','#66C2A4','#B2E2E2','#EDF8FB'],\n    '5':['#006D2C','#2CA25F','#66C2A4','#B2E2E2','#EDF8FB'],\n    '6':['#006D2C','#2CA25F','#66C2A4','#99D8C9','#CCECE6','#EDF8FB'],\n    '7':['#005824','#238B45','#41AE76','#66C2A4','#CCECE6','#D7FAF4','#EDF8FB']\n    },\n  inverted_blue: {\n    '3':['#2C7FB8','#7FCDBB','#EDF8B1'],\n    '4':['#225EA8','#41B6C4','#A1DAB4','#FFFFCC'],\n    '5':['#253494','#2C7FB8','#41B6C4','#A1DAB4','#FFFFCC'],\n    '6':['#253494','#2C7FB8','#41B6C4','#7FCDBB','#C7E9B4','#FFFFCC'],\n    '7':['#0C2C84','#225EA8','#1D91C0','#41B6C4','#7FCDBB','#C7E9B4','#FFFFCC']\n  },\n  inverted_pink: {\n    '3':['#DD1C77','#C994C7','#E7E1EF'],\n    '4':['#CE1256','#DF65B0','#D7B5D8','#F1EEF6'],\n    '5':['#980043','#DD1C77','#DF65B0','#D7B5D8','#F1EEF6'],\n    '6':['#980043','#DD1C77','#DF65B0','#C994C7','#D4B9DA','#F1EEF6'],\n    '7':['#91003F','#CE1256','#E7298A','#DF65B0','#C994C7','#D4B9DA','#F1EEF6']\n  },\n  inverted_black: {\n    '3':['#636363','#BDBDBD','#F0F0F0'],\n    '4':['#525252','#969696','#CCCCCC','#F7F7F7'],\n    '5':['#252525','#636363','#969696','#CCCCCC','#F7F7F7'],\n    '6':['#252525','#636363','#969696','#BDBDBD','#D9D9D9','#F7F7F7'],\n    '7':['#252525','#525252','#737373','#969696','#BDBDBD','#D9D9D9','#F7F7F7']\n  },\n  inverted_red: {\n    '3':['#F03B20','#FEB24C','#FFEDA0'],\n    '4':['#E31A1C','#FD8D3C','#FECC5C','#FFFFB2'],\n    '5':['#BD0026','#F03B20','#FD8D3C','#FECC5C','#FFFFB2'],\n    '6':['#BD0026','#F03B20','#FD8D3C','#FEB24C','#FED976','#FFFFB2'],\n    '7':['#B10026','#E31A1C','#FC4E2A','#FD8D3C','#FEB24C','#FED976','#FFFFB2']\n  },\n  spectrum1: {\n    '3': ['#1a9850', '#fff2cc', '#d73027'],\n    '4': ['#1a9850', '#d2ecb4', '#fed6b0', '#d73027'],\n    '5': ['#1a9850', '#8cce8a', '#fff2cc', '#f79272', '#d73027'],\n    '6': ['#1a9850', '#8cce8a', '#d2ecb4', '#fed6b0', '#f79272', '#d73027'],\n    '7': ['#1a9850', '#8cce8a', '#d2ecb4', '#fff2cc', '#fed6b0', '#f79272', '#d73027']\n  },\n  spectrum2: {\n    '3': ['#0080ff', '#fff2cc', '#ff4d4d'],\n    '4': ['#0080ff', '#7fbfff', '#ffa6a6', '#ff4d4d'],\n    '5': ['#0080ff', '#40a0ff', '#fff2cc', '#ff7a7a', '#ff4d4d'],\n    '6': ['#0080ff', '#40a0ff', '#7fbfff', '#ffa6a6', '#ff7a7a', '#ff4d4d'],\n    '7': ['#0080ff', '#40a0ff', '#7fbfff', '#fff2cc', '#ffa6a6', '#ff7a7a', '#ff4d4d']\n  },\n\n  purple_states: {\n    '3': [\"#F1E6F1\", \"#B379B3\", \"#8A4E8A\"],\n    '4': [\"#F1E6F1\", \"#D8BBD8\", \"#A05AA0\", \"#8A4E8A\"],\n    '5': [\"#F1E6F1\", \"#D8BBD8\", \"#B379B3\", \"#A05AA0\", \"#8A4E8A\"],\n    '6': [\"#F1E6F1\", \"#D8BBD8\", \"#CCA5CC\", \"#B379B3\", \"#A05AA0\", \"#8A4E8A\"],\n    '7': [\"#F1E6F1\", \"#D8BBD8\", \"#CCA5CC\", \"#C08FC0\", \"#B379B3\", \"#A05AA0\", \"#8A4E8A\"]\n  },\n  red_states: {\n    '3': [\"#F2D2D3\", \"#D4686C\", \"#C1373C\"],\n    '4': [\"#F2D2D3\", \"#EBB7B9\", \"#CC4E52\", \"#C1373C\"],\n    '5': [\"#F2D2D3\", \"#EBB7B9\", \"#D4686C\", \"#CC4E52\", \"#C1373C\"],\n    '6': [\"#F2D2D3\", \"#EBB7B9\", \"#E39D9F\", \"#D4686C\", \"#CC4E52\", \"#C1373C\"],\n    '7': [\"#F2D2D3\", \"#EBB7B9\", \"#E39D9F\", \"#DB8286\", \"#D4686C\", \"#CC4E52\", \"#C1373C\"]\n  },\n  blue_states: {\n    '3': [\"#ECF0F6\", \"#6182B5\", \"#43618F\"],\n    '4': [\"#ECF0F6\", \"#B2C2DB\", \"#4E71A6\", \"#43618F\"],\n    '5': [\"#ECF0F6\", \"#B2C2DB\", \"#6182B5\", \"#4E71A6\", \"#43618F\"],\n    '6': [\"#ECF0F6\", \"#B2C2DB\", \"#9BB0D0\", \"#6182B5\", \"#4E71A6\", \"#43618F\"],\n    '7': [\"#ECF0F6\", \"#B2C2DB\", \"#9BB0D0\", \"#849EC5\", \"#6182B5\", \"#4E71A6\", \"#43618F\"]\n  },\n  inverted_purple_states: {\n    '3': ['#8A4E8A', '#B379B3', '#F1E6F1'],\n    '4': ['#8A4E8A', '#A05AA0', '#D8BBD8', '#F1E6F1'],\n    '5': ['#8A4E8A', '#A05AA0', '#B379B3', '#D8BBD8', '#F1E6F1'],\n    '6': ['#8A4E8A', '#A05AA0', '#B379B3', '#CCA5CC', '#D8BBD8', '#F1E6F1'],\n    '7': ['#8A4E8A', '#A05AA0', '#B379B3', '#C08FC0', '#CCA5CC', '#D8BBD8', '#F1E6F1']\n  },\n  inverted_red_states: {\n    '3': ['#C1373C', '#D4686C', '#F2D2D3'],\n    '4': ['#C1373C', '#CC4E52', '#EBB7B9', '#F2D2D3'],\n    '5': ['#C1373C', '#CC4E52', '#D4686C', '#EBB7B9', '#F2D2D3'],\n    '6': ['#C1373C', '#CC4E52', '#D4686C', '#E39D9F', '#EBB7B9', '#F2D2D3'],\n    '7': ['#C1373C', '#CC4E52', '#D4686C', '#DB8286', '#E39D9F', '#EBB7B9', '#F2D2D3']\n  },\n  inverted_blue_states: {\n    '3': ['#43618F', '#6182B5', '#ECF0F6'],\n    '4': ['#43618F', '#4E71A6', '#B2C2DB', '#ECF0F6'],\n    '5': ['#43618F', '#4E71A6', '#6182B5', '#B2C2DB', '#ECF0F6'],\n    '6': ['#43618F', '#4E71A6', '#6182B5', '#9BB0D0', '#B2C2DB', '#ECF0F6'],\n    '7': ['#43618F', '#4E71A6', '#6182B5', '#849EC5', '#9BB0D0', '#B2C2DB', '#ECF0F6']\n  }\n\n};\n\n// Default colors for color/category wizard\ncdb.admin.color_brewer = ['#A6CEE3', '#1F78B4', '#B2DF8A', '#33A02C', '#FB9A99', '#E31A1C', '#FDBF6F', '#FF7F00', '#CAB2D6', '#6A3D9A', '#DDDDDD'];\n","\n  /**\n   *  Collection for common data\n   *  - For the moment is static.\n   */\n\n  cdb.admin.CommonTables = Backbone.Collection.extend({});","/* global cdb */\n\ncdb.admin.ExportMapModel = cdb.core.Model.extend({\n  /*\n   * Creates an export_visualization job and polls until it finishes.\n   * Results in zip download containing visualization metadata + data.\n  */\n  urlRoot: '/api/v3/visualization_exports',\n\n  initialize: function (attrs) {\n    this._loadAttributes(attrs);\n  },\n\n  requestExport: function () {\n    this.save(null, { success: this._requestExportSuccessHandler.bind(this) });\n\n    if (window.user_data && window.user_data.email) {\n      cdb.god.trigger('metrics', 'export_map', {\n        email: window.user_data.email\n      });\n    } else {\n      cdb.god.trigger('metrics', 'export_map_public', {});\n    }\n  },\n\n  cancelExport: function () {\n    this._interrupt();\n  },\n\n  _requestExportSuccessHandler: function () {\n    this._pollPID = setInterval(function () {\n      this.fetch({\n        success: this._checkState.bind(this),\n        error: this._errorHandler.bind(this)\n      });\n    }.bind(this), 2000);\n  },\n\n  _checkState: function () {\n    if (this.get('state') === 'complete') {\n      this._finishExport();\n    } else if (this.get('state') === 'failure') {\n      this._errorHandler();\n    }\n  },\n\n  _finishExport: function () {\n    clearInterval(this._pollPID);\n  },\n\n  _errorHandler: function () {\n    this._interrupt();\n\n    throw new Error('There is a problem with your export. Please try again.');\n  },\n\n  _interrupt: function () {\n    clearInterval(this._pollPID);\n  },\n\n  _loadAttributes: function (attrs) {\n    if (!attrs) throw new Error('no attributes were specified');\n\n    if (!attrs.visualization_id) throw new Error('\\'visualization_id\\' is required');\n\n    this.visualization_id = attrs.visualization_id;\n  }\n});\n","cdb.admin.models = cdb.admin.models || {};\n\n//===================================================\n// histogram filter\n//===================================================\ncdb.admin.models.Filter = cdb.core.Model.extend({\n\n  DEFAULT_HIST_BUCKETS: 100,\n  urlRoot: '/api/v1/filters',\n\n  initialize: function() {\n\n    this.table = this.get('table');\n\n    if (!this.table) {\n      throw \"Filter needs a table\";\n    }\n\n    this.unset('table');\n\n    this.table.bind('data:saved', function() {\n      this._fetchHist();\n    }, this);\n\n    if(this.table.has('name') && this.table.has('schema')) {\n      this._fetchHist();\n    }\n    this.table.bind('change:name change:schema', this._fetchHist, this);\n    this.bind('destroy', function() {\n      this.table.unbind('change:name change:schema', this._fetchHist, this);\n    });\n  },\n\n  _fetchHist: function() {\n\n    if (this.get(\"column_type\") == 'date') this._fetchDateHist();\n    else this._fetchNumericHist();\n\n  },\n\n  _fetchNumericHist: function() {\n    var self = this;\n\n    this.table.originalData().histogram(this.DEFAULT_HIST_BUCKETS, this.get('column'), function(hist, bounds) {\n\n      if (hist) {\n        self._changeHist(hist, bounds);\n      } else {\n        self.trigger('error', \"numeric histogram couldn't be generated\");\n      }\n    });\n\n  },\n\n  _fetchDateHist: function() {\n    var self = this;\n\n    this.table.originalData().date_histogram(this.DEFAULT_HIST_BUCKETS, this.get('column'), function(hist, bounds) {\n\n      if (hist) {\n        self._changeDateHist(hist, bounds);\n      } else {\n        self.trigger('error', \"date histogram couldn't be generated\");\n      }\n    });\n\n  },\n\n  _changeDateHist: function(hist, bounds) {\n\n    var previousBounds = this.get('bounds');\n\n    this.set('hist',   hist,   { silent: true });\n    this.set('bounds', bounds, { silent: true });\n\n    if (!this.has('lower')) {\n\n      var per_bar = bounds.bucket_size;\n\n      bounds.lower = Math.round(bounds.lower * 1000);\n      bounds.upper = Math.round(bounds.upper * 1000);\n\n      this.set({\n        'bucket_size': per_bar,\n        'lower': bounds.lower,\n        'upper': bounds.upper,\n        'lower_limit': bounds.lower,\n        'upper_limit': bounds.upper,\n        'tz': bounds.tz\n      });\n\n    } else {\n\n      var lower = Math.max(bounds.lower * 1000, this.get(\"lower\"));\n      var upper = Math.min(bounds.upper * 1000, this.get(\"upper\"));\n\n      // Bounds have changed\n      if (previousBounds) {\n\n        // Bounds have been expanded on the upper side\n        if (bounds.upper > previousBounds.upper) {\n          upper = bounds.upper * 1000;\n        }\n\n        // Bounds have been expanded on the lower side\n        if (bounds.lower < previousBounds.lower) {\n          lower = bounds.lower * 1000;\n        }\n      }\n\n      if (_.isNaN(lower) || _.isNaN(upper)) {\n        lower = bounds.lower * 1000;\n        upper = bounds.upper * 1000;\n      }\n\n      this.set({\n        'lower': lower,\n        'upper': upper,\n        'lower_limit': bounds.lower * 1000,\n        'upper_limit': bounds.upper * 1000,\n        'tz': bounds.tz\n      });\n\n    }\n\n  },\n\n  _changeHist: function(hist, bounds) {\n\n    var previousBounds = this.get('bounds');\n\n    this.set('hist', hist, { silent: true });\n    this.set('bounds', bounds, { silent: true });\n\n    if (!this.has('lower')) {\n\n      // calculate limits based on partitions\n      var per_bar  = bounds.bucket_size;\n\n      bounds.upper = per_bar * Math.ceil(bounds.upper/per_bar);\n\n        this.set({\n          'bucket_size': per_bar,\n          'lower': bounds.lower,\n          'upper': bounds.upper,\n          'lower_limit': bounds.lower,\n          'upper_limit': bounds.upper\n        });\n\n    } else {\n\n      var upper = Math.min(bounds.upper, this.get('upper'));\n      var lower = Math.max(bounds.lower, this.get('lower'));\n\n      // Bounds have changed\n      if (previousBounds) {\n\n        // Bounds have been expanded on the upper side\n        if (bounds.upper > previousBounds.upper) {\n          upper = bounds.upper;\n        }\n\n        // Bounds have been expanded on the lower side\n        if (bounds.lower < previousBounds.lower) {\n          lower = bounds.lower;\n        }\n      }\n\n      this.set({\n        'lower': lower,\n        'upper': upper,\n        'lower_limit': bounds.lower,\n        'upper_limit': bounds.upper\n      });\n\n    }\n\n  },\n\n  _getDateFromTimestamp: function(timestamp) {\n    return new Date(timestamp);\n  },\n\n  interpolate: function(t) {\n    var a = this.get('lower_limit');\n    var b = this.get('upper_limit');\n    return (1 - t)*a + t*b;\n  },\n\n  fitToBucket: function(value) {\n    var b = this.get('bucket_size');\n    if (!b) return 0;\n    return b*Math.floor(value/b);\n  },\n\n  getSQLCondition: function() {\n\n    if (this.attributes.column_type == 'date') return this.getSQLConditionForDate();\n    else return this.getSQLConditionForNumber();\n\n  },\n\n  /**\n   *  Extracts the timezone from a date\n   */\n  _getTimeZone: function(date) {\n    if (date) {\n      return new Date(date).getTimezoneOffset()\n    }\n    return 0;\n  },\n\n  getSQLConditionForDate: function() {\n\n    var lower = this.get(\"lower\");\n    var upper = this.get(\"upper\");\n\n    if (_.isNaN(lower) || _.isNaN(upper) || lower == undefined || upper == undefined) return null;\n\n    var lowerDateWithOffset = moment(lower).format(\"YYYY-MM-DDTHH:mm:ssZ\").toString();\n    var upperDateWithOffset = moment(upper).format(\"YYYY-MM-DDTHH:mm:ssZ\").toString();\n\n    var attributes = _.clone(this.attributes);\n\n    var options, sql;\n\n    if (this.get('upper') >= this.get('upper_limit')) {\n      options = _.extend(attributes, {\n        lower: lowerDateWithOffset,\n        upper: moment(this.get('upper_limit')).format(\"YYYY-MM-DDTHH:mm:ssZ\").toString()\n      });\n      sql = _.template(\" (<%= column %> >= ('<%= lower %>') AND <%= column %> <= ('<%= upper %>')) \")(options);\n\n    } else {\n\n      options = _.extend(attributes, { lower: lowerDateWithOffset, upper: upperDateWithOffset});\n      sql = _.template(\" (<%= column %> >= ('<%= lower %>') AND <%= column %> <= ('<%= upper %>')) \")(options);\n\n    }\n\n    return sql;\n\n  },\n\n  getSQLConditionForNumber: function() {\n    if (!this.attributes.lower && !this.attributes.upper) return _.template(\" (<%= column %> IS NULL) \")(this.attributes);\n    if (this.attributes.upper >= this.attributes.upper_limit) return _.template(\" (<%= column %> >= <%= lower %> AND <%= column %> <= <%= upper %>) \")(this.attributes);\n    return _.template(\" (<%= column %> >= <%= lower %> AND <%= column %> < <%= upper %>) \")(this.attributes);\n  },\n\n  toJSON: function() {\n\n    return {\n      column: this.get('column'),\n      upper:  this.get('upper'),\n      lower:  this.get('lower'),\n      tz:     this.get('tz'),\n      column_type:   this.get('column_type')\n    }\n  }\n\n});\n\n//===================================================\n// discrete filter for text columns\n//===================================================\ncdb.admin.models.FilterDiscrete = cdb.core.Model.extend({\n\n  DEFAULT_HIST_BUCKETS: 65,\n  urlRoot: '/api/v1/filters',\n\n  defaults: {\n    list_view: true\n  },\n\n  initialize: function() {\n\n    this.table = this.get('table');\n    this.items = new Backbone.Collection();\n\n    if (this.get('items')) {\n      this.items.reset(this.get('items'));\n    }\n\n    if (!this.table) {\n      throw \"Filter needs a table\";\n    }\n\n    this.unset('table');\n\n    this.table.bind('data:saved', function() {\n      this._fetchHist();\n    }, this);\n\n    this.items.bind('change', function() {\n      this.trigger('change', this)\n      this.trigger('change:items', this, this.items);\n    }, this);\n\n    this._fetchHist();\n\n  },\n\n  _fetchHist: function() {\n    var self = this;\n\n    this.table.originalData().discreteHistogram(this.DEFAULT_HIST_BUCKETS, this.get('column'), function(hist) {\n\n      if (hist) {\n        self._updateHist(hist);\n      } else {\n        self.trigger('error', \"Histogram couldn't be generated\");\n      }\n\n    });\n  },\n\n  _updateHist: function(hist) {\n\n    for (var i = 0; i < hist.rows.length; ++i) {\n\n      var o = this.items.where({ bucket: hist.rows[i].bucket})\n\n        if (o.length) {\n          hist.rows[i].selected = o[0].get('selected')\n        } else {\n          hist.rows[i].selected = true;\n        }\n\n    }\n\n    this.set(\"reached_limit\", hist.reached_limit);\n    this.items.reset(hist.rows);\n\n  },\n\n  _sanitize: function(s) {\n    if (s) {\n      return s.replace(/'/g, \"''\");\n    }\n\n    return s;\n  },\n\n  getSQLCondition: function() {\n\n    if (this.get(\"column_type\") == 'boolean') return this.getSQLConditionForBoolean();\n    else return this.getSQLConditionForString();\n\n  },\n\n  getSQLConditionForBoolean: function() {\n\n    if (this.items.size() === 0) { // if there aren't any items…\n      return ' (true) ';\n    }\n\n    // Make some lists of values\n    var selected_items            = this.items.filter(function(i) { return i.get('selected'); });\n    var true_false_selected_items = this.items.filter(function(i) { return i.get('bucket') != null && i.get('selected'); });\n    var null_selected_items       = this.items.filter(function(i) { return i.get('bucket') == null && i.get('selected'); });\n\n    if (selected_items.length > 0 && null_selected_items.length == 0) { // there are just true or false values\n\n      return _.template(\"<%= column %> IN (<%= opts %>) \")({\n        column: this.get('column'),\n             opts: true_false_selected_items.map(function(i) {\n               return i.get(\"bucket\");\n             }).join(',')\n      });\n\n    }\n\n    if (selected_items.length == 1 && null_selected_items.length == 1) { // only null values\n\n      return _.template(\"<%= column %> IS NULL \")({\n        column: this.get('column')\n      });\n\n    }\n\n    if (selected_items.length > 0) {\n\n      return _.template(\"<%= column %> IN (<%= opts %>) OR <%= column %> IS NULL \")({ // all kinds of values\n        column: this.get('column'),\n             opts: true_false_selected_items.map(function(i) {\n               return i.get(\"bucket\");\n             }).join(',')\n      });\n\n    }\n\n    return _.template(\"<%= column %> IN (NULL) \")({ // there aren't any selected values\n      column: this.get('column'),\n    });\n\n\n  },\n\n  _containsNull: function(items) {\n\n    var containsNull = false;\n\n    _.each(items, function(bucket) {\n      if (!bucket.get(\"bucket\")) containsNull = true;\n    });\n\n    return containsNull;\n\n  },\n\n  _nullIsNotSelected: function(origin, destiny) {\n    var difference = _.difference(origin, destiny);\n\n    var nullIsNotSelected = false;\n\n    _.each(difference, function(bucket) {\n      if (!bucket.get(\"selected\") && !bucket.get(\"bucket\")) nullIsNotSelected = true;\n    });\n\n    return nullIsNotSelected;\n\n  },\n\n  getSQLConditionForString: function() {\n\n    var that = this;\n\n    // If the user entered text…\n    if (!this.get(\"list_view\")) {\n\n      if (this.get(\"free_text\")) {\n\n        var text = this._sanitize(this.get(\"free_text\"));\n\n        return _.template(\"<%= column %> ILIKE '%<%= t %>%' \")({\n          column: this.get('column'),\n               t: text\n        });\n\n      } else {\n        return ' (true) ';\n      }\n\n    }\n\n    // If there aren't any items…\n    if (this.items.size() === 0) {\n      return ' (true) ';\n    }\n\n    // If there are some items, first get the selected ones…\n    var items = this.items.filter(function(i) {\n      return i.get('selected');\n    });\n\n    // If there are selected items…\n    if (items.length > 0) {\n\n      var selected = items.filter(function(i) { return i.get('selected'); });\n\n      if (items.length == this.items.length) {\n\n        return _.template(\" (true) \")({\n          column: this.get('column'),\n          opts: items.map(function(i) {\n            var bucket = that._sanitize(i.get('bucket'));\n            return \"'\" + bucket + \"'\";\n          }).join(',')\n        });\n\n      } else {\n\n        var query = \"<%= column %> IN (<%= opts %>) \";\n\n        if (this._nullIsNotSelected(this.items.models, items)) {\n          query = \"<%= column %> IN (<%= opts %>) AND <%= column %> IS NOT NULL \"\n        } else if (this._containsNull(items)) {\n          query = \"<%= column %> IN (<%= opts %>) OR <%= column %> IS NULL \";\n        }\n\n        return _.template(query)({\n          column: this.get('column'),\n          opts: items.map(function(i) {\n            var bucket = that._sanitize(i.get('bucket'));\n\n            return \"'\" + bucket + \"'\";\n          }).join(',')\n        });\n\n      }\n\n    } else { // if there's no selected element…\n\n      return ' (true) '; // this will remove the 'WHERE' condition\n\n    }\n\n    // If there aren't selected items\n    return \"true \";\n\n  },\n\n  toJSON: function() {\n    return {\n      reached_limit: this.get(\"reached_limit\"),\n      column:        this.get('column'),\n      items:         this.items.toJSON(),\n      free_text:     this.get(\"free_text\"),\n      list_view:     this.get(\"list_view\"),\n      column_type:   this.get('column_type')\n    }\n  }\n});\n\n//===================================================\n// filters collection\n//===================================================\ncdb.admin.models.Filters = Backbone.Collection.extend({\n\n  model: function(attrs, options) {\n\n    var self = options.collection;\n    var col  = attrs.column;\n\n    var schema = self.table.get(\"original_schema\") ? \"original_schema\": \"schema\";\n\n    var column_type = self.table.getColumnType(col, schema) || attrs.column_type;\n    var FilterClass = self._getFilterModelforColumnType(column_type);\n\n    return new FilterClass(_.extend(attrs, {\n      column_type: column_type,\n      table: self.table\n    }));\n\n  },\n\n  initialize: function(m, options) {\n    if (!options.table) {\n      throw \"Filters need a table\";\n    }\n    this.table = options.table;\n  },\n\n  getSQLCondition: function() {\n\n    var sqls = this.map(function(f) {\n      return f.getSQLCondition();\n    })\n\n    var sql = _(sqls).compact().join(' AND ');\n\n    return sql;\n  },\n\n  removeFilters: function() {\n    while(this.size()) {\n      this.at(0).destroy();\n    }\n  },\n\n  _getFilterModelforColumnType: function(columnType) {\n    if (columnType == 'number' || columnType == 'date') {\n      return cdb.admin.models.Filter;\n    } else {\n      return cdb.admin.models.FilterDiscrete\n    }\n  }\n\n\n});\n","\n  /**\n   *  Geocoding endpoint by id\n   *\n   *  - State property could be:\n   *\n   *    · null -> it haven't started\n   *    · started -> it has just started\n   *    · submitted -> it has sent to the geocoder service\n   *    · completed -> geocoder service has finished\n   *    · finished -> Our database has finished, process completed\n   *\n   */\n\n\n  cdb.admin.Geocoding = cdb.core.Model.extend({\n\n    _POLLTIMER: 2000,\n\n    defaults: {\n      kind: '',\n      formatter: '',\n      table_name: ''\n    },\n\n    idAttribute: 'id',\n\n    url: function(method) {\n      var version = cdb.config.urlVersion('geocoding', method);\n\n      var base = '/api/' + version + '/geocodings/';\n      if (this.isNew()) {\n        return base;\n      }\n      return base + this.id;\n    },\n\n    initialize: function() {\n      this.bind('change', this._checkFinish, this);\n    },\n\n    setUrlRoot: function(urlRoot) {\n      this.urlRoot = urlRoot;\n    },\n\n    /**\n     * checks for poll to finish\n     */\n    pollCheck: function(i) {\n      var self = this;\n      var tries = 0;\n      this.pollTimer = setInterval(function() {\n        self.fetch({\n          error: function(e) {\n            self.trigger(\"change\");\n          }\n        });\n        ++tries;\n      }, i || this._POLLTIMER);\n    },\n\n    destroyCheck: function() {\n      clearInterval(this.pollTimer);\n    },\n\n    _checkFinish: function() {\n      var state = this.get('state');\n      var error = this.get('error');\n\n      var attributes = _.clone(this.attributes);\n\n      if (state === null) {\n        this.trigger('geocodingStarted', this);\n      } else if (state === \"finished\") {\n        this.destroyCheck();\n        this.clear({ silent: true });\n        this.trigger('geocodingComplete', attributes, this);\n      } else if (state === \"failed\") {\n        this.destroyCheck();\n        this.clear({ silent: true });\n        this.trigger('geocodingError', error, this);\n      } else if (state === \"reset\" || state === \"cancelled\") {\n        this.clear({ silent: true });\n      } else {\n        this.trigger('geocodingChange', this);\n      }\n    },\n\n    cancelGeocoding: function() {\n      this.destroyCheck();\n      this.trigger('geocodingCanceled', this);\n      this.save({ state:'cancelled' }, { wait:true });\n    },\n\n    resetGeocoding: function() {\n      this.destroyCheck();\n      this.trigger('geocodingReset', this);\n      this.set('state', 'reset');\n    },\n\n    isGeocoding: function() {\n      return this.get('id') && this.get('table_name') && (this.get('formatter') || this.get('kind'))\n    }\n\n  });\n\n\n  /**\n   *  Geocoding endpoint to get all running geocodings\n   */\n  cdb.admin.Geocodings = cdb.core.Model.extend({\n\n    url: function(method) {\n      var version = cdb.config.urlVersion('geocoding', method);\n\n      return '/api/' + version + '/geocodings';\n    }\n\n  });\n\n  /**\n   * Model to get available geometries from a location (column_name from table or free_text)\n   */\n  cdb.admin.Geocodings.AvailableGeometries = cdb.core.Model.extend({\n\n    url: function(method) {\n      var version = cdb.config.urlVersion('geocoding', method);\n      return '/api/' + version + '/geocodings/available_geometries';\n    },\n\n    parse: function(r) {\n      return { available_geometries: r }\n    }\n\n  });\n\n  /**\n   *  Geocoding estimation for a table\n   *\n   *  - It will show the estimate price of geocoding that table.\n   *\n   */\n  cdb.admin.Geocodings.Estimation = cdb.core.Model.extend({\n\n    // defaults: {\n    //   rows:       0,\n    //   estimation: 0 - actually the cost (in credits)\n    // },\n\n    urlRoot: function() {\n      var version = cdb.config.urlVersion('geocoding', 'read');\n      return \"/api/\" + version + \"/geocodings/estimation_for/\";\n    },\n\n    reset: function() {\n      this.unset('rows');\n      this.unset('estimation');\n    },\n\n    costInCredits: function() {\n      return this.get('estimation');\n    },\n\n    mayHaveCost: function() {\n      // also includes undefined, for the case when the price is unknown)\n      return this.costInCredits() !== 0;\n    },\n\n    costInDollars: function() {\n      return Math.ceil(this.costInCredits() / 100);\n    }\n\n  });\n","cdb.admin.Import = cdb.core.Model.extend({\n\n  idAttribute: 'item_queue_id',\n\n  urlRoot: '/api/v1/imports',\n\n  initialize: function() {\n    this.bind('change', this._checkFinish, this);\n  },\n\n  setUrlRoot: function(urlRoot) {\n    this.urlRoot = urlRoot;\n  },\n\n  /**\n   * checks for poll to finish\n   */\n  pollCheck: function(i) {\n    var self = this;\n    var tries = 0;\n    this.pollTimer = setInterval(function() {\n      // cdb.log.debug(\"checking job for finish: \" + tries);\n      self.fetch({\n        error: function(e) {\n          self.trigger(\"change\");\n        }\n      });\n      ++tries;\n    }, i || 1500);\n  },\n\n  destroyCheck: function() {\n    clearInterval(this.pollTimer);\n  },\n\n  _checkFinish: function() {\n    // cdb.log.info(\"state: \" + this.get('state'), \"success: \" + this.get(\"success\"));\n\n    if(this.get('success') === true) {\n      // cdb.log.debug(\"job finished\");\n      clearInterval(this.pollTimer);\n      this.trigger('importComplete', this);\n    } else if (this.get('success') === false) {\n      // cdb.log.debug(\"job failure\");\n      clearInterval(this.pollTimer);\n      this.trigger('importError', this);\n    } else {\n      this.trigger('importChange', this);\n    }\n  }\n});\n","cdb.admin.SlideTransition = cdb.core.Model.extend({\n  defaults: {\n    time: 0\n  }\n});\n\n/**\n * contains and manages the state for an slide\n */\ncdb.admin.Slide = cdb.core.Model.extend({\n\n  initialize: function() {\n    var self = this;\n    this._tracked = []; \n    this.visualization = null;\n    this.bind('change:active', function _active() {\n      if (self.isActive() && self.master && self.visualization) {\n        self.master.changeTo(this.visualization);\n      }\n    });\n  },\n\n  // unload the visualization from memory and deattach all the stuff\n  unload: function() {\n    var self = this;\n    this.unbind(null, null, this);\n    this.visualization.unbind(null, null, this);\n    this.visualization = null;\n    this.master.map.unbind(null, null, this);\n    this.master.unbind(null, null, this);\n    _.each(this._tracked, function(o) {\n      o.unbind(null, null, self);\n    });\n    this._tracked = [];\n    this.loaded = false;\n  },\n\n  // track object state using restore and serialize\n  _trackObject: function(obj, properties, serialize) {\n\n    this._tracked.push(obj);\n\n    // build list of properties to listen\n    var listen = 'change';\n    if (properties && properties.length) {\n      listen = properties.map(function(p) {\n        return 'change:' + p;\n      }).join(' ');\n    }\n\n    // serialize object state to slide\n    obj.bind(listen, function() {\n      if (this.isActive()) {\n        serialize.call(this, obj, properties ? _.pick(obj.attributes, properties): obj.attributes);\n      }\n    }, this);\n\n  },\n\n  setMaster: function(vis) {\n    var self = this;\n    this.master = vis;\n    if (!this.visualization) {\n      this.visualization = new cdb.admin.Visualization(\n      _.extend(\n        _.pick(this.attributes, 'id', 'map_id', 'next_id', 'prev_id', 'transition_options', 'type'), { bindMap: false, parent_id: vis.id }\n      ));\n    }\n  },\n\n  isActive: function() {\n    return !!this.get('active');\n  },\n\n  destroy: function() {\n    this.visualization.destroy.apply(this.visualization, arguments);\n    this.trigger('destroy', this, this.collection);\n    return this;\n  }, \n\n  setNext: function(next_visualization_id, opt) {\n    var v = new cdb.admin.Visualization({ id: this.id });\n    v.order.save('next_id', next_visualization_id, opt);\n    this._reorder(next_visualization_id);\n    this.trigger('change:next_id', this, next_visualization_id);\n    return this;\n  },\n\n  _reorder: function(next_visualization_id) {\n    var s, insertIndex;\n    // look for the slide in collection\n    if (this.collection) {\n      var col = this.collection;\n      if (next_visualization_id !== null) {\n        s = col.get(next_visualization_id);\n        insertIndex = col.indexOf(s);\n      } else {\n        insertIndex = col.length;\n      }\n      if (insertIndex >= 0) {\n        var currentIndex = col.indexOf(this);\n        // insert just before the\n        col.models.splice(insertIndex, 0, this);\n        if (currentIndex >= insertIndex) currentIndex += 1;\n        // remove previous one\n        col.models.splice(currentIndex, 1);\n      }\n    }\n\n  }\n\n});\n\n\n/**\n * slide collection\n */\ncdb.admin.Slides = Backbone.Collection.extend({\n\n  model: cdb.admin.Slide,\n\n  initialize: function(models, options) {\n    if (!options || !options.visualization) {\n      throw new Error(\"visualization is undefined\");\n    }\n\n    // master visualization\n    this.visualization = options.visualization;\n    // save the master visualization id so when a new visualization is created\n    // we set this as parent, see create method\n    this.master_visualization_id = this.visualization.id;\n\n\n    var self = this;\n\n    var _setMaster = function(m) { \n      m.setMaster(self.visualization);\n    };\n\n    this.bind('add', _setMaster, this);\n    this.bind('add', function(slide) {\n      this.setActive(slide);\n    }, this);\n\n    this.bind('reset', function() { \n      this.each(_setMaster);\n      this.setActive(this.at(0));\n    }, this);\n\n    this.bind('remove', this._onRemoveSlide, this);\n  },\n\n  _onRemoveSlide: function(slide, collection, options) {\n    if (slide.isActive() && this.length > 0) {\n      if (options.index !== this.length) {\n        this.setActive(this.at(options.index));\n      } else if (options.index == this.length)  {\n        this.setActive(this.at(options.index - 1));\n      }\n    }\n  },\n\n  // https://github.com/jashkenas/backbone/issues/962\n  initializeModels: function() {\n    var self = this;\n    var _setMaster = function(m) {\n      m.setMaster(self.visualization);\n    };\n    this.each(_setMaster);\n  },\n\n  // creates a new slide\n  // there is an special case when there is no slides: two slides are actually created, one to clone the master one and the new one the user is actually adding\n  create: function(done) {\n    var self = this;\n    if (this.length === 0) {\n      this._createSlide(function(slide) {\n        self._createSlide(function(slide2) {\n          self.add(slide)\n          self.add(slide2);\n          done && done(slide2);\n        }, { no_add: true, prev_id: slide.id });\n      }, { no_add: true });\n    } else {\n      this._createSlide(done);\n    }\n  },\n\n  _createSlide: function(done, options) {\n    options = options || {}\n    var self = this;\n    var prev_id = options.prev_id || null;\n    if (!prev_id && this.length) {\n      prev_id = this.last().visualization.id\n    }\n    return this.visualization.copy({\n      copy_overlays: true,\n      type: 'slide',\n      parent_id: this.master_visualization_id,\n      prev_id: prev_id\n    }, {\n      success: function(vis) {\n        vis.map.layers.bind('reset', function() {\n          // on create assign the track id\n          var slide = new cdb.admin.Slide({ id: vis.id });\n          slide.visualization = vis;\n          if (!options.no_add) self.add(slide);\n          done && done(slide);\n        });\n      }\n    });\n  },\n\n  setActive: function(slide) {\n    var active = this.find(function (s) {\n      return s.get('active');\n    });\n    if (active) {\n      active.set('active', false);\n    }\n    if (slide) slide.set('active', true);\n  },\n\n  /*\n   * return true if some layer inside any of the visualization contain a torque layer\n   */\n  existsTorqueLayer: function() {\n    return this.any(function(s) {\n      return s.visualization.map.layers.getTorqueLayers().length !== 0;\n    });\n  }\n\n});\n","\n\n  /**\n   *  Synced table model\n   */\n\n  cdb.admin.TableSynchronization = cdb.core.Model.extend({\n\n    _X:         1.2,  // Multiply current interval for this number\n    _INTERVAL:  1500, // Interval time between poll checkings\n    _STATES:    ['created', 'failure', 'success', 'syncing', 'queued'],\n\n    defaults: {\n      name: '',\n      url: '',\n      state: '',\n      run_at: 0,\n      ran_at: 0,\n      retried_times: 0,\n      interval: 0,\n      error_code: 0,\n      error_message: '',\n      service_name: '',\n      service_item_id: '',\n      content_guessing: true,\n      type_guessing: true\n    },\n\n    url: function(method) {\n      var version = cdb.config.urlVersion('synchronization', method);\n\n      var base = '/api/' + version + '/synchronizations/';\n      if (this.isNew()) {\n        return base;\n      }\n      return base + this.id;\n    },\n\n    initialize: function() {\n      this.bind('destroy', function() {\n        this.unset('id');\n      });\n    },\n\n    toJSON: function() {\n      var c = _.clone(this.attributes);\n\n      var d = {\n        url:      c.url,\n        interval: c.interval,\n        content_guessing: c.content_guessing,\n        type_guessing: c.type_guessing,\n        create_vis: c.create_vis\n      };\n\n      if (c.type === \"remote\") {\n        _.extend(d, {\n          remote_visualization_id: c.remote_visualization_id,\n          create_vis: false,\n          value: c.value\n        });\n      }\n\n      if(c.id !== undefined) {\n        d.id = c.id;\n      }\n\n      // Comes from a service?\n      if(c.service_name) {\n        d.service_name = c.service_name;\n        d.service_item_id = c.service_item_id;\n      }\n\n      return d;\n    },\n\n    syncNow: function(callback) {\n      $.ajax({\n        url:  cdb.config.prefixUrl() + this.url() + '/sync_now',\n        type: 'PUT'\n      }).always(callback)\n    },\n\n    // Checks for poll to finish\n    pollCheck: function(i) {\n      var self = this;\n      var interval = this._INTERVAL;\n\n      this.pollTimer = setInterval(request , interval);\n\n      function request() {\n        self.destroyCheck();\n\n        self.fetch({\n          error: function(m, e) {\n            self.set({\n              error_message:  e.statusText || \"\",\n              state:          'failure'\n            });\n          }\n        });\n\n        interval = interval * self._X;\n\n        self.pollTimer = setInterval(request, interval);\n      }\n    },\n\n    destroyCheck: function() {\n      clearInterval(this.pollTimer);\n    },\n\n    isSync: function() {\n      return !this.isNew();\n    },\n\n    linkToTable: function(table) {\n      var self = this;\n      if (table.has('synchronization')) {\n        this.set(table.get('synchronization'));\n      }\n\n      table.bind('change:synchronization', function() {\n        self.set(table.get('synchronization'));\n      }, table);\n\n      table.bind('destroy', function destroy() {\n        self.unbind(null, null, table);\n        self.destroy();\n      }, table);\n      //TODO: manage table renaming\n    }\n\n  });\n","/**\n * Model to representing a TileJSON endpoint\n * See https://github.com/mapbox/tilejson-spec/tree/master/2.1.0 for details\n */\ncdb.admin.TileJSON = cdb.core.Model.extend({\n\n  idAttribute: 'url',\n\n  url: function() {\n    return this.get('url');\n  },\n\n  save: function() {\n    // no-op, obviously no write privileges ;)\n  },\n\n  newTileLayer: function() {\n    if (!this._isFetched()) throw new Error('no tiles, have fetch been called and returned a successful resultset?');\n\n    var layer = new cdb.admin.TileLayer({\n      urlTemplate: this._urlTemplate(),\n      name: this._name(),\n      attribution: this.get('attribution'),\n      maxZoom: this.get('maxzoom'),\n      minZoom: this.get('minzoom'),\n      bounding_boxes: this.get('bounds'),\n      tms: this.get('scheme') === 'tms'\n    });\n\n    return layer;\n  },\n\n  _isFetched: function() {\n    return this.get('tiles').length > 0;\n  },\n\n  _urlTemplate: function() {\n    return this.get('tiles')[0];\n  },\n\n  _name: function() {\n    return this.get('name') || this.get('description');\n  }\n});\n","\n/*\n * this model is created to manage the visualization order. In order to simplify API\n * the order is changed using a double linked list instead of a order attribute.\n */\ncdb.admin.VisualizationOrder = cdb.core.Model.extend({\n\n  url: function(method) {\n    return this.visualization.url(method) + \"/next_id\"\n  },\n\n  initialize: function () {\n    this.visualization = this.get('visualization');\n    //set id so PUT is used\n    this.set('id', this.visualization.id);\n    this.unset('visualization');\n  }\n});\n\ncdb.admin.Visualization = cdb.core.Model.extend({\n\n  defaults: {\n    bindMap: true\n  },\n\n  url: function(method) {\n    var version = cdb.config.urlVersion('visualization', method);\n    var base = '/api/' + version + '/viz';\n    if (this.isNew()) {\n      return base;\n    }\n    return base + '/' + this.id;\n  },\n\n  INHERIT_TABLE_ATTRIBUTES: [\n    'name', 'description', 'privacy'\n  ],\n\n  initialize: function() {\n    this.map = new cdb.admin.Map();\n\n    this.permission = new cdb.admin.Permission(this.get('permission'));\n    this.overlays = new cdb.admin.Overlays([]);\n    this.overlays.vis = this;\n\n    this.initSlides();\n    this.bind('change:type', this.initSlides);\n\n    this.transition = new cdb.admin.SlideTransition(this.get('transition_options'), { parse: true });\n    this.order = new cdb.admin.VisualizationOrder({ visualization: this });\n\n    this.like = cdb.admin.Like.newByVisData({\n      vis_id: this.id,\n      liked: this.get(\"liked\"),\n      likes: this.get(\"likes\")\n    });\n\n    // Check if there are related tables and generate the collection\n    if (this.get('type') === \"derived\" && this.get('related_tables')) this.generateRelatedTables();\n\n    // Check if there are dependant visualizations and generate the collection //\n    // TODO //\n\n    if (this.get('bindMap')) this._bindMap();\n    this.on(_(this.INHERIT_TABLE_ATTRIBUTES).map(function(t) { return 'change:' + t }).join(' '),  this._changeAttributes, this);\n\n    this._initBinds();\n  },\n\n  initSlides: function() {\n    if (this.slides) return this;\n    // slides only for derived visualizations\n    // and working with map enabled\n    if (this.get('type') === 'derived' && this.get('bindMap')) {\n      this.slides = new cdb.admin.Slides(this.get('children'), { visualization: this });\n      this.slides.initializeModels();\n    } else {\n      this.slides = new cdb.admin.Slides([], { visualization: this });\n    }\n    return this;\n  },\n\n  activeSlide: function(c) {\n    if (c >= 0 && c < this.slides.length) {\n      this.slides.setActive(this.slides.at(c));\n    }\n    return this;\n  },\n\n  // set master visualization. Master manages id, name and description changes\n  setMaster: function(master_vis) {\n\n    var self = this;\n\n    master_vis.bind('change:id', function() {\n      self.changeTo(master_vis);\n      self.slides.master_visualization_id = master_vis.id;\n    }, this);\n\n    master_vis.bind('change', function() {\n      var c = master_vis.changedAttributes();\n      if (c.type) self.set('type', master_vis.get('type'));\n      self.set('description', master_vis.get('description'));\n      if (c.name) self.set('name', master_vis.get('name'));\n      if (c.privacy) self.set('privacy', master_vis.get('privacy'));\n    });\n\n  },\n\n  enableOverlays: function() {\n    this.bind('change:id', this._fetchOverlays, this);\n    if (!this.isNew()) this._fetchOverlays();\n  },\n\n  _fetchOverlays: function() {\n    this.overlays.fetch({ reset: true });\n  },\n\n  _initBinds: function() {\n    this.permission.acl.bind('reset', function() {\n      // Sync the local permission object w/ the raw data, so vis.save don't accidentally overwrites permissions changes\n      this.set('permission', this.permission.attributes, { silent: true });\n      this.trigger('change:permission', this);\n    }, this);\n\n    // Keep permission model in sync, e.g. on vis.save\n    this.bind('change:permission', function() {\n      this.permission.set(this.get('permission'));\n    }, this);\n  },\n\n  isLoaded: function() {\n    return this.has('privacy') && this.has('type');\n  },\n\n\n  generateRelatedTables: function(callback) {\n    var tables = this.get('related_tables');\n\n    if (tables.length) {\n      var collection = new Backbone.Collection([]);\n\n      for (var i = 0, l = tables.length; i < l; i++) {\n        var table = new cdb.admin.CartoDBTableMetadata(tables[i]);\n        collection.add(table);\n      }\n\n      this.related_tables = collection;\n      callback && callback.success && callback.success();\n    }\n  },\n\n  getRelatedTables: function(callback, options) {\n    options = options || {};\n    if (this.get('type') === \"derived\") {\n\n      if (!options.force && this.get('related_tables')) {\n        this.generateRelatedTables(callback);\n        return;\n      }\n\n      var self = this;\n      this.fetch({\n        success: function() {\n          self.generateRelatedTables(callback);\n        },\n        error: callback && callback.error && callback.error\n      });\n    }\n  },\n\n  /**\n   * Get table metadata related to this vis.\n   * Note that you might need to do a {metadata.fetch()} to get full data.\n   *\n   * @returns {cdb.admin.CartoDBTableMetadata} if this vis represents a table\n   * TODO: when and when isn't it required to do a fetch really?\n   */\n  tableMetadata: function() {\n    if (!this._metadata) {\n      this._metadata = new cdb.admin.CartoDBTableMetadata(this.get('table'));\n    }\n    return this._metadata;\n  },\n\n  _bindMap: function() {\n\n    this.on('change:map_id', this._fetchMap, this);\n\n    this.map.bind('change:id', function() {\n      this.set('map_id', this.map.id);\n    }, this);\n\n    this.map.set('id', this.get('map_id'));\n\n    // when the layers change we should reload related_tables\n    this.map.layers.bind('change:id remove', function() {\n      this.getRelatedTables(null, {\n        force: true\n      });\n    }, this);\n\n  },\n\n  /**\n   *  Is this model a true visualization?\n   */\n  isVisualization: function() {\n    return this.get('type') === \"derived\" || this.get('type') === 'slide';\n  },\n\n  /**\n   *  Change current visualization by new one without\n   *  creating a new instance.\n   *\n   *  When turn table visualization to derived visualization,\n   *  it needs to wait until reset layers. If not, adding a new\n   *  layer after create the new visualization won't work...\n   *\n   */\n  changeTo: function(new_vis, callbacks) {\n    this.set(new_vis.attributes, { silent: true });\n\n    this.transition.set(new_vis.transition.attributes);\n\n    var success = function() {\n      this.map.layers.unbind('reset', success);\n      this.map.layers.unbind('error', error);\n      callbacks && callbacks.success && callbacks.success(this);\n    };\n\n    var error = function() {\n      this.map.layers.unbind('reset', success);\n      this.map.layers.unbind('error', error);\n      callbacks && callbacks.error && callbacks.error();\n    }\n\n    this.map.layers.bind('reset', success, this);\n    this.map.layers.bind('error', error, this)\n    this.permission.set(new_vis.permission.attributes);\n    this.set({ map_id: new_vis.get('map_id') });\n\n    // Get related tables from the new visualization\n    this.getRelatedTables();\n  },\n\n  /**\n   *  Transform a table visualization/model to a original visualization\n   */\n  changeToVisualization: function(callback) {\n    var self = this;\n    if (!this.isVisualization()) {\n      var callbacks = {\n        success: function(new_vis) {\n          self.changeTo(new_vis, callback);\n          self.notice('', '', 1000);\n        },\n        error: function(e) {\n          var msg = 'error changing to visualization';\n          self.error(msg, e);\n          callback && callback.error(e, msg);\n        }\n      };\n      // Name is not saved in the back end, due to that\n      // we need to pass it as parameter\n      this.copy({ name: this.get('name'), description: this.get('description') }, callbacks);\n    } else {\n      self.notice('', '', 1000);\n    }\n    return this;\n  },\n\n  parse: function(data) {\n    if (this.transition && data.transition_options) {\n      this.transition.set(this.transition.parse(data.transition_options));\n    }\n\n    if (this.like) {\n      this.like.set({ vis_id: this.id, likes: this.get(\"likes\"), liked: this.get(\"liked\") })\n    }\n\n    return data;\n  },\n\n  toJSON: function() {\n    var attr = _.clone(this.attributes);\n    delete attr.bindMap;\n    delete attr.stats;\n    delete attr.related_tables;\n    delete attr.children;\n    attr.map_id = this.map.id;\n    attr.transition_options = this.transition.toJSON();\n    return attr;\n  },\n\n  /**\n   *  Create a child (slide) from current visualization. It clones layers but no overlays\n   */\n  createChild: function(attrs, options) {\n    attrs = attrs || {};\n    options = options || {};\n    var vis = new cdb.admin.Visualization(\n      _.extend({\n          copy_overlays: false,\n          type: 'slide',\n          parent_id: this.id\n        },\n        attrs\n      )\n    );\n    vis.save(null, options);\n    return vis;\n  },\n\n  /**\n   *  Create a copy of the visualization model\n   */\n  copy: function(attrs, options) {\n    attrs = attrs || {};\n    options = options || {};\n    var vis = new cdb.admin.Visualization(\n      _.extend({\n          source_visualization_id: this.id\n        },\n        attrs\n      )\n    );\n    vis.save(null, options);\n    return vis;\n  },\n\n  /**\n   *  Fetch map information\n   */\n  _fetchMap: function() {\n    this.map\n      .set('id', this.get('map_id'))\n      .fetch();\n  },\n\n  /**\n   *  Generic function to catch up new attribute changes\n   */\n  _changeAttributes: function(m, c) {\n    if (!this.isVisualization()) {\n\n      // Change table attribute if layer is CartoDB-layer\n      var self = this;\n\n      this.map.layers.each(function(layer) {\n        if (layer.get('type').toLowerCase() == \"cartodb\") {\n\n          // If there isn't any changed attribute\n          if (!self.changedAttributes()) { return false; }\n\n          var attrs = _.pick(self.changedAttributes(), self.INHERIT_TABLE_ATTRIBUTES);\n\n          if (attrs) layer.fetch();\n        }\n      })\n    }\n  },\n\n\n  // PUBLIC FUNCTIONS\n\n  publicURL: function() {\n    var url = this.permission.owner.viewUrl();\n    return url + \"/viz/\" + this.get('id') + \"/public_map\";\n  },\n\n  deepInsightsUrl: function(user) {\n    var url = user.viewUrl();\n    return url + \"/bivisualizations/\" + this.get('id') + \"/embed_map\";\n  },\n\n  embedURL: function() {\n    var url = this.permission.owner.viewUrl();\n    return url + \"/viz/\" + this.get('id') + \"/embed_map\";\n  },\n\n  vizjsonURL: function() {\n    var url = this.permission.owner.viewUrl();\n    var version = cdb.config.urlVersion('vizjson', 'read', 'v2');\n    return url + '/api/' + version + '/viz/' + this.get('id') + \"/viz.json\";\n  },\n\n  notice: function(msg, type, timeout) {\n    this.trigger('notice', msg, type, timeout);\n  },\n\n  error: function(msg, resp) {\n    this.trigger('notice', msg, 'error');\n  },\n\n  // return: Array of entities (user or organizations) this vis is shared with\n  sharedWithEntities: function() {\n    return _.map((this.permission.acl.toArray() || []), function(aclItem) {\n      return aclItem.get('entity')\n    });\n  },\n\n  privacyOptions: function() {\n    if (this.isVisualization()) {\n      return cdb.admin.Visualization.ALL_PRIVACY_OPTIONS;\n    } else {\n      return _.reject(cdb.admin.Visualization.ALL_PRIVACY_OPTIONS, function(option) {\n        return option === 'PASSWORD';\n      });\n    }\n  },\n\n  isOwnedByUser: function(user) {\n    return user.equals(this.permission.owner);\n  },\n\n  /**\n   * Get the URL for current instance.\n   * @param {Object} currentUser (Optional) Get the URL from the perspective of the current user, necessary to\n   *   correctly setup URLs to tables.\n   * @return {Object} instance of cdb.common.Url\n   */\n  viewUrl: function(currentUser) {\n    var owner = this.permission.owner;\n    var userUrl = this.permission.owner.viewUrl();\n\n    // the undefined check is required for backward compability, in some cases (e.g. dependant visualizations) the type\n    // is not available on the attrs, if so assume the old behavior (e.g. it's a visualization/derived/map).\n    if (this.isVisualization() || _.isUndefined(this.get('type'))) {\n      var id = this.get('id')\n      if (currentUser && currentUser.id !== owner.id && this.permission.hasAccess(currentUser)) {\n        userUrl = currentUser.viewUrl();\n        id = owner.get('username') + '.' + id;\n      }\n      return new cdb.common.MapUrl({\n        base_url: userUrl.urlToPath('viz', id)\n      });\n    } else {\n      if (currentUser && this.permission.hasAccess(currentUser)) {\n        userUrl = currentUser.viewUrl();\n      }\n      return new cdb.common.DatasetUrl({\n        base_url: userUrl.urlToPath('tables', this.tableMetadata().getUnquotedName())\n      });\n    }\n   },\n\n  /**\n   * Returns the URL, server-side generated\n   */\n  _canonicalViewUrl: function() {\n    var isMap = this.isVisualization() || _.isUndefined(this.get('type'));\n    var UrlModel = isMap ? cdb.common.MapUrl : cdb.common.DatasetUrl;\n    return new UrlModel({\n      base_url: this.get('url')\n    });\n  }\n\n}, {\n\n  ALL_PRIVACY_OPTIONS: [ 'PUBLIC', 'LINK', 'PRIVATE', 'PASSWORD' ]\n\n});\n\n\n\n\n\n/**\n * Visualizations endpoint available for a given user.\n *\n * Usage:\n *\n *   var visualizations = new cdb.admin.Visualizations()\n *   visualizations.fetch();\n *\n */\n\ncdb.admin.Visualizations = Backbone.Collection.extend({\n\n  model: cdb.admin.Visualization,\n\n  _PREVIEW_TABLES_PER_PAGE: 10,\n  _TABLES_PER_PAGE: 20,\n  _PREVIEW_ITEMS_PER_PAGE: 3,\n  _ITEMS_PER_PAGE: 9,\n\n  initialize: function() {\n\n    var default_options = new cdb.core.Model({\n      tag_name        : \"\",\n      q               : \"\",\n      page            : 1,\n      type            : \"derived\",\n      exclude_shared  : false,\n      per_page        : this._ITEMS_PER_PAGE\n    });\n\n    // Overrriding default sync, preventing\n    // run several request at the same time\n    this.sync = Backbone.syncAbort;\n    this.options = _.extend(default_options, this.options);\n\n    this.total_entries = 0;\n\n    this.options.bind(\"change\", this._changeOptions, this);\n    this.bind(\"reset\",          this._checkPage, this);\n    this.bind(\"update\",         this._checkPage, this);\n    this.bind(\"add\",            this._fetchAgain, this);\n\n  },\n\n  getTotalPages: function() {\n    return Math.ceil(this.total_entries / this.options.get(\"per_page\"));\n  },\n\n  _checkPage: function() {\n    var total = this.getTotalPages();\n    var page = this.options.get('page') - 1;\n\n    if (this.options.get(\"page\") > total ) {\n      this.options.set({ page: total + 1});\n    } else if (this.options.get(\"page\") < 1) {\n      this.options.set({ page: 1});\n    }\n\n  },\n\n  _createUrlOptions: function() {\n    return _.compact(_(this.options.attributes).map(\n      function(v, k) {\n        return k + \"=\" + encodeURIComponent(v)\n      }\n    )).join('&');\n  },\n\n  url: function(method) {\n    var u = '';\n\n    // TODO: remove this workaround when bi-visualizations are included as\n    // standard visualizations\n    if (this.options.get('deepInsights')) {\n      u += '/api/v1/bivisualizations';\n      u += '?page=' + this.options.get('page') + '&per_page=' + this.options.get(\"per_page\");\n    } else {\n      var version = cdb.config.urlVersion('visualizations', method);\n      u += '/api/' + version + '/viz/';\n      u += \"?\" + this._createUrlOptions();\n    }\n\n    return u;\n  },\n\n  remove: function(options) {\n    this.total_entries--;\n    this.elder('remove', options);\n  },\n\n  // add bindMap: false for all the visulizations\n  // vis model does not need map information in dashboard\n  parse: function(response) {\n    this.total_entries = response.total_entries;\n    this.slides && this.slides.reset(response.children);\n    this.total_shared = response.total_shared;\n    this.total_likes = response.total_likes;\n    this.total_user_entries = response.total_user_entries;\n    return _.map(response.visualizations, function(v) {\n      v.bindMap = false;\n      return v;\n    });\n  },\n\n  _changeOptions: function() {\n    // this.trigger('updating');\n\n    // var self = this;\n    // $.when(this.fetch()).done(function(){\n    //   self.trigger('forceReload')\n    // });\n  },\n\n  create: function(m) {\n    var dfd = $.Deferred();\n    Backbone.Collection.prototype.create.call(this,\n      m,\n      {\n        wait: true,\n        success: function() {\n          dfd.resolve();\n\n        },\n        error: function() {\n          dfd.reject();\n        }\n      }\n    );\n    return dfd.promise();\n  },\n\n\n  fetch: function(opts) {\n    var dfd = $.Deferred();\n    var self = this;\n    this.trigger(\"loading\", this);\n\n    $.when(Backbone.Collection.prototype.fetch.call(this,opts))\n    .done(function(res) {\n      self.trigger('loaded');\n      dfd.resolve();\n    }).fail(function(res) {\n      self.trigger('loadFailed');\n      dfd.reject(res);\n    });\n\n    return dfd.promise();\n  }\n});\n","\ncdb.admin.WKT = {\n  types: [\n    'POINT',\n    'LINESTRING',\n    'POLYGON',\n    'MULTIPOINT',\n    'MULTILINESTRING',\n    'MULTIPOLYGON'\n  ]\n};\n","cdb.admin.WMSService = Backbone.Model.extend({\n\n  _PROXY_URL:   '//cartodb-wms.global.ssl.fastly.net/api',\n  _PROXY_TILES: '//cartodb-wms.global.ssl.fastly.net/mapproxy',\n\n  methodToURL: {\n    'read':   '/check',\n    'create': '/add'\n  },\n\n  sync: function(method, model, options) {\n    options = options || {};\n    options.url = this.url(method.toLowerCase());\n    options.dataType = 'jsonp';\n    method = \"READ\";\n    return Backbone.sync.apply(this, arguments);\n  },\n\n  url: function(method) {\n    var req = this._PROXY_URL + this.methodToURL[method];\n    var url = this.get('wms_url');\n\n    var parser = document.createElement('a');\n\n    parser.href = url;\n\n    var params = parser.search.substr(1).split(\"&\");\n\n    var hasCapabilities = _.find(params, function(p) { return p.toLowerCase().indexOf(\"request=getcapabilities\") !== -1; });\n    var hasService      = _.find(params, function(p) { return p.toLowerCase().indexOf(\"service=wms\") !== -1; });\n\n    // If the user didn't provided the necessary params, let's add them\n\n    if (!hasCapabilities) {\n      params.push(\"request=GetCapabilities\");\n    }\n\n    if (!hasService) {\n      params.push(\"service=WMS\");\n    }\n\n    url += \"?\" + params.join(\"&\");\n    req += '?url=' + encodeURIComponent(url);\n\n    var isWMTS = this.get('type') === 'wmts';\n    req += '&type=' + (isWMTS ? 'wmts' : 'wms');\n\n    if (method === 'create') {\n      if (this.get('layer') && this.get('srs')) {\n        req += \"&layer=\" + this.get('layer');\n        req += \"&srs=EPSG:\" + this.get('srs')[0].split(':')[1];\n      } else if (isWMTS && this.get('layer') && this.get('matrix_sets').length > 0) {\n        req += '&layer=' + this.get('layer');\n        req += '&matrix_set=' + cdb.admin.WMSService.supportedMatrixSets(this.get('matrix_sets' || []))[0];\n      }\n    }\n\n    return req;\n  },\n\n  newTileLayer: function() {\n    if (!this.get('mapproxy_id')) {\n      throw new Error('mapproxy_id must be set');\n    }\n    return new cdb.admin.TileLayer({\n      urlTemplate: this._PROXY_TILES + '/' + this.get('mapproxy_id') + '/wmts/map/webmercator/{z}/{x}/{y}.png',\n      attribution: this.get('attribution') || null,\n      maxZoom: 21,\n      minZoom: 0,\n      name: this.get('title') || this.get('name'),\n      proxy: true,\n      bounding_boxes: this.get('bounding_boxes')\n    });\n  }\n}, {\n\n  SUPPORTED_MATRIX_SETS: [\n    'EPSG:4326',\n    'EPSG:4258'\n  ],\n\n  /**\n   * Unfortunately the WMS proxy do not support all matrix sets for a WMTS kind of resource, so filter out the ones\n   * that are actually supported for now.\n   * @return {Array}\n   */\n  supportedMatrixSets: function(matrixSets) {\n    // matrixSets = matrixSets || [];\n    return _.intersection(matrixSets, this.SUPPORTED_MATRIX_SETS);\n  }\n});\n","cdb.admin.overlays = cdb.admin.overlays || {};\n\n/*\n * Model for the Overlays\n * */\ncdb.admin.models.Overlay = cdb.core.Model.extend({\n\n  defaults: {\n    order: 1\n  },\n\n  sync: Backbone.syncAbort,\n\n  url: function(method) {\n    var version = cdb.config.urlVersion('overlays', method);\n    var base = '/api/' + version + '/viz/' + this.collection.vis.id + '/overlays';\n    if (this.isNew()) {\n      return base;\n    }\n    return base + '/' + this.id;\n  },\n\n  _clone: function(obj) {\n\n    var copy;\n\n    // Handle  a couple of types, plus null and undefined\n    if (null == obj || \"object\" != typeof obj) return obj;\n\n    // Handle Array\n    if (obj instanceof Array) {\n      copy = [];\n      for (var i = 0, len = obj.length; i < len; i++) {\n        copy[i] = this._clone(obj[i]);\n      }\n      return copy;\n    }\n\n    // Handle Object\n    if (obj instanceof Object) {\n      copy = {};\n      for (var attr in obj) {\n        if (obj.hasOwnProperty(attr)) copy[attr] = this._clone(obj[attr]);\n      }\n      return copy;\n    }\n\n    throw new Error(\"Type not supported\");\n  },\n\n  cloneAttributes: function() {\n    return this._clone(this.attributes);\n  },\n\n  /*\n   * Overwrite serialization method to use our Overlay structure\n   * */\n  toJSON: function() {\n\n    return {\n      template: this.get(\"template\"),\n      order:    this.get(\"order\"),\n      type:     this.get(\"type\"),\n      options:  {\n        x:       this.get(\"x\"),\n        y:       this.get(\"y\"),\n        device:  this.get(\"device\"),\n        display: this.get(\"display\"),\n        style:   this.get(\"style\"),\n        extra:   this.get(\"extra\")\n      }\n    }\n  }, \n\n  parse: function(resp) {\n    resp.display = resp.options.display;\n    var options = resp.options;\n    if (options) {\n      options = typeof options === 'string' ? JSON.parse(options): options;\n      _.extend(resp, {\n        x:            options.x,\n        y:            options.y,\n        device:       options.device,\n        extra:        options.extra,\n        style:        options.style,\n        display:      options.display\n      });\n    }\n    delete resp.options.display;\n    return resp;\n  },\n\n  clone: function() {\n    return new cdb.admin.models.Overlay(_.omit(_.clone(this.attributes), 'id', 'parent_id'));\n  }\n\n});\n\n/*\n * Overlays collection\n * */\ncdb.admin.Overlays = Backbone.Collection.extend({\n\n  model: cdb.admin.models.Overlay,\n\n  url: function(method) {\n    var version = cdb.config.urlVersion('overlays', method);\n    return '/api/' + version + '/viz/' + this.vis.get(\"id\") + '/overlays';\n  },\n\n\n  comparator: function(item) {\n    return item.get(\"order\");\n  },\n\n  initialize: function() {\n\n    this._bindOverlays();\n\n  },\n\n  _bindOverlays: function() {\n\n    this.bind(\"reset\", function(){\n\n      var headers = this.filter(function(overlay) { return overlay.get(\"type\") === \"header\"; });\n\n      if (headers.length) {\n\n        var self = this;\n\n        this.vis.on(\"change:name change:description\", function() {\n\n          headers[0].set({\n            title:  this.get(\"name\"),\n            description: self._getMarkdown(this.get('description'))\n          });\n\n        }, this.vis);\n\n      }\n\n    }, this);\n\n  },\n\n  /*\n   * Returns an array with all the overlays z-indexes\n   * */\n  getOverlaysZIndex: function(mode) {\n\n    var overlays = this.filter(function(o) { \n      return o.get(\"device\") === mode && (o.get(\"type\") === \"text\" || o.get(\"type\") === \"annotation\" || o.get(\"type\") === \"image\");\n    });\n\n    return _.map(overlays, function(o) { return parseInt(o.get(\"style\")[\"z-index\"]) });\n\n  },\n\n  createOverlayByType: function(overlay_type, property) {\n      var byType = {\n        'fullscreen':     this._createFullScreenOverlay,\n        'header':         this._createHeaderOverlay,\n        'layer_selector': this._createLayerSelectorOverlay,\n        'share':          this._createShareOverlay,\n        'search':         this._createSearchOverlay,\n        'zoom':           this._createZoomOverlay,\n        'logo':           this._createLogoOverlay\n      };\n      var c = byType[overlay_type];\n      if (c) {\n        return c.call(this, property);\n      }\n  },\n\n  _createZoomOverlay: function() {\n    var options = {\n      type: \"zoom\",\n      order: 6,\n      display: true,\n      template: '<a href=\"#zoom_in\" class=\"zoom_in\">+</a> <a href=\"#zoom_out\" class=\"zoom_out\">-</a>',\n      x: 20,\n      y: 20\n    };\n    this.create(options);\n  },\n\n  _createLogoOverlay: function() {\n    var options = {\n      type: \"logo\",\n      order: 10,\n      display: true,\n      x: 10,\n      y: 40\n    };\n    this.create(options);\n  },\n\n  _createSearchOverlay: function() {\n    var options = {\n      type: \"search\",\n      order: 3,\n      display: true,\n      x: 60,\n      y: 20\n    }\n    this.create(options);\n  },\n\n  _createLayerSelectorOverlay: function() {\n    var options = {\n      type: \"layer_selector\",\n      order: 4,\n      display: true,\n      x: 212,\n      y: 20\n    };\n    this.create(options);\n  },\n\n  _createShareOverlay: function() {\n\n    var options = {\n      type: \"share\",\n      order: 2,\n      display: true,\n      x: 20,\n      y: 20\n    };\n\n    this.create(options);\n\n  },\n\n  _getMarkdown: function(text) {\n    return text ? $(markdown.toHTML(text)).html() : \"\";\n  },\n\n  _createHeaderOverlay: function(property) {\n\n    var self = this;\n\n    var show_title       = false;\n    var show_description = false;\n\n    if (property === \"title\")       show_title       = true;\n    if (property === \"description\") show_description = true;\n\n    var description = this.vis.get(\"description\");\n    var title       = this.vis.get(\"name\");\n\n    if (!show_title && property == 'description' && !description) return;\n\n    var options = {\n      type: \"header\",\n      order: 1,\n      display: true,\n      extra: {\n        title: title,\n        description: description,\n        show_title: show_title,\n        show_description: show_description\n      }\n    };\n\n    var model = this.create(options);\n    var vis = this.vis;\n\n    this.vis.on(\"change:name change:description\", function() {\n      model.set({\n        title:  vis.get(\"name\"),\n        description: self._getMarkdown(vis.get('description'))\n      });\n    }, model);\n\n    model.bind('destroy', function() {\n      vis.unbind(null, null, model);\n    });\n\n  },\n\n  _createFullScreenOverlay: function() {\n    var options = {\n      type: \"fullscreen\",\n      order: 7,\n      display: true,\n      x: 20,\n      y: 172\n    };\n    this.create(options);\n  }\n});\n"]}